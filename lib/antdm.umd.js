(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("Vue"), require("moment"));
	else if(typeof define === 'function' && define.amd)
		define(["Vue", "moment"], factory);
	else if(typeof exports === 'object')
		exports["antdm"] = factory(require("Vue"), require("moment"));
	else
		root["antdm"] = factory(root["Vue"], root["moment"]);
})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__, __WEBPACK_EXTERNAL_MODULE_c32d__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "014b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__("e53d");
var has = __webpack_require__("07e3");
var DESCRIPTORS = __webpack_require__("8e60");
var $export = __webpack_require__("63b6");
var redefine = __webpack_require__("9138");
var META = __webpack_require__("ebfd").KEY;
var $fails = __webpack_require__("294c");
var shared = __webpack_require__("dbdb");
var setToStringTag = __webpack_require__("45f2");
var uid = __webpack_require__("62a0");
var wks = __webpack_require__("5168");
var wksExt = __webpack_require__("ccb9");
var wksDefine = __webpack_require__("6718");
var enumKeys = __webpack_require__("47ee");
var isArray = __webpack_require__("9003");
var anObject = __webpack_require__("e4ae");
var isObject = __webpack_require__("f772");
var toIObject = __webpack_require__("36c3");
var toPrimitive = __webpack_require__("1bc3");
var createDesc = __webpack_require__("aebd");
var _create = __webpack_require__("a159");
var gOPNExt = __webpack_require__("0395");
var $GOPD = __webpack_require__("bf0b");
var $DP = __webpack_require__("d9f6");
var $keys = __webpack_require__("c3a1");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__("6abf").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__("355d").f = $propertyIsEnumerable;
  __webpack_require__("9aa9").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__("b8e3")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__("35e8")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "014d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating whitespace.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function whitespace(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === '') {
    errors.push(util.format(options.messages.whitespace, rule.fullField));
  }
}

exports['default'] = whitespace;

/***/ }),

/***/ "02f8":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "0395":
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__("36c3");
var gOPN = __webpack_require__("6abf").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "03ca":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "03ee":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "0422":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Checkbox = _interopRequireDefault(__webpack_require__("2d38"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = _Checkbox.default;
exports.default = _default;

/***/ }),

/***/ "07e3":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "0ca5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getRequestAnimationFrame;
exports.cancelRequestAnimationFrame = cancelRequestAnimationFrame;
var availablePrefixs = ['moz', 'ms', 'webkit'];

function requestAnimationFramePolyfill() {
  var lastTime = 0;
  return function (callback) {
    var currTime = new Date().getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id = window.setTimeout(function () {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id;
  };
}

function getRequestAnimationFrame() {
  if (typeof window === 'undefined') {
    return function () {};
  }

  if (window.requestAnimationFrame) {
    // https://github.com/vuejs/vue/issues/4465
    return window.requestAnimationFrame.bind(window);
  }

  var prefix = availablePrefixs.filter(function (key) {
    return "".concat(key, "RequestAnimationFrame") in window;
  })[0];
  return prefix ? window["".concat(prefix, "RequestAnimationFrame")] : requestAnimationFramePolyfill();
}

function cancelRequestAnimationFrame(id) {
  if (typeof window === 'undefined') {
    return null;
  }

  if (window.cancelAnimationFrame) {
    return window.cancelAnimationFrame(id);
  }

  var prefix = availablePrefixs.filter(function (key) {
    return "".concat(key, "CancelAnimationFrame") in window || "".concat(key, "CancelRequestAnimationFrame") in window;
  })[0];
  return prefix ? (window["".concat(prefix, "CancelAnimationFrame")] || window["".concat(prefix, "CancelRequestAnimationFrame")]).call(this, id) : clearTimeout(id);
}

/***/ }),

/***/ "0fc5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "0fc9":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("3a38");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "1098":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__("17ed");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__("f893");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ "1147":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ __webpack_exports__["a"] = (isObjectLike);


/***/ }),

/***/ "1173":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "123a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a number is a floating point number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function floatFn(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = floatFn;

/***/ }),

/***/ "12d4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a boolean.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function boolean(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = boolean;

/***/ }),

/***/ "12f1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function setStyle(style) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$element = options.element,
      element = _options$element === void 0 ? document.body : _options$element;
  var oldStyle = {};
  var styleKeys = Object.keys(style); // IE browser compatible

  styleKeys.forEach(function (key) {
    oldStyle[key] = element.style[key];
  });
  styleKeys.forEach(function (key) {
    element.style[key] = style[key];
  });
  return oldStyle;
}

var _default = setStyle;
exports.default = _default;

/***/ }),

/***/ "1318":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _Dialog = _interopRequireDefault(__webpack_require__("9517"));

var _IDialogPropTypes = _interopRequireDefault(__webpack_require__("9a8b"));

var _PortalWrapper = _interopRequireDefault(__webpack_require__("573a"));

var _propsUtil = __webpack_require__("5057");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !(0, _vue.isVNode)(s);
}

var IDialogPropTypes = (0, _IDialogPropTypes.default)();
var DialogWrap = (0, _vue.defineComponent)({
  inheritAttrs: false,
  props: _extends(_extends({}, IDialogPropTypes), {
    visible: IDialogPropTypes.visible.def(false)
  }),
  render: function render() {
    var _this = this;

    var _this$$props = this.$props,
        visible = _this$$props.visible,
        getContainer = _this$$props.getContainer,
        forceRender = _this$$props.forceRender;

    var dialogProps = _extends(_extends(_extends({}, this.$props), this.$attrs), {
      ref: '_component',
      key: 'dialog'
    }); // 渲染在当前 dom 里；


    if (getContainer === false) {
      var _slot;

      return (0, _vue.createVNode)(_Dialog.default, _objectSpread(_objectSpread({}, dialogProps), {}, {
        "getOpenCount": function getOpenCount() {
          return 2;
        }
      }), _isSlot(_slot = (0, _propsUtil.getSlot)(this)) ? _slot : {
        default: function _default() {
          return [_slot];
        }
      });
    }

    return (0, _vue.createVNode)(_PortalWrapper.default, {
      "visible": visible,
      "forceRender": forceRender,
      "getContainer": getContainer,
      "children": function children(childProps) {
        var _slot2;

        dialogProps = _extends(_extends({}, dialogProps), childProps);
        return (0, _vue.createVNode)(_Dialog.default, dialogProps, _isSlot(_slot2 = (0, _propsUtil.getSlot)(_this)) ? _slot2 : {
          default: function _default() {
            return [_slot2];
          }
        });
      }
    }, null);
  }
});
var _default2 = DialogWrap;
exports.default = _default2;

/***/ }),

/***/ "136b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default2 = (0, _vue.defineComponent)({
  name: 'Portal',
  props: {
    getContainer: _vueTypes.default.func.isRequired,
    children: _vueTypes.default.any.isRequired,
    didUpdate: _vueTypes.default.func
  },
  data: function data() {
    this._container = null;
    return {};
  },
  mounted: function mounted() {
    this.createContainer();
  },
  updated: function updated() {
    var _this = this;

    var didUpdate = this.$props.didUpdate;

    if (didUpdate) {
      (0, _vue.nextTick)(function () {
        didUpdate(_this.$props);
      });
    }
  },
  beforeUnmount: function beforeUnmount() {
    this.removeContainer();
  },
  methods: {
    createContainer: function createContainer() {
      this._container = this.$props.getContainer();
      this.$forceUpdate();
    },
    removeContainer: function removeContainer() {
      if (this._container && this._container.parentNode) {
        this._container.parentNode.removeChild(this._container);
      }
    }
  },
  render: function render() {
    var _this2 = this;

    if (this._container) {
      return (0, _vue.createVNode)(_vue.Teleport, {
        "to": this._container
      }, {
        default: function _default() {
          return [_this2.$props.children];
        }
      });
    }

    return null;
  }
});

exports.default = _default2;

/***/ }),

/***/ "1654":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__("71c1")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__("30f1")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "1691":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "17ed":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("d8d6"), __esModule: true };

/***/ }),

/***/ "1907":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("8aae"), __esModule: true };

/***/ }),

/***/ "1996":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var ENUM = 'enum';

/**
 *  Rule for validating a value exists in an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable(rule, value, source, errors, options) {
  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
  if (rule[ENUM].indexOf(value) === -1) {
    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
  }
}

exports['default'] = enumerable;

/***/ }),

/***/ "19dd":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "1af7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

var _propsUtil = __webpack_require__("5057");

var _BaseMixin = _interopRequireDefault(__webpack_require__("48bb"));

var _createChainedFunction = _interopRequireDefault(__webpack_require__("a5a7"));

var _Notice = _interopRequireDefault(__webpack_require__("9d03"));

var _transition = __webpack_require__("8e1b");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !(0, _vue.isVNode)(s);
}

function noop() {}

var seed = 0;
var now = Date.now();

function getUuid() {
  return "rcNotification_".concat(now, "_").concat(seed++);
}

var Notification = (0, _vue.defineComponent)({
  mixins: [_BaseMixin.default],
  props: {
    prefixCls: _vueTypes.default.string.def('rc-notification'),
    transitionName: _vueTypes.default.string,
    animation: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.object]).def('fade'),
    maxCount: _vueTypes.default.number,
    closeIcon: _vueTypes.default.any
  },
  data: function data() {
    return {
      notices: []
    };
  },
  methods: {
    getTransitionName: function getTransitionName() {
      var props = this.$props;
      var transitionName = props.transitionName;

      if (!transitionName && props.animation) {
        transitionName = "".concat(props.prefixCls, "-").concat(props.animation);
      }

      return transitionName;
    },
    add: function add(notice) {
      var key = notice.key = notice.key || getUuid();
      var maxCount = this.$props.maxCount;
      this.setState(function (previousState) {
        var notices = previousState.notices;
        var noticeIndex = notices.map(function (v) {
          return v.key;
        }).indexOf(key);
        var updatedNotices = notices.concat();

        if (noticeIndex !== -1) {
          updatedNotices.splice(noticeIndex, 1, notice);
        } else {
          if (maxCount && notices.length >= maxCount) {
            // XXX, use key of first item to update new added (let React to move exsiting
            // instead of remove and mount). Same key was used before for both a) external
            // manual control and b) internal react 'key' prop , which is not that good.
            notice.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;
            updatedNotices.shift();
          }

          updatedNotices.push(notice);
        }

        return {
          notices: updatedNotices
        };
      });
    },
    remove: function remove(key) {
      this.setState(function (previousState) {
        return {
          notices: previousState.notices.filter(function (notice) {
            return notice.key !== key;
          })
        };
      });
    }
  },
  render: function render() {
    var _this = this;

    var prefixCls = this.prefixCls,
        notices = this.notices,
        remove = this.remove,
        getTransitionName = this.getTransitionName,
        $attrs = this.$attrs;
    var transitionProps = (0, _transition.getTransitionGroupProps)(getTransitionName());
    var noticeNodes = notices.map(function (notice, index) {
      var update = Boolean(index === notices.length - 1 && notice.updateKey);
      var key = notice.updateKey ? notice.updateKey : notice.key;
      var content = notice.content,
          duration = notice.duration,
          closable = notice.closable,
          onClose = notice.onClose,
          style = notice.style,
          className = notice.class;
      var close = (0, _createChainedFunction.default)(remove.bind(_this, notice.key), onClose);
      var noticeProps = {
        prefixCls: prefixCls,
        duration: duration,
        closable: closable,
        update: update,
        closeIcon: (0, _propsUtil.getComponent)(_this, 'closeIcon'),
        onClose: close,
        onClick: notice.onClick || noop,
        style: style,
        class: className,
        key: key
      };
      return (0, _vue.createVNode)(_Notice.default, noticeProps, {
        default: function _default() {
          return [typeof content === 'function' ? content() : content];
        }
      });
    });

    var className = _defineProperty({}, prefixCls, 1);

    return (0, _vue.createVNode)("div", {
      "class": className,
      "style": $attrs.style || {
        top: '65px',
        left: '50%'
      }
    }, [(0, _vue.createVNode)(_transition.TransitionGroup, _objectSpread({
      "tag": "span"
    }, transitionProps), _isSlot(noticeNodes) ? noticeNodes : {
      default: function _default() {
        return [noticeNodes];
      }
    })]);
  }
});

Notification.newInstance = function newNotificationInstance(properties, callback) {
  var _a = properties || {},
      getContainer = _a.getContainer,
      style = _a.style,
      className = _a.class,
      props = __rest(_a, ["getContainer", "style", "class"]);

  var div = document.createElement('div');

  if (getContainer) {
    var root = getContainer();
    root.appendChild(div);
  } else {
    document.body.appendChild(div);
  }

  var app = (0, _vue.createApp)({
    mounted: function mounted() {
      var self = this;
      this.$nextTick(function () {
        callback({
          notice: function notice(noticeProps) {
            self.$refs.notification.add(noticeProps);
          },
          removeNotice: function removeNotice(key) {
            self.$refs.notification.remove(key);
          },
          component: self,
          destroy: function destroy() {
            app.unmount(div);

            if (div.parentNode) {
              div.parentNode.removeChild(div);
            }
          }
        });
      });
    },
    render: function render() {
      var p = _extends(_extends({}, props), {
        ref: 'notification',
        style: style,
        class: className
      });

      return (0, _vue.createVNode)(Notification, p, null);
    }
  });
  app.mount(div);
};

var _default2 = Notification;
exports.default = _default2;

/***/ }),

/***/ "1afe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _required = __webpack_require__("975a");

var _required2 = _interopRequireDefault(_required);

var _whitespace = __webpack_require__("014d");

var _whitespace2 = _interopRequireDefault(_whitespace);

var _type = __webpack_require__("a043");

var _type2 = _interopRequireDefault(_type);

var _range = __webpack_require__("97c3");

var _range2 = _interopRequireDefault(_range);

var _enum = __webpack_require__("1996");

var _enum2 = _interopRequireDefault(_enum);

var _pattern = __webpack_require__("9a85");

var _pattern2 = _interopRequireDefault(_pattern);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  required: _required2['default'],
  whitespace: _whitespace2['default'],
  type: _type2['default'],
  range: _range2['default'],
  'enum': _enum2['default'],
  pattern: _pattern2['default']
};

/***/ }),

/***/ "1bc3":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("f772");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "1ce5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates the regular expression type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function regexp(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (!(0, _util.isEmptyValue)(value)) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = regexp;

/***/ }),

/***/ "1db9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warning = warning;
exports.note = note;
exports.resetWarned = resetWarned;
exports.call = call;
exports.warningOnce = warningOnce;
exports.noteOnce = noteOnce;
exports.default = void 0;

/* eslint-disable no-console */
var warned = {};

function warning(valid, message) {
  // Support uglify
  if (false) {}
}

function note(valid, message) {
  // Support uglify
  if (false) {}
}

function resetWarned() {
  warned = {};
}

function call(method, valid, message) {
  if (!valid && !warned[message]) {
    method(false, message);
    warned[message] = true;
  }
}

function warningOnce(valid, message) {
  call(warning, valid, message);
}

function noteOnce(valid, message) {
  call(note, valid, message);
}

var _default = warningOnce;
/* eslint-enable */

exports.default = _default;

/***/ }),

/***/ "1ec9":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
var document = __webpack_require__("e53d").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "241e":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("25eb");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "24c5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("b8e3");
var global = __webpack_require__("e53d");
var ctx = __webpack_require__("d864");
var classof = __webpack_require__("40c3");
var $export = __webpack_require__("63b6");
var isObject = __webpack_require__("f772");
var aFunction = __webpack_require__("79aa");
var anInstance = __webpack_require__("1173");
var forOf = __webpack_require__("a22a");
var speciesConstructor = __webpack_require__("f201");
var task = __webpack_require__("4178").set;
var microtask = __webpack_require__("aba2")();
var newPromiseCapabilityModule = __webpack_require__("656e");
var perform = __webpack_require__("4439");
var userAgent = __webpack_require__("bc13");
var promiseResolve = __webpack_require__("cd78");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__("5168")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__("5c95")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__("45f2")($Promise, PROMISE);
__webpack_require__("4c95")(PROMISE);
Wrapper = __webpack_require__("584a")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__("4ee1")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "25eb":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "267e":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "26ee":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5ea3");


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] || freeSelf || Function('return this')();

/* harmony default export */ __webpack_exports__["a"] = (root);


/***/ }),

/***/ "294c":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "2d38":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _classNames2 = _interopRequireDefault(__webpack_require__("59af"));

var _vueTypes = _interopRequireWildcard(__webpack_require__("7b44"));

var _BaseMixin = _interopRequireDefault(__webpack_require__("48bb"));

var _propsUtil = __webpack_require__("5057");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var _default = (0, _vue.defineComponent)({
  name: 'Checkbox',
  mixins: [_BaseMixin.default],
  inheritAttrs: false,
  props: (0, _propsUtil.initDefaultProps)({
    prefixCls: _vueTypes.default.string,
    name: _vueTypes.default.string,
    id: _vueTypes.default.string,
    type: _vueTypes.default.string,
    defaultChecked: (0, _vueTypes.withUndefined)(_vueTypes.default.oneOfType([_vueTypes.default.number, _vueTypes.default.looseBool])),
    checked: (0, _vueTypes.withUndefined)(_vueTypes.default.oneOfType([_vueTypes.default.number, _vueTypes.default.looseBool])),
    disabled: _vueTypes.default.looseBool,
    // onFocus: PropTypes.func,
    // onBlur: PropTypes.func,
    // onChange: PropTypes.func,
    // onClick: PropTypes.func,
    tabindex: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number]),
    readonly: _vueTypes.default.looseBool,
    autofocus: _vueTypes.default.looseBool,
    value: _vueTypes.default.any
  }, {
    prefixCls: 'rc-checkbox',
    type: 'checkbox',
    defaultChecked: false
  }),
  data: function data() {
    var checked = (0, _propsUtil.hasProp)(this, 'checked') ? this.checked : this.defaultChecked;
    return {
      sChecked: checked
    };
  },
  watch: {
    checked: function checked(val) {
      this.sChecked = val;
    }
  },
  mounted: function mounted() {
    var _this = this;

    (0, _vue.nextTick)(function () {
      if (false) {}
    });
  },
  methods: {
    focus: function focus() {
      this.$refs.input.focus();
    },
    blur: function blur() {
      this.$refs.input.blur();
    },
    handleChange: function handleChange(e) {
      var props = (0, _propsUtil.getOptionProps)(this);

      if (props.disabled) {
        return;
      }

      if (!('checked' in props)) {
        this.sChecked = e.target.checked;
      }

      e.shiftKey = this.eventShiftKey;
      var eventObj = {
        target: _extends(_extends({}, props), {
          checked: e.target.checked
        }),
        stopPropagation: function stopPropagation() {
          e.stopPropagation();
        },
        preventDefault: function preventDefault() {
          e.preventDefault();
        },
        nativeEvent: e
      }; // fix https://github.com/vueComponent/ant-design-vue/issues/3047
      // 受控模式下维持现有状态

      if ('checked' in props) {
        this.$refs.input.checked = props.checked;
      }

      this.__emit('update:checked', eventObj);

      this.__emit('change', eventObj);

      this.eventShiftKey = false;
    },
    onClick: function onClick(e) {
      this.__emit('click', e); // onChange没能获取到shiftKey，使用onClick hack


      this.eventShiftKey = e.shiftKey;
    }
  },
  render: function render() {
    var _classNames;

    var _a = (0, _propsUtil.getOptionProps)(this),
        prefixCls = _a.prefixCls,
        name = _a.name,
        id = _a.id,
        type = _a.type,
        disabled = _a.disabled,
        readonly = _a.readonly,
        tabindex = _a.tabindex,
        autofocus = _a.autofocus,
        value = _a.value,
        others = __rest(_a, ["prefixCls", "name", "id", "type", "disabled", "readonly", "tabindex", "autofocus", "value"]);

    var _this$$attrs = this.$attrs,
        className = _this$$attrs.class,
        onFocus = _this$$attrs.onFocus,
        onBlur = _this$$attrs.onBlur;
    var globalProps = Object.keys(_extends(_extends({}, others), this.$attrs)).reduce(function (prev, key) {
      if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
        prev[key] = others[key];
      }

      return prev;
    }, {});
    var sChecked = this.sChecked;
    var classString = (0, _classNames2.default)(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-checked"), sChecked), _defineProperty(_classNames, "".concat(prefixCls, "-disabled"), disabled), _classNames));

    var inputProps = _extends(_extends({
      name: name,
      id: id,
      type: type,
      readonly: readonly,
      disabled: disabled,
      tabindex: tabindex,
      class: "".concat(prefixCls, "-input"),
      checked: !!sChecked,
      autofocus: autofocus,
      value: value
    }, globalProps), {
      onChange: this.handleChange,
      onClick: this.onClick,
      onFocus: onFocus,
      onBlur: onBlur
    });

    return (0, _vue.createVNode)("span", {
      "class": classString
    }, [(0, _vue.createVNode)("input", _objectSpread({
      "ref": "input"
    }, inputProps), null), (0, _vue.createVNode)("span", {
      "class": "".concat(prefixCls, "-inner")
    }, null)]);
  }
});

exports.default = _default;

/***/ }),

/***/ "2f6c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a regular expression pattern.
 *
 *  Performs validation when a rule only contains
 *  a pattern property but is not declared as a string type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (!(0, _util.isEmptyValue)(value, 'string')) {
      _rule2['default'].pattern(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = pattern;

/***/ }),

/***/ "2f74":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (stubFalse);


/***/ }),

/***/ "3024":
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "30f1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("b8e3");
var $export = __webpack_require__("63b6");
var redefine = __webpack_require__("9138");
var hide = __webpack_require__("35e8");
var Iterators = __webpack_require__("481b");
var $iterCreate = __webpack_require__("8f60");
var setToStringTag = __webpack_require__("45f2");
var getPrototypeOf = __webpack_require__("53e2");
var ITERATOR = __webpack_require__("5168")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "31f2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;

var _getRequestAnimationFrame = _interopRequireWildcard(__webpack_require__("0ca5"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var raf = (0, _getRequestAnimationFrame.default)();

var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {
  return (0, _getRequestAnimationFrame.cancelRequestAnimationFrame)(frame.id);
};

exports.cancelAnimationTimeout = cancelAnimationTimeout;

var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {
  var start = Date.now();

  function timeout() {
    if (Date.now() - start >= delay) {
      callback.call();
    } else {
      frame.id = raf(timeout);
    }
  }

  var frame = {
    id: raf(timeout)
  };
  return frame;
};

exports.requestAnimationTimeout = requestAnimationTimeout;

/***/ }),

/***/ "32a6":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("241e");
var $keys = __webpack_require__("c3a1");

__webpack_require__("ce7e")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "32fc":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("e53d").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "335c":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("6b4c");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "353c":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "355d":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "35e8":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("d9f6");
var createDesc = __webpack_require__("aebd");
module.exports = __webpack_require__("8e60") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "36c3":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("335c");
var defined = __webpack_require__("25eb");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "3702":
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__("481b");
var ITERATOR = __webpack_require__("5168")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "3a38":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "3a3f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getScrollBarSize = _interopRequireDefault(__webpack_require__("c26e"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function _default(close) {
  var bodyIsOverflowing = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;

  if (!bodyIsOverflowing) {
    return;
  }

  if (close) {
    document.body.style.position = '';
    document.body.style.width = '';
    return;
  }

  var scrollBarSize = (0, _getScrollBarSize.default)();

  if (scrollBarSize) {
    document.body.style.position = 'relative';
    document.body.style.width = "calc(100% - ".concat(scrollBarSize, "px)");
  }
};

exports.default = _default;

/***/ }),

/***/ "3c11":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__("63b6");
var core = __webpack_require__("584a");
var global = __webpack_require__("e53d");
var speciesConstructor = __webpack_require__("f201");
var promiseResolve = __webpack_require__("cd78");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "3f6b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("51b6"), __esModule: true };

/***/ }),

/***/ "401b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isCssAnimationSupported = void 0;

var _Event = _interopRequireDefault(__webpack_require__("e098"));

var _componentClasses = _interopRequireDefault(__webpack_require__("b078"));

var _requestAnimationTimeout = __webpack_require__("31f2");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var isCssAnimationSupported = _Event.default.endEvents.length !== 0;
exports.isCssAnimationSupported = isCssAnimationSupported;
var capitalPrefixes = ['Webkit', 'Moz', 'O', // ms is special .... !
'ms'];
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];

function getStyleProperty(node, name) {
  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
  var style = window.getComputedStyle(node, null);
  var ret = '';

  for (var i = 0; i < prefixes.length; i++) {
    ret = style.getPropertyValue(prefixes[i] + name);

    if (ret) {
      break;
    }
  }

  return ret;
}

function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay); // sometimes, browser bug

    node.rcEndAnimTimeout = setTimeout(function () {
      node.rcEndAnimTimeout = null;

      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1000 + 200);
  }
}

function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}

var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
  var nameIsObj = _typeof(transitionName) === 'object';
  var className = nameIsObj ? transitionName.name : transitionName;
  var activeClassName = nameIsObj ? transitionName.active : "".concat(transitionName, "-active");
  var end = endCallback;
  var start;
  var active;
  var nodeClasses = (0, _componentClasses.default)(node);

  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }

  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      (0, _requestAnimationTimeout.cancelAnimationTimeout)(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);
    nodeClasses.remove(className);
    nodeClasses.remove(activeClassName);

    _Event.default.removeEndEventListener(node, node.rcEndListener);

    node.rcEndListener = null; // Usually this optional end is used for informing an owner of
    // a leave animation and telling it to remove the child.

    if (end) {
      end();
    }
  };

  _Event.default.addEndEventListener(node, node.rcEndListener);

  if (start) {
    start();
  }

  nodeClasses.add(className);
  node.rcAnimTimeout = (0, _requestAnimationTimeout.requestAnimationTimeout)(function () {
    node.rcAnimTimeout = null;
    nodeClasses.add(className);
    nodeClasses.add(activeClassName);

    if (active) {
      (0, _requestAnimationTimeout.requestAnimationTimeout)(active, 0);
    }

    fixBrowserByTimeout(node); // 30ms for firefox
  }, 30);
  return {
    stop: function stop() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};

cssAnimation.style = function (node, style, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      (0, _requestAnimationTimeout.cancelAnimationTimeout)(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    _Event.default.removeEndEventListener(node, node.rcEndListener);

    node.rcEndListener = null; // Usually this optional callback is used for informing an owner of
    // a leave animation and telling it to remove the child.

    if (callback) {
      callback();
    }
  };

  _Event.default.addEndEventListener(node, node.rcEndListener);

  node.rcAnimTimeout = (0, _requestAnimationTimeout.requestAnimationTimeout)(function () {
    for (var s in style) {
      if (style.hasOwnProperty(s)) {
        node.style[s] = style[s];
      }
    }

    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};

cssAnimation.setTransition = function (node, p, value) {
  var property = p;
  var v = value;

  if (value === undefined) {
    v = property;
    property = '';
  }

  property = property || '';
  capitalPrefixes.forEach(function (prefix) {
    node.style["".concat(prefix, "Transition").concat(property)] = v;
  });
};

cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
var _default = cssAnimation;
exports.default = _default;

/***/ }),

/***/ "40c3":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("6b4c");
var TAG = __webpack_require__("5168")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "4178":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("d864");
var invoke = __webpack_require__("3024");
var html = __webpack_require__("32fc");
var cel = __webpack_require__("1ec9");
var global = __webpack_require__("e53d");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__("6b4c")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "41b2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__("3f6b");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),

/***/ "425a":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "4362":
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__("df7c");
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),

/***/ "43fc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__("63b6");
var newPromiseCapability = __webpack_require__("656e");
var perform = __webpack_require__("4439");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "441e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_v16_dist_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_v16_dist_index_js_ref_0_1_html_vue_vue_type_style_index_0_id_ee3f16ae_lang_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ea70");
/* harmony import */ var _node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_v16_dist_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_v16_dist_index_js_ref_0_1_html_vue_vue_type_style_index_0_id_ee3f16ae_lang_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_v16_dist_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_v16_dist_index_js_ref_0_1_html_vue_vue_type_style_index_0_id_ee3f16ae_lang_less__WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */


/***/ }),

/***/ "4439":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "44e6":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "45f2":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("d9f6").f;
var has = __webpack_require__("07e3");
var TAG = __webpack_require__("5168")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "4671":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _PanelContent = _interopRequireDefault(__webpack_require__("72d3"));

var _propsUtil = __webpack_require__("5057");

var _commonProps = __webpack_require__("84e7");

var _BaseMixin = _interopRequireDefault(__webpack_require__("48bb"));

var _transition = _interopRequireDefault(__webpack_require__("8e1b"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !(0, _vue.isVNode)(s);
}

var _default2 = (0, _vue.defineComponent)({
  name: 'Panel',
  mixins: [_BaseMixin.default],
  props: (0, _propsUtil.initDefaultProps)((0, _commonProps.panelProps)(), {
    showArrow: true,
    isActive: false,
    destroyInactivePanel: false,
    headerClass: '',
    forceRender: false
  }),
  methods: {
    handleItemClick: function handleItemClick() {
      this.__emit('itemClick', this.panelKey);
    },
    handleKeyPress: function handleKeyPress(e) {
      if (e.key === 'Enter' || e.keyCode === 13 || e.which === 13) {
        this.handleItemClick();
      }
    }
  },
  render: function render() {
    var _slot;

    var _headerCls, _itemCls;

    var _this$$props = this.$props,
        prefixCls = _this$$props.prefixCls,
        headerClass = _this$$props.headerClass,
        isActive = _this$$props.isActive,
        showArrow = _this$$props.showArrow,
        destroyInactivePanel = _this$$props.destroyInactivePanel,
        disabled = _this$$props.disabled,
        openAnimation = _this$$props.openAnimation,
        accordion = _this$$props.accordion,
        forceRender = _this$$props.forceRender,
        expandIcon = _this$$props.expandIcon,
        extra = _this$$props.extra;

    var transitionProps = _extends({
      appear: true,
      css: false
    }, openAnimation);

    var headerCls = (_headerCls = {}, _defineProperty(_headerCls, "".concat(prefixCls, "-header"), true), _defineProperty(_headerCls, headerClass, headerClass), _headerCls);
    var header = (0, _propsUtil.getComponent)(this, 'header');
    var itemCls = (_itemCls = {}, _defineProperty(_itemCls, "".concat(prefixCls, "-item"), true), _defineProperty(_itemCls, "".concat(prefixCls, "-item-active"), isActive), _defineProperty(_itemCls, "".concat(prefixCls, "-item-disabled"), disabled), _itemCls);
    var icon = (0, _vue.createVNode)("i", {
      "class": "arrow"
    }, null);

    if (showArrow && typeof expandIcon === 'function') {
      icon = expandIcon(this.$props);
    }

    var panelContent = (0, _vue.withDirectives)((0, _vue.createVNode)(_PanelContent.default, {
      "prefixCls": prefixCls,
      "isActive": isActive,
      "destroyInactivePanel": destroyInactivePanel,
      "forceRender": forceRender,
      "role": accordion ? 'tabpanel' : null
    }, _isSlot(_slot = (0, _propsUtil.getSlot)(this)) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    }), [[_vue.vShow, isActive]]);
    return (0, _vue.createVNode)("div", {
      "class": itemCls,
      "role": "tablist"
    }, [(0, _vue.createVNode)("div", {
      "class": headerCls,
      "onClick": this.handleItemClick,
      "onKeypress": this.handleKeyPress,
      "role": accordion ? 'tab' : 'button',
      "tabindex": disabled ? -1 : 0,
      "aria-expanded": isActive
    }, [showArrow && icon, header, extra && (0, _vue.createVNode)("div", {
      "class": "".concat(prefixCls, "-extra")
    }, [extra])]), (0, _vue.createVNode)(_transition.default, transitionProps, _isSlot(panelContent) ? panelContent : {
      default: function _default() {
        return [panelContent];
      }
    })]);
  }
});

exports.default = _default2;

/***/ }),

/***/ "47ee":
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__("c3a1");
var gOPS = __webpack_require__("9aa9");
var pIE = __webpack_require__("355d");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "47fc":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "481b":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "48bb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _propsUtil = __webpack_require__("5057");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = {
  methods: {
    setState: function setState() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;
      var newState = typeof state === 'function' ? state(this.$data, this.$props) : state;

      if (this.getDerivedStateFromProps) {
        var s = this.getDerivedStateFromProps((0, _propsUtil.getOptionProps)(this), _extends(_extends({}, this.$data), newState));

        if (s === null) {
          return;
        } else {
          newState = _extends(_extends({}, newState), s || {});
        }
      }

      _extends(this.$data, newState);

      if (this._.isMounted) {
        this.$forceUpdate();
      }

      (0, _vue.nextTick)(function () {
        callback && callback();
      });
    },
    __emit: function __emit() {
      // 直接调用事件，底层组件不需要vueTool记录events
      var args = [].slice.call(arguments, 0);
      var eventName = args[0];
      eventName = "on".concat(eventName[0].toUpperCase()).concat(eventName.substring(1));
      var event = this.$props[eventName] || this.$attrs[eventName];

      if (args.length && event) {
        if (Array.isArray(event)) {
          for (var i = 0, l = event.length; i < l; i++) {
            event[i].apply(event, _toConsumableArray(args.slice(1)));
          }
        } else {
          event.apply(void 0, _toConsumableArray(args.slice(1)));
        }
      }
    }
  }
};
exports.default = _default;

/***/ }),

/***/ "4b9d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "4c95":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var dP = __webpack_require__("d9f6");
var DESCRIPTORS = __webpack_require__("8e60");
var SPECIES = __webpack_require__("5168")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "4d26":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "4ee1":
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__("5168")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "4fcf":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "add", function() { return /* reexport */ lodash_es_add; });
__webpack_require__.d(__webpack_exports__, "after", function() { return /* reexport */ lodash_es_after; });
__webpack_require__.d(__webpack_exports__, "ary", function() { return /* reexport */ lodash_es_ary; });
__webpack_require__.d(__webpack_exports__, "assign", function() { return /* reexport */ lodash_es_assign; });
__webpack_require__.d(__webpack_exports__, "assignIn", function() { return /* reexport */ lodash_es_assignIn; });
__webpack_require__.d(__webpack_exports__, "assignInWith", function() { return /* reexport */ lodash_es_assignInWith; });
__webpack_require__.d(__webpack_exports__, "assignWith", function() { return /* reexport */ lodash_es_assignWith; });
__webpack_require__.d(__webpack_exports__, "at", function() { return /* reexport */ lodash_es_at; });
__webpack_require__.d(__webpack_exports__, "attempt", function() { return /* reexport */ lodash_es_attempt; });
__webpack_require__.d(__webpack_exports__, "before", function() { return /* reexport */ lodash_es_before; });
__webpack_require__.d(__webpack_exports__, "bind", function() { return /* reexport */ lodash_es_bind; });
__webpack_require__.d(__webpack_exports__, "bindAll", function() { return /* reexport */ lodash_es_bindAll; });
__webpack_require__.d(__webpack_exports__, "bindKey", function() { return /* reexport */ lodash_es_bindKey; });
__webpack_require__.d(__webpack_exports__, "camelCase", function() { return /* reexport */ lodash_es_camelCase; });
__webpack_require__.d(__webpack_exports__, "capitalize", function() { return /* reexport */ lodash_es_capitalize; });
__webpack_require__.d(__webpack_exports__, "castArray", function() { return /* reexport */ lodash_es_castArray; });
__webpack_require__.d(__webpack_exports__, "ceil", function() { return /* reexport */ lodash_es_ceil; });
__webpack_require__.d(__webpack_exports__, "chain", function() { return /* reexport */ lodash_es_chain; });
__webpack_require__.d(__webpack_exports__, "chunk", function() { return /* reexport */ lodash_es_chunk; });
__webpack_require__.d(__webpack_exports__, "clamp", function() { return /* reexport */ lodash_es_clamp; });
__webpack_require__.d(__webpack_exports__, "clone", function() { return /* reexport */ lodash_es_clone; });
__webpack_require__.d(__webpack_exports__, "cloneDeep", function() { return /* reexport */ lodash_es_cloneDeep; });
__webpack_require__.d(__webpack_exports__, "cloneDeepWith", function() { return /* reexport */ lodash_es_cloneDeepWith; });
__webpack_require__.d(__webpack_exports__, "cloneWith", function() { return /* reexport */ lodash_es_cloneWith; });
__webpack_require__.d(__webpack_exports__, "commit", function() { return /* reexport */ commit; });
__webpack_require__.d(__webpack_exports__, "compact", function() { return /* reexport */ lodash_es_compact; });
__webpack_require__.d(__webpack_exports__, "concat", function() { return /* reexport */ lodash_es_concat; });
__webpack_require__.d(__webpack_exports__, "cond", function() { return /* reexport */ lodash_es_cond; });
__webpack_require__.d(__webpack_exports__, "conforms", function() { return /* reexport */ lodash_es_conforms; });
__webpack_require__.d(__webpack_exports__, "conformsTo", function() { return /* reexport */ lodash_es_conformsTo; });
__webpack_require__.d(__webpack_exports__, "constant", function() { return /* reexport */ lodash_es_constant; });
__webpack_require__.d(__webpack_exports__, "countBy", function() { return /* reexport */ lodash_es_countBy; });
__webpack_require__.d(__webpack_exports__, "create", function() { return /* reexport */ lodash_es_create; });
__webpack_require__.d(__webpack_exports__, "curry", function() { return /* reexport */ lodash_es_curry; });
__webpack_require__.d(__webpack_exports__, "curryRight", function() { return /* reexport */ lodash_es_curryRight; });
__webpack_require__.d(__webpack_exports__, "debounce", function() { return /* reexport */ lodash_es_debounce; });
__webpack_require__.d(__webpack_exports__, "deburr", function() { return /* reexport */ lodash_es_deburr; });
__webpack_require__.d(__webpack_exports__, "defaultTo", function() { return /* reexport */ lodash_es_defaultTo; });
__webpack_require__.d(__webpack_exports__, "defaults", function() { return /* reexport */ lodash_es_defaults; });
__webpack_require__.d(__webpack_exports__, "defaultsDeep", function() { return /* reexport */ lodash_es_defaultsDeep; });
__webpack_require__.d(__webpack_exports__, "defer", function() { return /* reexport */ lodash_es_defer; });
__webpack_require__.d(__webpack_exports__, "delay", function() { return /* reexport */ lodash_es_delay; });
__webpack_require__.d(__webpack_exports__, "difference", function() { return /* reexport */ lodash_es_difference; });
__webpack_require__.d(__webpack_exports__, "differenceBy", function() { return /* reexport */ lodash_es_differenceBy; });
__webpack_require__.d(__webpack_exports__, "differenceWith", function() { return /* reexport */ lodash_es_differenceWith; });
__webpack_require__.d(__webpack_exports__, "divide", function() { return /* reexport */ lodash_es_divide; });
__webpack_require__.d(__webpack_exports__, "drop", function() { return /* reexport */ lodash_es_drop; });
__webpack_require__.d(__webpack_exports__, "dropRight", function() { return /* reexport */ lodash_es_dropRight; });
__webpack_require__.d(__webpack_exports__, "dropRightWhile", function() { return /* reexport */ lodash_es_dropRightWhile; });
__webpack_require__.d(__webpack_exports__, "dropWhile", function() { return /* reexport */ lodash_es_dropWhile; });
__webpack_require__.d(__webpack_exports__, "each", function() { return /* reexport */ lodash_es_forEach; });
__webpack_require__.d(__webpack_exports__, "eachRight", function() { return /* reexport */ lodash_es_forEachRight; });
__webpack_require__.d(__webpack_exports__, "endsWith", function() { return /* reexport */ lodash_es_endsWith; });
__webpack_require__.d(__webpack_exports__, "entries", function() { return /* reexport */ lodash_es_toPairs; });
__webpack_require__.d(__webpack_exports__, "entriesIn", function() { return /* reexport */ lodash_es_toPairsIn; });
__webpack_require__.d(__webpack_exports__, "eq", function() { return /* reexport */ lodash_es_eq; });
__webpack_require__.d(__webpack_exports__, "escape", function() { return /* reexport */ lodash_es_escape; });
__webpack_require__.d(__webpack_exports__, "escapeRegExp", function() { return /* reexport */ lodash_es_escapeRegExp; });
__webpack_require__.d(__webpack_exports__, "every", function() { return /* reexport */ lodash_es_every; });
__webpack_require__.d(__webpack_exports__, "extend", function() { return /* reexport */ lodash_es_assignIn; });
__webpack_require__.d(__webpack_exports__, "extendWith", function() { return /* reexport */ lodash_es_assignInWith; });
__webpack_require__.d(__webpack_exports__, "fill", function() { return /* reexport */ lodash_es_fill; });
__webpack_require__.d(__webpack_exports__, "filter", function() { return /* reexport */ lodash_es_filter; });
__webpack_require__.d(__webpack_exports__, "find", function() { return /* reexport */ lodash_es_find; });
__webpack_require__.d(__webpack_exports__, "findIndex", function() { return /* reexport */ lodash_es_findIndex; });
__webpack_require__.d(__webpack_exports__, "findKey", function() { return /* reexport */ lodash_es_findKey; });
__webpack_require__.d(__webpack_exports__, "findLast", function() { return /* reexport */ lodash_es_findLast; });
__webpack_require__.d(__webpack_exports__, "findLastIndex", function() { return /* reexport */ lodash_es_findLastIndex; });
__webpack_require__.d(__webpack_exports__, "findLastKey", function() { return /* reexport */ lodash_es_findLastKey; });
__webpack_require__.d(__webpack_exports__, "first", function() { return /* reexport */ lodash_es_head; });
__webpack_require__.d(__webpack_exports__, "flatMap", function() { return /* reexport */ lodash_es_flatMap; });
__webpack_require__.d(__webpack_exports__, "flatMapDeep", function() { return /* reexport */ lodash_es_flatMapDeep; });
__webpack_require__.d(__webpack_exports__, "flatMapDepth", function() { return /* reexport */ lodash_es_flatMapDepth; });
__webpack_require__.d(__webpack_exports__, "flatten", function() { return /* reexport */ lodash_es_flatten; });
__webpack_require__.d(__webpack_exports__, "flattenDeep", function() { return /* reexport */ lodash_es_flattenDeep; });
__webpack_require__.d(__webpack_exports__, "flattenDepth", function() { return /* reexport */ lodash_es_flattenDepth; });
__webpack_require__.d(__webpack_exports__, "flip", function() { return /* reexport */ lodash_es_flip; });
__webpack_require__.d(__webpack_exports__, "floor", function() { return /* reexport */ lodash_es_floor; });
__webpack_require__.d(__webpack_exports__, "flow", function() { return /* reexport */ lodash_es_flow; });
__webpack_require__.d(__webpack_exports__, "flowRight", function() { return /* reexport */ lodash_es_flowRight; });
__webpack_require__.d(__webpack_exports__, "forEach", function() { return /* reexport */ lodash_es_forEach; });
__webpack_require__.d(__webpack_exports__, "forEachRight", function() { return /* reexport */ lodash_es_forEachRight; });
__webpack_require__.d(__webpack_exports__, "forIn", function() { return /* reexport */ lodash_es_forIn; });
__webpack_require__.d(__webpack_exports__, "forInRight", function() { return /* reexport */ lodash_es_forInRight; });
__webpack_require__.d(__webpack_exports__, "forOwn", function() { return /* reexport */ lodash_es_forOwn; });
__webpack_require__.d(__webpack_exports__, "forOwnRight", function() { return /* reexport */ lodash_es_forOwnRight; });
__webpack_require__.d(__webpack_exports__, "fromPairs", function() { return /* reexport */ lodash_es_fromPairs; });
__webpack_require__.d(__webpack_exports__, "functions", function() { return /* reexport */ lodash_es_functions; });
__webpack_require__.d(__webpack_exports__, "functionsIn", function() { return /* reexport */ lodash_es_functionsIn; });
__webpack_require__.d(__webpack_exports__, "get", function() { return /* reexport */ lodash_es_get; });
__webpack_require__.d(__webpack_exports__, "groupBy", function() { return /* reexport */ lodash_es_groupBy; });
__webpack_require__.d(__webpack_exports__, "gt", function() { return /* reexport */ lodash_es_gt; });
__webpack_require__.d(__webpack_exports__, "gte", function() { return /* reexport */ lodash_es_gte; });
__webpack_require__.d(__webpack_exports__, "has", function() { return /* reexport */ lodash_es_has; });
__webpack_require__.d(__webpack_exports__, "hasIn", function() { return /* reexport */ lodash_es_hasIn; });
__webpack_require__.d(__webpack_exports__, "head", function() { return /* reexport */ lodash_es_head; });
__webpack_require__.d(__webpack_exports__, "identity", function() { return /* reexport */ lodash_es_identity; });
__webpack_require__.d(__webpack_exports__, "inRange", function() { return /* reexport */ lodash_es_inRange; });
__webpack_require__.d(__webpack_exports__, "includes", function() { return /* reexport */ lodash_es_includes; });
__webpack_require__.d(__webpack_exports__, "indexOf", function() { return /* reexport */ lodash_es_indexOf; });
__webpack_require__.d(__webpack_exports__, "initial", function() { return /* reexport */ lodash_es_initial; });
__webpack_require__.d(__webpack_exports__, "intersection", function() { return /* reexport */ lodash_es_intersection; });
__webpack_require__.d(__webpack_exports__, "intersectionBy", function() { return /* reexport */ lodash_es_intersectionBy; });
__webpack_require__.d(__webpack_exports__, "intersectionWith", function() { return /* reexport */ lodash_es_intersectionWith; });
__webpack_require__.d(__webpack_exports__, "invert", function() { return /* reexport */ lodash_es_invert; });
__webpack_require__.d(__webpack_exports__, "invertBy", function() { return /* reexport */ lodash_es_invertBy; });
__webpack_require__.d(__webpack_exports__, "invoke", function() { return /* reexport */ lodash_es_invoke; });
__webpack_require__.d(__webpack_exports__, "invokeMap", function() { return /* reexport */ lodash_es_invokeMap; });
__webpack_require__.d(__webpack_exports__, "isArguments", function() { return /* reexport */ lodash_es_isArguments; });
__webpack_require__.d(__webpack_exports__, "isArray", function() { return /* reexport */ lodash_es_isArray; });
__webpack_require__.d(__webpack_exports__, "isArrayBuffer", function() { return /* reexport */ lodash_es_isArrayBuffer; });
__webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return /* reexport */ lodash_es_isArrayLike; });
__webpack_require__.d(__webpack_exports__, "isArrayLikeObject", function() { return /* reexport */ lodash_es_isArrayLikeObject; });
__webpack_require__.d(__webpack_exports__, "isBoolean", function() { return /* reexport */ lodash_es_isBoolean; });
__webpack_require__.d(__webpack_exports__, "isBuffer", function() { return /* reexport */ isBuffer["a" /* default */]; });
__webpack_require__.d(__webpack_exports__, "isDate", function() { return /* reexport */ lodash_es_isDate; });
__webpack_require__.d(__webpack_exports__, "isElement", function() { return /* reexport */ lodash_es_isElement; });
__webpack_require__.d(__webpack_exports__, "isEmpty", function() { return /* reexport */ lodash_es_isEmpty; });
__webpack_require__.d(__webpack_exports__, "isEqual", function() { return /* reexport */ lodash_es_isEqual; });
__webpack_require__.d(__webpack_exports__, "isEqualWith", function() { return /* reexport */ lodash_es_isEqualWith; });
__webpack_require__.d(__webpack_exports__, "isError", function() { return /* reexport */ lodash_es_isError; });
__webpack_require__.d(__webpack_exports__, "isFinite", function() { return /* reexport */ lodash_es_isFinite; });
__webpack_require__.d(__webpack_exports__, "isFunction", function() { return /* reexport */ lodash_es_isFunction; });
__webpack_require__.d(__webpack_exports__, "isInteger", function() { return /* reexport */ lodash_es_isInteger; });
__webpack_require__.d(__webpack_exports__, "isLength", function() { return /* reexport */ lodash_es_isLength; });
__webpack_require__.d(__webpack_exports__, "isMap", function() { return /* reexport */ lodash_es_isMap; });
__webpack_require__.d(__webpack_exports__, "isMatch", function() { return /* reexport */ lodash_es_isMatch; });
__webpack_require__.d(__webpack_exports__, "isMatchWith", function() { return /* reexport */ lodash_es_isMatchWith; });
__webpack_require__.d(__webpack_exports__, "isNaN", function() { return /* reexport */ lodash_es_isNaN; });
__webpack_require__.d(__webpack_exports__, "isNative", function() { return /* reexport */ lodash_es_isNative; });
__webpack_require__.d(__webpack_exports__, "isNil", function() { return /* reexport */ lodash_es_isNil; });
__webpack_require__.d(__webpack_exports__, "isNull", function() { return /* reexport */ lodash_es_isNull; });
__webpack_require__.d(__webpack_exports__, "isNumber", function() { return /* reexport */ lodash_es_isNumber; });
__webpack_require__.d(__webpack_exports__, "isObject", function() { return /* reexport */ lodash_es_isObject; });
__webpack_require__.d(__webpack_exports__, "isObjectLike", function() { return /* reexport */ isObjectLike["a" /* default */]; });
__webpack_require__.d(__webpack_exports__, "isPlainObject", function() { return /* reexport */ isPlainObject["default"]; });
__webpack_require__.d(__webpack_exports__, "isRegExp", function() { return /* reexport */ lodash_es_isRegExp; });
__webpack_require__.d(__webpack_exports__, "isSafeInteger", function() { return /* reexport */ lodash_es_isSafeInteger; });
__webpack_require__.d(__webpack_exports__, "isSet", function() { return /* reexport */ lodash_es_isSet; });
__webpack_require__.d(__webpack_exports__, "isString", function() { return /* reexport */ lodash_es_isString; });
__webpack_require__.d(__webpack_exports__, "isSymbol", function() { return /* reexport */ lodash_es_isSymbol; });
__webpack_require__.d(__webpack_exports__, "isTypedArray", function() { return /* reexport */ lodash_es_isTypedArray; });
__webpack_require__.d(__webpack_exports__, "isUndefined", function() { return /* reexport */ lodash_es_isUndefined; });
__webpack_require__.d(__webpack_exports__, "isWeakMap", function() { return /* reexport */ lodash_es_isWeakMap; });
__webpack_require__.d(__webpack_exports__, "isWeakSet", function() { return /* reexport */ lodash_es_isWeakSet; });
__webpack_require__.d(__webpack_exports__, "iteratee", function() { return /* reexport */ lodash_es_iteratee; });
__webpack_require__.d(__webpack_exports__, "join", function() { return /* reexport */ lodash_es_join; });
__webpack_require__.d(__webpack_exports__, "kebabCase", function() { return /* reexport */ lodash_es_kebabCase; });
__webpack_require__.d(__webpack_exports__, "keyBy", function() { return /* reexport */ lodash_es_keyBy; });
__webpack_require__.d(__webpack_exports__, "keys", function() { return /* reexport */ lodash_es_keys; });
__webpack_require__.d(__webpack_exports__, "keysIn", function() { return /* reexport */ lodash_es_keysIn; });
__webpack_require__.d(__webpack_exports__, "last", function() { return /* reexport */ lodash_es_last; });
__webpack_require__.d(__webpack_exports__, "lastIndexOf", function() { return /* reexport */ lodash_es_lastIndexOf; });
__webpack_require__.d(__webpack_exports__, "lodash", function() { return /* reexport */ wrapperLodash; });
__webpack_require__.d(__webpack_exports__, "lowerCase", function() { return /* reexport */ lodash_es_lowerCase; });
__webpack_require__.d(__webpack_exports__, "lowerFirst", function() { return /* reexport */ lodash_es_lowerFirst; });
__webpack_require__.d(__webpack_exports__, "lt", function() { return /* reexport */ lodash_es_lt; });
__webpack_require__.d(__webpack_exports__, "lte", function() { return /* reexport */ lodash_es_lte; });
__webpack_require__.d(__webpack_exports__, "map", function() { return /* reexport */ lodash_es_map; });
__webpack_require__.d(__webpack_exports__, "mapKeys", function() { return /* reexport */ lodash_es_mapKeys; });
__webpack_require__.d(__webpack_exports__, "mapValues", function() { return /* reexport */ lodash_es_mapValues; });
__webpack_require__.d(__webpack_exports__, "matches", function() { return /* reexport */ lodash_es_matches; });
__webpack_require__.d(__webpack_exports__, "matchesProperty", function() { return /* reexport */ lodash_es_matchesProperty; });
__webpack_require__.d(__webpack_exports__, "max", function() { return /* reexport */ lodash_es_max; });
__webpack_require__.d(__webpack_exports__, "maxBy", function() { return /* reexport */ lodash_es_maxBy; });
__webpack_require__.d(__webpack_exports__, "mean", function() { return /* reexport */ lodash_es_mean; });
__webpack_require__.d(__webpack_exports__, "meanBy", function() { return /* reexport */ lodash_es_meanBy; });
__webpack_require__.d(__webpack_exports__, "memoize", function() { return /* reexport */ lodash_es_memoize; });
__webpack_require__.d(__webpack_exports__, "merge", function() { return /* reexport */ lodash_es_merge; });
__webpack_require__.d(__webpack_exports__, "mergeWith", function() { return /* reexport */ lodash_es_mergeWith; });
__webpack_require__.d(__webpack_exports__, "method", function() { return /* reexport */ lodash_es_method; });
__webpack_require__.d(__webpack_exports__, "methodOf", function() { return /* reexport */ lodash_es_methodOf; });
__webpack_require__.d(__webpack_exports__, "min", function() { return /* reexport */ lodash_es_min; });
__webpack_require__.d(__webpack_exports__, "minBy", function() { return /* reexport */ lodash_es_minBy; });
__webpack_require__.d(__webpack_exports__, "mixin", function() { return /* reexport */ lodash_es_mixin; });
__webpack_require__.d(__webpack_exports__, "multiply", function() { return /* reexport */ lodash_es_multiply; });
__webpack_require__.d(__webpack_exports__, "negate", function() { return /* reexport */ lodash_es_negate; });
__webpack_require__.d(__webpack_exports__, "next", function() { return /* reexport */ next; });
__webpack_require__.d(__webpack_exports__, "noop", function() { return /* reexport */ lodash_es_noop; });
__webpack_require__.d(__webpack_exports__, "now", function() { return /* reexport */ lodash_es_now; });
__webpack_require__.d(__webpack_exports__, "nth", function() { return /* reexport */ lodash_es_nth; });
__webpack_require__.d(__webpack_exports__, "nthArg", function() { return /* reexport */ lodash_es_nthArg; });
__webpack_require__.d(__webpack_exports__, "omit", function() { return /* reexport */ lodash_es_omit; });
__webpack_require__.d(__webpack_exports__, "omitBy", function() { return /* reexport */ lodash_es_omitBy; });
__webpack_require__.d(__webpack_exports__, "once", function() { return /* reexport */ lodash_es_once; });
__webpack_require__.d(__webpack_exports__, "orderBy", function() { return /* reexport */ lodash_es_orderBy; });
__webpack_require__.d(__webpack_exports__, "over", function() { return /* reexport */ lodash_es_over; });
__webpack_require__.d(__webpack_exports__, "overArgs", function() { return /* reexport */ lodash_es_overArgs; });
__webpack_require__.d(__webpack_exports__, "overEvery", function() { return /* reexport */ lodash_es_overEvery; });
__webpack_require__.d(__webpack_exports__, "overSome", function() { return /* reexport */ lodash_es_overSome; });
__webpack_require__.d(__webpack_exports__, "pad", function() { return /* reexport */ lodash_es_pad; });
__webpack_require__.d(__webpack_exports__, "padEnd", function() { return /* reexport */ lodash_es_padEnd; });
__webpack_require__.d(__webpack_exports__, "padStart", function() { return /* reexport */ lodash_es_padStart; });
__webpack_require__.d(__webpack_exports__, "parseInt", function() { return /* reexport */ lodash_es_parseInt; });
__webpack_require__.d(__webpack_exports__, "partial", function() { return /* reexport */ lodash_es_partial; });
__webpack_require__.d(__webpack_exports__, "partialRight", function() { return /* reexport */ lodash_es_partialRight; });
__webpack_require__.d(__webpack_exports__, "partition", function() { return /* reexport */ lodash_es_partition; });
__webpack_require__.d(__webpack_exports__, "pick", function() { return /* reexport */ lodash_es_pick; });
__webpack_require__.d(__webpack_exports__, "pickBy", function() { return /* reexport */ lodash_es_pickBy; });
__webpack_require__.d(__webpack_exports__, "plant", function() { return /* reexport */ plant; });
__webpack_require__.d(__webpack_exports__, "property", function() { return /* reexport */ lodash_es_property; });
__webpack_require__.d(__webpack_exports__, "propertyOf", function() { return /* reexport */ lodash_es_propertyOf; });
__webpack_require__.d(__webpack_exports__, "pull", function() { return /* reexport */ lodash_es_pull; });
__webpack_require__.d(__webpack_exports__, "pullAll", function() { return /* reexport */ lodash_es_pullAll; });
__webpack_require__.d(__webpack_exports__, "pullAllBy", function() { return /* reexport */ lodash_es_pullAllBy; });
__webpack_require__.d(__webpack_exports__, "pullAllWith", function() { return /* reexport */ lodash_es_pullAllWith; });
__webpack_require__.d(__webpack_exports__, "pullAt", function() { return /* reexport */ lodash_es_pullAt; });
__webpack_require__.d(__webpack_exports__, "random", function() { return /* reexport */ lodash_es_random; });
__webpack_require__.d(__webpack_exports__, "range", function() { return /* reexport */ lodash_es_range; });
__webpack_require__.d(__webpack_exports__, "rangeRight", function() { return /* reexport */ lodash_es_rangeRight; });
__webpack_require__.d(__webpack_exports__, "rearg", function() { return /* reexport */ lodash_es_rearg; });
__webpack_require__.d(__webpack_exports__, "reduce", function() { return /* reexport */ lodash_es_reduce; });
__webpack_require__.d(__webpack_exports__, "reduceRight", function() { return /* reexport */ lodash_es_reduceRight; });
__webpack_require__.d(__webpack_exports__, "reject", function() { return /* reexport */ lodash_es_reject; });
__webpack_require__.d(__webpack_exports__, "remove", function() { return /* reexport */ lodash_es_remove; });
__webpack_require__.d(__webpack_exports__, "repeat", function() { return /* reexport */ lodash_es_repeat; });
__webpack_require__.d(__webpack_exports__, "replace", function() { return /* reexport */ lodash_es_replace; });
__webpack_require__.d(__webpack_exports__, "rest", function() { return /* reexport */ lodash_es_rest; });
__webpack_require__.d(__webpack_exports__, "result", function() { return /* reexport */ lodash_es_result; });
__webpack_require__.d(__webpack_exports__, "reverse", function() { return /* reexport */ lodash_es_reverse; });
__webpack_require__.d(__webpack_exports__, "round", function() { return /* reexport */ lodash_es_round; });
__webpack_require__.d(__webpack_exports__, "sample", function() { return /* reexport */ lodash_es_sample; });
__webpack_require__.d(__webpack_exports__, "sampleSize", function() { return /* reexport */ lodash_es_sampleSize; });
__webpack_require__.d(__webpack_exports__, "set", function() { return /* reexport */ lodash_es_set; });
__webpack_require__.d(__webpack_exports__, "setWith", function() { return /* reexport */ lodash_es_setWith; });
__webpack_require__.d(__webpack_exports__, "shuffle", function() { return /* reexport */ lodash_es_shuffle; });
__webpack_require__.d(__webpack_exports__, "size", function() { return /* reexport */ lodash_es_size; });
__webpack_require__.d(__webpack_exports__, "slice", function() { return /* reexport */ lodash_es_slice; });
__webpack_require__.d(__webpack_exports__, "snakeCase", function() { return /* reexport */ lodash_es_snakeCase; });
__webpack_require__.d(__webpack_exports__, "some", function() { return /* reexport */ lodash_es_some; });
__webpack_require__.d(__webpack_exports__, "sortBy", function() { return /* reexport */ lodash_es_sortBy; });
__webpack_require__.d(__webpack_exports__, "sortedIndex", function() { return /* reexport */ lodash_es_sortedIndex; });
__webpack_require__.d(__webpack_exports__, "sortedIndexBy", function() { return /* reexport */ lodash_es_sortedIndexBy; });
__webpack_require__.d(__webpack_exports__, "sortedIndexOf", function() { return /* reexport */ lodash_es_sortedIndexOf; });
__webpack_require__.d(__webpack_exports__, "sortedLastIndex", function() { return /* reexport */ lodash_es_sortedLastIndex; });
__webpack_require__.d(__webpack_exports__, "sortedLastIndexBy", function() { return /* reexport */ lodash_es_sortedLastIndexBy; });
__webpack_require__.d(__webpack_exports__, "sortedLastIndexOf", function() { return /* reexport */ lodash_es_sortedLastIndexOf; });
__webpack_require__.d(__webpack_exports__, "sortedUniq", function() { return /* reexport */ lodash_es_sortedUniq; });
__webpack_require__.d(__webpack_exports__, "sortedUniqBy", function() { return /* reexport */ lodash_es_sortedUniqBy; });
__webpack_require__.d(__webpack_exports__, "split", function() { return /* reexport */ lodash_es_split; });
__webpack_require__.d(__webpack_exports__, "spread", function() { return /* reexport */ lodash_es_spread; });
__webpack_require__.d(__webpack_exports__, "startCase", function() { return /* reexport */ lodash_es_startCase; });
__webpack_require__.d(__webpack_exports__, "startsWith", function() { return /* reexport */ lodash_es_startsWith; });
__webpack_require__.d(__webpack_exports__, "stubArray", function() { return /* reexport */ lodash_es_stubArray; });
__webpack_require__.d(__webpack_exports__, "stubFalse", function() { return /* reexport */ stubFalse["a" /* default */]; });
__webpack_require__.d(__webpack_exports__, "stubObject", function() { return /* reexport */ lodash_es_stubObject; });
__webpack_require__.d(__webpack_exports__, "stubString", function() { return /* reexport */ lodash_es_stubString; });
__webpack_require__.d(__webpack_exports__, "stubTrue", function() { return /* reexport */ lodash_es_stubTrue; });
__webpack_require__.d(__webpack_exports__, "subtract", function() { return /* reexport */ lodash_es_subtract; });
__webpack_require__.d(__webpack_exports__, "sum", function() { return /* reexport */ lodash_es_sum; });
__webpack_require__.d(__webpack_exports__, "sumBy", function() { return /* reexport */ lodash_es_sumBy; });
__webpack_require__.d(__webpack_exports__, "tail", function() { return /* reexport */ lodash_es_tail; });
__webpack_require__.d(__webpack_exports__, "take", function() { return /* reexport */ lodash_es_take; });
__webpack_require__.d(__webpack_exports__, "takeRight", function() { return /* reexport */ lodash_es_takeRight; });
__webpack_require__.d(__webpack_exports__, "takeRightWhile", function() { return /* reexport */ lodash_es_takeRightWhile; });
__webpack_require__.d(__webpack_exports__, "takeWhile", function() { return /* reexport */ lodash_es_takeWhile; });
__webpack_require__.d(__webpack_exports__, "tap", function() { return /* reexport */ lodash_es_tap; });
__webpack_require__.d(__webpack_exports__, "template", function() { return /* reexport */ lodash_es_template; });
__webpack_require__.d(__webpack_exports__, "templateSettings", function() { return /* reexport */ lodash_es_templateSettings; });
__webpack_require__.d(__webpack_exports__, "throttle", function() { return /* reexport */ lodash_es_throttle; });
__webpack_require__.d(__webpack_exports__, "thru", function() { return /* reexport */ lodash_es_thru; });
__webpack_require__.d(__webpack_exports__, "times", function() { return /* reexport */ lodash_es_times; });
__webpack_require__.d(__webpack_exports__, "toArray", function() { return /* reexport */ lodash_es_toArray; });
__webpack_require__.d(__webpack_exports__, "toFinite", function() { return /* reexport */ lodash_es_toFinite; });
__webpack_require__.d(__webpack_exports__, "toInteger", function() { return /* reexport */ lodash_es_toInteger; });
__webpack_require__.d(__webpack_exports__, "toIterator", function() { return /* reexport */ toIterator; });
__webpack_require__.d(__webpack_exports__, "toJSON", function() { return /* reexport */ lodash_es_wrapperValue; });
__webpack_require__.d(__webpack_exports__, "toLength", function() { return /* reexport */ lodash_es_toLength; });
__webpack_require__.d(__webpack_exports__, "toLower", function() { return /* reexport */ lodash_es_toLower; });
__webpack_require__.d(__webpack_exports__, "toNumber", function() { return /* reexport */ lodash_es_toNumber; });
__webpack_require__.d(__webpack_exports__, "toPairs", function() { return /* reexport */ lodash_es_toPairs; });
__webpack_require__.d(__webpack_exports__, "toPairsIn", function() { return /* reexport */ lodash_es_toPairsIn; });
__webpack_require__.d(__webpack_exports__, "toPath", function() { return /* reexport */ lodash_es_toPath; });
__webpack_require__.d(__webpack_exports__, "toPlainObject", function() { return /* reexport */ lodash_es_toPlainObject; });
__webpack_require__.d(__webpack_exports__, "toSafeInteger", function() { return /* reexport */ lodash_es_toSafeInteger; });
__webpack_require__.d(__webpack_exports__, "toString", function() { return /* reexport */ lodash_es_toString; });
__webpack_require__.d(__webpack_exports__, "toUpper", function() { return /* reexport */ lodash_es_toUpper; });
__webpack_require__.d(__webpack_exports__, "transform", function() { return /* reexport */ lodash_es_transform; });
__webpack_require__.d(__webpack_exports__, "trim", function() { return /* reexport */ lodash_es_trim; });
__webpack_require__.d(__webpack_exports__, "trimEnd", function() { return /* reexport */ lodash_es_trimEnd; });
__webpack_require__.d(__webpack_exports__, "trimStart", function() { return /* reexport */ lodash_es_trimStart; });
__webpack_require__.d(__webpack_exports__, "truncate", function() { return /* reexport */ lodash_es_truncate; });
__webpack_require__.d(__webpack_exports__, "unary", function() { return /* reexport */ lodash_es_unary; });
__webpack_require__.d(__webpack_exports__, "unescape", function() { return /* reexport */ lodash_es_unescape; });
__webpack_require__.d(__webpack_exports__, "union", function() { return /* reexport */ lodash_es_union; });
__webpack_require__.d(__webpack_exports__, "unionBy", function() { return /* reexport */ lodash_es_unionBy; });
__webpack_require__.d(__webpack_exports__, "unionWith", function() { return /* reexport */ lodash_es_unionWith; });
__webpack_require__.d(__webpack_exports__, "uniq", function() { return /* reexport */ lodash_es_uniq; });
__webpack_require__.d(__webpack_exports__, "uniqBy", function() { return /* reexport */ lodash_es_uniqBy; });
__webpack_require__.d(__webpack_exports__, "uniqWith", function() { return /* reexport */ lodash_es_uniqWith; });
__webpack_require__.d(__webpack_exports__, "uniqueId", function() { return /* reexport */ lodash_es_uniqueId; });
__webpack_require__.d(__webpack_exports__, "unset", function() { return /* reexport */ lodash_es_unset; });
__webpack_require__.d(__webpack_exports__, "unzip", function() { return /* reexport */ lodash_es_unzip; });
__webpack_require__.d(__webpack_exports__, "unzipWith", function() { return /* reexport */ lodash_es_unzipWith; });
__webpack_require__.d(__webpack_exports__, "update", function() { return /* reexport */ lodash_es_update; });
__webpack_require__.d(__webpack_exports__, "updateWith", function() { return /* reexport */ lodash_es_updateWith; });
__webpack_require__.d(__webpack_exports__, "upperCase", function() { return /* reexport */ lodash_es_upperCase; });
__webpack_require__.d(__webpack_exports__, "upperFirst", function() { return /* reexport */ lodash_es_upperFirst; });
__webpack_require__.d(__webpack_exports__, "value", function() { return /* reexport */ lodash_es_wrapperValue; });
__webpack_require__.d(__webpack_exports__, "valueOf", function() { return /* reexport */ lodash_es_wrapperValue; });
__webpack_require__.d(__webpack_exports__, "values", function() { return /* reexport */ lodash_es_values; });
__webpack_require__.d(__webpack_exports__, "valuesIn", function() { return /* reexport */ lodash_es_valuesIn; });
__webpack_require__.d(__webpack_exports__, "without", function() { return /* reexport */ lodash_es_without; });
__webpack_require__.d(__webpack_exports__, "words", function() { return /* reexport */ lodash_es_words; });
__webpack_require__.d(__webpack_exports__, "wrap", function() { return /* reexport */ lodash_es_wrap; });
__webpack_require__.d(__webpack_exports__, "wrapperAt", function() { return /* reexport */ lodash_es_wrapperAt; });
__webpack_require__.d(__webpack_exports__, "wrapperChain", function() { return /* reexport */ lodash_es_wrapperChain; });
__webpack_require__.d(__webpack_exports__, "wrapperCommit", function() { return /* reexport */ commit; });
__webpack_require__.d(__webpack_exports__, "wrapperLodash", function() { return /* reexport */ wrapperLodash; });
__webpack_require__.d(__webpack_exports__, "wrapperNext", function() { return /* reexport */ next; });
__webpack_require__.d(__webpack_exports__, "wrapperPlant", function() { return /* reexport */ plant; });
__webpack_require__.d(__webpack_exports__, "wrapperReverse", function() { return /* reexport */ lodash_es_wrapperReverse; });
__webpack_require__.d(__webpack_exports__, "wrapperToIterator", function() { return /* reexport */ toIterator; });
__webpack_require__.d(__webpack_exports__, "wrapperValue", function() { return /* reexport */ lodash_es_wrapperValue; });
__webpack_require__.d(__webpack_exports__, "xor", function() { return /* reexport */ lodash_es_xor; });
__webpack_require__.d(__webpack_exports__, "xorBy", function() { return /* reexport */ lodash_es_xorBy; });
__webpack_require__.d(__webpack_exports__, "xorWith", function() { return /* reexport */ lodash_es_xorWith; });
__webpack_require__.d(__webpack_exports__, "zip", function() { return /* reexport */ lodash_es_zip; });
__webpack_require__.d(__webpack_exports__, "zipObject", function() { return /* reexport */ lodash_es_zipObject; });
__webpack_require__.d(__webpack_exports__, "zipObjectDeep", function() { return /* reexport */ lodash_es_zipObjectDeep; });
__webpack_require__.d(__webpack_exports__, "zipWith", function() { return /* reexport */ lodash_es_zipWith; });
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ lodash_default; });

// EXTERNAL MODULE: ./node_modules/lodash-es/_baseGetTag.js + 2 modules
var _baseGetTag = __webpack_require__("f0ce");

// EXTERNAL MODULE: ./node_modules/lodash-es/isObjectLike.js
var isObjectLike = __webpack_require__("1147");

// CONCATENATED MODULE: ./node_modules/lodash-es/isSymbol.js



/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == symbolTag);
}

/* harmony default export */ var lodash_es_isSymbol = (isSymbol);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseToNumber.js


/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/**
 * The base implementation of `_.toNumber` which doesn't ensure correct
 * conversions of binary, hexadecimal, or octal string values.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 */
function baseToNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (lodash_es_isSymbol(value)) {
    return NAN;
  }
  return +value;
}

/* harmony default export */ var _baseToNumber = (baseToNumber);

// EXTERNAL MODULE: ./node_modules/lodash-es/_Symbol.js
var _Symbol = __webpack_require__("ca54");

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayMap.js
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/* harmony default export */ var _arrayMap = (arrayMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArray.js
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/* harmony default export */ var lodash_es_isArray = (isArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseToString.js





/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol["a" /* default */] ? _Symbol["a" /* default */].prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (lodash_es_isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return _arrayMap(value, baseToString) + '';
  }
  if (lodash_es_isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ var _baseToString = (baseToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createMathOperation.js



/**
 * Creates a function that performs a mathematical operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @param {number} [defaultValue] The value used for `undefined` arguments.
 * @returns {Function} Returns the new mathematical operation function.
 */
function createMathOperation(operator, defaultValue) {
  return function(value, other) {
    var result;
    if (value === undefined && other === undefined) {
      return defaultValue;
    }
    if (value !== undefined) {
      result = value;
    }
    if (other !== undefined) {
      if (result === undefined) {
        return other;
      }
      if (typeof value == 'string' || typeof other == 'string') {
        value = _baseToString(value);
        other = _baseToString(other);
      } else {
        value = _baseToNumber(value);
        other = _baseToNumber(other);
      }
      result = operator(value, other);
    }
    return result;
  };
}

/* harmony default export */ var _createMathOperation = (createMathOperation);

// CONCATENATED MODULE: ./node_modules/lodash-es/add.js


/**
 * Adds two numbers.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {number} augend The first number in an addition.
 * @param {number} addend The second number in an addition.
 * @returns {number} Returns the total.
 * @example
 *
 * _.add(6, 4);
 * // => 10
 */
var add = _createMathOperation(function(augend, addend) {
  return augend + addend;
}, 0);

/* harmony default export */ var lodash_es_add = (add);

// CONCATENATED MODULE: ./node_modules/lodash-es/_trimmedEndIndex.js
/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

/* harmony default export */ var _trimmedEndIndex = (trimmedEndIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseTrim.js


/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, _trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

/* harmony default export */ var _baseTrim = (baseTrim);

// CONCATENATED MODULE: ./node_modules/lodash-es/isObject.js
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* harmony default export */ var lodash_es_isObject = (isObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/toNumber.js




/** Used as references for various `Number` constants. */
var toNumber_NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (lodash_es_isSymbol(value)) {
    return toNumber_NAN;
  }
  if (lodash_es_isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = lodash_es_isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = _baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? toNumber_NAN : +value);
}

/* harmony default export */ var lodash_es_toNumber = (toNumber);

// CONCATENATED MODULE: ./node_modules/lodash-es/toFinite.js


/** Used as references for various `Number` constants. */
var toFinite_INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = lodash_es_toNumber(value);
  if (value === toFinite_INFINITY || value === -toFinite_INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

/* harmony default export */ var lodash_es_toFinite = (toFinite);

// CONCATENATED MODULE: ./node_modules/lodash-es/toInteger.js


/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = lodash_es_toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

/* harmony default export */ var lodash_es_toInteger = (toInteger);

// CONCATENATED MODULE: ./node_modules/lodash-es/after.js


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The opposite of `_.before`; this method creates a function that invokes
 * `func` once it's called `n` or more times.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {number} n The number of calls before `func` is invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var saves = ['profile', 'settings'];
 *
 * var done = _.after(saves.length, function() {
 *   console.log('done saving!');
 * });
 *
 * _.forEach(saves, function(type) {
 *   asyncSave({ 'type': type, 'complete': done });
 * });
 * // => Logs 'done saving!' after the two async saves have completed.
 */
function after(n, func) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = lodash_es_toInteger(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}

/* harmony default export */ var lodash_es_after = (after);

// CONCATENATED MODULE: ./node_modules/lodash-es/identity.js
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/* harmony default export */ var lodash_es_identity = (identity);

// CONCATENATED MODULE: ./node_modules/lodash-es/isFunction.js



/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!lodash_es_isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = Object(_baseGetTag["a" /* default */])(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/* harmony default export */ var lodash_es_isFunction = (isFunction);

// EXTERNAL MODULE: ./node_modules/lodash-es/_root.js
var _root = __webpack_require__("26ee");

// CONCATENATED MODULE: ./node_modules/lodash-es/_coreJsData.js


/** Used to detect overreaching core-js shims. */
var coreJsData = _root["a" /* default */]['__core-js_shared__'];

/* harmony default export */ var _coreJsData = (coreJsData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isMasked.js


/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/* harmony default export */ var _isMasked = (isMasked);

// CONCATENATED MODULE: ./node_modules/lodash-es/_toSource.js
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/* harmony default export */ var _toSource = (toSource);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsNative.js





/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var _baseIsNative_funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var _baseIsNative_funcToString = _baseIsNative_funcProto.toString;

/** Used to check objects for own properties. */
var _baseIsNative_hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  _baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!lodash_es_isObject(value) || _isMasked(value)) {
    return false;
  }
  var pattern = lodash_es_isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value));
}

/* harmony default export */ var _baseIsNative = (baseIsNative);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getValue.js
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/* harmony default export */ var _getValue = (getValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getNative.js



/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}

/* harmony default export */ var _getNative = (getNative);

// CONCATENATED MODULE: ./node_modules/lodash-es/_WeakMap.js



/* Built-in method references that are verified to be native. */
var WeakMap = _getNative(_root["a" /* default */], 'WeakMap');

/* harmony default export */ var _WeakMap = (WeakMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_metaMap.js


/** Used to store function metadata. */
var metaMap = _WeakMap && new _WeakMap;

/* harmony default export */ var _metaMap = (metaMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSetData.js



/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !_metaMap ? lodash_es_identity : function(func, data) {
  _metaMap.set(func, data);
  return func;
};

/* harmony default export */ var _baseSetData = (baseSetData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseCreate.js


/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!lodash_es_isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/* harmony default export */ var _baseCreate = (baseCreate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createCtor.js



/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
  return function() {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;
    switch (args.length) {
      case 0: return new Ctor;
      case 1: return new Ctor(args[0]);
      case 2: return new Ctor(args[0], args[1]);
      case 3: return new Ctor(args[0], args[1], args[2]);
      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = _baseCreate(Ctor.prototype),
        result = Ctor.apply(thisBinding, args);

    // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.
    return lodash_es_isObject(result) ? result : thisBinding;
  };
}

/* harmony default export */ var _createCtor = (createCtor);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createBind.js



/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = _createCtor(func);

  function wrapper() {
    var fn = (this && this !== _root["a" /* default */] && this instanceof wrapper) ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}

/* harmony default export */ var _createBind = (createBind);

// CONCATENATED MODULE: ./node_modules/lodash-es/_apply.js
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/* harmony default export */ var _apply = (apply);

// CONCATENATED MODULE: ./node_modules/lodash-es/_composeArgs.js
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }
  return result;
}

/* harmony default export */ var _composeArgs = (composeArgs);

// CONCATENATED MODULE: ./node_modules/lodash-es/_composeArgsRight.js
/* Built-in method references for those with the same name as other `lodash` methods. */
var _composeArgsRight_nativeMax = Math.max;

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = _composeArgsRight_nativeMax(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result;
}

/* harmony default export */ var _composeArgsRight = (composeArgsRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/_countHolders.js
/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }
  return result;
}

/* harmony default export */ var _countHolders = (countHolders);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseLodash.js
/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
  // No operation performed.
}

/* harmony default export */ var _baseLodash = (baseLodash);

// CONCATENATED MODULE: ./node_modules/lodash-es/_LazyWrapper.js



/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = _baseCreate(_baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;

/* harmony default export */ var _LazyWrapper = (LazyWrapper);

// CONCATENATED MODULE: ./node_modules/lodash-es/noop.js
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

/* harmony default export */ var lodash_es_noop = (noop);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getData.js



/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !_metaMap ? lodash_es_noop : function(func) {
  return _metaMap.get(func);
};

/* harmony default export */ var _getData = (getData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_realNames.js
/** Used to lookup unminified function names. */
var realNames = {};

/* harmony default export */ var _realNames = (realNames);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getFuncName.js


/** Used for built-in method references. */
var _getFuncName_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _getFuncName_hasOwnProperty = _getFuncName_objectProto.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
  var result = (func.name + ''),
      array = _realNames[result],
      length = _getFuncName_hasOwnProperty.call(_realNames, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

/* harmony default export */ var _getFuncName = (getFuncName);

// CONCATENATED MODULE: ./node_modules/lodash-es/_LodashWrapper.js



/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = _baseCreate(_baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

/* harmony default export */ var _LodashWrapper = (LodashWrapper);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copyArray.js
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/* harmony default export */ var _copyArray = (copyArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_wrapperClone.js




/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof _LazyWrapper) {
    return wrapper.clone();
  }
  var result = new _LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = _copyArray(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

/* harmony default export */ var _wrapperClone = (wrapperClone);

// CONCATENATED MODULE: ./node_modules/lodash-es/wrapperLodash.js







/** Used for built-in method references. */
var wrapperLodash_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var wrapperLodash_hasOwnProperty = wrapperLodash_objectProto.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
  if (Object(isObjectLike["a" /* default */])(value) && !lodash_es_isArray(value) && !(value instanceof _LazyWrapper)) {
    if (value instanceof _LodashWrapper) {
      return value;
    }
    if (wrapperLodash_hasOwnProperty.call(value, '__wrapped__')) {
      return _wrapperClone(value);
    }
  }
  return new _LodashWrapper(value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = _baseLodash.prototype;
lodash.prototype.constructor = lodash;

/* harmony default export */ var wrapperLodash = (lodash);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isLaziable.js





/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = _getFuncName(func),
      other = wrapperLodash[funcName];

  if (typeof other != 'function' || !(funcName in _LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = _getData(other);
  return !!data && func === data[0];
}

/* harmony default export */ var _isLaziable = (isLaziable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_shortOut.js
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/* harmony default export */ var _shortOut = (shortOut);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setData.js



/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = _shortOut(_baseSetData);

/* harmony default export */ var _setData = (setData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getWrapDetails.js
/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

/* harmony default export */ var _getWrapDetails = (getWrapDetails);

// CONCATENATED MODULE: ./node_modules/lodash-es/_insertWrapDetails.js
/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

/* harmony default export */ var _insertWrapDetails = (insertWrapDetails);

// CONCATENATED MODULE: ./node_modules/lodash-es/constant.js
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/* harmony default export */ var lodash_es_constant = (constant);

// CONCATENATED MODULE: ./node_modules/lodash-es/_defineProperty.js


var defineProperty = (function() {
  try {
    var func = _getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* harmony default export */ var _defineProperty = (defineProperty);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSetToString.js




/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty ? lodash_es_identity : function(func, string) {
  return _defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': lodash_es_constant(string),
    'writable': true
  });
};

/* harmony default export */ var _baseSetToString = (baseSetToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setToString.js



/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString);

/* harmony default export */ var _setToString = (setToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayEach.js
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/* harmony default export */ var _arrayEach = (arrayEach);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFindIndex.js
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var _baseFindIndex = (baseFindIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsNaN.js
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/* harmony default export */ var _baseIsNaN = (baseIsNaN);

// CONCATENATED MODULE: ./node_modules/lodash-es/_strictIndexOf.js
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var _strictIndexOf = (strictIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIndexOf.js




/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? _strictIndexOf(array, value, fromIndex)
    : _baseFindIndex(array, _baseIsNaN, fromIndex);
}

/* harmony default export */ var _baseIndexOf = (baseIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayIncludes.js


/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && _baseIndexOf(array, value, 0) > -1;
}

/* harmony default export */ var _arrayIncludes = (arrayIncludes);

// CONCATENATED MODULE: ./node_modules/lodash-es/_updateWrapDetails.js



/** Used to compose bitmasks for function metadata. */
var _updateWrapDetails_WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256,
    WRAP_FLIP_FLAG = 512;

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
  ['ary', WRAP_ARY_FLAG],
  ['bind', _updateWrapDetails_WRAP_BIND_FLAG],
  ['bindKey', WRAP_BIND_KEY_FLAG],
  ['curry', WRAP_CURRY_FLAG],
  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
  ['flip', WRAP_FLIP_FLAG],
  ['partial', WRAP_PARTIAL_FLAG],
  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
  ['rearg', WRAP_REARG_FLAG]
];

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails(details, bitmask) {
  _arrayEach(wrapFlags, function(pair) {
    var value = '_.' + pair[0];
    if ((bitmask & pair[1]) && !_arrayIncludes(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

/* harmony default export */ var _updateWrapDetails = (updateWrapDetails);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setWrapToString.js





/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
  var source = (reference + '');
  return _setToString(wrapper, _insertWrapDetails(source, _updateWrapDetails(_getWrapDetails(source), bitmask)));
}

/* harmony default export */ var _setWrapToString = (setWrapToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createRecurry.js




/** Used to compose bitmasks for function metadata. */
var _createRecurry_WRAP_BIND_FLAG = 1,
    _createRecurry_WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    _createRecurry_WRAP_CURRY_FLAG = 8,
    _createRecurry_WRAP_PARTIAL_FLAG = 32,
    _createRecurry_WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & _createRecurry_WRAP_CURRY_FLAG,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;

  bitmask |= (isCurry ? _createRecurry_WRAP_PARTIAL_FLAG : _createRecurry_WRAP_PARTIAL_RIGHT_FLAG);
  bitmask &= ~(isCurry ? _createRecurry_WRAP_PARTIAL_RIGHT_FLAG : _createRecurry_WRAP_PARTIAL_FLAG);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(_createRecurry_WRAP_BIND_FLAG | _createRecurry_WRAP_BIND_KEY_FLAG);
  }
  var newData = [
    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
    newHoldersRight, argPos, ary, arity
  ];

  var result = wrapFunc.apply(undefined, newData);
  if (_isLaziable(func)) {
    _setData(result, newData);
  }
  result.placeholder = placeholder;
  return _setWrapToString(result, func, bitmask);
}

/* harmony default export */ var _createRecurry = (createRecurry);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getHolder.js
/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
  var object = func;
  return object.placeholder;
}

/* harmony default export */ var _getHolder = (getHolder);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isIndex.js
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/* harmony default export */ var _isIndex = (isIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_reorder.js



/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder(array, indexes) {
  var arrLength = array.length,
      length = nativeMin(indexes.length, arrLength),
      oldArray = _copyArray(array);

  while (length--) {
    var index = indexes[length];
    array[length] = _isIndex(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}

/* harmony default export */ var _reorder = (reorder);

// CONCATENATED MODULE: ./node_modules/lodash-es/_replaceHolders.js
/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result[resIndex++] = index;
    }
  }
  return result;
}

/* harmony default export */ var _replaceHolders = (replaceHolders);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createHybrid.js










/** Used to compose bitmasks for function metadata. */
var _createHybrid_WRAP_BIND_FLAG = 1,
    _createHybrid_WRAP_BIND_KEY_FLAG = 2,
    _createHybrid_WRAP_CURRY_FLAG = 8,
    _createHybrid_WRAP_CURRY_RIGHT_FLAG = 16,
    _createHybrid_WRAP_ARY_FLAG = 128,
    _createHybrid_WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & _createHybrid_WRAP_ARY_FLAG,
      isBind = bitmask & _createHybrid_WRAP_BIND_FLAG,
      isBindKey = bitmask & _createHybrid_WRAP_BIND_KEY_FLAG,
      isCurried = bitmask & (_createHybrid_WRAP_CURRY_FLAG | _createHybrid_WRAP_CURRY_RIGHT_FLAG),
      isFlip = bitmask & _createHybrid_WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : _createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = _getHolder(wrapper),
          holdersCount = _countHolders(args, placeholder);
    }
    if (partials) {
      args = _composeArgs(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = _composeArgsRight(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = _replaceHolders(args, placeholder);
      return _createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
        args, newHolders, argPos, ary, arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;

    length = args.length;
    if (argPos) {
      args = _reorder(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary < length) {
      args.length = ary;
    }
    if (this && this !== _root["a" /* default */] && this instanceof wrapper) {
      fn = Ctor || _createCtor(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}

/* harmony default export */ var _createHybrid = (createHybrid);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createCurry.js








/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
  var Ctor = _createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = _getHolder(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }
    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
      ? []
      : _replaceHolders(args, placeholder);

    length -= holders.length;
    if (length < arity) {
      return _createRecurry(
        func, bitmask, _createHybrid, wrapper.placeholder, undefined,
        args, holders, undefined, undefined, arity - length);
    }
    var fn = (this && this !== _root["a" /* default */] && this instanceof wrapper) ? Ctor : func;
    return _apply(fn, this, args);
  }
  return wrapper;
}

/* harmony default export */ var _createCurry = (createCurry);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createPartial.js




/** Used to compose bitmasks for function metadata. */
var _createPartial_WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & _createPartial_WRAP_BIND_FLAG,
      Ctor = _createCtor(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = (this && this !== _root["a" /* default */] && this instanceof wrapper) ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return _apply(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}

/* harmony default export */ var _createPartial = (createPartial);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mergeData.js




/** Used as the internal argument placeholder. */
var _mergeData_PLACEHOLDER = '__lodash_placeholder__';

/** Used to compose bitmasks for function metadata. */
var _mergeData_WRAP_BIND_FLAG = 1,
    _mergeData_WRAP_BIND_KEY_FLAG = 2,
    _mergeData_WRAP_CURRY_BOUND_FLAG = 4,
    _mergeData_WRAP_CURRY_FLAG = 8,
    _mergeData_WRAP_ARY_FLAG = 128,
    _mergeData_WRAP_REARG_FLAG = 256;

/* Built-in method references for those with the same name as other `lodash` methods. */
var _mergeData_nativeMin = Math.min;

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (_mergeData_WRAP_BIND_FLAG | _mergeData_WRAP_BIND_KEY_FLAG | _mergeData_WRAP_ARY_FLAG);

  var isCombo =
    ((srcBitmask == _mergeData_WRAP_ARY_FLAG) && (bitmask == _mergeData_WRAP_CURRY_FLAG)) ||
    ((srcBitmask == _mergeData_WRAP_ARY_FLAG) && (bitmask == _mergeData_WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
    ((srcBitmask == (_mergeData_WRAP_ARY_FLAG | _mergeData_WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == _mergeData_WRAP_CURRY_FLAG));

  // Exit early if metadata can't be merged.
  if (!(isCommon || isCombo)) {
    return data;
  }
  // Use source `thisArg` if available.
  if (srcBitmask & _mergeData_WRAP_BIND_FLAG) {
    data[2] = source[2];
    // Set when currying a bound function.
    newBitmask |= bitmask & _mergeData_WRAP_BIND_FLAG ? 0 : _mergeData_WRAP_CURRY_BOUND_FLAG;
  }
  // Compose partial arguments.
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? _composeArgs(partials, value, source[4]) : value;
    data[4] = partials ? _replaceHolders(data[3], _mergeData_PLACEHOLDER) : source[4];
  }
  // Compose partial right arguments.
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? _composeArgsRight(partials, value, source[6]) : value;
    data[6] = partials ? _replaceHolders(data[5], _mergeData_PLACEHOLDER) : source[6];
  }
  // Use source `argPos` if available.
  value = source[7];
  if (value) {
    data[7] = value;
  }
  // Use source `ary` if it's smaller.
  if (srcBitmask & _mergeData_WRAP_ARY_FLAG) {
    data[8] = data[8] == null ? source[8] : _mergeData_nativeMin(data[8], source[8]);
  }
  // Use source `arity` if one is not provided.
  if (data[9] == null) {
    data[9] = source[9];
  }
  // Use source `func` and merge bitmasks.
  data[0] = source[0];
  data[1] = newBitmask;

  return data;
}

/* harmony default export */ var _mergeData = (mergeData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createWrap.js











/** Error message constants. */
var _createWrap_FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var _createWrap_WRAP_BIND_FLAG = 1,
    _createWrap_WRAP_BIND_KEY_FLAG = 2,
    _createWrap_WRAP_CURRY_FLAG = 8,
    _createWrap_WRAP_CURRY_RIGHT_FLAG = 16,
    _createWrap_WRAP_PARTIAL_FLAG = 32,
    _createWrap_WRAP_PARTIAL_RIGHT_FLAG = 64;

/* Built-in method references for those with the same name as other `lodash` methods. */
var _createWrap_nativeMax = Math.max;

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & _createWrap_WRAP_BIND_KEY_FLAG;
  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(_createWrap_FUNC_ERROR_TEXT);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(_createWrap_WRAP_PARTIAL_FLAG | _createWrap_WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }
  ary = ary === undefined ? ary : _createWrap_nativeMax(lodash_es_toInteger(ary), 0);
  arity = arity === undefined ? arity : lodash_es_toInteger(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & _createWrap_WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;

    partials = holders = undefined;
  }
  var data = isBindKey ? undefined : _getData(func);

  var newData = [
    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
    argPos, ary, arity
  ];

  if (data) {
    _mergeData(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined
    ? (isBindKey ? 0 : func.length)
    : _createWrap_nativeMax(newData[9] - length, 0);

  if (!arity && bitmask & (_createWrap_WRAP_CURRY_FLAG | _createWrap_WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(_createWrap_WRAP_CURRY_FLAG | _createWrap_WRAP_CURRY_RIGHT_FLAG);
  }
  if (!bitmask || bitmask == _createWrap_WRAP_BIND_FLAG) {
    var result = _createBind(func, bitmask, thisArg);
  } else if (bitmask == _createWrap_WRAP_CURRY_FLAG || bitmask == _createWrap_WRAP_CURRY_RIGHT_FLAG) {
    result = _createCurry(func, bitmask, arity);
  } else if ((bitmask == _createWrap_WRAP_PARTIAL_FLAG || bitmask == (_createWrap_WRAP_BIND_FLAG | _createWrap_WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = _createPartial(func, bitmask, thisArg, partials);
  } else {
    result = _createHybrid.apply(undefined, newData);
  }
  var setter = data ? _baseSetData : _setData;
  return _setWrapToString(setter(result, newData), func, bitmask);
}

/* harmony default export */ var _createWrap = (createWrap);

// CONCATENATED MODULE: ./node_modules/lodash-es/ary.js


/** Used to compose bitmasks for function metadata. */
var ary_WRAP_ARY_FLAG = 128;

/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */
function ary_ary(func, n, guard) {
  n = guard ? undefined : n;
  n = (func && n == null) ? func.length : n;
  return _createWrap(func, ary_WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

/* harmony default export */ var lodash_es_ary = (ary_ary);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAssignValue.js


/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty) {
    _defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/* harmony default export */ var _baseAssignValue = (baseAssignValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/eq.js
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/* harmony default export */ var lodash_es_eq = (eq);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assignValue.js



/** Used for built-in method references. */
var _assignValue_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _assignValue_hasOwnProperty = _assignValue_objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(_assignValue_hasOwnProperty.call(object, key) && lodash_es_eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

/* harmony default export */ var _assignValue = (assignValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copyObject.js



/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      _baseAssignValue(object, key, newValue);
    } else {
      _assignValue(object, key, newValue);
    }
  }
  return object;
}

/* harmony default export */ var _copyObject = (copyObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_overRest.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var _overRest_nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = _overRest_nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = _overRest_nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return _apply(func, this, otherArgs);
  };
}

/* harmony default export */ var _overRest = (overRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseRest.js




/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return _setToString(_overRest(func, start, lodash_es_identity), func + '');
}

/* harmony default export */ var _baseRest = (baseRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/isLength.js
/** Used as references for various `Number` constants. */
var isLength_MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= isLength_MAX_SAFE_INTEGER;
}

/* harmony default export */ var lodash_es_isLength = (isLength);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArrayLike.js



/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && lodash_es_isLength(value.length) && !lodash_es_isFunction(value);
}

/* harmony default export */ var lodash_es_isArrayLike = (isArrayLike);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isIterateeCall.js





/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!lodash_es_isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (lodash_es_isArrayLike(object) && _isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return lodash_es_eq(object[index], value);
  }
  return false;
}

/* harmony default export */ var _isIterateeCall = (isIterateeCall);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createAssigner.js



/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return _baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/* harmony default export */ var _createAssigner = (createAssigner);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isPrototype.js
/** Used for built-in method references. */
var _isPrototype_objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || _isPrototype_objectProto;

  return value === proto;
}

/* harmony default export */ var _isPrototype = (isPrototype);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseTimes.js
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/* harmony default export */ var _baseTimes = (baseTimes);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsArguments.js



/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == argsTag;
}

/* harmony default export */ var _baseIsArguments = (baseIsArguments);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArguments.js



/** Used for built-in method references. */
var isArguments_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isArguments_hasOwnProperty = isArguments_objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = isArguments_objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
  return Object(isObjectLike["a" /* default */])(value) && isArguments_hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/* harmony default export */ var lodash_es_isArguments = (isArguments);

// EXTERNAL MODULE: ./node_modules/lodash-es/isBuffer.js
var isBuffer = __webpack_require__("58e0");

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsTypedArray.js




/** `Object#toString` result references. */
var _baseIsTypedArray_argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    _baseIsTypedArray_funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[_baseIsTypedArray_argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[_baseIsTypedArray_funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return Object(isObjectLike["a" /* default */])(value) &&
    lodash_es_isLength(value.length) && !!typedArrayTags[Object(_baseGetTag["a" /* default */])(value)];
}

/* harmony default export */ var _baseIsTypedArray = (baseIsTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseUnary.js
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/* harmony default export */ var _baseUnary = (baseUnary);

// EXTERNAL MODULE: ./node_modules/lodash-es/_nodeUtil.js
var _nodeUtil = __webpack_require__("c6eb");

// CONCATENATED MODULE: ./node_modules/lodash-es/isTypedArray.js




/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;

/* harmony default export */ var lodash_es_isTypedArray = (isTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayLikeKeys.js







/** Used for built-in method references. */
var _arrayLikeKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = lodash_es_isArray(value),
      isArg = !isArr && lodash_es_isArguments(value),
      isBuff = !isArr && !isArg && Object(isBuffer["a" /* default */])(value),
      isType = !isArr && !isArg && !isBuff && lodash_es_isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? _baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           _isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _arrayLikeKeys = (arrayLikeKeys);

// EXTERNAL MODULE: ./node_modules/lodash-es/_overArg.js
var _overArg = __webpack_require__("53a2");

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeKeys.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = Object(_overArg["a" /* default */])(Object.keys, Object);

/* harmony default export */ var _nativeKeys = (nativeKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseKeys.js



/** Used for built-in method references. */
var _baseKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeys_hasOwnProperty = _baseKeys_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!_isPrototype(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _baseKeys = (baseKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/keys.js




/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object) : _baseKeys(object);
}

/* harmony default export */ var lodash_es_keys = (keys);

// CONCATENATED MODULE: ./node_modules/lodash-es/assign.js







/** Used for built-in method references. */
var assign_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var assign_hasOwnProperty = assign_objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign_assign = _createAssigner(function(object, source) {
  if (_isPrototype(source) || lodash_es_isArrayLike(source)) {
    _copyObject(source, lodash_es_keys(source), object);
    return;
  }
  for (var key in source) {
    if (assign_hasOwnProperty.call(source, key)) {
      _assignValue(object, key, source[key]);
    }
  }
});

/* harmony default export */ var lodash_es_assign = (assign_assign);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeKeysIn.js
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _nativeKeysIn = (nativeKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseKeysIn.js




/** Used for built-in method references. */
var _baseKeysIn_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!lodash_es_isObject(object)) {
    return _nativeKeysIn(object);
  }
  var isProto = _isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _baseKeysIn = (baseKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/keysIn.js




/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);
}

/* harmony default export */ var lodash_es_keysIn = (keysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/assignIn.js




/**
 * This method is like `_.assign` except that it iterates over own and
 * inherited source properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extend
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assign
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
 */
var assignIn = _createAssigner(function(object, source) {
  _copyObject(source, lodash_es_keysIn(source), object);
});

/* harmony default export */ var lodash_es_assignIn = (assignIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/assignInWith.js




/**
 * This method is like `_.assignIn` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extendWith
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignInWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignInWith = _createAssigner(function(object, source, srcIndex, customizer) {
  _copyObject(source, lodash_es_keysIn(source), object, customizer);
});

/* harmony default export */ var lodash_es_assignInWith = (assignInWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/assignWith.js




/**
 * This method is like `_.assign` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignInWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignWith = _createAssigner(function(object, source, srcIndex, customizer) {
  _copyObject(source, lodash_es_keys(source), object, customizer);
});

/* harmony default export */ var lodash_es_assignWith = (assignWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isKey.js



/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (lodash_es_isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || lodash_es_isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/* harmony default export */ var _isKey = (isKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeCreate.js


/* Built-in method references that are verified to be native. */
var nativeCreate = _getNative(Object, 'create');

/* harmony default export */ var _nativeCreate = (nativeCreate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashClear.js


/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}

/* harmony default export */ var _hashClear = (hashClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashDelete.js
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ var _hashDelete = (hashDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashGet.js


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var _hashGet_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashGet_hasOwnProperty = _hashGet_objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/* harmony default export */ var _hashGet = (hashGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashHas.js


/** Used for built-in method references. */
var _hashHas_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);
}

/* harmony default export */ var _hashHas = (hashHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashSet.js


/** Used to stand-in for `undefined` hash values. */
var _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;
  return this;
}

/* harmony default export */ var _hashSet = (hashSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Hash.js






/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;

/* harmony default export */ var _Hash = (Hash);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheClear.js
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/* harmony default export */ var _listCacheClear = (listCacheClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assocIndexOf.js


/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (lodash_es_eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/* harmony default export */ var _assocIndexOf = (assocIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheDelete.js


/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/* harmony default export */ var _listCacheDelete = (listCacheDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheGet.js


/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/* harmony default export */ var _listCacheGet = (listCacheGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheHas.js


/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}

/* harmony default export */ var _listCacheHas = (listCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheSet.js


/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

/* harmony default export */ var _listCacheSet = (listCacheSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_ListCache.js






/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;

/* harmony default export */ var _ListCache = (ListCache);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Map.js



/* Built-in method references that are verified to be native. */
var Map = _getNative(_root["a" /* default */], 'Map');

/* harmony default export */ var _Map = (Map);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheClear.js




/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash,
    'map': new (_Map || _ListCache),
    'string': new _Hash
  };
}

/* harmony default export */ var _mapCacheClear = (mapCacheClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isKeyable.js
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/* harmony default export */ var _isKeyable = (isKeyable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getMapData.js


/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/* harmony default export */ var _getMapData = (getMapData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheDelete.js


/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ var _mapCacheDelete = (mapCacheDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheGet.js


/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}

/* harmony default export */ var _mapCacheGet = (mapCacheGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheHas.js


/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}

/* harmony default export */ var _mapCacheHas = (mapCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheSet.js


/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

/* harmony default export */ var _mapCacheSet = (mapCacheSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_MapCache.js






/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;

/* harmony default export */ var _MapCache = (MapCache);

// CONCATENATED MODULE: ./node_modules/lodash-es/memoize.js


/** Error message constants. */
var memoize_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(memoize_FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache;

/* harmony default export */ var lodash_es_memoize = (memoize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_memoizeCapped.js


/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = lodash_es_memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

/* harmony default export */ var _memoizeCapped = (memoizeCapped);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stringToPath.js


/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = _memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/* harmony default export */ var _stringToPath = (stringToPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/toString.js


/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString_toString(value) {
  return value == null ? '' : _baseToString(value);
}

/* harmony default export */ var lodash_es_toString = (toString_toString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castPath.js





/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (lodash_es_isArray(value)) {
    return value;
  }
  return _isKey(value, object) ? [value] : _stringToPath(lodash_es_toString(value));
}

/* harmony default export */ var _castPath = (castPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/_toKey.js


/** Used as references for various `Number` constants. */
var _toKey_INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || lodash_es_isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -_toKey_INFINITY) ? '-0' : result;
}

/* harmony default export */ var _toKey = (toKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGet.js



/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = _castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[_toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/* harmony default export */ var _baseGet = (baseGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/get.js


/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : _baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

/* harmony default export */ var lodash_es_get = (get);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAt.js


/**
 * The base implementation of `_.at` without support for individual paths.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {string[]} paths The property paths to pick.
 * @returns {Array} Returns the picked elements.
 */
function baseAt(object, paths) {
  var index = -1,
      length = paths.length,
      result = Array(length),
      skip = object == null;

  while (++index < length) {
    result[index] = skip ? undefined : lodash_es_get(object, paths[index]);
  }
  return result;
}

/* harmony default export */ var _baseAt = (baseAt);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayPush.js
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/* harmony default export */ var _arrayPush = (arrayPush);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isFlattenable.js




/** Built-in value references. */
var spreadableSymbol = _Symbol["a" /* default */] ? _Symbol["a" /* default */].isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return lodash_es_isArray(value) || lodash_es_isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

/* harmony default export */ var _isFlattenable = (isFlattenable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFlatten.js



/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = _isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        _arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

/* harmony default export */ var _baseFlatten = (baseFlatten);

// CONCATENATED MODULE: ./node_modules/lodash-es/flatten.js


/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? _baseFlatten(array, 1) : [];
}

/* harmony default export */ var lodash_es_flatten = (flatten);

// CONCATENATED MODULE: ./node_modules/lodash-es/_flatRest.js




/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return _setToString(_overRest(func, undefined, lodash_es_flatten), func + '');
}

/* harmony default export */ var _flatRest = (flatRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/at.js



/**
 * Creates an array of values corresponding to `paths` of `object`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Array} Returns the picked values.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _.at(object, ['a[0].b.c', 'a[1]']);
 * // => [3, 4]
 */
var at = _flatRest(_baseAt);

/* harmony default export */ var lodash_es_at = (at);

// EXTERNAL MODULE: ./node_modules/lodash-es/isPlainObject.js
var isPlainObject = __webpack_require__("e8b2");

// CONCATENATED MODULE: ./node_modules/lodash-es/isError.js




/** `Object#toString` result references. */
var domExcTag = '[object DOMException]',
    isError_errorTag = '[object Error]';

/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
 * `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * _.isError(new Error);
 * // => true
 *
 * _.isError(Error);
 * // => false
 */
function isError(value) {
  if (!Object(isObjectLike["a" /* default */])(value)) {
    return false;
  }
  var tag = Object(_baseGetTag["a" /* default */])(value);
  return tag == isError_errorTag || tag == domExcTag ||
    (typeof value.message == 'string' && typeof value.name == 'string' && !Object(isPlainObject["default"])(value));
}

/* harmony default export */ var lodash_es_isError = (isError);

// CONCATENATED MODULE: ./node_modules/lodash-es/attempt.js




/**
 * Attempts to invoke `func`, returning either the result or the caught error
 * object. Any additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Function} func The function to attempt.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {*} Returns the `func` result or error object.
 * @example
 *
 * // Avoid throwing errors for invalid selectors.
 * var elements = _.attempt(function(selector) {
 *   return document.querySelectorAll(selector);
 * }, '>_>');
 *
 * if (_.isError(elements)) {
 *   elements = [];
 * }
 */
var attempt = _baseRest(function(func, args) {
  try {
    return _apply(func, undefined, args);
  } catch (e) {
    return lodash_es_isError(e) ? e : new Error(e);
  }
});

/* harmony default export */ var lodash_es_attempt = (attempt);

// CONCATENATED MODULE: ./node_modules/lodash-es/before.js


/** Error message constants. */
var before_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func`, with the `this` binding and arguments
 * of the created function, while it's called less than `n` times. Subsequent
 * calls to the created function return the result of the last `func` invocation.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {number} n The number of calls at which `func` is no longer invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * jQuery(element).on('click', _.before(5, addContactToList));
 * // => Allows adding up to 4 contacts to the list.
 */
function before(n, func) {
  var result;
  if (typeof func != 'function') {
    throw new TypeError(before_FUNC_ERROR_TEXT);
  }
  n = lodash_es_toInteger(n);
  return function() {
    if (--n > 0) {
      result = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = undefined;
    }
    return result;
  };
}

/* harmony default export */ var lodash_es_before = (before);

// CONCATENATED MODULE: ./node_modules/lodash-es/bind.js





/** Used to compose bitmasks for function metadata. */
var bind_WRAP_BIND_FLAG = 1,
    bind_WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes `func` with the `this` binding of `thisArg`
 * and `partials` prepended to the arguments it receives.
 *
 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for partially applied arguments.
 *
 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
 * property of bound functions.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * function greet(greeting, punctuation) {
 *   return greeting + ' ' + this.user + punctuation;
 * }
 *
 * var object = { 'user': 'fred' };
 *
 * var bound = _.bind(greet, object, 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bind(greet, object, _, '!');
 * bound('hi');
 * // => 'hi fred!'
 */
var bind = _baseRest(function(func, thisArg, partials) {
  var bitmask = bind_WRAP_BIND_FLAG;
  if (partials.length) {
    var holders = _replaceHolders(partials, _getHolder(bind));
    bitmask |= bind_WRAP_PARTIAL_FLAG;
  }
  return _createWrap(func, bitmask, thisArg, partials, holders);
});

// Assign default placeholders.
bind.placeholder = {};

/* harmony default export */ var lodash_es_bind = (bind);

// CONCATENATED MODULE: ./node_modules/lodash-es/bindAll.js






/**
 * Binds methods of an object to the object itself, overwriting the existing
 * method.
 *
 * **Note:** This method doesn't set the "length" property of bound functions.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {Object} object The object to bind and assign the bound methods to.
 * @param {...(string|string[])} methodNames The object method names to bind.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var view = {
 *   'label': 'docs',
 *   'click': function() {
 *     console.log('clicked ' + this.label);
 *   }
 * };
 *
 * _.bindAll(view, ['click']);
 * jQuery(element).on('click', view.click);
 * // => Logs 'clicked docs' when clicked.
 */
var bindAll = _flatRest(function(object, methodNames) {
  _arrayEach(methodNames, function(key) {
    key = _toKey(key);
    _baseAssignValue(object, key, lodash_es_bind(object[key], object));
  });
  return object;
});

/* harmony default export */ var lodash_es_bindAll = (bindAll);

// CONCATENATED MODULE: ./node_modules/lodash-es/bindKey.js





/** Used to compose bitmasks for function metadata. */
var bindKey_WRAP_BIND_FLAG = 1,
    bindKey_WRAP_BIND_KEY_FLAG = 2,
    bindKey_WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes the method at `object[key]` with `partials`
 * prepended to the arguments it receives.
 *
 * This method differs from `_.bind` by allowing bound functions to reference
 * methods that may be redefined or don't yet exist. See
 * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
 * for more details.
 *
 * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Function
 * @param {Object} object The object to invoke the method on.
 * @param {string} key The key of the method.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * var object = {
 *   'user': 'fred',
 *   'greet': function(greeting, punctuation) {
 *     return greeting + ' ' + this.user + punctuation;
 *   }
 * };
 *
 * var bound = _.bindKey(object, 'greet', 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * object.greet = function(greeting, punctuation) {
 *   return greeting + 'ya ' + this.user + punctuation;
 * };
 *
 * bound('!');
 * // => 'hiya fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bindKey(object, 'greet', _, '!');
 * bound('hi');
 * // => 'hiya fred!'
 */
var bindKey = _baseRest(function(object, key, partials) {
  var bitmask = bindKey_WRAP_BIND_FLAG | bindKey_WRAP_BIND_KEY_FLAG;
  if (partials.length) {
    var holders = _replaceHolders(partials, _getHolder(bindKey));
    bitmask |= bindKey_WRAP_PARTIAL_FLAG;
  }
  return _createWrap(key, bitmask, object, partials, holders);
});

// Assign default placeholders.
bindKey.placeholder = {};

/* harmony default export */ var lodash_es_bindKey = (bindKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSlice.js
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/* harmony default export */ var _baseSlice = (baseSlice);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castSlice.js


/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : _baseSlice(array, start, end);
}

/* harmony default export */ var _castSlice = (castSlice);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hasUnicode.js
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

/* harmony default export */ var _hasUnicode = (hasUnicode);

// CONCATENATED MODULE: ./node_modules/lodash-es/_asciiToArray.js
/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

/* harmony default export */ var _asciiToArray = (asciiToArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_unicodeToArray.js
/** Used to compose unicode character classes. */
var _unicodeToArray_rsAstralRange = '\\ud800-\\udfff',
    _unicodeToArray_rsComboMarksRange = '\\u0300-\\u036f',
    _unicodeToArray_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    _unicodeToArray_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    _unicodeToArray_rsComboRange = _unicodeToArray_rsComboMarksRange + _unicodeToArray_reComboHalfMarksRange + _unicodeToArray_rsComboSymbolsRange,
    _unicodeToArray_rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + _unicodeToArray_rsAstralRange + ']',
    rsCombo = '[' + _unicodeToArray_rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + _unicodeToArray_rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    _unicodeToArray_rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + _unicodeToArray_rsVarRange + ']?',
    rsOptJoin = '(?:' + _unicodeToArray_rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

/* harmony default export */ var _unicodeToArray = (unicodeToArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stringToArray.js




/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return _hasUnicode(string)
    ? _unicodeToArray(string)
    : _asciiToArray(string);
}

/* harmony default export */ var _stringToArray = (stringToArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createCaseFirst.js





/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = lodash_es_toString(string);

    var strSymbols = _hasUnicode(string)
      ? _stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? _castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

/* harmony default export */ var _createCaseFirst = (createCaseFirst);

// CONCATENATED MODULE: ./node_modules/lodash-es/upperFirst.js


/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = _createCaseFirst('toUpperCase');

/* harmony default export */ var lodash_es_upperFirst = (upperFirst);

// CONCATENATED MODULE: ./node_modules/lodash-es/capitalize.js



/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return lodash_es_upperFirst(lodash_es_toString(string).toLowerCase());
}

/* harmony default export */ var lodash_es_capitalize = (capitalize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayReduce.js
/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/* harmony default export */ var _arrayReduce = (arrayReduce);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePropertyOf.js
/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ var _basePropertyOf = (basePropertyOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_deburrLetter.js


/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = _basePropertyOf(deburredLetters);

/* harmony default export */ var _deburrLetter = (deburrLetter);

// CONCATENATED MODULE: ./node_modules/lodash-es/deburr.js



/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var deburr_rsComboMarksRange = '\\u0300-\\u036f',
    deburr_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    deburr_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    deburr_rsComboRange = deburr_rsComboMarksRange + deburr_reComboHalfMarksRange + deburr_rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var deburr_rsCombo = '[' + deburr_rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(deburr_rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = lodash_es_toString(string);
  return string && string.replace(reLatin, _deburrLetter).replace(reComboMark, '');
}

/* harmony default export */ var lodash_es_deburr = (deburr);

// CONCATENATED MODULE: ./node_modules/lodash-es/_asciiWords.js
/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

/* harmony default export */ var _asciiWords = (asciiWords);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hasUnicodeWord.js
/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

/* harmony default export */ var _hasUnicodeWord = (hasUnicodeWord);

// CONCATENATED MODULE: ./node_modules/lodash-es/_unicodeWords.js
/** Used to compose unicode character classes. */
var _unicodeWords_rsAstralRange = '\\ud800-\\udfff',
    _unicodeWords_rsComboMarksRange = '\\u0300-\\u036f',
    _unicodeWords_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    _unicodeWords_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    _unicodeWords_rsComboRange = _unicodeWords_rsComboMarksRange + _unicodeWords_reComboHalfMarksRange + _unicodeWords_rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    _unicodeWords_rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    _unicodeWords_rsCombo = '[' + _unicodeWords_rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + _unicodeWords_rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    _unicodeWords_rsFitz = '\\ud83c[\\udffb-\\udfff]',
    _unicodeWords_rsModifier = '(?:' + _unicodeWords_rsCombo + '|' + _unicodeWords_rsFitz + ')',
    _unicodeWords_rsNonAstral = '[^' + _unicodeWords_rsAstralRange + ']',
    _unicodeWords_rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    _unicodeWords_rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    _unicodeWords_rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    _unicodeWords_reOptMod = _unicodeWords_rsModifier + '?',
    _unicodeWords_rsOptVar = '[' + _unicodeWords_rsVarRange + ']?',
    _unicodeWords_rsOptJoin = '(?:' + _unicodeWords_rsZWJ + '(?:' + [_unicodeWords_rsNonAstral, _unicodeWords_rsRegional, _unicodeWords_rsSurrPair].join('|') + ')' + _unicodeWords_rsOptVar + _unicodeWords_reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    _unicodeWords_rsSeq = _unicodeWords_rsOptVar + _unicodeWords_reOptMod + _unicodeWords_rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, _unicodeWords_rsRegional, _unicodeWords_rsSurrPair].join('|') + ')' + _unicodeWords_rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

/* harmony default export */ var _unicodeWords = (unicodeWords);

// CONCATENATED MODULE: ./node_modules/lodash-es/words.js





/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = lodash_es_toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return _hasUnicodeWord(string) ? _unicodeWords(string) : _asciiWords(string);
  }
  return string.match(pattern) || [];
}

/* harmony default export */ var lodash_es_words = (words);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createCompounder.js




/** Used to compose unicode capture groups. */
var _createCompounder_rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(_createCompounder_rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return _arrayReduce(lodash_es_words(lodash_es_deburr(string).replace(reApos, '')), callback, '');
  };
}

/* harmony default export */ var _createCompounder = (createCompounder);

// CONCATENATED MODULE: ./node_modules/lodash-es/camelCase.js



/**
 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar--');
 * // => 'fooBar'
 *
 * _.camelCase('__FOO_BAR__');
 * // => 'fooBar'
 */
var camelCase = _createCompounder(function(result, word, index) {
  word = word.toLowerCase();
  return result + (index ? lodash_es_capitalize(word) : word);
});

/* harmony default export */ var lodash_es_camelCase = (camelCase);

// CONCATENATED MODULE: ./node_modules/lodash-es/castArray.js


/**
 * Casts `value` as an array if it's not one.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Lang
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast array.
 * @example
 *
 * _.castArray(1);
 * // => [1]
 *
 * _.castArray({ 'a': 1 });
 * // => [{ 'a': 1 }]
 *
 * _.castArray('abc');
 * // => ['abc']
 *
 * _.castArray(null);
 * // => [null]
 *
 * _.castArray(undefined);
 * // => [undefined]
 *
 * _.castArray();
 * // => []
 *
 * var array = [1, 2, 3];
 * console.log(_.castArray(array) === array);
 * // => true
 */
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return lodash_es_isArray(value) ? value : [value];
}

/* harmony default export */ var lodash_es_castArray = (castArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createRound.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = _root["a" /* default */].isFinite,
    _createRound_nativeMin = Math.min;

/**
 * Creates a function like `_.round`.
 *
 * @private
 * @param {string} methodName The name of the `Math` method to use when rounding.
 * @returns {Function} Returns the new round function.
 */
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = lodash_es_toNumber(number);
    precision = precision == null ? 0 : _createRound_nativeMin(lodash_es_toInteger(precision), 292);
    if (precision && nativeIsFinite(number)) {
      // Shift with exponential notation to avoid floating-point issues.
      // See [MDN](https://mdn.io/round#Examples) for more details.
      var pair = (lodash_es_toString(number) + 'e').split('e'),
          value = func(pair[0] + 'e' + (+pair[1] + precision));

      pair = (lodash_es_toString(value) + 'e').split('e');
      return +(pair[0] + 'e' + (+pair[1] - precision));
    }
    return func(number);
  };
}

/* harmony default export */ var _createRound = (createRound);

// CONCATENATED MODULE: ./node_modules/lodash-es/ceil.js


/**
 * Computes `number` rounded up to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round up.
 * @param {number} [precision=0] The precision to round up to.
 * @returns {number} Returns the rounded up number.
 * @example
 *
 * _.ceil(4.006);
 * // => 5
 *
 * _.ceil(6.004, 2);
 * // => 6.01
 *
 * _.ceil(6040, -2);
 * // => 6100
 */
var ceil = _createRound('ceil');

/* harmony default export */ var lodash_es_ceil = (ceil);

// CONCATENATED MODULE: ./node_modules/lodash-es/chain.js


/**
 * Creates a `lodash` wrapper instance that wraps `value` with explicit method
 * chain sequences enabled. The result of such sequences must be unwrapped
 * with `_#value`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Seq
 * @param {*} value The value to wrap.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36 },
 *   { 'user': 'fred',    'age': 40 },
 *   { 'user': 'pebbles', 'age': 1 }
 * ];
 *
 * var youngest = _
 *   .chain(users)
 *   .sortBy('age')
 *   .map(function(o) {
 *     return o.user + ' is ' + o.age;
 *   })
 *   .head()
 *   .value();
 * // => 'pebbles is 1'
 */
function chain_chain(value) {
  var result = wrapperLodash(value);
  result.__chain__ = true;
  return result;
}

/* harmony default export */ var lodash_es_chain = (chain_chain);

// CONCATENATED MODULE: ./node_modules/lodash-es/chunk.js




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    chunk_nativeMax = Math.max;

/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * _.chunk(['a', 'b', 'c', 'd'], 2);
 * // => [['a', 'b'], ['c', 'd']]
 *
 * _.chunk(['a', 'b', 'c', 'd'], 3);
 * // => [['a', 'b', 'c'], ['d']]
 */
function chunk(array, size, guard) {
  if ((guard ? _isIterateeCall(array, size, guard) : size === undefined)) {
    size = 1;
  } else {
    size = chunk_nativeMax(lodash_es_toInteger(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index = 0,
      resIndex = 0,
      result = Array(nativeCeil(length / size));

  while (index < length) {
    result[resIndex++] = _baseSlice(array, index, (index += size));
  }
  return result;
}

/* harmony default export */ var lodash_es_chunk = (chunk);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseClamp.js
/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

/* harmony default export */ var _baseClamp = (baseClamp);

// CONCATENATED MODULE: ./node_modules/lodash-es/clamp.js



/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }
  if (upper !== undefined) {
    upper = lodash_es_toNumber(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== undefined) {
    lower = lodash_es_toNumber(lower);
    lower = lower === lower ? lower : 0;
  }
  return _baseClamp(lodash_es_toNumber(number), lower, upper);
}

/* harmony default export */ var lodash_es_clamp = (clamp);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackClear.js


/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache;
  this.size = 0;
}

/* harmony default export */ var _stackClear = (stackClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackDelete.js
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/* harmony default export */ var _stackDelete = (stackDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackGet.js
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/* harmony default export */ var _stackGet = (stackGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackHas.js
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/* harmony default export */ var _stackHas = (stackHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackSet.js




/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache) {
    var pairs = data.__data__;
    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

/* harmony default export */ var _stackSet = (stackSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Stack.js







/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;

/* harmony default export */ var _Stack = (Stack);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAssign.js



/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && _copyObject(source, lodash_es_keys(source), object);
}

/* harmony default export */ var _baseAssign = (baseAssign);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAssignIn.js



/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && _copyObject(source, lodash_es_keysIn(source), object);
}

/* harmony default export */ var _baseAssignIn = (baseAssignIn);

// EXTERNAL MODULE: ./node_modules/lodash-es/_cloneBuffer.js
var _cloneBuffer = __webpack_require__("dff1");

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayFilter.js
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ var _arrayFilter = (arrayFilter);

// CONCATENATED MODULE: ./node_modules/lodash-es/stubArray.js
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/* harmony default export */ var lodash_es_stubArray = (stubArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getSymbols.js



/** Used for built-in method references. */
var _getSymbols_objectProto = Object.prototype;

/** Built-in value references. */
var _getSymbols_propertyIsEnumerable = _getSymbols_objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? lodash_es_stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilter(nativeGetSymbols(object), function(symbol) {
    return _getSymbols_propertyIsEnumerable.call(object, symbol);
  });
};

/* harmony default export */ var _getSymbols = (getSymbols);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copySymbols.js



/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return _copyObject(source, _getSymbols(source), object);
}

/* harmony default export */ var _copySymbols = (copySymbols);

// EXTERNAL MODULE: ./node_modules/lodash-es/_getPrototype.js
var _getPrototype = __webpack_require__("52e7");

// CONCATENATED MODULE: ./node_modules/lodash-es/_getSymbolsIn.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var _getSymbolsIn_nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !_getSymbolsIn_nativeGetSymbols ? lodash_es_stubArray : function(object) {
  var result = [];
  while (object) {
    _arrayPush(result, _getSymbols(object));
    object = Object(_getPrototype["a" /* default */])(object);
  }
  return result;
};

/* harmony default export */ var _getSymbolsIn = (getSymbolsIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copySymbolsIn.js



/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return _copyObject(source, _getSymbolsIn(source), object);
}

/* harmony default export */ var _copySymbolsIn = (copySymbolsIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGetAllKeys.js



/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return lodash_es_isArray(object) ? result : _arrayPush(result, symbolsFunc(object));
}

/* harmony default export */ var _baseGetAllKeys = (baseGetAllKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getAllKeys.js




/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return _baseGetAllKeys(object, lodash_es_keys, _getSymbols);
}

/* harmony default export */ var _getAllKeys = (getAllKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getAllKeysIn.js




/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return _baseGetAllKeys(object, lodash_es_keysIn, _getSymbolsIn);
}

/* harmony default export */ var _getAllKeysIn = (getAllKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_DataView.js



/* Built-in method references that are verified to be native. */
var DataView = _getNative(_root["a" /* default */], 'DataView');

/* harmony default export */ var _DataView = (DataView);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Promise.js



/* Built-in method references that are verified to be native. */
var Promise = _getNative(_root["a" /* default */], 'Promise');

/* harmony default export */ var _Promise = (Promise);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Set.js



/* Built-in method references that are verified to be native. */
var Set = _getNative(_root["a" /* default */], 'Set');

/* harmony default export */ var _Set = (Set);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getTag.js








/** `Object#toString` result references. */
var _getTag_mapTag = '[object Map]',
    _getTag_objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    _getTag_setTag = '[object Set]',
    _getTag_weakMapTag = '[object WeakMap]';

var _getTag_dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = _toSource(_DataView),
    mapCtorString = _toSource(_Map),
    promiseCtorString = _toSource(_Promise),
    setCtorString = _toSource(_Set),
    weakMapCtorString = _toSource(_WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag["a" /* default */];

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != _getTag_dataViewTag) ||
    (_Map && getTag(new _Map) != _getTag_mapTag) ||
    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
    (_Set && getTag(new _Set) != _getTag_setTag) ||
    (_WeakMap && getTag(new _WeakMap) != _getTag_weakMapTag)) {
  getTag = function(value) {
    var result = Object(_baseGetTag["a" /* default */])(value),
        Ctor = result == _getTag_objectTag ? value.constructor : undefined,
        ctorString = Ctor ? _toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return _getTag_dataViewTag;
        case mapCtorString: return _getTag_mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return _getTag_setTag;
        case weakMapCtorString: return _getTag_weakMapTag;
      }
    }
    return result;
  };
}

/* harmony default export */ var _getTag = (getTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneArray.js
/** Used for built-in method references. */
var _initCloneArray_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _initCloneArray_hasOwnProperty = _initCloneArray_objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && _initCloneArray_hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/* harmony default export */ var _initCloneArray = (initCloneArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Uint8Array.js


/** Built-in value references. */
var Uint8Array = _root["a" /* default */].Uint8Array;

/* harmony default export */ var _Uint8Array = (Uint8Array);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneArrayBuffer.js


/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}

/* harmony default export */ var _cloneArrayBuffer = (cloneArrayBuffer);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneDataView.js


/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/* harmony default export */ var _cloneDataView = (cloneDataView);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneRegExp.js
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/* harmony default export */ var _cloneRegExp = (cloneRegExp);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneSymbol.js


/** Used to convert symbols to primitives and strings. */
var _cloneSymbol_symbolProto = _Symbol["a" /* default */] ? _Symbol["a" /* default */].prototype : undefined,
    symbolValueOf = _cloneSymbol_symbolProto ? _cloneSymbol_symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/* harmony default export */ var _cloneSymbol = (cloneSymbol);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneTypedArray.js


/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/* harmony default export */ var _cloneTypedArray = (cloneTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneByTag.js






/** `Object#toString` result references. */
var _initCloneByTag_boolTag = '[object Boolean]',
    _initCloneByTag_dateTag = '[object Date]',
    _initCloneByTag_mapTag = '[object Map]',
    _initCloneByTag_numberTag = '[object Number]',
    _initCloneByTag_regexpTag = '[object RegExp]',
    _initCloneByTag_setTag = '[object Set]',
    _initCloneByTag_stringTag = '[object String]',
    _initCloneByTag_symbolTag = '[object Symbol]';

var _initCloneByTag_arrayBufferTag = '[object ArrayBuffer]',
    _initCloneByTag_dataViewTag = '[object DataView]',
    _initCloneByTag_float32Tag = '[object Float32Array]',
    _initCloneByTag_float64Tag = '[object Float64Array]',
    _initCloneByTag_int8Tag = '[object Int8Array]',
    _initCloneByTag_int16Tag = '[object Int16Array]',
    _initCloneByTag_int32Tag = '[object Int32Array]',
    _initCloneByTag_uint8Tag = '[object Uint8Array]',
    _initCloneByTag_uint8ClampedTag = '[object Uint8ClampedArray]',
    _initCloneByTag_uint16Tag = '[object Uint16Array]',
    _initCloneByTag_uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case _initCloneByTag_arrayBufferTag:
      return _cloneArrayBuffer(object);

    case _initCloneByTag_boolTag:
    case _initCloneByTag_dateTag:
      return new Ctor(+object);

    case _initCloneByTag_dataViewTag:
      return _cloneDataView(object, isDeep);

    case _initCloneByTag_float32Tag: case _initCloneByTag_float64Tag:
    case _initCloneByTag_int8Tag: case _initCloneByTag_int16Tag: case _initCloneByTag_int32Tag:
    case _initCloneByTag_uint8Tag: case _initCloneByTag_uint8ClampedTag: case _initCloneByTag_uint16Tag: case _initCloneByTag_uint32Tag:
      return _cloneTypedArray(object, isDeep);

    case _initCloneByTag_mapTag:
      return new Ctor;

    case _initCloneByTag_numberTag:
    case _initCloneByTag_stringTag:
      return new Ctor(object);

    case _initCloneByTag_regexpTag:
      return _cloneRegExp(object);

    case _initCloneByTag_setTag:
      return new Ctor;

    case _initCloneByTag_symbolTag:
      return _cloneSymbol(object);
  }
}

/* harmony default export */ var _initCloneByTag = (initCloneByTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneObject.js




/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !_isPrototype(object))
    ? _baseCreate(Object(_getPrototype["a" /* default */])(object))
    : {};
}

/* harmony default export */ var _initCloneObject = (initCloneObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsMap.js



/** `Object#toString` result references. */
var _baseIsMap_mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return Object(isObjectLike["a" /* default */])(value) && _getTag(value) == _baseIsMap_mapTag;
}

/* harmony default export */ var _baseIsMap = (baseIsMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/isMap.js




/* Node.js helper references. */
var nodeIsMap = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;

/* harmony default export */ var lodash_es_isMap = (isMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsSet.js



/** `Object#toString` result references. */
var _baseIsSet_setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return Object(isObjectLike["a" /* default */])(value) && _getTag(value) == _baseIsSet_setTag;
}

/* harmony default export */ var _baseIsSet = (baseIsSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/isSet.js




/* Node.js helper references. */
var nodeIsSet = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;

/* harmony default export */ var lodash_es_isSet = (isSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseClone.js























/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var _baseClone_argsTag = '[object Arguments]',
    _baseClone_arrayTag = '[object Array]',
    _baseClone_boolTag = '[object Boolean]',
    _baseClone_dateTag = '[object Date]',
    _baseClone_errorTag = '[object Error]',
    _baseClone_funcTag = '[object Function]',
    _baseClone_genTag = '[object GeneratorFunction]',
    _baseClone_mapTag = '[object Map]',
    _baseClone_numberTag = '[object Number]',
    _baseClone_objectTag = '[object Object]',
    _baseClone_regexpTag = '[object RegExp]',
    _baseClone_setTag = '[object Set]',
    _baseClone_stringTag = '[object String]',
    _baseClone_symbolTag = '[object Symbol]',
    _baseClone_weakMapTag = '[object WeakMap]';

var _baseClone_arrayBufferTag = '[object ArrayBuffer]',
    _baseClone_dataViewTag = '[object DataView]',
    _baseClone_float32Tag = '[object Float32Array]',
    _baseClone_float64Tag = '[object Float64Array]',
    _baseClone_int8Tag = '[object Int8Array]',
    _baseClone_int16Tag = '[object Int16Array]',
    _baseClone_int32Tag = '[object Int32Array]',
    _baseClone_uint8Tag = '[object Uint8Array]',
    _baseClone_uint8ClampedTag = '[object Uint8ClampedArray]',
    _baseClone_uint16Tag = '[object Uint16Array]',
    _baseClone_uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[_baseClone_argsTag] = cloneableTags[_baseClone_arrayTag] =
cloneableTags[_baseClone_arrayBufferTag] = cloneableTags[_baseClone_dataViewTag] =
cloneableTags[_baseClone_boolTag] = cloneableTags[_baseClone_dateTag] =
cloneableTags[_baseClone_float32Tag] = cloneableTags[_baseClone_float64Tag] =
cloneableTags[_baseClone_int8Tag] = cloneableTags[_baseClone_int16Tag] =
cloneableTags[_baseClone_int32Tag] = cloneableTags[_baseClone_mapTag] =
cloneableTags[_baseClone_numberTag] = cloneableTags[_baseClone_objectTag] =
cloneableTags[_baseClone_regexpTag] = cloneableTags[_baseClone_setTag] =
cloneableTags[_baseClone_stringTag] = cloneableTags[_baseClone_symbolTag] =
cloneableTags[_baseClone_uint8Tag] = cloneableTags[_baseClone_uint8ClampedTag] =
cloneableTags[_baseClone_uint16Tag] = cloneableTags[_baseClone_uint32Tag] = true;
cloneableTags[_baseClone_errorTag] = cloneableTags[_baseClone_funcTag] =
cloneableTags[_baseClone_weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!lodash_es_isObject(value)) {
    return value;
  }
  var isArr = lodash_es_isArray(value);
  if (isArr) {
    result = _initCloneArray(value);
    if (!isDeep) {
      return _copyArray(value, result);
    }
  } else {
    var tag = _getTag(value),
        isFunc = tag == _baseClone_funcTag || tag == _baseClone_genTag;

    if (Object(isBuffer["a" /* default */])(value)) {
      return Object(_cloneBuffer["a" /* default */])(value, isDeep);
    }
    if (tag == _baseClone_objectTag || tag == _baseClone_argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : _initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? _copySymbolsIn(value, _baseAssignIn(result, value))
          : _copySymbols(value, _baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = _initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new _Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (lodash_es_isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (lodash_es_isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? _getAllKeysIn : _getAllKeys)
    : (isFlat ? lodash_es_keysIn : lodash_es_keys);

  var props = isArr ? undefined : keysFunc(value);
  _arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

/* harmony default export */ var _baseClone = (baseClone);

// CONCATENATED MODULE: ./node_modules/lodash-es/clone.js


/** Used to compose bitmasks for cloning. */
var clone_CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone_clone(value) {
  return _baseClone(value, clone_CLONE_SYMBOLS_FLAG);
}

/* harmony default export */ var lodash_es_clone = (clone_clone);

// CONCATENATED MODULE: ./node_modules/lodash-es/cloneDeep.js


/** Used to compose bitmasks for cloning. */
var cloneDeep_CLONE_DEEP_FLAG = 1,
    cloneDeep_CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return _baseClone(value, cloneDeep_CLONE_DEEP_FLAG | cloneDeep_CLONE_SYMBOLS_FLAG);
}

/* harmony default export */ var lodash_es_cloneDeep = (cloneDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/cloneDeepWith.js


/** Used to compose bitmasks for cloning. */
var cloneDeepWith_CLONE_DEEP_FLAG = 1,
    cloneDeepWith_CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.cloneWith` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @param {Function} [customizer] The function to customize cloning.
 * @returns {*} Returns the deep cloned value.
 * @see _.cloneWith
 * @example
 *
 * function customizer(value) {
 *   if (_.isElement(value)) {
 *     return value.cloneNode(true);
 *   }
 * }
 *
 * var el = _.cloneDeepWith(document.body, customizer);
 *
 * console.log(el === document.body);
 * // => false
 * console.log(el.nodeName);
 * // => 'BODY'
 * console.log(el.childNodes.length);
 * // => 20
 */
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return _baseClone(value, cloneDeepWith_CLONE_DEEP_FLAG | cloneDeepWith_CLONE_SYMBOLS_FLAG, customizer);
}

/* harmony default export */ var lodash_es_cloneDeepWith = (cloneDeepWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/cloneWith.js


/** Used to compose bitmasks for cloning. */
var cloneWith_CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it accepts `customizer` which
 * is invoked to produce the cloned value. If `customizer` returns `undefined`,
 * cloning is handled by the method instead. The `customizer` is invoked with
 * up to four arguments; (value [, index|key, object, stack]).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to clone.
 * @param {Function} [customizer] The function to customize cloning.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeepWith
 * @example
 *
 * function customizer(value) {
 *   if (_.isElement(value)) {
 *     return value.cloneNode(false);
 *   }
 * }
 *
 * var el = _.cloneWith(document.body, customizer);
 *
 * console.log(el === document.body);
 * // => false
 * console.log(el.nodeName);
 * // => 'BODY'
 * console.log(el.childNodes.length);
 * // => 0
 */
function cloneWith(value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return _baseClone(value, cloneWith_CLONE_SYMBOLS_FLAG, customizer);
}

/* harmony default export */ var lodash_es_cloneWith = (cloneWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/commit.js


/**
 * Executes the chain sequence and returns the wrapped result.
 *
 * @name commit
 * @memberOf _
 * @since 3.2.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var array = [1, 2];
 * var wrapped = _(array).push(3);
 *
 * console.log(array);
 * // => [1, 2]
 *
 * wrapped = wrapped.commit();
 * console.log(array);
 * // => [1, 2, 3]
 *
 * wrapped.last();
 * // => 3
 *
 * console.log(array);
 * // => [1, 2, 3]
 */
function wrapperCommit() {
  return new _LodashWrapper(this.value(), this.__chain__);
}

/* harmony default export */ var commit = (wrapperCommit);

// CONCATENATED MODULE: ./node_modules/lodash-es/compact.js
/**
 * Creates an array with all falsey values removed. The values `false`, `null`,
 * `0`, `""`, `undefined`, and `NaN` are falsey.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to compact.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.compact([0, 1, false, 2, '', 3]);
 * // => [1, 2, 3]
 */
function compact(array) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ var lodash_es_compact = (compact);

// CONCATENATED MODULE: ./node_modules/lodash-es/concat.js





/**
 * Creates a new array concatenating `array` with any additional arrays
 * and/or values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to concatenate.
 * @param {...*} [values] The values to concatenate.
 * @returns {Array} Returns the new concatenated array.
 * @example
 *
 * var array = [1];
 * var other = _.concat(array, 2, [3], [[4]]);
 *
 * console.log(other);
 * // => [1, 2, 3, [4]]
 *
 * console.log(array);
 * // => [1]
 */
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1),
      array = arguments[0],
      index = length;

  while (index--) {
    args[index - 1] = arguments[index];
  }
  return _arrayPush(lodash_es_isArray(array) ? _copyArray(array) : [array], _baseFlatten(args, 1));
}

/* harmony default export */ var lodash_es_concat = (concat);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setCacheAdd.js
/** Used to stand-in for `undefined` hash values. */
var _setCacheAdd_HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, _setCacheAdd_HASH_UNDEFINED);
  return this;
}

/* harmony default export */ var _setCacheAdd = (setCacheAdd);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setCacheHas.js
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

/* harmony default export */ var _setCacheHas = (setCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_SetCache.js




/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;

/* harmony default export */ var _SetCache = (SetCache);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arraySome.js
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ var _arraySome = (arraySome);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cacheHas.js
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/* harmony default export */ var _cacheHas = (cacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_equalArrays.js




/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new _SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!_arraySome(other, function(othValue, othIndex) {
            if (!_cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/* harmony default export */ var _equalArrays = (equalArrays);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapToArray.js
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/* harmony default export */ var _mapToArray = (mapToArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setToArray.js
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/* harmony default export */ var _setToArray = (setToArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_equalByTag.js







/** Used to compose bitmasks for value comparisons. */
var _equalByTag_COMPARE_PARTIAL_FLAG = 1,
    _equalByTag_COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var _equalByTag_boolTag = '[object Boolean]',
    _equalByTag_dateTag = '[object Date]',
    _equalByTag_errorTag = '[object Error]',
    _equalByTag_mapTag = '[object Map]',
    _equalByTag_numberTag = '[object Number]',
    _equalByTag_regexpTag = '[object RegExp]',
    _equalByTag_setTag = '[object Set]',
    _equalByTag_stringTag = '[object String]',
    _equalByTag_symbolTag = '[object Symbol]';

var _equalByTag_arrayBufferTag = '[object ArrayBuffer]',
    _equalByTag_dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var _equalByTag_symbolProto = _Symbol["a" /* default */] ? _Symbol["a" /* default */].prototype : undefined,
    _equalByTag_symbolValueOf = _equalByTag_symbolProto ? _equalByTag_symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case _equalByTag_dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case _equalByTag_arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {
        return false;
      }
      return true;

    case _equalByTag_boolTag:
    case _equalByTag_dateTag:
    case _equalByTag_numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return lodash_es_eq(+object, +other);

    case _equalByTag_errorTag:
      return object.name == other.name && object.message == other.message;

    case _equalByTag_regexpTag:
    case _equalByTag_stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case _equalByTag_mapTag:
      var convert = _mapToArray;

    case _equalByTag_setTag:
      var isPartial = bitmask & _equalByTag_COMPARE_PARTIAL_FLAG;
      convert || (convert = _setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= _equalByTag_COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case _equalByTag_symbolTag:
      if (_equalByTag_symbolValueOf) {
        return _equalByTag_symbolValueOf.call(object) == _equalByTag_symbolValueOf.call(other);
      }
  }
  return false;
}

/* harmony default export */ var _equalByTag = (equalByTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_equalObjects.js


/** Used to compose bitmasks for value comparisons. */
var _equalObjects_COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var _equalObjects_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _equalObjects_hasOwnProperty = _equalObjects_objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & _equalObjects_COMPARE_PARTIAL_FLAG,
      objProps = _getAllKeys(object),
      objLength = objProps.length,
      othProps = _getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : _equalObjects_hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/* harmony default export */ var _equalObjects = (equalObjects);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsEqualDeep.js









/** Used to compose bitmasks for value comparisons. */
var _baseIsEqualDeep_COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var _baseIsEqualDeep_argsTag = '[object Arguments]',
    _baseIsEqualDeep_arrayTag = '[object Array]',
    _baseIsEqualDeep_objectTag = '[object Object]';

/** Used for built-in method references. */
var _baseIsEqualDeep_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseIsEqualDeep_hasOwnProperty = _baseIsEqualDeep_objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = lodash_es_isArray(object),
      othIsArr = lodash_es_isArray(other),
      objTag = objIsArr ? _baseIsEqualDeep_arrayTag : _getTag(object),
      othTag = othIsArr ? _baseIsEqualDeep_arrayTag : _getTag(other);

  objTag = objTag == _baseIsEqualDeep_argsTag ? _baseIsEqualDeep_objectTag : objTag;
  othTag = othTag == _baseIsEqualDeep_argsTag ? _baseIsEqualDeep_objectTag : othTag;

  var objIsObj = objTag == _baseIsEqualDeep_objectTag,
      othIsObj = othTag == _baseIsEqualDeep_objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && Object(isBuffer["a" /* default */])(object)) {
    if (!Object(isBuffer["a" /* default */])(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack);
    return (objIsArr || lodash_es_isTypedArray(object))
      ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & _baseIsEqualDeep_COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && _baseIsEqualDeep_hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && _baseIsEqualDeep_hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new _Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack);
  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

/* harmony default export */ var _baseIsEqualDeep = (baseIsEqualDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsEqual.js



/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!Object(isObjectLike["a" /* default */])(value) && !Object(isObjectLike["a" /* default */])(other))) {
    return value !== value && other !== other;
  }
  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

/* harmony default export */ var _baseIsEqual = (baseIsEqual);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsMatch.js



/** Used to compose bitmasks for value comparisons. */
var _baseIsMatch_COMPARE_PARTIAL_FLAG = 1,
    _baseIsMatch_COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? _baseIsEqual(srcValue, objValue, _baseIsMatch_COMPARE_PARTIAL_FLAG | _baseIsMatch_COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

/* harmony default export */ var _baseIsMatch = (baseIsMatch);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isStrictComparable.js


/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !lodash_es_isObject(value);
}

/* harmony default export */ var _isStrictComparable = (isStrictComparable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getMatchData.js



/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = lodash_es_keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, _isStrictComparable(value)];
  }
  return result;
}

/* harmony default export */ var _getMatchData = (getMatchData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_matchesStrictComparable.js
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

/* harmony default export */ var _matchesStrictComparable = (matchesStrictComparable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMatches.js




/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = _getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return _matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || _baseIsMatch(object, source, matchData);
  };
}

/* harmony default export */ var _baseMatches = (baseMatches);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseHasIn.js
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/* harmony default export */ var _baseHasIn = (baseHasIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hasPath.js







/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = _castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = _toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && lodash_es_isLength(length) && _isIndex(key, length) &&
    (lodash_es_isArray(object) || lodash_es_isArguments(object));
}

/* harmony default export */ var _hasPath = (hasPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/hasIn.js



/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && _hasPath(object, path, _baseHasIn);
}

/* harmony default export */ var lodash_es_hasIn = (hasIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMatchesProperty.js








/** Used to compose bitmasks for value comparisons. */
var _baseMatchesProperty_COMPARE_PARTIAL_FLAG = 1,
    _baseMatchesProperty_COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (_isKey(path) && _isStrictComparable(srcValue)) {
    return _matchesStrictComparable(_toKey(path), srcValue);
  }
  return function(object) {
    var objValue = lodash_es_get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? lodash_es_hasIn(object, path)
      : _baseIsEqual(srcValue, objValue, _baseMatchesProperty_COMPARE_PARTIAL_FLAG | _baseMatchesProperty_COMPARE_UNORDERED_FLAG);
  };
}

/* harmony default export */ var _baseMatchesProperty = (baseMatchesProperty);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseProperty.js
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ var _baseProperty = (baseProperty);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePropertyDeep.js


/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return _baseGet(object, path);
  };
}

/* harmony default export */ var _basePropertyDeep = (basePropertyDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/property.js





/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return _isKey(path) ? _baseProperty(_toKey(path)) : _basePropertyDeep(path);
}

/* harmony default export */ var lodash_es_property = (property);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIteratee.js






/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return lodash_es_identity;
  }
  if (typeof value == 'object') {
    return lodash_es_isArray(value)
      ? _baseMatchesProperty(value[0], value[1])
      : _baseMatches(value);
  }
  return lodash_es_property(value);
}

/* harmony default export */ var _baseIteratee = (baseIteratee);

// CONCATENATED MODULE: ./node_modules/lodash-es/cond.js





/** Error message constants. */
var cond_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that iterates over `pairs` and invokes the corresponding
 * function of the first predicate to return truthy. The predicate-function
 * pairs are invoked with the `this` binding and arguments of the created
 * function.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {Array} pairs The predicate-function pairs.
 * @returns {Function} Returns the new composite function.
 * @example
 *
 * var func = _.cond([
 *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
 *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
 *   [_.stubTrue,                      _.constant('no match')]
 * ]);
 *
 * func({ 'a': 1, 'b': 2 });
 * // => 'matches A'
 *
 * func({ 'a': 0, 'b': 1 });
 * // => 'matches B'
 *
 * func({ 'a': '1', 'b': '2' });
 * // => 'no match'
 */
function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length,
      toIteratee = _baseIteratee;

  pairs = !length ? [] : _arrayMap(pairs, function(pair) {
    if (typeof pair[1] != 'function') {
      throw new TypeError(cond_FUNC_ERROR_TEXT);
    }
    return [toIteratee(pair[0]), pair[1]];
  });

  return _baseRest(function(args) {
    var index = -1;
    while (++index < length) {
      var pair = pairs[index];
      if (_apply(pair[0], this, args)) {
        return _apply(pair[1], this, args);
      }
    }
  });
}

/* harmony default export */ var lodash_es_cond = (cond);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseConformsTo.js
/**
 * The base implementation of `_.conformsTo` which accepts `props` to check.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property predicates to conform to.
 * @returns {boolean} Returns `true` if `object` conforms, else `false`.
 */
function baseConformsTo(object, source, props) {
  var length = props.length;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (length--) {
    var key = props[length],
        predicate = source[key],
        value = object[key];

    if ((value === undefined && !(key in object)) || !predicate(value)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ var _baseConformsTo = (baseConformsTo);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseConforms.js



/**
 * The base implementation of `_.conforms` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 */
function baseConforms(source) {
  var props = lodash_es_keys(source);
  return function(object) {
    return _baseConformsTo(object, source, props);
  };
}

/* harmony default export */ var _baseConforms = (baseConforms);

// CONCATENATED MODULE: ./node_modules/lodash-es/conforms.js



/** Used to compose bitmasks for cloning. */
var conforms_CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes the predicate properties of `source` with
 * the corresponding property values of a given object, returning `true` if
 * all predicates return truthy, else `false`.
 *
 * **Note:** The created function is equivalent to `_.conformsTo` with
 * `source` partially applied.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 2, 'b': 1 },
 *   { 'a': 1, 'b': 2 }
 * ];
 *
 * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
 * // => [{ 'a': 1, 'b': 2 }]
 */
function conforms(source) {
  return _baseConforms(_baseClone(source, conforms_CLONE_DEEP_FLAG));
}

/* harmony default export */ var lodash_es_conforms = (conforms);

// CONCATENATED MODULE: ./node_modules/lodash-es/conformsTo.js



/**
 * Checks if `object` conforms to `source` by invoking the predicate
 * properties of `source` with the corresponding property values of `object`.
 *
 * **Note:** This method is equivalent to `_.conforms` when `source` is
 * partially applied.
 *
 * @static
 * @memberOf _
 * @since 4.14.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property predicates to conform to.
 * @returns {boolean} Returns `true` if `object` conforms, else `false`.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 *
 * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
 * // => true
 *
 * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
 * // => false
 */
function conformsTo(object, source) {
  return source == null || _baseConformsTo(object, source, lodash_es_keys(source));
}

/* harmony default export */ var lodash_es_conformsTo = (conformsTo);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayAggregator.js
/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

/* harmony default export */ var _arrayAggregator = (arrayAggregator);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createBaseFor.js
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/* harmony default export */ var _createBaseFor = (createBaseFor);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFor.js


/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = _createBaseFor();

/* harmony default export */ var _baseFor = (baseFor);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseForOwn.js



/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && _baseFor(object, iteratee, lodash_es_keys);
}

/* harmony default export */ var _baseForOwn = (baseForOwn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createBaseEach.js


/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!lodash_es_isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

/* harmony default export */ var _createBaseEach = (createBaseEach);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseEach.js



/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = _createBaseEach(_baseForOwn);

/* harmony default export */ var _baseEach = (baseEach);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAggregator.js


/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  _baseEach(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

/* harmony default export */ var _baseAggregator = (baseAggregator);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createAggregator.js





/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = lodash_es_isArray(collection) ? _arrayAggregator : _baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, _baseIteratee(iteratee, 2), accumulator);
  };
}

/* harmony default export */ var _createAggregator = (createAggregator);

// CONCATENATED MODULE: ./node_modules/lodash-es/countBy.js



/** Used for built-in method references. */
var countBy_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var countBy_hasOwnProperty = countBy_objectProto.hasOwnProperty;

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the number of times the key was returned by `iteratee`. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.countBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': 1, '6': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.countBy(['one', 'two', 'three'], 'length');
 * // => { '3': 2, '5': 1 }
 */
var countBy = _createAggregator(function(result, value, key) {
  if (countBy_hasOwnProperty.call(result, key)) {
    ++result[key];
  } else {
    _baseAssignValue(result, key, 1);
  }
});

/* harmony default export */ var lodash_es_countBy = (countBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/create.js



/**
 * Creates an object that inherits from the `prototype` object. If a
 * `properties` object is given, its own enumerable string keyed properties
 * are assigned to the created object.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Object
 * @param {Object} prototype The object to inherit from.
 * @param {Object} [properties] The properties to assign to the object.
 * @returns {Object} Returns the new object.
 * @example
 *
 * function Shape() {
 *   this.x = 0;
 *   this.y = 0;
 * }
 *
 * function Circle() {
 *   Shape.call(this);
 * }
 *
 * Circle.prototype = _.create(Shape.prototype, {
 *   'constructor': Circle
 * });
 *
 * var circle = new Circle;
 * circle instanceof Circle;
 * // => true
 *
 * circle instanceof Shape;
 * // => true
 */
function create(prototype, properties) {
  var result = _baseCreate(prototype);
  return properties == null ? result : _baseAssign(result, properties);
}

/* harmony default export */ var lodash_es_create = (create);

// CONCATENATED MODULE: ./node_modules/lodash-es/curry.js


/** Used to compose bitmasks for function metadata. */
var curry_WRAP_CURRY_FLAG = 8;

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = _createWrap(func, curry_WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
}

// Assign default placeholders.
curry.placeholder = {};

/* harmony default export */ var lodash_es_curry = (curry);

// CONCATENATED MODULE: ./node_modules/lodash-es/curryRight.js


/** Used to compose bitmasks for function metadata. */
var curryRight_WRAP_CURRY_RIGHT_FLAG = 16;

/**
 * This method is like `_.curry` except that arguments are applied to `func`
 * in the manner of `_.partialRight` instead of `_.partial`.
 *
 * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curryRight(abc);
 *
 * curried(3)(2)(1);
 * // => [1, 2, 3]
 *
 * curried(2, 3)(1);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(3)(1, _)(2);
 * // => [1, 2, 3]
 */
function curryRight(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = _createWrap(func, curryRight_WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curryRight.placeholder;
  return result;
}

// Assign default placeholders.
curryRight.placeholder = {};

/* harmony default export */ var lodash_es_curryRight = (curryRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/now.js


/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return _root["a" /* default */].Date.now();
};

/* harmony default export */ var lodash_es_now = (now);

// CONCATENATED MODULE: ./node_modules/lodash-es/debounce.js




/** Error message constants. */
var debounce_FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var debounce_nativeMax = Math.max,
    debounce_nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(debounce_FUNC_ERROR_TEXT);
  }
  wait = lodash_es_toNumber(wait) || 0;
  if (lodash_es_isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? debounce_nativeMax(lodash_es_toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? debounce_nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = lodash_es_now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(lodash_es_now());
  }

  function debounced() {
    var time = lodash_es_now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/* harmony default export */ var lodash_es_debounce = (debounce);

// CONCATENATED MODULE: ./node_modules/lodash-es/defaultTo.js
/**
 * Checks `value` to determine whether a default value should be returned in
 * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
 * or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.14.0
 * @category Util
 * @param {*} value The value to check.
 * @param {*} defaultValue The default value.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * _.defaultTo(1, 10);
 * // => 1
 *
 * _.defaultTo(undefined, 10);
 * // => 10
 */
function defaultTo(value, defaultValue) {
  return (value == null || value !== value) ? defaultValue : value;
}

/* harmony default export */ var lodash_es_defaultTo = (defaultTo);

// CONCATENATED MODULE: ./node_modules/lodash-es/defaults.js





/** Used for built-in method references. */
var defaults_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var defaults_hasOwnProperty = defaults_objectProto.hasOwnProperty;

/**
 * Assigns own and inherited enumerable string keyed properties of source
 * objects to the destination object for all destination properties that
 * resolve to `undefined`. Source objects are applied from left to right.
 * Once a property is set, additional values of the same property are ignored.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaultsDeep
 * @example
 *
 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var defaults = _baseRest(function(object, sources) {
  object = Object(object);

  var index = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : undefined;

  if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
    length = 1;
  }

  while (++index < length) {
    var source = sources[index];
    var props = lodash_es_keysIn(source);
    var propsIndex = -1;
    var propsLength = props.length;

    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object[key];

      if (value === undefined ||
          (lodash_es_eq(value, defaults_objectProto[key]) && !defaults_hasOwnProperty.call(object, key))) {
        object[key] = source[key];
      }
    }
  }

  return object;
});

/* harmony default export */ var lodash_es_defaults = (defaults);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assignMergeValue.js



/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !lodash_es_eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

/* harmony default export */ var _assignMergeValue = (assignMergeValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArrayLikeObject.js



/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return Object(isObjectLike["a" /* default */])(value) && lodash_es_isArrayLike(value);
}

/* harmony default export */ var lodash_es_isArrayLikeObject = (isArrayLikeObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_safeGet.js
/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/* harmony default export */ var _safeGet = (safeGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/toPlainObject.js



/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return _copyObject(value, lodash_es_keysIn(value));
}

/* harmony default export */ var lodash_es_toPlainObject = (toPlainObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMergeDeep.js
















/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = _safeGet(object, key),
      srcValue = _safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    _assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = lodash_es_isArray(srcValue),
        isBuff = !isArr && Object(isBuffer["a" /* default */])(srcValue),
        isTyped = !isArr && !isBuff && lodash_es_isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (lodash_es_isArray(objValue)) {
        newValue = objValue;
      }
      else if (lodash_es_isArrayLikeObject(objValue)) {
        newValue = _copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = Object(_cloneBuffer["a" /* default */])(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = _cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (Object(isPlainObject["default"])(srcValue) || lodash_es_isArguments(srcValue)) {
      newValue = objValue;
      if (lodash_es_isArguments(objValue)) {
        newValue = lodash_es_toPlainObject(objValue);
      }
      else if (!lodash_es_isObject(objValue) || lodash_es_isFunction(objValue)) {
        newValue = _initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  _assignMergeValue(object, key, newValue);
}

/* harmony default export */ var _baseMergeDeep = (baseMergeDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMerge.js








/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  _baseFor(source, function(srcValue, key) {
    stack || (stack = new _Stack);
    if (lodash_es_isObject(srcValue)) {
      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(_safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      _assignMergeValue(object, key, newValue);
    }
  }, lodash_es_keysIn);
}

/* harmony default export */ var _baseMerge = (baseMerge);

// CONCATENATED MODULE: ./node_modules/lodash-es/_customDefaultsMerge.js



/**
 * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
 * objects into destination objects that are passed thru.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to merge.
 * @param {Object} object The parent object of `objValue`.
 * @param {Object} source The parent object of `srcValue`.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 * @returns {*} Returns the value to assign.
 */
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if (lodash_es_isObject(objValue) && lodash_es_isObject(srcValue)) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, objValue);
    _baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
    stack['delete'](srcValue);
  }
  return objValue;
}

/* harmony default export */ var _customDefaultsMerge = (customDefaultsMerge);

// CONCATENATED MODULE: ./node_modules/lodash-es/mergeWith.js



/**
 * This method is like `_.merge` except that it accepts `customizer` which
 * is invoked to produce the merged values of the destination and source
 * properties. If `customizer` returns `undefined`, merging is handled by the
 * method instead. The `customizer` is invoked with six arguments:
 * (objValue, srcValue, key, object, source, stack).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} customizer The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   if (_.isArray(objValue)) {
 *     return objValue.concat(srcValue);
 *   }
 * }
 *
 * var object = { 'a': [1], 'b': [2] };
 * var other = { 'a': [3], 'b': [4] };
 *
 * _.mergeWith(object, other, customizer);
 * // => { 'a': [1, 3], 'b': [2, 4] }
 */
var mergeWith = _createAssigner(function(object, source, srcIndex, customizer) {
  _baseMerge(object, source, srcIndex, customizer);
});

/* harmony default export */ var lodash_es_mergeWith = (mergeWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/defaultsDeep.js





/**
 * This method is like `_.defaults` except that it recursively assigns
 * default properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaults
 * @example
 *
 * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
 * // => { 'a': { 'b': 2, 'c': 3 } }
 */
var defaultsDeep = _baseRest(function(args) {
  args.push(undefined, _customDefaultsMerge);
  return _apply(lodash_es_mergeWith, undefined, args);
});

/* harmony default export */ var lodash_es_defaultsDeep = (defaultsDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseDelay.js
/** Error message constants. */
var _baseDelay_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The base implementation of `_.delay` and `_.defer` which accepts `args`
 * to provide to `func`.
 *
 * @private
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {Array} args The arguments to provide to `func`.
 * @returns {number|Object} Returns the timer id or timeout object.
 */
function baseDelay(func, wait, args) {
  if (typeof func != 'function') {
    throw new TypeError(_baseDelay_FUNC_ERROR_TEXT);
  }
  return setTimeout(function() { func.apply(undefined, args); }, wait);
}

/* harmony default export */ var _baseDelay = (baseDelay);

// CONCATENATED MODULE: ./node_modules/lodash-es/defer.js



/**
 * Defers invoking the `func` until the current call stack has cleared. Any
 * additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to defer.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.defer(function(text) {
 *   console.log(text);
 * }, 'deferred');
 * // => Logs 'deferred' after one millisecond.
 */
var defer = _baseRest(function(func, args) {
  return _baseDelay(func, 1, args);
});

/* harmony default export */ var lodash_es_defer = (defer);

// CONCATENATED MODULE: ./node_modules/lodash-es/delay.js




/**
 * Invokes `func` after `wait` milliseconds. Any additional arguments are
 * provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.delay(function(text) {
 *   console.log(text);
 * }, 1000, 'later');
 * // => Logs 'later' after one second.
 */
var delay = _baseRest(function(func, wait, args) {
  return _baseDelay(func, lodash_es_toNumber(wait) || 0, args);
});

/* harmony default export */ var lodash_es_delay = (delay);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayIncludesWith.js
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ var _arrayIncludesWith = (arrayIncludesWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseDifference.js







/** Used as the size to enable large array optimizations. */
var _baseDifference_LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = _arrayMap(values, _baseUnary(iteratee));
  }
  if (comparator) {
    includes = _arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= _baseDifference_LARGE_ARRAY_SIZE) {
    includes = _cacheHas;
    isCommon = false;
    values = new _SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ var _baseDifference = (baseDifference);

// CONCATENATED MODULE: ./node_modules/lodash-es/difference.js





/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = _baseRest(function(array, values) {
  return lodash_es_isArrayLikeObject(array)
    ? _baseDifference(array, _baseFlatten(values, 1, lodash_es_isArrayLikeObject, true))
    : [];
});

/* harmony default export */ var lodash_es_difference = (difference);

// CONCATENATED MODULE: ./node_modules/lodash-es/last.js
/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

/* harmony default export */ var lodash_es_last = (last);

// CONCATENATED MODULE: ./node_modules/lodash-es/differenceBy.js







/**
 * This method is like `_.difference` except that it accepts `iteratee` which
 * is invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var differenceBy = _baseRest(function(array, values) {
  var iteratee = lodash_es_last(values);
  if (lodash_es_isArrayLikeObject(iteratee)) {
    iteratee = undefined;
  }
  return lodash_es_isArrayLikeObject(array)
    ? _baseDifference(array, _baseFlatten(values, 1, lodash_es_isArrayLikeObject, true), _baseIteratee(iteratee, 2))
    : [];
});

/* harmony default export */ var lodash_es_differenceBy = (differenceBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/differenceWith.js






/**
 * This method is like `_.difference` except that it accepts `comparator`
 * which is invoked to compare elements of `array` to `values`. The order and
 * references of result values are determined by the first array. The comparator
 * is invoked with two arguments: (arrVal, othVal).
 *
 * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 *
 * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
 * // => [{ 'x': 2, 'y': 1 }]
 */
var differenceWith = _baseRest(function(array, values) {
  var comparator = lodash_es_last(values);
  if (lodash_es_isArrayLikeObject(comparator)) {
    comparator = undefined;
  }
  return lodash_es_isArrayLikeObject(array)
    ? _baseDifference(array, _baseFlatten(values, 1, lodash_es_isArrayLikeObject, true), undefined, comparator)
    : [];
});

/* harmony default export */ var lodash_es_differenceWith = (differenceWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/divide.js


/**
 * Divide two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {number} dividend The first number in a division.
 * @param {number} divisor The second number in a division.
 * @returns {number} Returns the quotient.
 * @example
 *
 * _.divide(6, 4);
 * // => 1.5
 */
var divide = _createMathOperation(function(dividend, divisor) {
  return dividend / divisor;
}, 1);

/* harmony default export */ var lodash_es_divide = (divide);

// CONCATENATED MODULE: ./node_modules/lodash-es/drop.js



/**
 * Creates a slice of `array` with `n` elements dropped from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.drop([1, 2, 3]);
 * // => [2, 3]
 *
 * _.drop([1, 2, 3], 2);
 * // => [3]
 *
 * _.drop([1, 2, 3], 5);
 * // => []
 *
 * _.drop([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function drop(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : lodash_es_toInteger(n);
  return _baseSlice(array, n < 0 ? 0 : n, length);
}

/* harmony default export */ var lodash_es_drop = (drop);

// CONCATENATED MODULE: ./node_modules/lodash-es/dropRight.js



/**
 * Creates a slice of `array` with `n` elements dropped from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.dropRight([1, 2, 3]);
 * // => [1, 2]
 *
 * _.dropRight([1, 2, 3], 2);
 * // => [1]
 *
 * _.dropRight([1, 2, 3], 5);
 * // => []
 *
 * _.dropRight([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : lodash_es_toInteger(n);
  n = length - n;
  return _baseSlice(array, 0, n < 0 ? 0 : n);
}

/* harmony default export */ var lodash_es_dropRight = (dropRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseWhile.js


/**
 * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
 * without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {Function} predicate The function invoked per iteration.
 * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the slice of `array`.
 */
function baseWhile(array, predicate, isDrop, fromRight) {
  var length = array.length,
      index = fromRight ? length : -1;

  while ((fromRight ? index-- : ++index < length) &&
    predicate(array[index], index, array)) {}

  return isDrop
    ? _baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
    : _baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
}

/* harmony default export */ var _baseWhile = (baseWhile);

// CONCATENATED MODULE: ./node_modules/lodash-es/dropRightWhile.js



/**
 * Creates a slice of `array` excluding elements dropped from the end.
 * Elements are dropped until `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.dropRightWhile(users, function(o) { return !o.active; });
 * // => objects for ['barney']
 *
 * // The `_.matches` iteratee shorthand.
 * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
 * // => objects for ['barney', 'fred']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.dropRightWhile(users, ['active', false]);
 * // => objects for ['barney']
 *
 * // The `_.property` iteratee shorthand.
 * _.dropRightWhile(users, 'active');
 * // => objects for ['barney', 'fred', 'pebbles']
 */
function dropRightWhile(array, predicate) {
  return (array && array.length)
    ? _baseWhile(array, _baseIteratee(predicate, 3), true, true)
    : [];
}

/* harmony default export */ var lodash_es_dropRightWhile = (dropRightWhile);

// CONCATENATED MODULE: ./node_modules/lodash-es/dropWhile.js



/**
 * Creates a slice of `array` excluding elements dropped from the beginning.
 * Elements are dropped until `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.dropWhile(users, function(o) { return !o.active; });
 * // => objects for ['pebbles']
 *
 * // The `_.matches` iteratee shorthand.
 * _.dropWhile(users, { 'user': 'barney', 'active': false });
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.dropWhile(users, ['active', false]);
 * // => objects for ['pebbles']
 *
 * // The `_.property` iteratee shorthand.
 * _.dropWhile(users, 'active');
 * // => objects for ['barney', 'fred', 'pebbles']
 */
function dropWhile(array, predicate) {
  return (array && array.length)
    ? _baseWhile(array, _baseIteratee(predicate, 3), true)
    : [];
}

/* harmony default export */ var lodash_es_dropWhile = (dropWhile);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castFunction.js


/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : lodash_es_identity;
}

/* harmony default export */ var _castFunction = (castFunction);

// CONCATENATED MODULE: ./node_modules/lodash-es/forEach.js





/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = lodash_es_isArray(collection) ? _arrayEach : _baseEach;
  return func(collection, _castFunction(iteratee));
}

/* harmony default export */ var lodash_es_forEach = (forEach);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayEachRight.js
/**
 * A specialized version of `_.forEachRight` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEachRight(array, iteratee) {
  var length = array == null ? 0 : array.length;

  while (length--) {
    if (iteratee(array[length], length, array) === false) {
      break;
    }
  }
  return array;
}

/* harmony default export */ var _arrayEachRight = (arrayEachRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseForRight.js


/**
 * This function is like `baseFor` except that it iterates over properties
 * in the opposite order.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseForRight = _createBaseFor(true);

/* harmony default export */ var _baseForRight = (baseForRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseForOwnRight.js



/**
 * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwnRight(object, iteratee) {
  return object && _baseForRight(object, iteratee, lodash_es_keys);
}

/* harmony default export */ var _baseForOwnRight = (baseForOwnRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseEachRight.js



/**
 * The base implementation of `_.forEachRight` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEachRight = _createBaseEach(_baseForOwnRight, true);

/* harmony default export */ var _baseEachRight = (baseEachRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/forEachRight.js





/**
 * This method is like `_.forEach` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @alias eachRight
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEach
 * @example
 *
 * _.forEachRight([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `2` then `1`.
 */
function forEachRight(collection, iteratee) {
  var func = lodash_es_isArray(collection) ? _arrayEachRight : _baseEachRight;
  return func(collection, _castFunction(iteratee));
}

/* harmony default export */ var lodash_es_forEachRight = (forEachRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/endsWith.js





/**
 * Checks if `string` ends with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=string.length] The position to search up to.
 * @returns {boolean} Returns `true` if `string` ends with `target`,
 *  else `false`.
 * @example
 *
 * _.endsWith('abc', 'c');
 * // => true
 *
 * _.endsWith('abc', 'b');
 * // => false
 *
 * _.endsWith('abc', 'b', 2);
 * // => true
 */
function endsWith(string, target, position) {
  string = lodash_es_toString(string);
  target = _baseToString(target);

  var length = string.length;
  position = position === undefined
    ? length
    : _baseClamp(lodash_es_toInteger(position), 0, length);

  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}

/* harmony default export */ var lodash_es_endsWith = (endsWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseToPairs.js


/**
 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
 * of key-value pairs for `object` corresponding to the property names of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the key-value pairs.
 */
function baseToPairs(object, props) {
  return _arrayMap(props, function(key) {
    return [key, object[key]];
  });
}

/* harmony default export */ var _baseToPairs = (baseToPairs);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setToPairs.js
/**
 * Converts `set` to its value-value pairs.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the value-value pairs.
 */
function setToPairs(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = [value, value];
  });
  return result;
}

/* harmony default export */ var _setToPairs = (setToPairs);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createToPairs.js





/** `Object#toString` result references. */
var _createToPairs_mapTag = '[object Map]',
    _createToPairs_setTag = '[object Set]';

/**
 * Creates a `_.toPairs` or `_.toPairsIn` function.
 *
 * @private
 * @param {Function} keysFunc The function to get the keys of a given object.
 * @returns {Function} Returns the new pairs function.
 */
function createToPairs(keysFunc) {
  return function(object) {
    var tag = _getTag(object);
    if (tag == _createToPairs_mapTag) {
      return _mapToArray(object);
    }
    if (tag == _createToPairs_setTag) {
      return _setToPairs(object);
    }
    return _baseToPairs(object, keysFunc(object));
  };
}

/* harmony default export */ var _createToPairs = (createToPairs);

// CONCATENATED MODULE: ./node_modules/lodash-es/toPairs.js



/**
 * Creates an array of own enumerable string keyed-value pairs for `object`
 * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
 * entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entries
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairs(new Foo);
 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
 */
var toPairs = _createToPairs(lodash_es_keys);

/* harmony default export */ var lodash_es_toPairs = (toPairs);

// CONCATENATED MODULE: ./node_modules/lodash-es/toPairsIn.js



/**
 * Creates an array of own and inherited enumerable string keyed-value pairs
 * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
 * or set, its entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entriesIn
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairsIn(new Foo);
 * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
 */
var toPairsIn = _createToPairs(lodash_es_keysIn);

/* harmony default export */ var lodash_es_toPairsIn = (toPairsIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_escapeHtmlChar.js


/** Used to map characters to HTML entities. */
var htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};

/**
 * Used by `_.escape` to convert characters to HTML entities.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */
var escapeHtmlChar = _basePropertyOf(htmlEscapes);

/* harmony default export */ var _escapeHtmlChar = (escapeHtmlChar);

// CONCATENATED MODULE: ./node_modules/lodash-es/escape.js



/** Used to match HTML entities and HTML characters. */
var reUnescapedHtml = /[&<>"']/g,
    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

/**
 * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
 * corresponding HTML entities.
 *
 * **Note:** No other characters are escaped. To escape additional
 * characters use a third-party library like [_he_](https://mths.be/he).
 *
 * Though the ">" character is escaped for symmetry, characters like
 * ">" and "/" don't need escaping in HTML and have no special meaning
 * unless they're part of a tag or unquoted attribute value. See
 * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
 * (under "semi-related fun fact") for more details.
 *
 * When working with HTML you should always
 * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
 * XSS vectors.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escape('fred, barney, & pebbles');
 * // => 'fred, barney, &amp; pebbles'
 */
function escape_escape(string) {
  string = lodash_es_toString(string);
  return (string && reHasUnescapedHtml.test(string))
    ? string.replace(reUnescapedHtml, _escapeHtmlChar)
    : string;
}

/* harmony default export */ var lodash_es_escape = (escape_escape);

// CONCATENATED MODULE: ./node_modules/lodash-es/escapeRegExp.js


/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var escapeRegExp_reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(escapeRegExp_reRegExpChar.source);

/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */
function escapeRegExp(string) {
  string = lodash_es_toString(string);
  return (string && reHasRegExpChar.test(string))
    ? string.replace(escapeRegExp_reRegExpChar, '\\$&')
    : string;
}

/* harmony default export */ var lodash_es_escapeRegExp = (escapeRegExp);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayEvery.js
/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */
function arrayEvery(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ var _arrayEvery = (arrayEvery);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseEvery.js


/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */
function baseEvery(collection, predicate) {
  var result = true;
  _baseEach(collection, function(value, index, collection) {
    result = !!predicate(value, index, collection);
    return result;
  });
  return result;
}

/* harmony default export */ var _baseEvery = (baseEvery);

// CONCATENATED MODULE: ./node_modules/lodash-es/every.js






/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */
function every(collection, predicate, guard) {
  var func = lodash_es_isArray(collection) ? _arrayEvery : _baseEvery;
  if (guard && _isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, _baseIteratee(predicate, 3));
}

/* harmony default export */ var lodash_es_every = (every);

// CONCATENATED MODULE: ./node_modules/lodash-es/toLength.js



/** Used as references for the maximum length and index of an array. */
var toLength_MAX_ARRAY_LENGTH = 4294967295;

/**
 * Converts `value` to an integer suitable for use as the length of an
 * array-like object.
 *
 * **Note:** This method is based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toLength(3.2);
 * // => 3
 *
 * _.toLength(Number.MIN_VALUE);
 * // => 0
 *
 * _.toLength(Infinity);
 * // => 4294967295
 *
 * _.toLength('3.2');
 * // => 3
 */
function toLength(value) {
  return value ? _baseClamp(lodash_es_toInteger(value), 0, toLength_MAX_ARRAY_LENGTH) : 0;
}

/* harmony default export */ var lodash_es_toLength = (toLength);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFill.js



/**
 * The base implementation of `_.fill` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to fill.
 * @param {*} value The value to fill `array` with.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns `array`.
 */
function baseFill(array, value, start, end) {
  var length = array.length;

  start = lodash_es_toInteger(start);
  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = (end === undefined || end > length) ? length : lodash_es_toInteger(end);
  if (end < 0) {
    end += length;
  }
  end = start > end ? 0 : lodash_es_toLength(end);
  while (start < end) {
    array[start++] = value;
  }
  return array;
}

/* harmony default export */ var _baseFill = (baseFill);

// CONCATENATED MODULE: ./node_modules/lodash-es/fill.js



/**
 * Fills elements of `array` with `value` from `start` up to, but not
 * including, `end`.
 *
 * **Note:** This method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Array
 * @param {Array} array The array to fill.
 * @param {*} value The value to fill `array` with.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.fill(array, 'a');
 * console.log(array);
 * // => ['a', 'a', 'a']
 *
 * _.fill(Array(3), 2);
 * // => [2, 2, 2]
 *
 * _.fill([4, 6, 8, 10], '*', 1, 3);
 * // => [4, '*', '*', 10]
 */
function fill(array, value, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (start && typeof start != 'number' && _isIterateeCall(array, value, start)) {
    start = 0;
    end = length;
  }
  return _baseFill(array, value, start, end);
}

/* harmony default export */ var lodash_es_fill = (fill);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFilter.js


/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  _baseEach(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

/* harmony default export */ var _baseFilter = (baseFilter);

// CONCATENATED MODULE: ./node_modules/lodash-es/filter.js





/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 *
 * // Combining several predicates using `_.overEvery` or `_.overSome`.
 * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
 * // => objects for ['fred', 'barney']
 */
function filter(collection, predicate) {
  var func = lodash_es_isArray(collection) ? _arrayFilter : _baseFilter;
  return func(collection, _baseIteratee(predicate, 3));
}

/* harmony default export */ var lodash_es_filter = (filter);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createFind.js




/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!lodash_es_isArrayLike(collection)) {
      var iteratee = _baseIteratee(predicate, 3);
      collection = lodash_es_keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

/* harmony default export */ var _createFind = (createFind);

// CONCATENATED MODULE: ./node_modules/lodash-es/findIndex.js




/* Built-in method references for those with the same name as other `lodash` methods. */
var findIndex_nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : lodash_es_toInteger(fromIndex);
  if (index < 0) {
    index = findIndex_nativeMax(length + index, 0);
  }
  return _baseFindIndex(array, _baseIteratee(predicate, 3), index);
}

/* harmony default export */ var lodash_es_findIndex = (findIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/find.js



/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = _createFind(lodash_es_findIndex);

/* harmony default export */ var lodash_es_find = (find);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFindKey.js
/**
 * The base implementation of methods like `_.findKey` and `_.findLastKey`,
 * without support for iteratee shorthands, which iterates over `collection`
 * using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the found element or its key, else `undefined`.
 */
function baseFindKey(collection, predicate, eachFunc) {
  var result;
  eachFunc(collection, function(value, key, collection) {
    if (predicate(value, key, collection)) {
      result = key;
      return false;
    }
  });
  return result;
}

/* harmony default export */ var _baseFindKey = (baseFindKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/findKey.js




/**
 * This method is like `_.find` except that it returns the key of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findKey(users, function(o) { return o.age < 40; });
 * // => 'barney' (iteration order is not guaranteed)
 *
 * // The `_.matches` iteratee shorthand.
 * _.findKey(users, { 'age': 1, 'active': true });
 * // => 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findKey(users, 'active');
 * // => 'barney'
 */
function findKey(object, predicate) {
  return _baseFindKey(object, _baseIteratee(predicate, 3), _baseForOwn);
}

/* harmony default export */ var lodash_es_findKey = (findKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/findLastIndex.js




/* Built-in method references for those with the same name as other `lodash` methods. */
var findLastIndex_nativeMax = Math.max,
    findLastIndex_nativeMin = Math.min;

/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== undefined) {
    index = lodash_es_toInteger(fromIndex);
    index = fromIndex < 0
      ? findLastIndex_nativeMax(length + index, 0)
      : findLastIndex_nativeMin(index, length - 1);
  }
  return _baseFindIndex(array, _baseIteratee(predicate, 3), index, true);
}

/* harmony default export */ var lodash_es_findLastIndex = (findLastIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/findLast.js



/**
 * This method is like `_.find` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=collection.length-1] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * _.findLast([1, 2, 3, 4], function(n) {
 *   return n % 2 == 1;
 * });
 * // => 3
 */
var findLast = _createFind(lodash_es_findLastIndex);

/* harmony default export */ var lodash_es_findLast = (findLast);

// CONCATENATED MODULE: ./node_modules/lodash-es/findLastKey.js




/**
 * This method is like `_.findKey` except that it iterates over elements of
 * a collection in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findLastKey(users, function(o) { return o.age < 40; });
 * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastKey(users, { 'age': 36, 'active': true });
 * // => 'barney'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastKey(users, 'active');
 * // => 'pebbles'
 */
function findLastKey(object, predicate) {
  return _baseFindKey(object, _baseIteratee(predicate, 3), _baseForOwnRight);
}

/* harmony default export */ var lodash_es_findLastKey = (findLastKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/head.js
/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

/* harmony default export */ var lodash_es_head = (head);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMap.js



/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = lodash_es_isArrayLike(collection) ? Array(collection.length) : [];

  _baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

/* harmony default export */ var _baseMap = (baseMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/map.js





/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map_map(collection, iteratee) {
  var func = lodash_es_isArray(collection) ? _arrayMap : _baseMap;
  return func(collection, _baseIteratee(iteratee, 3));
}

/* harmony default export */ var lodash_es_map = (map_map);

// CONCATENATED MODULE: ./node_modules/lodash-es/flatMap.js



/**
 * Creates a flattened array of values by running each element in `collection`
 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
 * with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [n, n];
 * }
 *
 * _.flatMap([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMap(collection, iteratee) {
  return _baseFlatten(lodash_es_map(collection, iteratee), 1);
}

/* harmony default export */ var lodash_es_flatMap = (flatMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/flatMapDeep.js



/** Used as references for various `Number` constants. */
var flatMapDeep_INFINITY = 1 / 0;

/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDeep([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMapDeep(collection, iteratee) {
  return _baseFlatten(lodash_es_map(collection, iteratee), flatMapDeep_INFINITY);
}

/* harmony default export */ var lodash_es_flatMapDeep = (flatMapDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/flatMapDepth.js




/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDepth([1, 2], duplicate, 2);
 * // => [[1, 1], [2, 2]]
 */
function flatMapDepth(collection, iteratee, depth) {
  depth = depth === undefined ? 1 : lodash_es_toInteger(depth);
  return _baseFlatten(lodash_es_map(collection, iteratee), depth);
}

/* harmony default export */ var lodash_es_flatMapDepth = (flatMapDepth);

// CONCATENATED MODULE: ./node_modules/lodash-es/flattenDeep.js


/** Used as references for various `Number` constants. */
var flattenDeep_INFINITY = 1 / 0;

/**
 * Recursively flattens `array`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flattenDeep([1, [2, [3, [4]], 5]]);
 * // => [1, 2, 3, 4, 5]
 */
function flattenDeep(array) {
  var length = array == null ? 0 : array.length;
  return length ? _baseFlatten(array, flattenDeep_INFINITY) : [];
}

/* harmony default export */ var lodash_es_flattenDeep = (flattenDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/flattenDepth.js



/**
 * Recursively flatten `array` up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * var array = [1, [2, [3, [4]], 5]];
 *
 * _.flattenDepth(array, 1);
 * // => [1, 2, [3, [4]], 5]
 *
 * _.flattenDepth(array, 2);
 * // => [1, 2, 3, [4], 5]
 */
function flattenDepth(array, depth) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  depth = depth === undefined ? 1 : lodash_es_toInteger(depth);
  return _baseFlatten(array, depth);
}

/* harmony default export */ var lodash_es_flattenDepth = (flattenDepth);

// CONCATENATED MODULE: ./node_modules/lodash-es/flip.js


/** Used to compose bitmasks for function metadata. */
var flip_WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that invokes `func` with arguments reversed.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to flip arguments for.
 * @returns {Function} Returns the new flipped function.
 * @example
 *
 * var flipped = _.flip(function() {
 *   return _.toArray(arguments);
 * });
 *
 * flipped('a', 'b', 'c', 'd');
 * // => ['d', 'c', 'b', 'a']
 */
function flip(func) {
  return _createWrap(func, flip_WRAP_FLIP_FLAG);
}

/* harmony default export */ var lodash_es_flip = (flip);

// CONCATENATED MODULE: ./node_modules/lodash-es/floor.js


/**
 * Computes `number` rounded down to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round down.
 * @param {number} [precision=0] The precision to round down to.
 * @returns {number} Returns the rounded down number.
 * @example
 *
 * _.floor(4.006);
 * // => 4
 *
 * _.floor(0.046, 2);
 * // => 0.04
 *
 * _.floor(4060, -2);
 * // => 4000
 */
var floor = _createRound('floor');

/* harmony default export */ var lodash_es_floor = (floor);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createFlow.js







/** Error message constants. */
var _createFlow_FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var _createFlow_WRAP_CURRY_FLAG = 8,
    _createFlow_WRAP_PARTIAL_FLAG = 32,
    _createFlow_WRAP_ARY_FLAG = 128,
    _createFlow_WRAP_REARG_FLAG = 256;

/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */
function createFlow(fromRight) {
  return _flatRest(function(funcs) {
    var length = funcs.length,
        index = length,
        prereq = _LodashWrapper.prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != 'function') {
        throw new TypeError(_createFlow_FUNC_ERROR_TEXT);
      }
      if (prereq && !wrapper && _getFuncName(func) == 'wrapper') {
        var wrapper = new _LodashWrapper([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];

      var funcName = _getFuncName(func),
          data = funcName == 'wrapper' ? _getData(func) : undefined;

      if (data && _isLaziable(data[0]) &&
            data[1] == (_createFlow_WRAP_ARY_FLAG | _createFlow_WRAP_CURRY_FLAG | _createFlow_WRAP_PARTIAL_FLAG | _createFlow_WRAP_REARG_FLAG) &&
            !data[4].length && data[9] == 1
          ) {
        wrapper = wrapper[_getFuncName(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = (func.length == 1 && _isLaziable(func))
          ? wrapper[funcName]()
          : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && lodash_es_isArray(value)) {
        return wrapper.plant(value).value();
      }
      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }
      return result;
    };
  });
}

/* harmony default export */ var _createFlow = (createFlow);

// CONCATENATED MODULE: ./node_modules/lodash-es/flow.js


/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = _createFlow();

/* harmony default export */ var lodash_es_flow = (flow);

// CONCATENATED MODULE: ./node_modules/lodash-es/flowRight.js


/**
 * This method is like `_.flow` except that it creates a function that
 * invokes the given functions from right to left.
 *
 * @static
 * @since 3.0.0
 * @memberOf _
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flow
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flowRight([square, _.add]);
 * addSquare(1, 2);
 * // => 9
 */
var flowRight = _createFlow(true);

/* harmony default export */ var lodash_es_flowRight = (flowRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/forIn.js




/**
 * Iterates over own and inherited enumerable string keyed properties of an
 * object and invokes `iteratee` for each property. The iteratee is invoked
 * with three arguments: (value, key, object). Iteratee functions may exit
 * iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forInRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forIn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
 */
function forIn(object, iteratee) {
  return object == null
    ? object
    : _baseFor(object, _castFunction(iteratee), lodash_es_keysIn);
}

/* harmony default export */ var lodash_es_forIn = (forIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/forInRight.js




/**
 * This method is like `_.forIn` except that it iterates over properties of
 * `object` in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forInRight(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
 */
function forInRight(object, iteratee) {
  return object == null
    ? object
    : _baseForRight(object, _castFunction(iteratee), lodash_es_keysIn);
}

/* harmony default export */ var lodash_es_forInRight = (forInRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/forOwn.js



/**
 * Iterates over own enumerable string keyed properties of an object and
 * invokes `iteratee` for each property. The iteratee is invoked with three
 * arguments: (value, key, object). Iteratee functions may exit iteration
 * early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwnRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forOwn(object, iteratee) {
  return object && _baseForOwn(object, _castFunction(iteratee));
}

/* harmony default export */ var lodash_es_forOwn = (forOwn);

// CONCATENATED MODULE: ./node_modules/lodash-es/forOwnRight.js



/**
 * This method is like `_.forOwn` except that it iterates over properties of
 * `object` in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwnRight(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
 */
function forOwnRight(object, iteratee) {
  return object && _baseForOwnRight(object, _castFunction(iteratee));
}

/* harmony default export */ var lodash_es_forOwnRight = (forOwnRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/fromPairs.js
/**
 * The inverse of `_.toPairs`; this method returns an object composed
 * from key-value `pairs`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} pairs The key-value pairs.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.fromPairs([['a', 1], ['b', 2]]);
 * // => { 'a': 1, 'b': 2 }
 */
function fromPairs(pairs) {
  var index = -1,
      length = pairs == null ? 0 : pairs.length,
      result = {};

  while (++index < length) {
    var pair = pairs[index];
    result[pair[0]] = pair[1];
  }
  return result;
}

/* harmony default export */ var lodash_es_fromPairs = (fromPairs);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFunctions.js



/**
 * The base implementation of `_.functions` which creates an array of
 * `object` function property names filtered from `props`.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Array} props The property names to filter.
 * @returns {Array} Returns the function names.
 */
function baseFunctions(object, props) {
  return _arrayFilter(props, function(key) {
    return lodash_es_isFunction(object[key]);
  });
}

/* harmony default export */ var _baseFunctions = (baseFunctions);

// CONCATENATED MODULE: ./node_modules/lodash-es/functions.js



/**
 * Creates an array of function property names from own enumerable properties
 * of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns the function names.
 * @see _.functionsIn
 * @example
 *
 * function Foo() {
 *   this.a = _.constant('a');
 *   this.b = _.constant('b');
 * }
 *
 * Foo.prototype.c = _.constant('c');
 *
 * _.functions(new Foo);
 * // => ['a', 'b']
 */
function functions(object) {
  return object == null ? [] : _baseFunctions(object, lodash_es_keys(object));
}

/* harmony default export */ var lodash_es_functions = (functions);

// CONCATENATED MODULE: ./node_modules/lodash-es/functionsIn.js



/**
 * Creates an array of function property names from own and inherited
 * enumerable properties of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns the function names.
 * @see _.functions
 * @example
 *
 * function Foo() {
 *   this.a = _.constant('a');
 *   this.b = _.constant('b');
 * }
 *
 * Foo.prototype.c = _.constant('c');
 *
 * _.functionsIn(new Foo);
 * // => ['a', 'b', 'c']
 */
function functionsIn(object) {
  return object == null ? [] : _baseFunctions(object, lodash_es_keysIn(object));
}

/* harmony default export */ var lodash_es_functionsIn = (functionsIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/groupBy.js



/** Used for built-in method references. */
var groupBy_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var groupBy_hasOwnProperty = groupBy_objectProto.hasOwnProperty;

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The order of grouped values
 * is determined by the order they occur in `collection`. The corresponding
 * value of each key is an array of elements responsible for generating the
 * key. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': [4.2], '6': [6.1, 6.3] }
 *
 * // The `_.property` iteratee shorthand.
 * _.groupBy(['one', 'two', 'three'], 'length');
 * // => { '3': ['one', 'two'], '5': ['three'] }
 */
var groupBy = _createAggregator(function(result, value, key) {
  if (groupBy_hasOwnProperty.call(result, key)) {
    result[key].push(value);
  } else {
    _baseAssignValue(result, key, [value]);
  }
});

/* harmony default export */ var lodash_es_groupBy = (groupBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGt.js
/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

/* harmony default export */ var _baseGt = (baseGt);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createRelationalOperation.js


/**
 * Creates a function that performs a relational operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @returns {Function} Returns the new relational operation function.
 */
function createRelationalOperation(operator) {
  return function(value, other) {
    if (!(typeof value == 'string' && typeof other == 'string')) {
      value = lodash_es_toNumber(value);
      other = lodash_es_toNumber(other);
    }
    return operator(value, other);
  };
}

/* harmony default export */ var _createRelationalOperation = (createRelationalOperation);

// CONCATENATED MODULE: ./node_modules/lodash-es/gt.js



/**
 * Checks if `value` is greater than `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 * @see _.lt
 * @example
 *
 * _.gt(3, 1);
 * // => true
 *
 * _.gt(3, 3);
 * // => false
 *
 * _.gt(1, 3);
 * // => false
 */
var gt = _createRelationalOperation(_baseGt);

/* harmony default export */ var lodash_es_gt = (gt);

// CONCATENATED MODULE: ./node_modules/lodash-es/gte.js


/**
 * Checks if `value` is greater than or equal to `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than or equal to
 *  `other`, else `false`.
 * @see _.lte
 * @example
 *
 * _.gte(3, 1);
 * // => true
 *
 * _.gte(3, 3);
 * // => true
 *
 * _.gte(1, 3);
 * // => false
 */
var gte = _createRelationalOperation(function(value, other) {
  return value >= other;
});

/* harmony default export */ var lodash_es_gte = (gte);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseHas.js
/** Used for built-in method references. */
var _baseHas_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseHas_hasOwnProperty = _baseHas_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHas(object, key) {
  return object != null && _baseHas_hasOwnProperty.call(object, key);
}

/* harmony default export */ var _baseHas = (baseHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/has.js



/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has(object, path) {
  return object != null && _hasPath(object, path, _baseHas);
}

/* harmony default export */ var lodash_es_has = (has);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseInRange.js
/* Built-in method references for those with the same name as other `lodash` methods. */
var _baseInRange_nativeMax = Math.max,
    _baseInRange_nativeMin = Math.min;

/**
 * The base implementation of `_.inRange` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to check.
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 */
function baseInRange(number, start, end) {
  return number >= _baseInRange_nativeMin(start, end) && number < _baseInRange_nativeMax(start, end);
}

/* harmony default export */ var _baseInRange = (baseInRange);

// CONCATENATED MODULE: ./node_modules/lodash-es/inRange.js




/**
 * Checks if `n` is between `start` and up to, but not including, `end`. If
 * `end` is not specified, it's set to `start` with `start` then set to `0`.
 * If `start` is greater than `end` the params are swapped to support
 * negative ranges.
 *
 * @static
 * @memberOf _
 * @since 3.3.0
 * @category Number
 * @param {number} number The number to check.
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 * @see _.range, _.rangeRight
 * @example
 *
 * _.inRange(3, 2, 4);
 * // => true
 *
 * _.inRange(4, 8);
 * // => true
 *
 * _.inRange(4, 2);
 * // => false
 *
 * _.inRange(2, 2);
 * // => false
 *
 * _.inRange(1.2, 2);
 * // => true
 *
 * _.inRange(5.2, 4);
 * // => false
 *
 * _.inRange(-3, -2, -6);
 * // => true
 */
function inRange(number, start, end) {
  start = lodash_es_toFinite(start);
  if (end === undefined) {
    end = start;
    start = 0;
  } else {
    end = lodash_es_toFinite(end);
  }
  number = lodash_es_toNumber(number);
  return _baseInRange(number, start, end);
}

/* harmony default export */ var lodash_es_inRange = (inRange);

// CONCATENATED MODULE: ./node_modules/lodash-es/isString.js




/** `Object#toString` result references. */
var isString_stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!lodash_es_isArray(value) && Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == isString_stringTag);
}

/* harmony default export */ var lodash_es_isString = (isString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseValues.js


/**
 * The base implementation of `_.values` and `_.valuesIn` which creates an
 * array of `object` property values corresponding to the property names
 * of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the array of property values.
 */
function baseValues(object, props) {
  return _arrayMap(props, function(key) {
    return object[key];
  });
}

/* harmony default export */ var _baseValues = (baseValues);

// CONCATENATED MODULE: ./node_modules/lodash-es/values.js



/**
 * Creates an array of the own enumerable string keyed property values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.values(new Foo);
 * // => [1, 2] (iteration order is not guaranteed)
 *
 * _.values('hi');
 * // => ['h', 'i']
 */
function values_values(object) {
  return object == null ? [] : _baseValues(object, lodash_es_keys(object));
}

/* harmony default export */ var lodash_es_values = (values_values);

// CONCATENATED MODULE: ./node_modules/lodash-es/includes.js






/* Built-in method references for those with the same name as other `lodash` methods. */
var includes_nativeMax = Math.max;

/**
 * Checks if `value` is in `collection`. If `collection` is a string, it's
 * checked for a substring of `value`, otherwise
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * is used for equality comparisons. If `fromIndex` is negative, it's used as
 * the offset from the end of `collection`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {boolean} Returns `true` if `value` is found, else `false`.
 * @example
 *
 * _.includes([1, 2, 3], 1);
 * // => true
 *
 * _.includes([1, 2, 3], 1, 2);
 * // => false
 *
 * _.includes({ 'a': 1, 'b': 2 }, 1);
 * // => true
 *
 * _.includes('abcd', 'bc');
 * // => true
 */
function includes_includes(collection, value, fromIndex, guard) {
  collection = lodash_es_isArrayLike(collection) ? collection : lodash_es_values(collection);
  fromIndex = (fromIndex && !guard) ? lodash_es_toInteger(fromIndex) : 0;

  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = includes_nativeMax(length + fromIndex, 0);
  }
  return lodash_es_isString(collection)
    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
    : (!!length && _baseIndexOf(collection, value, fromIndex) > -1);
}

/* harmony default export */ var lodash_es_includes = (includes_includes);

// CONCATENATED MODULE: ./node_modules/lodash-es/indexOf.js



/* Built-in method references for those with the same name as other `lodash` methods. */
var indexOf_nativeMax = Math.max;

/**
 * Gets the index at which the first occurrence of `value` is found in `array`
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. If `fromIndex` is negative, it's used as the
 * offset from the end of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.indexOf([1, 2, 1, 2], 2);
 * // => 1
 *
 * // Search from the `fromIndex`.
 * _.indexOf([1, 2, 1, 2], 2, 2);
 * // => 3
 */
function indexOf_indexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : lodash_es_toInteger(fromIndex);
  if (index < 0) {
    index = indexOf_nativeMax(length + index, 0);
  }
  return _baseIndexOf(array, value, index);
}

/* harmony default export */ var lodash_es_indexOf = (indexOf_indexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/initial.js


/**
 * Gets all but the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.initial([1, 2, 3]);
 * // => [1, 2]
 */
function initial(array) {
  var length = array == null ? 0 : array.length;
  return length ? _baseSlice(array, 0, -1) : [];
}

/* harmony default export */ var lodash_es_initial = (initial);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIntersection.js







/* Built-in method references for those with the same name as other `lodash` methods. */
var _baseIntersection_nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? _arrayIncludesWith : _arrayIncludes,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = _arrayMap(array, _baseUnary(iteratee));
    }
    maxLength = _baseIntersection_nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new _SetCache(othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? _cacheHas(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? _cacheHas(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ var _baseIntersection = (baseIntersection);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castArrayLikeObject.js


/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return lodash_es_isArrayLikeObject(value) ? value : [];
}

/* harmony default export */ var _castArrayLikeObject = (castArrayLikeObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/intersection.js





/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = _baseRest(function(arrays) {
  var mapped = _arrayMap(arrays, _castArrayLikeObject);
  return (mapped.length && mapped[0] === arrays[0])
    ? _baseIntersection(mapped)
    : [];
});

/* harmony default export */ var lodash_es_intersection = (intersection);

// CONCATENATED MODULE: ./node_modules/lodash-es/intersectionBy.js







/**
 * This method is like `_.intersection` except that it accepts `iteratee`
 * which is invoked for each element of each `arrays` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [2.1]
 *
 * // The `_.property` iteratee shorthand.
 * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }]
 */
var intersectionBy = _baseRest(function(arrays) {
  var iteratee = lodash_es_last(arrays),
      mapped = _arrayMap(arrays, _castArrayLikeObject);

  if (iteratee === lodash_es_last(mapped)) {
    iteratee = undefined;
  } else {
    mapped.pop();
  }
  return (mapped.length && mapped[0] === arrays[0])
    ? _baseIntersection(mapped, _baseIteratee(iteratee, 2))
    : [];
});

/* harmony default export */ var lodash_es_intersectionBy = (intersectionBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/intersectionWith.js






/**
 * This method is like `_.intersection` except that it accepts `comparator`
 * which is invoked to compare elements of `arrays`. The order and references
 * of result values are determined by the first array. The comparator is
 * invoked with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.intersectionWith(objects, others, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }]
 */
var intersectionWith = _baseRest(function(arrays) {
  var comparator = lodash_es_last(arrays),
      mapped = _arrayMap(arrays, _castArrayLikeObject);

  comparator = typeof comparator == 'function' ? comparator : undefined;
  if (comparator) {
    mapped.pop();
  }
  return (mapped.length && mapped[0] === arrays[0])
    ? _baseIntersection(mapped, undefined, comparator)
    : [];
});

/* harmony default export */ var lodash_es_intersectionWith = (intersectionWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseInverter.js


/**
 * The base implementation of `_.invert` and `_.invertBy` which inverts
 * `object` with values transformed by `iteratee` and set by `setter`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform values.
 * @param {Object} accumulator The initial inverted object.
 * @returns {Function} Returns `accumulator`.
 */
function baseInverter(object, setter, iteratee, accumulator) {
  _baseForOwn(object, function(value, key, object) {
    setter(accumulator, iteratee(value), key, object);
  });
  return accumulator;
}

/* harmony default export */ var _baseInverter = (baseInverter);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createInverter.js


/**
 * Creates a function like `_.invertBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} toIteratee The function to resolve iteratees.
 * @returns {Function} Returns the new inverter function.
 */
function createInverter(setter, toIteratee) {
  return function(object, iteratee) {
    return _baseInverter(object, setter, toIteratee(iteratee), {});
  };
}

/* harmony default export */ var _createInverter = (createInverter);

// CONCATENATED MODULE: ./node_modules/lodash-es/invert.js




/** Used for built-in method references. */
var invert_objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = invert_objectProto.toString;

/**
 * Creates an object composed of the inverted keys and values of `object`.
 * If `object` contains duplicate values, subsequent values overwrite
 * property assignments of previous values.
 *
 * @static
 * @memberOf _
 * @since 0.7.0
 * @category Object
 * @param {Object} object The object to invert.
 * @returns {Object} Returns the new inverted object.
 * @example
 *
 * var object = { 'a': 1, 'b': 2, 'c': 1 };
 *
 * _.invert(object);
 * // => { '1': 'c', '2': 'b' }
 */
var invert = _createInverter(function(result, value, key) {
  if (value != null &&
      typeof value.toString != 'function') {
    value = nativeObjectToString.call(value);
  }

  result[value] = key;
}, lodash_es_constant(lodash_es_identity));

/* harmony default export */ var lodash_es_invert = (invert);

// CONCATENATED MODULE: ./node_modules/lodash-es/invertBy.js



/** Used for built-in method references. */
var invertBy_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var invertBy_hasOwnProperty = invertBy_objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var invertBy_nativeObjectToString = invertBy_objectProto.toString;

/**
 * This method is like `_.invert` except that the inverted object is generated
 * from the results of running each element of `object` thru `iteratee`. The
 * corresponding inverted value of each inverted key is an array of keys
 * responsible for generating the inverted value. The iteratee is invoked
 * with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.1.0
 * @category Object
 * @param {Object} object The object to invert.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Object} Returns the new inverted object.
 * @example
 *
 * var object = { 'a': 1, 'b': 2, 'c': 1 };
 *
 * _.invertBy(object);
 * // => { '1': ['a', 'c'], '2': ['b'] }
 *
 * _.invertBy(object, function(value) {
 *   return 'group' + value;
 * });
 * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
 */
var invertBy = _createInverter(function(result, value, key) {
  if (value != null &&
      typeof value.toString != 'function') {
    value = invertBy_nativeObjectToString.call(value);
  }

  if (invertBy_hasOwnProperty.call(result, value)) {
    result[value].push(key);
  } else {
    result[value] = [key];
  }
}, _baseIteratee);

/* harmony default export */ var lodash_es_invertBy = (invertBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_parent.js



/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function _parent_parent(object, path) {
  return path.length < 2 ? object : _baseGet(object, _baseSlice(path, 0, -1));
}

/* harmony default export */ var _parent = (_parent_parent);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseInvoke.js






/**
 * The base implementation of `_.invoke` without support for individual
 * method arguments.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {Array} args The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 */
function baseInvoke(object, path, args) {
  path = _castPath(path, object);
  object = _parent(object, path);
  var func = object == null ? object : object[_toKey(lodash_es_last(path))];
  return func == null ? undefined : _apply(func, object, args);
}

/* harmony default export */ var _baseInvoke = (baseInvoke);

// CONCATENATED MODULE: ./node_modules/lodash-es/invoke.js



/**
 * Invokes the method at `path` of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
 *
 * _.invoke(object, 'a[0].b.c.slice', 1, 3);
 * // => [2, 3]
 */
var invoke = _baseRest(_baseInvoke);

/* harmony default export */ var lodash_es_invoke = (invoke);

// CONCATENATED MODULE: ./node_modules/lodash-es/invokeMap.js






/**
 * Invokes the method at `path` of each element in `collection`, returning
 * an array of the results of each invoked method. Any additional arguments
 * are provided to each invoked method. If `path` is a function, it's invoked
 * for, and `this` bound to, each element in `collection`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array|Function|string} path The path of the method to invoke or
 *  the function invoked per iteration.
 * @param {...*} [args] The arguments to invoke each method with.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
 * // => [[1, 5, 7], [1, 2, 3]]
 *
 * _.invokeMap([123, 456], String.prototype.split, '');
 * // => [['1', '2', '3'], ['4', '5', '6']]
 */
var invokeMap = _baseRest(function(collection, path, args) {
  var index = -1,
      isFunc = typeof path == 'function',
      result = lodash_es_isArrayLike(collection) ? Array(collection.length) : [];

  _baseEach(collection, function(value) {
    result[++index] = isFunc ? _apply(path, value, args) : _baseInvoke(value, path, args);
  });
  return result;
});

/* harmony default export */ var lodash_es_invokeMap = (invokeMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsArrayBuffer.js



var _baseIsArrayBuffer_arrayBufferTag = '[object ArrayBuffer]';

/**
 * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
 */
function baseIsArrayBuffer(value) {
  return Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == _baseIsArrayBuffer_arrayBufferTag;
}

/* harmony default export */ var _baseIsArrayBuffer = (baseIsArrayBuffer);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArrayBuffer.js




/* Node.js helper references. */
var nodeIsArrayBuffer = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isArrayBuffer;

/**
 * Checks if `value` is classified as an `ArrayBuffer` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
 * @example
 *
 * _.isArrayBuffer(new ArrayBuffer(2));
 * // => true
 *
 * _.isArrayBuffer(new Array(2));
 * // => false
 */
var isArrayBuffer = nodeIsArrayBuffer ? _baseUnary(nodeIsArrayBuffer) : _baseIsArrayBuffer;

/* harmony default export */ var lodash_es_isArrayBuffer = (isArrayBuffer);

// CONCATENATED MODULE: ./node_modules/lodash-es/isBoolean.js



/** `Object#toString` result references. */
var isBoolean_boolTag = '[object Boolean]';

/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */
function isBoolean(value) {
  return value === true || value === false ||
    (Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == isBoolean_boolTag);
}

/* harmony default export */ var lodash_es_isBoolean = (isBoolean);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsDate.js



/** `Object#toString` result references. */
var _baseIsDate_dateTag = '[object Date]';

/**
 * The base implementation of `_.isDate` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 */
function baseIsDate(value) {
  return Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == _baseIsDate_dateTag;
}

/* harmony default export */ var _baseIsDate = (baseIsDate);

// CONCATENATED MODULE: ./node_modules/lodash-es/isDate.js




/* Node.js helper references. */
var nodeIsDate = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isDate;

/**
 * Checks if `value` is classified as a `Date` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 * @example
 *
 * _.isDate(new Date);
 * // => true
 *
 * _.isDate('Mon April 23 2012');
 * // => false
 */
var isDate = nodeIsDate ? _baseUnary(nodeIsDate) : _baseIsDate;

/* harmony default export */ var lodash_es_isDate = (isDate);

// CONCATENATED MODULE: ./node_modules/lodash-es/isElement.js



/**
 * Checks if `value` is likely a DOM element.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
 * @example
 *
 * _.isElement(document.body);
 * // => true
 *
 * _.isElement('<body>');
 * // => false
 */
function isElement(value) {
  return Object(isObjectLike["a" /* default */])(value) && value.nodeType === 1 && !Object(isPlainObject["default"])(value);
}

/* harmony default export */ var lodash_es_isElement = (isElement);

// CONCATENATED MODULE: ./node_modules/lodash-es/isEmpty.js









/** `Object#toString` result references. */
var isEmpty_mapTag = '[object Map]',
    isEmpty_setTag = '[object Set]';

/** Used for built-in method references. */
var isEmpty_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isEmpty_hasOwnProperty = isEmpty_objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (lodash_es_isArrayLike(value) &&
      (lodash_es_isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        Object(isBuffer["a" /* default */])(value) || lodash_es_isTypedArray(value) || lodash_es_isArguments(value))) {
    return !value.length;
  }
  var tag = _getTag(value);
  if (tag == isEmpty_mapTag || tag == isEmpty_setTag) {
    return !value.size;
  }
  if (_isPrototype(value)) {
    return !_baseKeys(value).length;
  }
  for (var key in value) {
    if (isEmpty_hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ var lodash_es_isEmpty = (isEmpty);

// CONCATENATED MODULE: ./node_modules/lodash-es/isEqual.js


/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return _baseIsEqual(value, other);
}

/* harmony default export */ var lodash_es_isEqual = (isEqual);

// CONCATENATED MODULE: ./node_modules/lodash-es/isEqualWith.js


/**
 * This method is like `_.isEqual` except that it accepts `customizer` which
 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
 * are handled by the method instead. The `customizer` is invoked with up to
 * six arguments: (objValue, othValue [, index|key, object, other, stack]).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, othValue) {
 *   if (isGreeting(objValue) && isGreeting(othValue)) {
 *     return true;
 *   }
 * }
 *
 * var array = ['hello', 'goodbye'];
 * var other = ['hi', 'goodbye'];
 *
 * _.isEqualWith(array, other, customizer);
 * // => true
 */
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  var result = customizer ? customizer(value, other) : undefined;
  return result === undefined ? _baseIsEqual(value, other, undefined, customizer) : !!result;
}

/* harmony default export */ var lodash_es_isEqualWith = (isEqualWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/isFinite.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var isFinite_nativeIsFinite = _root["a" /* default */].isFinite;

/**
 * Checks if `value` is a finite primitive number.
 *
 * **Note:** This method is based on
 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
 * @example
 *
 * _.isFinite(3);
 * // => true
 *
 * _.isFinite(Number.MIN_VALUE);
 * // => true
 *
 * _.isFinite(Infinity);
 * // => false
 *
 * _.isFinite('3');
 * // => false
 */
function isFinite_isFinite(value) {
  return typeof value == 'number' && isFinite_nativeIsFinite(value);
}

/* harmony default export */ var lodash_es_isFinite = (isFinite_isFinite);

// CONCATENATED MODULE: ./node_modules/lodash-es/isInteger.js


/**
 * Checks if `value` is an integer.
 *
 * **Note:** This method is based on
 * [`Number.isInteger`](https://mdn.io/Number/isInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
 * @example
 *
 * _.isInteger(3);
 * // => true
 *
 * _.isInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isInteger(Infinity);
 * // => false
 *
 * _.isInteger('3');
 * // => false
 */
function isInteger(value) {
  return typeof value == 'number' && value == lodash_es_toInteger(value);
}

/* harmony default export */ var lodash_es_isInteger = (isInteger);

// CONCATENATED MODULE: ./node_modules/lodash-es/isMatch.js



/**
 * Performs a partial deep comparison between `object` and `source` to
 * determine if `object` contains equivalent property values.
 *
 * **Note:** This method is equivalent to `_.matches` when `source` is
 * partially applied.
 *
 * Partial comparisons will match empty array and empty object `source`
 * values against any array or object value, respectively. See `_.isEqual`
 * for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 *
 * _.isMatch(object, { 'b': 2 });
 * // => true
 *
 * _.isMatch(object, { 'b': 1 });
 * // => false
 */
function isMatch(object, source) {
  return object === source || _baseIsMatch(object, source, _getMatchData(source));
}

/* harmony default export */ var lodash_es_isMatch = (isMatch);

// CONCATENATED MODULE: ./node_modules/lodash-es/isMatchWith.js



/**
 * This method is like `_.isMatch` except that it accepts `customizer` which
 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
 * are handled by the method instead. The `customizer` is invoked with five
 * arguments: (objValue, srcValue, index|key, object, source).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, srcValue) {
 *   if (isGreeting(objValue) && isGreeting(srcValue)) {
 *     return true;
 *   }
 * }
 *
 * var object = { 'greeting': 'hello' };
 * var source = { 'greeting': 'hi' };
 *
 * _.isMatchWith(object, source, customizer);
 * // => true
 */
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return _baseIsMatch(object, source, _getMatchData(source), customizer);
}

/* harmony default export */ var lodash_es_isMatchWith = (isMatchWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNumber.js



/** `Object#toString` result references. */
var isNumber_numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == isNumber_numberTag);
}

/* harmony default export */ var lodash_es_isNumber = (isNumber);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNaN.js


/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */
function isNaN_isNaN(value) {
  // An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some
  // ActiveX objects in IE.
  return lodash_es_isNumber(value) && value != +value;
}

/* harmony default export */ var lodash_es_isNaN = (isNaN_isNaN);

// EXTERNAL MODULE: ./node_modules/lodash-es/stubFalse.js
var stubFalse = __webpack_require__("2f74");

// CONCATENATED MODULE: ./node_modules/lodash-es/_isMaskable.js




/**
 * Checks if `func` is capable of being masked.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
 */
var isMaskable = _coreJsData ? lodash_es_isFunction : stubFalse["a" /* default */];

/* harmony default export */ var _isMaskable = (isMaskable);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNative.js



/** Error message constants. */
var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.';

/**
 * Checks if `value` is a pristine native function.
 *
 * **Note:** This method can't reliably detect native functions in the presence
 * of the core-js package because core-js circumvents this kind of detection.
 * Despite multiple requests, the core-js maintainer has made it clear: any
 * attempt to fix the detection will be obstructed. As a result, we're left
 * with little choice but to throw an error. Unfortunately, this also affects
 * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
 * which rely on core-js.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (_isMaskable(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return _baseIsNative(value);
}

/* harmony default export */ var lodash_es_isNative = (isNative);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNil.js
/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

/* harmony default export */ var lodash_es_isNil = (isNil);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNull.js
/**
 * Checks if `value` is `null`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
 * @example
 *
 * _.isNull(null);
 * // => true
 *
 * _.isNull(void 0);
 * // => false
 */
function isNull(value) {
  return value === null;
}

/* harmony default export */ var lodash_es_isNull = (isNull);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsRegExp.js



/** `Object#toString` result references. */
var _baseIsRegExp_regexpTag = '[object RegExp]';

/**
 * The base implementation of `_.isRegExp` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 */
function baseIsRegExp(value) {
  return Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == _baseIsRegExp_regexpTag;
}

/* harmony default export */ var _baseIsRegExp = (baseIsRegExp);

// CONCATENATED MODULE: ./node_modules/lodash-es/isRegExp.js




/* Node.js helper references. */
var nodeIsRegExp = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isRegExp;

/**
 * Checks if `value` is classified as a `RegExp` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 * @example
 *
 * _.isRegExp(/abc/);
 * // => true
 *
 * _.isRegExp('/abc/');
 * // => false
 */
var isRegExp = nodeIsRegExp ? _baseUnary(nodeIsRegExp) : _baseIsRegExp;

/* harmony default export */ var lodash_es_isRegExp = (isRegExp);

// CONCATENATED MODULE: ./node_modules/lodash-es/isSafeInteger.js


/** Used as references for various `Number` constants. */
var isSafeInteger_MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
 * double precision number which isn't the result of a rounded unsafe integer.
 *
 * **Note:** This method is based on
 * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
 * @example
 *
 * _.isSafeInteger(3);
 * // => true
 *
 * _.isSafeInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isSafeInteger(Infinity);
 * // => false
 *
 * _.isSafeInteger('3');
 * // => false
 */
function isSafeInteger(value) {
  return lodash_es_isInteger(value) && value >= -isSafeInteger_MAX_SAFE_INTEGER && value <= isSafeInteger_MAX_SAFE_INTEGER;
}

/* harmony default export */ var lodash_es_isSafeInteger = (isSafeInteger);

// CONCATENATED MODULE: ./node_modules/lodash-es/isUndefined.js
/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

/* harmony default export */ var lodash_es_isUndefined = (isUndefined);

// CONCATENATED MODULE: ./node_modules/lodash-es/isWeakMap.js



/** `Object#toString` result references. */
var isWeakMap_weakMapTag = '[object WeakMap]';

/**
 * Checks if `value` is classified as a `WeakMap` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
 * @example
 *
 * _.isWeakMap(new WeakMap);
 * // => true
 *
 * _.isWeakMap(new Map);
 * // => false
 */
function isWeakMap(value) {
  return Object(isObjectLike["a" /* default */])(value) && _getTag(value) == isWeakMap_weakMapTag;
}

/* harmony default export */ var lodash_es_isWeakMap = (isWeakMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/isWeakSet.js



/** `Object#toString` result references. */
var weakSetTag = '[object WeakSet]';

/**
 * Checks if `value` is classified as a `WeakSet` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
 * @example
 *
 * _.isWeakSet(new WeakSet);
 * // => true
 *
 * _.isWeakSet(new Set);
 * // => false
 */
function isWeakSet(value) {
  return Object(isObjectLike["a" /* default */])(value) && Object(_baseGetTag["a" /* default */])(value) == weakSetTag;
}

/* harmony default export */ var lodash_es_isWeakSet = (isWeakSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/iteratee.js



/** Used to compose bitmasks for cloning. */
var iteratee_CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes `func` with the arguments of the created
 * function. If `func` is a property name, the created function returns the
 * property value for a given element. If `func` is an array or object, the
 * created function returns `true` for elements that contain the equivalent
 * source properties, otherwise it returns `false`.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Util
 * @param {*} [func=_.identity] The value to convert to a callback.
 * @returns {Function} Returns the callback.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, _.iteratee(['user', 'fred']));
 * // => [{ 'user': 'fred', 'age': 40 }]
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, _.iteratee('user'));
 * // => ['barney', 'fred']
 *
 * // Create custom iteratee shorthands.
 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
 *     return func.test(string);
 *   };
 * });
 *
 * _.filter(['abc', 'def'], /ef/);
 * // => ['def']
 */
function iteratee_iteratee(func) {
  return _baseIteratee(typeof func == 'function' ? func : _baseClone(func, iteratee_CLONE_DEEP_FLAG));
}

/* harmony default export */ var lodash_es_iteratee = (iteratee_iteratee);

// CONCATENATED MODULE: ./node_modules/lodash-es/join.js
/** Used for built-in method references. */
var join_arrayProto = Array.prototype;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeJoin = join_arrayProto.join;

/**
 * Converts all elements in `array` into a string separated by `separator`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to convert.
 * @param {string} [separator=','] The element separator.
 * @returns {string} Returns the joined string.
 * @example
 *
 * _.join(['a', 'b', 'c'], '~');
 * // => 'a~b~c'
 */
function join(array, separator) {
  return array == null ? '' : nativeJoin.call(array, separator);
}

/* harmony default export */ var lodash_es_join = (join);

// CONCATENATED MODULE: ./node_modules/lodash-es/kebabCase.js


/**
 * Converts `string` to
 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the kebab cased string.
 * @example
 *
 * _.kebabCase('Foo Bar');
 * // => 'foo-bar'
 *
 * _.kebabCase('fooBar');
 * // => 'foo-bar'
 *
 * _.kebabCase('__FOO_BAR__');
 * // => 'foo-bar'
 */
var kebabCase = _createCompounder(function(result, word, index) {
  return result + (index ? '-' : '') + word.toLowerCase();
});

/* harmony default export */ var lodash_es_kebabCase = (kebabCase);

// CONCATENATED MODULE: ./node_modules/lodash-es/keyBy.js



/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the last element responsible for generating the key. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * var array = [
 *   { 'dir': 'left', 'code': 97 },
 *   { 'dir': 'right', 'code': 100 }
 * ];
 *
 * _.keyBy(array, function(o) {
 *   return String.fromCharCode(o.code);
 * });
 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
 *
 * _.keyBy(array, 'dir');
 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
 */
var keyBy = _createAggregator(function(result, value, key) {
  _baseAssignValue(result, key, value);
});

/* harmony default export */ var lodash_es_keyBy = (keyBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_strictLastIndexOf.js
/**
 * A specialized version of `_.lastIndexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictLastIndexOf(array, value, fromIndex) {
  var index = fromIndex + 1;
  while (index--) {
    if (array[index] === value) {
      return index;
    }
  }
  return index;
}

/* harmony default export */ var _strictLastIndexOf = (strictLastIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/lastIndexOf.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var lastIndexOf_nativeMax = Math.max,
    lastIndexOf_nativeMin = Math.min;

/**
 * This method is like `_.indexOf` except that it iterates over elements of
 * `array` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.lastIndexOf([1, 2, 1, 2], 2);
 * // => 3
 *
 * // Search from the `fromIndex`.
 * _.lastIndexOf([1, 2, 1, 2], 2, 2);
 * // => 1
 */
function lastIndexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length;
  if (fromIndex !== undefined) {
    index = lodash_es_toInteger(fromIndex);
    index = index < 0 ? lastIndexOf_nativeMax(length + index, 0) : lastIndexOf_nativeMin(index, length - 1);
  }
  return value === value
    ? _strictLastIndexOf(array, value, index)
    : _baseFindIndex(array, _baseIsNaN, index, true);
}

/* harmony default export */ var lodash_es_lastIndexOf = (lastIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/lowerCase.js


/**
 * Converts `string`, as space separated words, to lower case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the lower cased string.
 * @example
 *
 * _.lowerCase('--Foo-Bar--');
 * // => 'foo bar'
 *
 * _.lowerCase('fooBar');
 * // => 'foo bar'
 *
 * _.lowerCase('__FOO_BAR__');
 * // => 'foo bar'
 */
var lowerCase = _createCompounder(function(result, word, index) {
  return result + (index ? ' ' : '') + word.toLowerCase();
});

/* harmony default export */ var lodash_es_lowerCase = (lowerCase);

// CONCATENATED MODULE: ./node_modules/lodash-es/lowerFirst.js


/**
 * Converts the first character of `string` to lower case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.lowerFirst('Fred');
 * // => 'fred'
 *
 * _.lowerFirst('FRED');
 * // => 'fRED'
 */
var lowerFirst = _createCaseFirst('toLowerCase');

/* harmony default export */ var lodash_es_lowerFirst = (lowerFirst);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseLt.js
/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */
function baseLt(value, other) {
  return value < other;
}

/* harmony default export */ var _baseLt = (baseLt);

// CONCATENATED MODULE: ./node_modules/lodash-es/lt.js



/**
 * Checks if `value` is less than `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 * @see _.gt
 * @example
 *
 * _.lt(1, 3);
 * // => true
 *
 * _.lt(3, 3);
 * // => false
 *
 * _.lt(3, 1);
 * // => false
 */
var lt = _createRelationalOperation(_baseLt);

/* harmony default export */ var lodash_es_lt = (lt);

// CONCATENATED MODULE: ./node_modules/lodash-es/lte.js


/**
 * Checks if `value` is less than or equal to `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than or equal to
 *  `other`, else `false`.
 * @see _.gte
 * @example
 *
 * _.lte(1, 3);
 * // => true
 *
 * _.lte(3, 3);
 * // => true
 *
 * _.lte(3, 1);
 * // => false
 */
var lte = _createRelationalOperation(function(value, other) {
  return value <= other;
});

/* harmony default export */ var lodash_es_lte = (lte);

// CONCATENATED MODULE: ./node_modules/lodash-es/mapKeys.js




/**
 * The opposite of `_.mapValues`; this method creates an object with the
 * same values as `object` and keys generated by running each own enumerable
 * string keyed property of `object` thru `iteratee`. The iteratee is invoked
 * with three arguments: (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapValues
 * @example
 *
 * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
 *   return key + value;
 * });
 * // => { 'a1': 1, 'b2': 2 }
 */
function mapKeys(object, iteratee) {
  var result = {};
  iteratee = _baseIteratee(iteratee, 3);

  _baseForOwn(object, function(value, key, object) {
    _baseAssignValue(result, iteratee(value, key, object), value);
  });
  return result;
}

/* harmony default export */ var lodash_es_mapKeys = (mapKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/mapValues.js




/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = _baseIteratee(iteratee, 3);

  _baseForOwn(object, function(value, key, object) {
    _baseAssignValue(result, key, iteratee(value, key, object));
  });
  return result;
}

/* harmony default export */ var lodash_es_mapValues = (mapValues);

// CONCATENATED MODULE: ./node_modules/lodash-es/matches.js



/** Used to compose bitmasks for cloning. */
var matches_CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that performs a partial deep comparison between a given
 * object and `source`, returning `true` if the given object has equivalent
 * property values, else `false`.
 *
 * **Note:** The created function is equivalent to `_.isMatch` with `source`
 * partially applied.
 *
 * Partial comparisons will match empty array and empty object `source`
 * values against any array or object value, respectively. See `_.isEqual`
 * for a list of supported value comparisons.
 *
 * **Note:** Multiple values can be checked by combining several matchers
 * using `_.overSome`
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 1, 'b': 2, 'c': 3 },
 *   { 'a': 4, 'b': 5, 'c': 6 }
 * ];
 *
 * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
 * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
 *
 * // Checking for several possible values
 * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
 * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
 */
function matches(source) {
  return _baseMatches(_baseClone(source, matches_CLONE_DEEP_FLAG));
}

/* harmony default export */ var lodash_es_matches = (matches);

// CONCATENATED MODULE: ./node_modules/lodash-es/matchesProperty.js



/** Used to compose bitmasks for cloning. */
var matchesProperty_CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that performs a partial deep comparison between the
 * value at `path` of a given object to `srcValue`, returning `true` if the
 * object value is equivalent, else `false`.
 *
 * **Note:** Partial comparisons will match empty array and empty object
 * `srcValue` values against any array or object value, respectively. See
 * `_.isEqual` for a list of supported value comparisons.
 *
 * **Note:** Multiple values can be checked by combining several matchers
 * using `_.overSome`
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 1, 'b': 2, 'c': 3 },
 *   { 'a': 4, 'b': 5, 'c': 6 }
 * ];
 *
 * _.find(objects, _.matchesProperty('a', 4));
 * // => { 'a': 4, 'b': 5, 'c': 6 }
 *
 * // Checking for several possible values
 * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
 * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
 */
function matchesProperty(path, srcValue) {
  return _baseMatchesProperty(path, _baseClone(srcValue, matchesProperty_CLONE_DEEP_FLAG));
}

/* harmony default export */ var lodash_es_matchesProperty = (matchesProperty);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseExtremum.js


/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !lodash_es_isSymbol(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

/* harmony default export */ var _baseExtremum = (baseExtremum);

// CONCATENATED MODULE: ./node_modules/lodash-es/max.js




/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max(array) {
  return (array && array.length)
    ? _baseExtremum(array, lodash_es_identity, _baseGt)
    : undefined;
}

/* harmony default export */ var lodash_es_max = (max);

// CONCATENATED MODULE: ./node_modules/lodash-es/maxBy.js




/**
 * This method is like `_.max` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.maxBy(objects, function(o) { return o.n; });
 * // => { 'n': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.maxBy(objects, 'n');
 * // => { 'n': 2 }
 */
function maxBy(array, iteratee) {
  return (array && array.length)
    ? _baseExtremum(array, _baseIteratee(iteratee, 2), _baseGt)
    : undefined;
}

/* harmony default export */ var lodash_es_maxBy = (maxBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSum.js
/**
 * The base implementation of `_.sum` and `_.sumBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the sum.
 */
function baseSum(array, iteratee) {
  var result,
      index = -1,
      length = array.length;

  while (++index < length) {
    var current = iteratee(array[index]);
    if (current !== undefined) {
      result = result === undefined ? current : (result + current);
    }
  }
  return result;
}

/* harmony default export */ var _baseSum = (baseSum);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMean.js


/** Used as references for various `Number` constants. */
var _baseMean_NAN = 0 / 0;

/**
 * The base implementation of `_.mean` and `_.meanBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the mean.
 */
function baseMean(array, iteratee) {
  var length = array == null ? 0 : array.length;
  return length ? (_baseSum(array, iteratee) / length) : _baseMean_NAN;
}

/* harmony default export */ var _baseMean = (baseMean);

// CONCATENATED MODULE: ./node_modules/lodash-es/mean.js



/**
 * Computes the mean of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the mean.
 * @example
 *
 * _.mean([4, 2, 8, 6]);
 * // => 5
 */
function mean(array) {
  return _baseMean(array, lodash_es_identity);
}

/* harmony default export */ var lodash_es_mean = (mean);

// CONCATENATED MODULE: ./node_modules/lodash-es/meanBy.js



/**
 * This method is like `_.mean` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be averaged.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the mean.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.meanBy(objects, function(o) { return o.n; });
 * // => 5
 *
 * // The `_.property` iteratee shorthand.
 * _.meanBy(objects, 'n');
 * // => 5
 */
function meanBy(array, iteratee) {
  return _baseMean(array, _baseIteratee(iteratee, 2));
}

/* harmony default export */ var lodash_es_meanBy = (meanBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/merge.js



/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = _createAssigner(function(object, source, srcIndex) {
  _baseMerge(object, source, srcIndex);
});

/* harmony default export */ var lodash_es_merge = (merge);

// CONCATENATED MODULE: ./node_modules/lodash-es/method.js



/**
 * Creates a function that invokes the method at `path` of a given object.
 * Any additional arguments are provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': _.constant(2) } },
 *   { 'a': { 'b': _.constant(1) } }
 * ];
 *
 * _.map(objects, _.method('a.b'));
 * // => [2, 1]
 *
 * _.map(objects, _.method(['a', 'b']));
 * // => [2, 1]
 */
var method = _baseRest(function(path, args) {
  return function(object) {
    return _baseInvoke(object, path, args);
  };
});

/* harmony default export */ var lodash_es_method = (method);

// CONCATENATED MODULE: ./node_modules/lodash-es/methodOf.js



/**
 * The opposite of `_.method`; this method creates a function that invokes
 * the method at a given path of `object`. Any additional arguments are
 * provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Object} object The object to query.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var array = _.times(3, _.constant),
 *     object = { 'a': array, 'b': array, 'c': array };
 *
 * _.map(['a[2]', 'c[0]'], _.methodOf(object));
 * // => [2, 0]
 *
 * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
 * // => [2, 0]
 */
var methodOf = _baseRest(function(object, args) {
  return function(path) {
    return _baseInvoke(object, path, args);
  };
});

/* harmony default export */ var lodash_es_methodOf = (methodOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/min.js




/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */
function min(array) {
  return (array && array.length)
    ? _baseExtremum(array, lodash_es_identity, _baseLt)
    : undefined;
}

/* harmony default export */ var lodash_es_min = (min);

// CONCATENATED MODULE: ./node_modules/lodash-es/minBy.js




/**
 * This method is like `_.min` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.minBy(objects, function(o) { return o.n; });
 * // => { 'n': 1 }
 *
 * // The `_.property` iteratee shorthand.
 * _.minBy(objects, 'n');
 * // => { 'n': 1 }
 */
function minBy(array, iteratee) {
  return (array && array.length)
    ? _baseExtremum(array, _baseIteratee(iteratee, 2), _baseLt)
    : undefined;
}

/* harmony default export */ var lodash_es_minBy = (minBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/mixin.js








/**
 * Adds all own enumerable string keyed function properties of a source
 * object to the destination object. If `object` is a function, then methods
 * are added to its prototype as well.
 *
 * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
 * avoid conflicts caused by modifying the original.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {Function|Object} [object=lodash] The destination object.
 * @param {Object} source The object of functions to add.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
 * @returns {Function|Object} Returns `object`.
 * @example
 *
 * function vowels(string) {
 *   return _.filter(string, function(v) {
 *     return /[aeiou]/i.test(v);
 *   });
 * }
 *
 * _.mixin({ 'vowels': vowels });
 * _.vowels('fred');
 * // => ['e']
 *
 * _('fred').vowels().value();
 * // => ['e']
 *
 * _.mixin({ 'vowels': vowels }, { 'chain': false });
 * _('fred').vowels();
 * // => ['e']
 */
function mixin(object, source, options) {
  var props = lodash_es_keys(source),
      methodNames = _baseFunctions(source, props);

  var chain = !(lodash_es_isObject(options) && 'chain' in options) || !!options.chain,
      isFunc = lodash_es_isFunction(object);

  _arrayEach(methodNames, function(methodName) {
    var func = source[methodName];
    object[methodName] = func;
    if (isFunc) {
      object.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain || chainAll) {
          var result = object(this.__wrapped__),
              actions = result.__actions__ = _copyArray(this.__actions__);

          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
          result.__chain__ = chainAll;
          return result;
        }
        return func.apply(object, _arrayPush([this.value()], arguments));
      };
    }
  });

  return object;
}

/* harmony default export */ var lodash_es_mixin = (mixin);

// CONCATENATED MODULE: ./node_modules/lodash-es/multiply.js


/**
 * Multiply two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {number} multiplier The first number in a multiplication.
 * @param {number} multiplicand The second number in a multiplication.
 * @returns {number} Returns the product.
 * @example
 *
 * _.multiply(6, 4);
 * // => 24
 */
var multiply = _createMathOperation(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);

/* harmony default export */ var lodash_es_multiply = (multiply);

// CONCATENATED MODULE: ./node_modules/lodash-es/negate.js
/** Error message constants. */
var negate_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that negates the result of the predicate `func`. The
 * `func` predicate is invoked with the `this` binding and arguments of the
 * created function.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} predicate The predicate to negate.
 * @returns {Function} Returns the new negated function.
 * @example
 *
 * function isEven(n) {
 *   return n % 2 == 0;
 * }
 *
 * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
 * // => [1, 3, 5]
 */
function negate(predicate) {
  if (typeof predicate != 'function') {
    throw new TypeError(negate_FUNC_ERROR_TEXT);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0: return !predicate.call(this);
      case 1: return !predicate.call(this, args[0]);
      case 2: return !predicate.call(this, args[0], args[1]);
      case 3: return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}

/* harmony default export */ var lodash_es_negate = (negate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_iteratorToArray.js
/**
 * Converts `iterator` to an array.
 *
 * @private
 * @param {Object} iterator The iterator to convert.
 * @returns {Array} Returns the converted array.
 */
function iteratorToArray(iterator) {
  var data,
      result = [];

  while (!(data = iterator.next()).done) {
    result.push(data.value);
  }
  return result;
}

/* harmony default export */ var _iteratorToArray = (iteratorToArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/toArray.js











/** `Object#toString` result references. */
var toArray_mapTag = '[object Map]',
    toArray_setTag = '[object Set]';

/** Built-in value references. */
var symIterator = _Symbol["a" /* default */] ? _Symbol["a" /* default */].iterator : undefined;

/**
 * Converts `value` to an array.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Array} Returns the converted array.
 * @example
 *
 * _.toArray({ 'a': 1, 'b': 2 });
 * // => [1, 2]
 *
 * _.toArray('abc');
 * // => ['a', 'b', 'c']
 *
 * _.toArray(1);
 * // => []
 *
 * _.toArray(null);
 * // => []
 */
function toArray(value) {
  if (!value) {
    return [];
  }
  if (lodash_es_isArrayLike(value)) {
    return lodash_es_isString(value) ? _stringToArray(value) : _copyArray(value);
  }
  if (symIterator && value[symIterator]) {
    return _iteratorToArray(value[symIterator]());
  }
  var tag = _getTag(value),
      func = tag == toArray_mapTag ? _mapToArray : (tag == toArray_setTag ? _setToArray : lodash_es_values);

  return func(value);
}

/* harmony default export */ var lodash_es_toArray = (toArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/next.js


/**
 * Gets the next value on a wrapped object following the
 * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
 *
 * @name next
 * @memberOf _
 * @since 4.0.0
 * @category Seq
 * @returns {Object} Returns the next iterator value.
 * @example
 *
 * var wrapped = _([1, 2]);
 *
 * wrapped.next();
 * // => { 'done': false, 'value': 1 }
 *
 * wrapped.next();
 * // => { 'done': false, 'value': 2 }
 *
 * wrapped.next();
 * // => { 'done': true, 'value': undefined }
 */
function wrapperNext() {
  if (this.__values__ === undefined) {
    this.__values__ = lodash_es_toArray(this.value());
  }
  var done = this.__index__ >= this.__values__.length,
      value = done ? undefined : this.__values__[this.__index__++];

  return { 'done': done, 'value': value };
}

/* harmony default export */ var next = (wrapperNext);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseNth.js


/**
 * The base implementation of `_.nth` which doesn't coerce arguments.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {number} n The index of the element to return.
 * @returns {*} Returns the nth element of `array`.
 */
function baseNth(array, n) {
  var length = array.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return _isIndex(n, length) ? array[n] : undefined;
}

/* harmony default export */ var _baseNth = (baseNth);

// CONCATENATED MODULE: ./node_modules/lodash-es/nth.js



/**
 * Gets the element at index `n` of `array`. If `n` is negative, the nth
 * element from the end is returned.
 *
 * @static
 * @memberOf _
 * @since 4.11.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=0] The index of the element to return.
 * @returns {*} Returns the nth element of `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'd'];
 *
 * _.nth(array, 1);
 * // => 'b'
 *
 * _.nth(array, -2);
 * // => 'c';
 */
function nth(array, n) {
  return (array && array.length) ? _baseNth(array, lodash_es_toInteger(n)) : undefined;
}

/* harmony default export */ var lodash_es_nth = (nth);

// CONCATENATED MODULE: ./node_modules/lodash-es/nthArg.js




/**
 * Creates a function that gets the argument at index `n`. If `n` is negative,
 * the nth argument from the end is returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {number} [n=0] The index of the argument to return.
 * @returns {Function} Returns the new pass-thru function.
 * @example
 *
 * var func = _.nthArg(1);
 * func('a', 'b', 'c', 'd');
 * // => 'b'
 *
 * var func = _.nthArg(-2);
 * func('a', 'b', 'c', 'd');
 * // => 'c'
 */
function nthArg(n) {
  n = lodash_es_toInteger(n);
  return _baseRest(function(args) {
    return _baseNth(args, n);
  });
}

/* harmony default export */ var lodash_es_nthArg = (nthArg);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseUnset.js





/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = _castPath(path, object);
  object = _parent(object, path);
  return object == null || delete object[_toKey(lodash_es_last(path))];
}

/* harmony default export */ var _baseUnset = (baseUnset);

// CONCATENATED MODULE: ./node_modules/lodash-es/_customOmitClone.js


/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return Object(isPlainObject["default"])(value) ? undefined : value;
}

/* harmony default export */ var _customOmitClone = (customOmitClone);

// CONCATENATED MODULE: ./node_modules/lodash-es/omit.js









/** Used to compose bitmasks for cloning. */
var omit_CLONE_DEEP_FLAG = 1,
    omit_CLONE_FLAT_FLAG = 2,
    omit_CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = _flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = _arrayMap(paths, function(path) {
    path = _castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  _copyObject(object, _getAllKeysIn(object), result);
  if (isDeep) {
    result = _baseClone(result, omit_CLONE_DEEP_FLAG | omit_CLONE_FLAT_FLAG | omit_CLONE_SYMBOLS_FLAG, _customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    _baseUnset(result, paths[length]);
  }
  return result;
});

/* harmony default export */ var lodash_es_omit = (omit);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSet.js






/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!lodash_es_isObject(object)) {
    return object;
  }
  path = _castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = _toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = lodash_es_isObject(objValue)
          ? objValue
          : (_isIndex(path[index + 1]) ? [] : {});
      }
    }
    _assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

/* harmony default export */ var _baseSet = (baseSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePickBy.js




/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = _baseGet(object, path);

    if (predicate(value, path)) {
      _baseSet(result, _castPath(path, object), value);
    }
  }
  return result;
}

/* harmony default export */ var _basePickBy = (basePickBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/pickBy.js





/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = _arrayMap(_getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = _baseIteratee(predicate);
  return _basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

/* harmony default export */ var lodash_es_pickBy = (pickBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/omitBy.js




/**
 * The opposite of `_.pickBy`; this method creates an object composed of
 * the own and inherited enumerable string keyed properties of `object` that
 * `predicate` doesn't return truthy for. The predicate is invoked with two
 * arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omitBy(object, _.isNumber);
 * // => { 'b': '2' }
 */
function omitBy(object, predicate) {
  return lodash_es_pickBy(object, lodash_es_negate(_baseIteratee(predicate)));
}

/* harmony default export */ var lodash_es_omitBy = (omitBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/once.js


/**
 * Creates a function that is restricted to invoking `func` once. Repeat calls
 * to the function return the value of the first invocation. The `func` is
 * invoked with the `this` binding and arguments of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var initialize = _.once(createApplication);
 * initialize();
 * initialize();
 * // => `createApplication` is invoked once
 */
function once(func) {
  return lodash_es_before(2, func);
}

/* harmony default export */ var lodash_es_once = (once);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSortBy.js
/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

/* harmony default export */ var _baseSortBy = (baseSortBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_compareAscending.js


/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = lodash_es_isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = lodash_es_isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

/* harmony default export */ var _compareAscending = (compareAscending);

// CONCATENATED MODULE: ./node_modules/lodash-es/_compareMultiple.js


/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = _compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

/* harmony default export */ var _compareMultiple = (compareMultiple);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseOrderBy.js










/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = _arrayMap(iteratees, function(iteratee) {
      if (lodash_es_isArray(iteratee)) {
        return function(value) {
          return _baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        }
      }
      return iteratee;
    });
  } else {
    iteratees = [lodash_es_identity];
  }

  var index = -1;
  iteratees = _arrayMap(iteratees, _baseUnary(_baseIteratee));

  var result = _baseMap(collection, function(value, key, collection) {
    var criteria = _arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return _baseSortBy(result, function(object, other) {
    return _compareMultiple(object, other, orders);
  });
}

/* harmony default export */ var _baseOrderBy = (baseOrderBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/orderBy.js



/**
 * This method is like `_.sortBy` except that it allows specifying the sort
 * orders of the iteratees to sort by. If `orders` is unspecified, all values
 * are sorted in ascending order. Otherwise, specify an order of "desc" for
 * descending or "asc" for ascending sort order of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @param {string[]} [orders] The sort orders of `iteratees`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 34 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 36 }
 * ];
 *
 * // Sort by `user` in ascending order and by `age` in descending order.
 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 */
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!lodash_es_isArray(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? undefined : orders;
  if (!lodash_es_isArray(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return _baseOrderBy(collection, iteratees, orders);
}

/* harmony default export */ var lodash_es_orderBy = (orderBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createOver.js







/**
 * Creates a function like `_.over`.
 *
 * @private
 * @param {Function} arrayFunc The function to iterate over iteratees.
 * @returns {Function} Returns the new over function.
 */
function createOver(arrayFunc) {
  return _flatRest(function(iteratees) {
    iteratees = _arrayMap(iteratees, _baseUnary(_baseIteratee));
    return _baseRest(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee) {
        return _apply(iteratee, thisArg, args);
      });
    });
  });
}

/* harmony default export */ var _createOver = (createOver);

// CONCATENATED MODULE: ./node_modules/lodash-es/over.js



/**
 * Creates a function that invokes `iteratees` with the arguments it receives
 * and returns their results.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to invoke.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.over([Math.max, Math.min]);
 *
 * func(1, 2, 3, 4);
 * // => [4, 1]
 */
var over = _createOver(_arrayMap);

/* harmony default export */ var lodash_es_over = (over);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castRest.js


/**
 * A `baseRest` alias which can be replaced with `identity` by module
 * replacement plugins.
 *
 * @private
 * @type {Function}
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
var castRest = _baseRest;

/* harmony default export */ var _castRest = (castRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/overArgs.js









/* Built-in method references for those with the same name as other `lodash` methods. */
var overArgs_nativeMin = Math.min;

/**
 * Creates a function that invokes `func` with its arguments transformed.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Function
 * @param {Function} func The function to wrap.
 * @param {...(Function|Function[])} [transforms=[_.identity]]
 *  The argument transforms.
 * @returns {Function} Returns the new function.
 * @example
 *
 * function doubled(n) {
 *   return n * 2;
 * }
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var func = _.overArgs(function(x, y) {
 *   return [x, y];
 * }, [square, doubled]);
 *
 * func(9, 3);
 * // => [81, 6]
 *
 * func(10, 5);
 * // => [100, 10]
 */
var overArgs = _castRest(function(func, transforms) {
  transforms = (transforms.length == 1 && lodash_es_isArray(transforms[0]))
    ? _arrayMap(transforms[0], _baseUnary(_baseIteratee))
    : _arrayMap(_baseFlatten(transforms, 1), _baseUnary(_baseIteratee));

  var funcsLength = transforms.length;
  return _baseRest(function(args) {
    var index = -1,
        length = overArgs_nativeMin(args.length, funcsLength);

    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }
    return _apply(func, this, args);
  });
});

/* harmony default export */ var lodash_es_overArgs = (overArgs);

// CONCATENATED MODULE: ./node_modules/lodash-es/overEvery.js



/**
 * Creates a function that checks if **all** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * Following shorthands are possible for providing predicates.
 * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
 * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [predicates=[_.identity]]
 *  The predicates to check.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.overEvery([Boolean, isFinite]);
 *
 * func('1');
 * // => true
 *
 * func(null);
 * // => false
 *
 * func(NaN);
 * // => false
 */
var overEvery = _createOver(_arrayEvery);

/* harmony default export */ var lodash_es_overEvery = (overEvery);

// CONCATENATED MODULE: ./node_modules/lodash-es/overSome.js



/**
 * Creates a function that checks if **any** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * Following shorthands are possible for providing predicates.
 * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
 * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [predicates=[_.identity]]
 *  The predicates to check.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.overSome([Boolean, isFinite]);
 *
 * func('1');
 * // => true
 *
 * func(null);
 * // => true
 *
 * func(NaN);
 * // => false
 *
 * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
 * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
 */
var overSome = _createOver(_arraySome);

/* harmony default export */ var lodash_es_overSome = (overSome);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseRepeat.js
/** Used as references for various `Number` constants. */
var _baseRepeat_MAX_SAFE_INTEGER = 9007199254740991;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeFloor = Math.floor;

/**
 * The base implementation of `_.repeat` which doesn't coerce arguments.
 *
 * @private
 * @param {string} string The string to repeat.
 * @param {number} n The number of times to repeat the string.
 * @returns {string} Returns the repeated string.
 */
function baseRepeat(string, n) {
  var result = '';
  if (!string || n < 1 || n > _baseRepeat_MAX_SAFE_INTEGER) {
    return result;
  }
  // Leverage the exponentiation by squaring algorithm for a faster repeat.
  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
  do {
    if (n % 2) {
      result += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);

  return result;
}

/* harmony default export */ var _baseRepeat = (baseRepeat);

// CONCATENATED MODULE: ./node_modules/lodash-es/_asciiSize.js


/**
 * Gets the size of an ASCII `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
var asciiSize = _baseProperty('length');

/* harmony default export */ var _asciiSize = (asciiSize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_unicodeSize.js
/** Used to compose unicode character classes. */
var _unicodeSize_rsAstralRange = '\\ud800-\\udfff',
    _unicodeSize_rsComboMarksRange = '\\u0300-\\u036f',
    _unicodeSize_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    _unicodeSize_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    _unicodeSize_rsComboRange = _unicodeSize_rsComboMarksRange + _unicodeSize_reComboHalfMarksRange + _unicodeSize_rsComboSymbolsRange,
    _unicodeSize_rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var _unicodeSize_rsAstral = '[' + _unicodeSize_rsAstralRange + ']',
    _unicodeSize_rsCombo = '[' + _unicodeSize_rsComboRange + ']',
    _unicodeSize_rsFitz = '\\ud83c[\\udffb-\\udfff]',
    _unicodeSize_rsModifier = '(?:' + _unicodeSize_rsCombo + '|' + _unicodeSize_rsFitz + ')',
    _unicodeSize_rsNonAstral = '[^' + _unicodeSize_rsAstralRange + ']',
    _unicodeSize_rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    _unicodeSize_rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    _unicodeSize_rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var _unicodeSize_reOptMod = _unicodeSize_rsModifier + '?',
    _unicodeSize_rsOptVar = '[' + _unicodeSize_rsVarRange + ']?',
    _unicodeSize_rsOptJoin = '(?:' + _unicodeSize_rsZWJ + '(?:' + [_unicodeSize_rsNonAstral, _unicodeSize_rsRegional, _unicodeSize_rsSurrPair].join('|') + ')' + _unicodeSize_rsOptVar + _unicodeSize_reOptMod + ')*',
    _unicodeSize_rsSeq = _unicodeSize_rsOptVar + _unicodeSize_reOptMod + _unicodeSize_rsOptJoin,
    _unicodeSize_rsSymbol = '(?:' + [_unicodeSize_rsNonAstral + _unicodeSize_rsCombo + '?', _unicodeSize_rsCombo, _unicodeSize_rsRegional, _unicodeSize_rsSurrPair, _unicodeSize_rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var _unicodeSize_reUnicode = RegExp(_unicodeSize_rsFitz + '(?=' + _unicodeSize_rsFitz + ')|' + _unicodeSize_rsSymbol + _unicodeSize_rsSeq, 'g');

/**
 * Gets the size of a Unicode `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
function unicodeSize(string) {
  var result = _unicodeSize_reUnicode.lastIndex = 0;
  while (_unicodeSize_reUnicode.test(string)) {
    ++result;
  }
  return result;
}

/* harmony default export */ var _unicodeSize = (unicodeSize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stringSize.js




/**
 * Gets the number of symbols in `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the string size.
 */
function stringSize(string) {
  return _hasUnicode(string)
    ? _unicodeSize(string)
    : _asciiSize(string);
}

/* harmony default export */ var _stringSize = (stringSize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createPadding.js







/* Built-in method references for those with the same name as other `lodash` methods. */
var _createPadding_nativeCeil = Math.ceil;

/**
 * Creates the padding for `string` based on `length`. The `chars` string
 * is truncated if the number of characters exceeds `length`.
 *
 * @private
 * @param {number} length The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padding for `string`.
 */
function createPadding(length, chars) {
  chars = chars === undefined ? ' ' : _baseToString(chars);

  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? _baseRepeat(chars, length) : chars;
  }
  var result = _baseRepeat(chars, _createPadding_nativeCeil(length / _stringSize(chars)));
  return _hasUnicode(chars)
    ? _castSlice(_stringToArray(result), 0, length).join('')
    : result.slice(0, length);
}

/* harmony default export */ var _createPadding = (createPadding);

// CONCATENATED MODULE: ./node_modules/lodash-es/pad.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var pad_nativeCeil = Math.ceil,
    pad_nativeFloor = Math.floor;

/**
 * Pads `string` on the left and right sides if it's shorter than `length`.
 * Padding characters are truncated if they can't be evenly divided by `length`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.pad('abc', 8);
 * // => '  abc   '
 *
 * _.pad('abc', 8, '_-');
 * // => '_-abc_-_'
 *
 * _.pad('abc', 3);
 * // => 'abc'
 */
function pad(string, length, chars) {
  string = lodash_es_toString(string);
  length = lodash_es_toInteger(length);

  var strLength = length ? _stringSize(string) : 0;
  if (!length || strLength >= length) {
    return string;
  }
  var mid = (length - strLength) / 2;
  return (
    _createPadding(pad_nativeFloor(mid), chars) +
    string +
    _createPadding(pad_nativeCeil(mid), chars)
  );
}

/* harmony default export */ var lodash_es_pad = (pad);

// CONCATENATED MODULE: ./node_modules/lodash-es/padEnd.js





/**
 * Pads `string` on the right side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.padEnd('abc', 6);
 * // => 'abc   '
 *
 * _.padEnd('abc', 6, '_-');
 * // => 'abc_-_'
 *
 * _.padEnd('abc', 3);
 * // => 'abc'
 */
function padEnd(string, length, chars) {
  string = lodash_es_toString(string);
  length = lodash_es_toInteger(length);

  var strLength = length ? _stringSize(string) : 0;
  return (length && strLength < length)
    ? (string + _createPadding(length - strLength, chars))
    : string;
}

/* harmony default export */ var lodash_es_padEnd = (padEnd);

// CONCATENATED MODULE: ./node_modules/lodash-es/padStart.js





/**
 * Pads `string` on the left side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.padStart('abc', 6);
 * // => '   abc'
 *
 * _.padStart('abc', 6, '_-');
 * // => '_-_abc'
 *
 * _.padStart('abc', 3);
 * // => 'abc'
 */
function padStart(string, length, chars) {
  string = lodash_es_toString(string);
  length = lodash_es_toInteger(length);

  var strLength = length ? _stringSize(string) : 0;
  return (length && strLength < length)
    ? (_createPadding(length - strLength, chars) + string)
    : string;
}

/* harmony default export */ var lodash_es_padStart = (padStart);

// CONCATENATED MODULE: ./node_modules/lodash-es/parseInt.js



/** Used to match leading whitespace. */
var parseInt_reTrimStart = /^\s+/;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeParseInt = _root["a" /* default */].parseInt;

/**
 * Converts `string` to an integer of the specified radix. If `radix` is
 * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
 * hexadecimal, in which case a `radix` of `16` is used.
 *
 * **Note:** This method aligns with the
 * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category String
 * @param {string} string The string to convert.
 * @param {number} [radix=10] The radix to interpret `value` by.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.parseInt('08');
 * // => 8
 *
 * _.map(['6', '08', '10'], _.parseInt);
 * // => [6, 8, 10]
 */
function parseInt_parseInt(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(lodash_es_toString(string).replace(parseInt_reTrimStart, ''), radix || 0);
}

/* harmony default export */ var lodash_es_parseInt = (parseInt_parseInt);

// CONCATENATED MODULE: ./node_modules/lodash-es/partial.js





/** Used to compose bitmasks for function metadata. */
var partial_WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes `func` with `partials` prepended to the
 * arguments it receives. This method is like `_.bind` except it does **not**
 * alter the `this` binding.
 *
 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 0.2.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var sayHelloTo = _.partial(greet, 'hello');
 * sayHelloTo('fred');
 * // => 'hello fred'
 *
 * // Partially applied with placeholders.
 * var greetFred = _.partial(greet, _, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 */
var partial = _baseRest(function(func, partials) {
  var holders = _replaceHolders(partials, _getHolder(partial));
  return _createWrap(func, partial_WRAP_PARTIAL_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partial.placeholder = {};

/* harmony default export */ var lodash_es_partial = (partial);

// CONCATENATED MODULE: ./node_modules/lodash-es/partialRight.js





/** Used to compose bitmasks for function metadata. */
var partialRight_WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * This method is like `_.partial` except that partially applied arguments
 * are appended to the arguments it receives.
 *
 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var greetFred = _.partialRight(greet, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 *
 * // Partially applied with placeholders.
 * var sayHelloTo = _.partialRight(greet, 'hello', _);
 * sayHelloTo('fred');
 * // => 'hello fred'
 */
var partialRight = _baseRest(function(func, partials) {
  var holders = _replaceHolders(partials, _getHolder(partialRight));
  return _createWrap(func, partialRight_WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partialRight.placeholder = {};

/* harmony default export */ var lodash_es_partialRight = (partialRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/partition.js


/**
 * Creates an array of elements split into two groups, the first of which
 * contains elements `predicate` returns truthy for, the second of which
 * contains elements `predicate` returns falsey for. The predicate is
 * invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of grouped elements.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': false },
 *   { 'user': 'fred',    'age': 40, 'active': true },
 *   { 'user': 'pebbles', 'age': 1,  'active': false }
 * ];
 *
 * _.partition(users, function(o) { return o.active; });
 * // => objects for [['fred'], ['barney', 'pebbles']]
 *
 * // The `_.matches` iteratee shorthand.
 * _.partition(users, { 'age': 1, 'active': false });
 * // => objects for [['pebbles'], ['barney', 'fred']]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.partition(users, ['active', false]);
 * // => objects for [['barney', 'pebbles'], ['fred']]
 *
 * // The `_.property` iteratee shorthand.
 * _.partition(users, 'active');
 * // => objects for [['fred'], ['barney', 'pebbles']]
 */
var partition = _createAggregator(function(result, value, key) {
  result[key ? 0 : 1].push(value);
}, function() { return [[], []]; });

/* harmony default export */ var lodash_es_partition = (partition);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePick.js



/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return _basePickBy(object, paths, function(value, path) {
    return lodash_es_hasIn(object, path);
  });
}

/* harmony default export */ var _basePick = (basePick);

// CONCATENATED MODULE: ./node_modules/lodash-es/pick.js



/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = _flatRest(function(object, paths) {
  return object == null ? {} : _basePick(object, paths);
});

/* harmony default export */ var lodash_es_pick = (pick);

// CONCATENATED MODULE: ./node_modules/lodash-es/plant.js



/**
 * Creates a clone of the chain sequence planting `value` as the wrapped value.
 *
 * @name plant
 * @memberOf _
 * @since 3.2.0
 * @category Seq
 * @param {*} value The value to plant.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2]).map(square);
 * var other = wrapped.plant([3, 4]);
 *
 * other.value();
 * // => [9, 16]
 *
 * wrapped.value();
 * // => [1, 4]
 */
function wrapperPlant(value) {
  var result,
      parent = this;

  while (parent instanceof _baseLodash) {
    var clone = _wrapperClone(parent);
    clone.__index__ = 0;
    clone.__values__ = undefined;
    if (result) {
      previous.__wrapped__ = clone;
    } else {
      result = clone;
    }
    var previous = clone;
    parent = parent.__wrapped__;
  }
  previous.__wrapped__ = value;
  return result;
}

/* harmony default export */ var plant = (wrapperPlant);

// CONCATENATED MODULE: ./node_modules/lodash-es/propertyOf.js


/**
 * The opposite of `_.property`; this method creates a function that returns
 * the value at a given path of `object`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var array = [0, 1, 2],
 *     object = { 'a': array, 'b': array, 'c': array };
 *
 * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
 * // => [2, 0]
 *
 * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
 * // => [2, 0]
 */
function propertyOf(object) {
  return function(path) {
    return object == null ? undefined : _baseGet(object, path);
  };
}

/* harmony default export */ var lodash_es_propertyOf = (propertyOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIndexOfWith.js
/**
 * This function is like `baseIndexOf` except that it accepts a comparator.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var _baseIndexOfWith = (baseIndexOfWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePullAll.js






/** Used for built-in method references. */
var _basePullAll_arrayProto = Array.prototype;

/** Built-in value references. */
var _basePullAll_splice = _basePullAll_arrayProto.splice;

/**
 * The base implementation of `_.pullAllBy` without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 */
function basePullAll(array, values, iteratee, comparator) {
  var indexOf = comparator ? _baseIndexOfWith : _baseIndexOf,
      index = -1,
      length = values.length,
      seen = array;

  if (array === values) {
    values = _copyArray(values);
  }
  if (iteratee) {
    seen = _arrayMap(array, _baseUnary(iteratee));
  }
  while (++index < length) {
    var fromIndex = 0,
        value = values[index],
        computed = iteratee ? iteratee(value) : value;

    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        _basePullAll_splice.call(seen, fromIndex, 1);
      }
      _basePullAll_splice.call(array, fromIndex, 1);
    }
  }
  return array;
}

/* harmony default export */ var _basePullAll = (basePullAll);

// CONCATENATED MODULE: ./node_modules/lodash-es/pullAll.js


/**
 * This method is like `_.pull` except that it accepts an array of values to remove.
 *
 * **Note:** Unlike `_.difference`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pullAll(array, ['a', 'c']);
 * console.log(array);
 * // => ['b', 'b']
 */
function pullAll(array, values) {
  return (array && array.length && values && values.length)
    ? _basePullAll(array, values)
    : array;
}

/* harmony default export */ var lodash_es_pullAll = (pullAll);

// CONCATENATED MODULE: ./node_modules/lodash-es/pull.js



/**
 * Removes all given values from `array` using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
 * to remove elements from an array by predicate.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...*} [values] The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pull(array, 'a', 'c');
 * console.log(array);
 * // => ['b', 'b']
 */
var pull = _baseRest(lodash_es_pullAll);

/* harmony default export */ var lodash_es_pull = (pull);

// CONCATENATED MODULE: ./node_modules/lodash-es/pullAllBy.js



/**
 * This method is like `_.pullAll` except that it accepts `iteratee` which is
 * invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The iteratee is invoked with one argument: (value).
 *
 * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
 *
 * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
 * console.log(array);
 * // => [{ 'x': 2 }]
 */
function pullAllBy(array, values, iteratee) {
  return (array && array.length && values && values.length)
    ? _basePullAll(array, values, _baseIteratee(iteratee, 2))
    : array;
}

/* harmony default export */ var lodash_es_pullAllBy = (pullAllBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/pullAllWith.js


/**
 * This method is like `_.pullAll` except that it accepts `comparator` which
 * is invoked to compare elements of `array` to `values`. The comparator is
 * invoked with two arguments: (arrVal, othVal).
 *
 * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
 *
 * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
 * console.log(array);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
 */
function pullAllWith(array, values, comparator) {
  return (array && array.length && values && values.length)
    ? _basePullAll(array, values, undefined, comparator)
    : array;
}

/* harmony default export */ var lodash_es_pullAllWith = (pullAllWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_basePullAt.js



/** Used for built-in method references. */
var _basePullAt_arrayProto = Array.prototype;

/** Built-in value references. */
var _basePullAt_splice = _basePullAt_arrayProto.splice;

/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (_isIndex(index)) {
        _basePullAt_splice.call(array, index, 1);
      } else {
        _baseUnset(array, index);
      }
    }
  }
  return array;
}

/* harmony default export */ var _basePullAt = (basePullAt);

// CONCATENATED MODULE: ./node_modules/lodash-es/pullAt.js







/**
 * Removes elements from `array` corresponding to `indexes` and returns an
 * array of removed elements.
 *
 * **Note:** Unlike `_.at`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...(number|number[])} [indexes] The indexes of elements to remove.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = ['a', 'b', 'c', 'd'];
 * var pulled = _.pullAt(array, [1, 3]);
 *
 * console.log(array);
 * // => ['a', 'c']
 *
 * console.log(pulled);
 * // => ['b', 'd']
 */
var pullAt = _flatRest(function(array, indexes) {
  var length = array == null ? 0 : array.length,
      result = _baseAt(array, indexes);

  _basePullAt(array, _arrayMap(indexes, function(index) {
    return _isIndex(index, length) ? +index : index;
  }).sort(_compareAscending));

  return result;
});

/* harmony default export */ var lodash_es_pullAt = (pullAt);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseRandom.js
/* Built-in method references for those with the same name as other `lodash` methods. */
var _baseRandom_nativeFloor = Math.floor,
    nativeRandom = Math.random;

/**
 * The base implementation of `_.random` without support for returning
 * floating-point numbers.
 *
 * @private
 * @param {number} lower The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the random number.
 */
function baseRandom(lower, upper) {
  return lower + _baseRandom_nativeFloor(nativeRandom() * (upper - lower + 1));
}

/* harmony default export */ var _baseRandom = (baseRandom);

// CONCATENATED MODULE: ./node_modules/lodash-es/random.js




/** Built-in method references without a dependency on `root`. */
var freeParseFloat = parseFloat;

/* Built-in method references for those with the same name as other `lodash` methods. */
var random_nativeMin = Math.min,
    random_nativeRandom = Math.random;

/**
 * Produces a random number between the inclusive `lower` and `upper` bounds.
 * If only one argument is provided a number between `0` and the given number
 * is returned. If `floating` is `true`, or either `lower` or `upper` are
 * floats, a floating-point number is returned instead of an integer.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @memberOf _
 * @since 0.7.0
 * @category Number
 * @param {number} [lower=0] The lower bound.
 * @param {number} [upper=1] The upper bound.
 * @param {boolean} [floating] Specify returning a floating-point number.
 * @returns {number} Returns the random number.
 * @example
 *
 * _.random(0, 5);
 * // => an integer between 0 and 5
 *
 * _.random(5);
 * // => also an integer between 0 and 5
 *
 * _.random(5, true);
 * // => a floating-point number between 0 and 5
 *
 * _.random(1.2, 5.2);
 * // => a floating-point number between 1.2 and 5.2
 */
function random(lower, upper, floating) {
  if (floating && typeof floating != 'boolean' && _isIterateeCall(lower, upper, floating)) {
    upper = floating = undefined;
  }
  if (floating === undefined) {
    if (typeof upper == 'boolean') {
      floating = upper;
      upper = undefined;
    }
    else if (typeof lower == 'boolean') {
      floating = lower;
      lower = undefined;
    }
  }
  if (lower === undefined && upper === undefined) {
    lower = 0;
    upper = 1;
  }
  else {
    lower = lodash_es_toFinite(lower);
    if (upper === undefined) {
      upper = lower;
      lower = 0;
    } else {
      upper = lodash_es_toFinite(upper);
    }
  }
  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }
  if (floating || lower % 1 || upper % 1) {
    var rand = random_nativeRandom();
    return random_nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
  }
  return _baseRandom(lower, upper);
}

/* harmony default export */ var lodash_es_random = (random);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseRange.js
/* Built-in method references for those with the same name as other `lodash` methods. */
var _baseRange_nativeCeil = Math.ceil,
    _baseRange_nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = _baseRange_nativeMax(_baseRange_nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

/* harmony default export */ var _baseRange = (baseRange);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createRange.js




/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != 'number' && _isIterateeCall(start, end, step)) {
      end = step = undefined;
    }
    // Ensure the sign of `-0` is preserved.
    start = lodash_es_toFinite(start);
    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = lodash_es_toFinite(end);
    }
    step = step === undefined ? (start < end ? 1 : -1) : lodash_es_toFinite(step);
    return _baseRange(start, end, step, fromRight);
  };
}

/* harmony default export */ var _createRange = (createRange);

// CONCATENATED MODULE: ./node_modules/lodash-es/range.js


/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */
var range = _createRange();

/* harmony default export */ var lodash_es_range = (range);

// CONCATENATED MODULE: ./node_modules/lodash-es/rangeRight.js


/**
 * This method is like `_.range` except that it populates values in
 * descending order.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.range
 * @example
 *
 * _.rangeRight(4);
 * // => [3, 2, 1, 0]
 *
 * _.rangeRight(-4);
 * // => [-3, -2, -1, 0]
 *
 * _.rangeRight(1, 5);
 * // => [4, 3, 2, 1]
 *
 * _.rangeRight(0, 20, 5);
 * // => [15, 10, 5, 0]
 *
 * _.rangeRight(0, -4, -1);
 * // => [-3, -2, -1, 0]
 *
 * _.rangeRight(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.rangeRight(0);
 * // => []
 */
var rangeRight = _createRange(true);

/* harmony default export */ var lodash_es_rangeRight = (rangeRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/rearg.js



/** Used to compose bitmasks for function metadata. */
var rearg_WRAP_REARG_FLAG = 256;

/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */
var rearg = _flatRest(function(func, indexes) {
  return _createWrap(func, rearg_WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});

/* harmony default export */ var lodash_es_rearg = (rearg);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseReduce.js
/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection) {
    accumulator = initAccum
      ? (initAccum = false, value)
      : iteratee(accumulator, value, index, collection);
  });
  return accumulator;
}

/* harmony default export */ var _baseReduce = (baseReduce);

// CONCATENATED MODULE: ./node_modules/lodash-es/reduce.js






/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce([1, 2], function(sum, n) {
 *   return sum + n;
 * }, 0);
 * // => 3
 *
 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */
function reduce(collection, iteratee, accumulator) {
  var func = lodash_es_isArray(collection) ? _arrayReduce : _baseReduce,
      initAccum = arguments.length < 3;

  return func(collection, _baseIteratee(iteratee, 4), accumulator, initAccum, _baseEach);
}

/* harmony default export */ var lodash_es_reduce = (reduce);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayReduceRight.js
/**
 * A specialized version of `_.reduceRight` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the last element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduceRight(array, iteratee, accumulator, initAccum) {
  var length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[--length];
  }
  while (length--) {
    accumulator = iteratee(accumulator, array[length], length, array);
  }
  return accumulator;
}

/* harmony default export */ var _arrayReduceRight = (arrayReduceRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/reduceRight.js






/**
 * This method is like `_.reduce` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduce
 * @example
 *
 * var array = [[0, 1], [2, 3], [4, 5]];
 *
 * _.reduceRight(array, function(flattened, other) {
 *   return flattened.concat(other);
 * }, []);
 * // => [4, 5, 2, 3, 0, 1]
 */
function reduceRight(collection, iteratee, accumulator) {
  var func = lodash_es_isArray(collection) ? _arrayReduceRight : _baseReduce,
      initAccum = arguments.length < 3;

  return func(collection, _baseIteratee(iteratee, 4), accumulator, initAccum, _baseEachRight);
}

/* harmony default export */ var lodash_es_reduceRight = (reduceRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/reject.js






/**
 * The opposite of `_.filter`; this method returns the elements of `collection`
 * that `predicate` does **not** return truthy for.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.filter
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': true }
 * ];
 *
 * _.reject(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.reject(users, { 'age': 40, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.reject(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.reject(users, 'active');
 * // => objects for ['barney']
 */
function reject(collection, predicate) {
  var func = lodash_es_isArray(collection) ? _arrayFilter : _baseFilter;
  return func(collection, lodash_es_negate(_baseIteratee(predicate, 3)));
}

/* harmony default export */ var lodash_es_reject = (reject);

// CONCATENATED MODULE: ./node_modules/lodash-es/remove.js



/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */
function remove(array, predicate) {
  var result = [];
  if (!(array && array.length)) {
    return result;
  }
  var index = -1,
      indexes = [],
      length = array.length;

  predicate = _baseIteratee(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }
  _basePullAt(array, indexes);
  return result;
}

/* harmony default export */ var lodash_es_remove = (remove);

// CONCATENATED MODULE: ./node_modules/lodash-es/repeat.js





/**
 * Repeats the given string `n` times.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to repeat.
 * @param {number} [n=1] The number of times to repeat the string.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the repeated string.
 * @example
 *
 * _.repeat('*', 3);
 * // => '***'
 *
 * _.repeat('abc', 2);
 * // => 'abcabc'
 *
 * _.repeat('abc', 0);
 * // => ''
 */
function repeat(string, n, guard) {
  if ((guard ? _isIterateeCall(string, n, guard) : n === undefined)) {
    n = 1;
  } else {
    n = lodash_es_toInteger(n);
  }
  return _baseRepeat(lodash_es_toString(string), n);
}

/* harmony default export */ var lodash_es_repeat = (repeat);

// CONCATENATED MODULE: ./node_modules/lodash-es/replace.js


/**
 * Replaces matches for `pattern` in `string` with `replacement`.
 *
 * **Note:** This method is based on
 * [`String#replace`](https://mdn.io/String/replace).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to modify.
 * @param {RegExp|string} pattern The pattern to replace.
 * @param {Function|string} replacement The match replacement.
 * @returns {string} Returns the modified string.
 * @example
 *
 * _.replace('Hi Fred', 'Fred', 'Barney');
 * // => 'Hi Barney'
 */
function replace() {
  var args = arguments,
      string = lodash_es_toString(args[0]);

  return args.length < 3 ? string : string.replace(args[1], args[2]);
}

/* harmony default export */ var lodash_es_replace = (replace);

// CONCATENATED MODULE: ./node_modules/lodash-es/rest.js



/** Error message constants. */
var rest_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * created function and arguments from `start` and beyond provided as
 * an array.
 *
 * **Note:** This method is based on the
 * [rest parameter](https://mdn.io/rest_parameters).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.rest(function(what, names) {
 *   return what + ' ' + _.initial(names).join(', ') +
 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
 * });
 *
 * say('hello', 'fred', 'barney', 'pebbles');
 * // => 'hello fred, barney, & pebbles'
 */
function rest(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(rest_FUNC_ERROR_TEXT);
  }
  start = start === undefined ? start : lodash_es_toInteger(start);
  return _baseRest(func, start);
}

/* harmony default export */ var lodash_es_rest = (rest);

// CONCATENATED MODULE: ./node_modules/lodash-es/result.js




/**
 * This method is like `_.get` except that if the resolved value is a
 * function it's invoked with the `this` binding of its parent object and
 * its result is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to resolve.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
 *
 * _.result(object, 'a[0].b.c1');
 * // => 3
 *
 * _.result(object, 'a[0].b.c2');
 * // => 4
 *
 * _.result(object, 'a[0].b.c3', 'default');
 * // => 'default'
 *
 * _.result(object, 'a[0].b.c3', _.constant('default'));
 * // => 'default'
 */
function result_result(object, path, defaultValue) {
  path = _castPath(path, object);

  var index = -1,
      length = path.length;

  // Ensure the loop is entered when path is empty.
  if (!length) {
    length = 1;
    object = undefined;
  }
  while (++index < length) {
    var value = object == null ? undefined : object[_toKey(path[index])];
    if (value === undefined) {
      index = length;
      value = defaultValue;
    }
    object = lodash_es_isFunction(value) ? value.call(object) : value;
  }
  return object;
}

/* harmony default export */ var lodash_es_result = (result_result);

// CONCATENATED MODULE: ./node_modules/lodash-es/reverse.js
/** Used for built-in method references. */
var reverse_arrayProto = Array.prototype;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeReverse = reverse_arrayProto.reverse;

/**
 * Reverses `array` so that the first element becomes the last, the second
 * element becomes the second to last, and so on.
 *
 * **Note:** This method mutates `array` and is based on
 * [`Array#reverse`](https://mdn.io/Array/reverse).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.reverse(array);
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */
function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}

/* harmony default export */ var lodash_es_reverse = (reverse);

// CONCATENATED MODULE: ./node_modules/lodash-es/round.js


/**
 * Computes `number` rounded to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round.
 * @param {number} [precision=0] The precision to round to.
 * @returns {number} Returns the rounded number.
 * @example
 *
 * _.round(4.006);
 * // => 4
 *
 * _.round(4.006, 2);
 * // => 4.01
 *
 * _.round(4060, -2);
 * // => 4100
 */
var round = _createRound('round');

/* harmony default export */ var lodash_es_round = (round);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arraySample.js


/**
 * A specialized version of `_.sample` for arrays.
 *
 * @private
 * @param {Array} array The array to sample.
 * @returns {*} Returns the random element.
 */
function arraySample(array) {
  var length = array.length;
  return length ? array[_baseRandom(0, length - 1)] : undefined;
}

/* harmony default export */ var _arraySample = (arraySample);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSample.js



/**
 * The base implementation of `_.sample`.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @returns {*} Returns the random element.
 */
function baseSample(collection) {
  return _arraySample(lodash_es_values(collection));
}

/* harmony default export */ var _baseSample = (baseSample);

// CONCATENATED MODULE: ./node_modules/lodash-es/sample.js




/**
 * Gets a random element from `collection`.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to sample.
 * @returns {*} Returns the random element.
 * @example
 *
 * _.sample([1, 2, 3, 4]);
 * // => 2
 */
function sample(collection) {
  var func = lodash_es_isArray(collection) ? _arraySample : _baseSample;
  return func(collection);
}

/* harmony default export */ var lodash_es_sample = (sample);

// CONCATENATED MODULE: ./node_modules/lodash-es/_shuffleSelf.js


/**
 * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
 *
 * @private
 * @param {Array} array The array to shuffle.
 * @param {number} [size=array.length] The size of `array`.
 * @returns {Array} Returns `array`.
 */
function shuffleSelf(array, size) {
  var index = -1,
      length = array.length,
      lastIndex = length - 1;

  size = size === undefined ? length : size;
  while (++index < size) {
    var rand = _baseRandom(index, lastIndex),
        value = array[rand];

    array[rand] = array[index];
    array[index] = value;
  }
  array.length = size;
  return array;
}

/* harmony default export */ var _shuffleSelf = (shuffleSelf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arraySampleSize.js




/**
 * A specialized version of `_.sampleSize` for arrays.
 *
 * @private
 * @param {Array} array The array to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function arraySampleSize(array, n) {
  return _shuffleSelf(_copyArray(array), _baseClamp(n, 0, array.length));
}

/* harmony default export */ var _arraySampleSize = (arraySampleSize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSampleSize.js




/**
 * The base implementation of `_.sampleSize` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function baseSampleSize(collection, n) {
  var array = lodash_es_values(collection);
  return _shuffleSelf(array, _baseClamp(n, 0, array.length));
}

/* harmony default export */ var _baseSampleSize = (baseSampleSize);

// CONCATENATED MODULE: ./node_modules/lodash-es/sampleSize.js






/**
 * Gets `n` random elements at unique keys from `collection` up to the
 * size of `collection`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to sample.
 * @param {number} [n=1] The number of elements to sample.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the random elements.
 * @example
 *
 * _.sampleSize([1, 2, 3], 2);
 * // => [3, 1]
 *
 * _.sampleSize([1, 2, 3], 4);
 * // => [2, 3, 1]
 */
function sampleSize(collection, n, guard) {
  if ((guard ? _isIterateeCall(collection, n, guard) : n === undefined)) {
    n = 1;
  } else {
    n = lodash_es_toInteger(n);
  }
  var func = lodash_es_isArray(collection) ? _arraySampleSize : _baseSampleSize;
  return func(collection, n);
}

/* harmony default export */ var lodash_es_sampleSize = (sampleSize);

// CONCATENATED MODULE: ./node_modules/lodash-es/set.js


/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set_set(object, path, value) {
  return object == null ? object : _baseSet(object, path, value);
}

/* harmony default export */ var lodash_es_set = (set_set);

// CONCATENATED MODULE: ./node_modules/lodash-es/setWith.js


/**
 * This method is like `_.set` except that it accepts `customizer` which is
 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
 * path creation is handled by the method instead. The `customizer` is invoked
 * with three arguments: (nsValue, key, nsObject).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {};
 *
 * _.setWith(object, '[0][1]', 'a', Object);
 * // => { '0': { '1': 'a' } }
 */
function setWith(object, path, value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return object == null ? object : _baseSet(object, path, value, customizer);
}

/* harmony default export */ var lodash_es_setWith = (setWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayShuffle.js



/**
 * A specialized version of `_.shuffle` for arrays.
 *
 * @private
 * @param {Array} array The array to shuffle.
 * @returns {Array} Returns the new shuffled array.
 */
function arrayShuffle(array) {
  return _shuffleSelf(_copyArray(array));
}

/* harmony default export */ var _arrayShuffle = (arrayShuffle);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseShuffle.js



/**
 * The base implementation of `_.shuffle`.
 *
 * @private
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 */
function baseShuffle(collection) {
  return _shuffleSelf(lodash_es_values(collection));
}

/* harmony default export */ var _baseShuffle = (baseShuffle);

// CONCATENATED MODULE: ./node_modules/lodash-es/shuffle.js




/**
 * Creates an array of shuffled values, using a version of the
 * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 * @example
 *
 * _.shuffle([1, 2, 3, 4]);
 * // => [4, 1, 3, 2]
 */
function shuffle(collection) {
  var func = lodash_es_isArray(collection) ? _arrayShuffle : _baseShuffle;
  return func(collection);
}

/* harmony default export */ var lodash_es_shuffle = (shuffle);

// CONCATENATED MODULE: ./node_modules/lodash-es/size.js






/** `Object#toString` result references. */
var size_mapTag = '[object Map]',
    size_setTag = '[object Set]';

/**
 * Gets the size of `collection` by returning its length for array-like
 * values or the number of own enumerable string keyed properties for objects.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @returns {number} Returns the collection size.
 * @example
 *
 * _.size([1, 2, 3]);
 * // => 3
 *
 * _.size({ 'a': 1, 'b': 2 });
 * // => 2
 *
 * _.size('pebbles');
 * // => 7
 */
function size_size(collection) {
  if (collection == null) {
    return 0;
  }
  if (lodash_es_isArrayLike(collection)) {
    return lodash_es_isString(collection) ? _stringSize(collection) : collection.length;
  }
  var tag = _getTag(collection);
  if (tag == size_mapTag || tag == size_setTag) {
    return collection.size;
  }
  return _baseKeys(collection).length;
}

/* harmony default export */ var lodash_es_size = (size_size);

// CONCATENATED MODULE: ./node_modules/lodash-es/slice.js




/**
 * Creates a slice of `array` from `start` up to, but not including, `end`.
 *
 * **Note:** This method is used instead of
 * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
 * returned.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (end && typeof end != 'number' && _isIterateeCall(array, start, end)) {
    start = 0;
    end = length;
  }
  else {
    start = start == null ? 0 : lodash_es_toInteger(start);
    end = end === undefined ? length : lodash_es_toInteger(end);
  }
  return _baseSlice(array, start, end);
}

/* harmony default export */ var lodash_es_slice = (slice);

// CONCATENATED MODULE: ./node_modules/lodash-es/snakeCase.js


/**
 * Converts `string` to
 * [snake case](https://en.wikipedia.org/wiki/Snake_case).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the snake cased string.
 * @example
 *
 * _.snakeCase('Foo Bar');
 * // => 'foo_bar'
 *
 * _.snakeCase('fooBar');
 * // => 'foo_bar'
 *
 * _.snakeCase('--FOO-BAR--');
 * // => 'foo_bar'
 */
var snakeCase = _createCompounder(function(result, word, index) {
  return result + (index ? '_' : '') + word.toLowerCase();
});

/* harmony default export */ var lodash_es_snakeCase = (snakeCase);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSome.js


/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function baseSome(collection, predicate) {
  var result;

  _baseEach(collection, function(value, index, collection) {
    result = predicate(value, index, collection);
    return !result;
  });
  return !!result;
}

/* harmony default export */ var _baseSome = (baseSome);

// CONCATENATED MODULE: ./node_modules/lodash-es/some.js






/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */
function some(collection, predicate, guard) {
  var func = lodash_es_isArray(collection) ? _arraySome : _baseSome;
  if (guard && _isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, _baseIteratee(predicate, 3));
}

/* harmony default export */ var lodash_es_some = (some);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortBy.js





/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 30 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
 */
var sortBy = _baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && _isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && _isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return _baseOrderBy(collection, _baseFlatten(iteratees, 1), []);
});

/* harmony default export */ var lodash_es_sortBy = (sortBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSortedIndexBy.js


/** Used as references for the maximum length and index of an array. */
var _baseSortedIndexBy_MAX_ARRAY_LENGTH = 4294967295,
    MAX_ARRAY_INDEX = _baseSortedIndexBy_MAX_ARRAY_LENGTH - 1;

/* Built-in method references for those with the same name as other `lodash` methods. */
var _baseSortedIndexBy_nativeFloor = Math.floor,
    _baseSortedIndexBy_nativeMin = Math.min;

/**
 * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
 * which invokes `iteratee` for `value` and each element of `array` to compute
 * their sort ranking. The iteratee is invoked with one argument; (value).
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} iteratee The iteratee invoked per element.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */
function baseSortedIndexBy(array, value, iteratee, retHighest) {
  var low = 0,
      high = array == null ? 0 : array.length;
  if (high === 0) {
    return 0;
  }

  value = iteratee(value);
  var valIsNaN = value !== value,
      valIsNull = value === null,
      valIsSymbol = lodash_es_isSymbol(value),
      valIsUndefined = value === undefined;

  while (low < high) {
    var mid = _baseSortedIndexBy_nativeFloor((low + high) / 2),
        computed = iteratee(array[mid]),
        othIsDefined = computed !== undefined,
        othIsNull = computed === null,
        othIsReflexive = computed === computed,
        othIsSymbol = lodash_es_isSymbol(computed);

    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? (computed <= value) : (computed < value);
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return _baseSortedIndexBy_nativeMin(high, MAX_ARRAY_INDEX);
}

/* harmony default export */ var _baseSortedIndexBy = (baseSortedIndexBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSortedIndex.js




/** Used as references for the maximum length and index of an array. */
var _baseSortedIndex_MAX_ARRAY_LENGTH = 4294967295,
    HALF_MAX_ARRAY_LENGTH = _baseSortedIndex_MAX_ARRAY_LENGTH >>> 1;

/**
 * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
 * performs a binary search of `array` to determine the index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */
function baseSortedIndex(array, value, retHighest) {
  var low = 0,
      high = array == null ? low : array.length;

  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = (low + high) >>> 1,
          computed = array[mid];

      if (computed !== null && !lodash_es_isSymbol(computed) &&
          (retHighest ? (computed <= value) : (computed < value))) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return _baseSortedIndexBy(array, value, lodash_es_identity, retHighest);
}

/* harmony default export */ var _baseSortedIndex = (baseSortedIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedIndex.js


/**
 * Uses a binary search to determine the lowest index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * _.sortedIndex([30, 50], 40);
 * // => 1
 */
function sortedIndex(array, value) {
  return _baseSortedIndex(array, value);
}

/* harmony default export */ var lodash_es_sortedIndex = (sortedIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedIndexBy.js



/**
 * This method is like `_.sortedIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
 * // => 0
 */
function sortedIndexBy(array, value, iteratee) {
  return _baseSortedIndexBy(array, value, _baseIteratee(iteratee, 2));
}

/* harmony default export */ var lodash_es_sortedIndexBy = (sortedIndexBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedIndexOf.js



/**
 * This method is like `_.indexOf` except that it performs a binary
 * search on a sorted `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
 * // => 1
 */
function sortedIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = _baseSortedIndex(array, value);
    if (index < length && lodash_es_eq(array[index], value)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var lodash_es_sortedIndexOf = (sortedIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedLastIndex.js


/**
 * This method is like `_.sortedIndex` except that it returns the highest
 * index at which `value` should be inserted into `array` in order to
 * maintain its sort order.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
 * // => 4
 */
function sortedLastIndex(array, value) {
  return _baseSortedIndex(array, value, true);
}

/* harmony default export */ var lodash_es_sortedLastIndex = (sortedLastIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedLastIndexBy.js



/**
 * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 1
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
 * // => 1
 */
function sortedLastIndexBy(array, value, iteratee) {
  return _baseSortedIndexBy(array, value, _baseIteratee(iteratee, 2), true);
}

/* harmony default export */ var lodash_es_sortedLastIndexBy = (sortedLastIndexBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedLastIndexOf.js



/**
 * This method is like `_.lastIndexOf` except that it performs a binary
 * search on a sorted `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
 * // => 3
 */
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = _baseSortedIndex(array, value, true) - 1;
    if (lodash_es_eq(array[index], value)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ var lodash_es_sortedLastIndexOf = (sortedLastIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSortedUniq.js


/**
 * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseSortedUniq(array, iteratee) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    if (!index || !lodash_es_eq(computed, seen)) {
      var seen = computed;
      result[resIndex++] = value === 0 ? 0 : value;
    }
  }
  return result;
}

/* harmony default export */ var _baseSortedUniq = (baseSortedUniq);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedUniq.js


/**
 * This method is like `_.uniq` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniq([1, 1, 2]);
 * // => [1, 2]
 */
function sortedUniq(array) {
  return (array && array.length)
    ? _baseSortedUniq(array)
    : [];
}

/* harmony default export */ var lodash_es_sortedUniq = (sortedUniq);

// CONCATENATED MODULE: ./node_modules/lodash-es/sortedUniqBy.js



/**
 * This method is like `_.uniqBy` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
 * // => [1.1, 2.3]
 */
function sortedUniqBy(array, iteratee) {
  return (array && array.length)
    ? _baseSortedUniq(array, _baseIteratee(iteratee, 2))
    : [];
}

/* harmony default export */ var lodash_es_sortedUniqBy = (sortedUniqBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/split.js








/** Used as references for the maximum length and index of an array. */
var split_MAX_ARRAY_LENGTH = 4294967295;

/**
 * Splits `string` by `separator`.
 *
 * **Note:** This method is based on
 * [`String#split`](https://mdn.io/String/split).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to split.
 * @param {RegExp|string} separator The separator pattern to split by.
 * @param {number} [limit] The length to truncate results to.
 * @returns {Array} Returns the string segments.
 * @example
 *
 * _.split('a-b-c', '-', 2);
 * // => ['a', 'b']
 */
function split(string, separator, limit) {
  if (limit && typeof limit != 'number' && _isIterateeCall(string, separator, limit)) {
    separator = limit = undefined;
  }
  limit = limit === undefined ? split_MAX_ARRAY_LENGTH : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = lodash_es_toString(string);
  if (string && (
        typeof separator == 'string' ||
        (separator != null && !lodash_es_isRegExp(separator))
      )) {
    separator = _baseToString(separator);
    if (!separator && _hasUnicode(string)) {
      return _castSlice(_stringToArray(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}

/* harmony default export */ var lodash_es_split = (split);

// CONCATENATED MODULE: ./node_modules/lodash-es/spread.js






/** Error message constants. */
var spread_FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var spread_nativeMax = Math.max;

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * create function and an array of arguments much like
 * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
 *
 * **Note:** This method is based on the
 * [spread operator](https://mdn.io/spread_operator).
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Function
 * @param {Function} func The function to spread arguments over.
 * @param {number} [start=0] The start position of the spread.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.spread(function(who, what) {
 *   return who + ' says ' + what;
 * });
 *
 * say(['fred', 'hello']);
 * // => 'fred says hello'
 *
 * var numbers = Promise.all([
 *   Promise.resolve(40),
 *   Promise.resolve(36)
 * ]);
 *
 * numbers.then(_.spread(function(x, y) {
 *   return x + y;
 * }));
 * // => a Promise of 76
 */
function spread(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(spread_FUNC_ERROR_TEXT);
  }
  start = start == null ? 0 : spread_nativeMax(lodash_es_toInteger(start), 0);
  return _baseRest(function(args) {
    var array = args[start],
        otherArgs = _castSlice(args, 0, start);

    if (array) {
      _arrayPush(otherArgs, array);
    }
    return _apply(func, this, otherArgs);
  });
}

/* harmony default export */ var lodash_es_spread = (spread);

// CONCATENATED MODULE: ./node_modules/lodash-es/startCase.js



/**
 * Converts `string` to
 * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
 *
 * @static
 * @memberOf _
 * @since 3.1.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the start cased string.
 * @example
 *
 * _.startCase('--foo-bar--');
 * // => 'Foo Bar'
 *
 * _.startCase('fooBar');
 * // => 'Foo Bar'
 *
 * _.startCase('__FOO_BAR__');
 * // => 'FOO BAR'
 */
var startCase = _createCompounder(function(result, word, index) {
  return result + (index ? ' ' : '') + lodash_es_upperFirst(word);
});

/* harmony default export */ var lodash_es_startCase = (startCase);

// CONCATENATED MODULE: ./node_modules/lodash-es/startsWith.js





/**
 * Checks if `string` starts with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=0] The position to search from.
 * @returns {boolean} Returns `true` if `string` starts with `target`,
 *  else `false`.
 * @example
 *
 * _.startsWith('abc', 'a');
 * // => true
 *
 * _.startsWith('abc', 'b');
 * // => false
 *
 * _.startsWith('abc', 'b', 1);
 * // => true
 */
function startsWith(string, target, position) {
  string = lodash_es_toString(string);
  position = position == null
    ? 0
    : _baseClamp(lodash_es_toInteger(position), 0, string.length);

  target = _baseToString(target);
  return string.slice(position, position + target.length) == target;
}

/* harmony default export */ var lodash_es_startsWith = (startsWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/stubObject.js
/**
 * This method returns a new empty object.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Object} Returns the new empty object.
 * @example
 *
 * var objects = _.times(2, _.stubObject);
 *
 * console.log(objects);
 * // => [{}, {}]
 *
 * console.log(objects[0] === objects[1]);
 * // => false
 */
function stubObject() {
  return {};
}

/* harmony default export */ var lodash_es_stubObject = (stubObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/stubString.js
/**
 * This method returns an empty string.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {string} Returns the empty string.
 * @example
 *
 * _.times(2, _.stubString);
 * // => ['', '']
 */
function stubString() {
  return '';
}

/* harmony default export */ var lodash_es_stubString = (stubString);

// CONCATENATED MODULE: ./node_modules/lodash-es/stubTrue.js
/**
 * This method returns `true`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `true`.
 * @example
 *
 * _.times(2, _.stubTrue);
 * // => [true, true]
 */
function stubTrue() {
  return true;
}

/* harmony default export */ var lodash_es_stubTrue = (stubTrue);

// CONCATENATED MODULE: ./node_modules/lodash-es/subtract.js


/**
 * Subtract two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {number} minuend The first number in a subtraction.
 * @param {number} subtrahend The second number in a subtraction.
 * @returns {number} Returns the difference.
 * @example
 *
 * _.subtract(6, 4);
 * // => 2
 */
var subtract = _createMathOperation(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);

/* harmony default export */ var lodash_es_subtract = (subtract);

// CONCATENATED MODULE: ./node_modules/lodash-es/sum.js



/**
 * Computes the sum of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the sum.
 * @example
 *
 * _.sum([4, 2, 8, 6]);
 * // => 20
 */
function sum(array) {
  return (array && array.length)
    ? _baseSum(array, lodash_es_identity)
    : 0;
}

/* harmony default export */ var lodash_es_sum = (sum);

// CONCATENATED MODULE: ./node_modules/lodash-es/sumBy.js



/**
 * This method is like `_.sum` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be summed.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the sum.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.sumBy(objects, function(o) { return o.n; });
 * // => 20
 *
 * // The `_.property` iteratee shorthand.
 * _.sumBy(objects, 'n');
 * // => 20
 */
function sumBy(array, iteratee) {
  return (array && array.length)
    ? _baseSum(array, _baseIteratee(iteratee, 2))
    : 0;
}

/* harmony default export */ var lodash_es_sumBy = (sumBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/tail.js


/**
 * Gets all but the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.tail([1, 2, 3]);
 * // => [2, 3]
 */
function tail(array) {
  var length = array == null ? 0 : array.length;
  return length ? _baseSlice(array, 1, length) : [];
}

/* harmony default export */ var lodash_es_tail = (tail);

// CONCATENATED MODULE: ./node_modules/lodash-es/take.js



/**
 * Creates a slice of `array` with `n` elements taken from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.take([1, 2, 3]);
 * // => [1]
 *
 * _.take([1, 2, 3], 2);
 * // => [1, 2]
 *
 * _.take([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.take([1, 2, 3], 0);
 * // => []
 */
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : lodash_es_toInteger(n);
  return _baseSlice(array, 0, n < 0 ? 0 : n);
}

/* harmony default export */ var lodash_es_take = (take);

// CONCATENATED MODULE: ./node_modules/lodash-es/takeRight.js



/**
 * Creates a slice of `array` with `n` elements taken from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.takeRight([1, 2, 3]);
 * // => [3]
 *
 * _.takeRight([1, 2, 3], 2);
 * // => [2, 3]
 *
 * _.takeRight([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.takeRight([1, 2, 3], 0);
 * // => []
 */
function takeRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : lodash_es_toInteger(n);
  n = length - n;
  return _baseSlice(array, n < 0 ? 0 : n, length);
}

/* harmony default export */ var lodash_es_takeRight = (takeRight);

// CONCATENATED MODULE: ./node_modules/lodash-es/takeRightWhile.js



/**
 * Creates a slice of `array` with elements taken from the end. Elements are
 * taken until `predicate` returns falsey. The predicate is invoked with
 * three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.takeRightWhile(users, function(o) { return !o.active; });
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.matches` iteratee shorthand.
 * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
 * // => objects for ['pebbles']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.takeRightWhile(users, ['active', false]);
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.property` iteratee shorthand.
 * _.takeRightWhile(users, 'active');
 * // => []
 */
function takeRightWhile(array, predicate) {
  return (array && array.length)
    ? _baseWhile(array, _baseIteratee(predicate, 3), false, true)
    : [];
}

/* harmony default export */ var lodash_es_takeRightWhile = (takeRightWhile);

// CONCATENATED MODULE: ./node_modules/lodash-es/takeWhile.js



/**
 * Creates a slice of `array` with elements taken from the beginning. Elements
 * are taken until `predicate` returns falsey. The predicate is invoked with
 * three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.takeWhile(users, function(o) { return !o.active; });
 * // => objects for ['barney', 'fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.takeWhile(users, { 'user': 'barney', 'active': false });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.takeWhile(users, ['active', false]);
 * // => objects for ['barney', 'fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.takeWhile(users, 'active');
 * // => []
 */
function takeWhile(array, predicate) {
  return (array && array.length)
    ? _baseWhile(array, _baseIteratee(predicate, 3))
    : [];
}

/* harmony default export */ var lodash_es_takeWhile = (takeWhile);

// CONCATENATED MODULE: ./node_modules/lodash-es/tap.js
/**
 * This method invokes `interceptor` and returns `value`. The interceptor
 * is invoked with one argument; (value). The purpose of this method is to
 * "tap into" a method chain sequence in order to modify intermediate results.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @param {*} value The value to provide to `interceptor`.
 * @param {Function} interceptor The function to invoke.
 * @returns {*} Returns `value`.
 * @example
 *
 * _([1, 2, 3])
 *  .tap(function(array) {
 *    // Mutate input array.
 *    array.pop();
 *  })
 *  .reverse()
 *  .value();
 * // => [2, 1]
 */
function tap(value, interceptor) {
  interceptor(value);
  return value;
}

/* harmony default export */ var lodash_es_tap = (tap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_customDefaultsAssignIn.js


/** Used for built-in method references. */
var _customDefaultsAssignIn_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _customDefaultsAssignIn_hasOwnProperty = _customDefaultsAssignIn_objectProto.hasOwnProperty;

/**
 * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
 * of source objects to the destination object for all destination properties
 * that resolve to `undefined`.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to assign.
 * @param {Object} object The parent object of `objValue`.
 * @returns {*} Returns the value to assign.
 */
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === undefined ||
      (lodash_es_eq(objValue, _customDefaultsAssignIn_objectProto[key]) && !_customDefaultsAssignIn_hasOwnProperty.call(object, key))) {
    return srcValue;
  }
  return objValue;
}

/* harmony default export */ var _customDefaultsAssignIn = (customDefaultsAssignIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_escapeStringChar.js
/** Used to escape characters for inclusion in compiled string literals. */
var stringEscapes = {
  '\\': '\\',
  "'": "'",
  '\n': 'n',
  '\r': 'r',
  '\u2028': 'u2028',
  '\u2029': 'u2029'
};

/**
 * Used by `_.template` to escape characters for inclusion in compiled string literals.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */
function escapeStringChar(chr) {
  return '\\' + stringEscapes[chr];
}

/* harmony default export */ var _escapeStringChar = (escapeStringChar);

// CONCATENATED MODULE: ./node_modules/lodash-es/_reInterpolate.js
/** Used to match template delimiters. */
var reInterpolate = /<%=([\s\S]+?)%>/g;

/* harmony default export */ var _reInterpolate = (reInterpolate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_reEscape.js
/** Used to match template delimiters. */
var reEscape = /<%-([\s\S]+?)%>/g;

/* harmony default export */ var _reEscape = (reEscape);

// CONCATENATED MODULE: ./node_modules/lodash-es/_reEvaluate.js
/** Used to match template delimiters. */
var reEvaluate = /<%([\s\S]+?)%>/g;

/* harmony default export */ var _reEvaluate = (reEvaluate);

// CONCATENATED MODULE: ./node_modules/lodash-es/templateSettings.js





/**
 * By default, the template delimiters used by lodash are like those in
 * embedded Ruby (ERB) as well as ES2015 template strings. Change the
 * following template settings to use alternative delimiters.
 *
 * @static
 * @memberOf _
 * @type {Object}
 */
var templateSettings = {

  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'escape': _reEscape,

  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'evaluate': _reEvaluate,

  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'interpolate': _reInterpolate,

  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  'variable': '',

  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  'imports': {

    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    '_': { 'escape': lodash_es_escape }
  }
};

/* harmony default export */ var lodash_es_templateSettings = (templateSettings);

// CONCATENATED MODULE: ./node_modules/lodash-es/template.js












/** Error message constants. */
var INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

/** Used to match empty string literals in compiled template source. */
var reEmptyStringLeading = /\b__p \+= '';/g,
    reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
    reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

/**
 * Used to validate the `validate` option in `_.template` variable.
 *
 * Forbids characters which could potentially change the meaning of the function argument definition:
 * - "()," (modification of function parameters)
 * - "=" (default value)
 * - "[]{}" (destructuring of function parameters)
 * - "/" (beginning of a comment)
 * - whitespace
 */
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

/**
 * Used to match
 * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
 */
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

/** Used to ensure capturing order of template delimiters. */
var reNoMatch = /($^)/;

/** Used to match unescaped characters in compiled string literals. */
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

/** Used for built-in method references. */
var template_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var template_hasOwnProperty = template_objectProto.hasOwnProperty;

/**
 * Creates a compiled template function that can interpolate data properties
 * in "interpolate" delimiters, HTML-escape interpolated data properties in
 * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
 * properties may be accessed as free variables in the template. If a setting
 * object is given, it takes precedence over `_.templateSettings` values.
 *
 * **Note:** In the development build `_.template` utilizes
 * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
 * for easier debugging.
 *
 * For more information on precompiling templates see
 * [lodash's custom builds documentation](https://lodash.com/custom-builds).
 *
 * For more information on Chrome extension sandboxes see
 * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The template string.
 * @param {Object} [options={}] The options object.
 * @param {RegExp} [options.escape=_.templateSettings.escape]
 *  The HTML "escape" delimiter.
 * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
 *  The "evaluate" delimiter.
 * @param {Object} [options.imports=_.templateSettings.imports]
 *  An object to import into the template as free variables.
 * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
 *  The "interpolate" delimiter.
 * @param {string} [options.sourceURL='templateSources[n]']
 *  The sourceURL of the compiled template.
 * @param {string} [options.variable='obj']
 *  The data object variable name.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the compiled template function.
 * @example
 *
 * // Use the "interpolate" delimiter to create a compiled template.
 * var compiled = _.template('hello <%= user %>!');
 * compiled({ 'user': 'fred' });
 * // => 'hello fred!'
 *
 * // Use the HTML "escape" delimiter to escape data property values.
 * var compiled = _.template('<b><%- value %></b>');
 * compiled({ 'value': '<script>' });
 * // => '<b>&lt;script&gt;</b>'
 *
 * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
 * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
 * compiled({ 'users': ['fred', 'barney'] });
 * // => '<li>fred</li><li>barney</li>'
 *
 * // Use the internal `print` function in "evaluate" delimiters.
 * var compiled = _.template('<% print("hello " + user); %>!');
 * compiled({ 'user': 'barney' });
 * // => 'hello barney!'
 *
 * // Use the ES template literal delimiter as an "interpolate" delimiter.
 * // Disable support by replacing the "interpolate" delimiter.
 * var compiled = _.template('hello ${ user }!');
 * compiled({ 'user': 'pebbles' });
 * // => 'hello pebbles!'
 *
 * // Use backslashes to treat delimiters as plain text.
 * var compiled = _.template('<%= "\\<%- value %\\>" %>');
 * compiled({ 'value': 'ignored' });
 * // => '<%- value %>'
 *
 * // Use the `imports` option to import `jQuery` as `jq`.
 * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
 * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
 * compiled({ 'users': ['fred', 'barney'] });
 * // => '<li>fred</li><li>barney</li>'
 *
 * // Use the `sourceURL` option to specify a custom sourceURL for the template.
 * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
 * compiled(data);
 * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
 *
 * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
 * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
 * compiled.source;
 * // => function(data) {
 * //   var __t, __p = '';
 * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
 * //   return __p;
 * // }
 *
 * // Use custom template delimiters.
 * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
 * var compiled = _.template('hello {{ user }}!');
 * compiled({ 'user': 'mustache' });
 * // => 'hello mustache!'
 *
 * // Use the `source` property to inline compiled templates for meaningful
 * // line numbers in error messages and stack traces.
 * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
 *   var JST = {\
 *     "main": ' + _.template(mainText).source + '\
 *   };\
 * ');
 */
function template(string, options, guard) {
  // Based on John Resig's `tmpl` implementation
  // (http://ejohn.org/blog/javascript-micro-templating/)
  // and Laura Doktorova's doT.js (https://github.com/olado/doT).
  var settings = lodash_es_templateSettings.imports._.templateSettings || lodash_es_templateSettings;

  if (guard && _isIterateeCall(string, options, guard)) {
    options = undefined;
  }
  string = lodash_es_toString(string);
  options = lodash_es_assignInWith({}, options, settings, _customDefaultsAssignIn);

  var imports = lodash_es_assignInWith({}, options.imports, settings.imports, _customDefaultsAssignIn),
      importsKeys = lodash_es_keys(imports),
      importsValues = _baseValues(imports, importsKeys);

  var isEscaping,
      isEvaluating,
      index = 0,
      interpolate = options.interpolate || reNoMatch,
      source = "__p += '";

  // Compile the regexp to match each delimiter.
  var reDelimiters = RegExp(
    (options.escape || reNoMatch).source + '|' +
    interpolate.source + '|' +
    (interpolate === _reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
    (options.evaluate || reNoMatch).source + '|$'
  , 'g');

  // Use a sourceURL for easier debugging.
  // The sourceURL gets injected into the source that's eval-ed, so be careful
  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
  // and escape the comment, thus injecting code that gets evaled.
  var sourceURL = template_hasOwnProperty.call(options, 'sourceURL')
    ? ('//# sourceURL=' +
       (options.sourceURL + '').replace(/\s/g, ' ') +
       '\n')
    : '';

  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);

    // Escape characters that can't be included in string literals.
    source += string.slice(index, offset).replace(reUnescapedString, _escapeStringChar);

    // Replace delimiters with snippets.
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index = offset + match.length;

    // The JS engine embedded in Adobe products needs `match` returned in
    // order to produce the correct `offset` value.
    return match;
  });

  source += "';\n";

  // If `variable` is not specified wrap a with-statement around the generated
  // code to add the data object to the top of the scope chain.
  var variable = template_hasOwnProperty.call(options, 'variable') && options.variable;
  if (!variable) {
    source = 'with (obj) {\n' + source + '\n}\n';
  }
  // Throw an error if a forbidden character was found in `variable`, to prevent
  // potential command injection attacks.
  else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }

  // Cleanup code by stripping empty strings.
  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
    .replace(reEmptyStringMiddle, '$1')
    .replace(reEmptyStringTrailing, '$1;');

  // Frame code as the function body.
  source = 'function(' + (variable || 'obj') + ') {\n' +
    (variable
      ? ''
      : 'obj || (obj = {});\n'
    ) +
    "var __t, __p = ''" +
    (isEscaping
       ? ', __e = _.escape'
       : ''
    ) +
    (isEvaluating
      ? ', __j = Array.prototype.join;\n' +
        "function print() { __p += __j.call(arguments, '') }\n"
      : ';\n'
    ) +
    source +
    'return __p\n}';

  var result = lodash_es_attempt(function() {
    return Function(importsKeys, sourceURL + 'return ' + source)
      .apply(undefined, importsValues);
  });

  // Provide the compiled function's source by its `toString` method or
  // the `source` property as a convenience for inlining compiled templates.
  result.source = source;
  if (lodash_es_isError(result)) {
    throw result;
  }
  return result;
}

/* harmony default export */ var lodash_es_template = (template);

// CONCATENATED MODULE: ./node_modules/lodash-es/throttle.js



/** Error message constants. */
var throttle_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(throttle_FUNC_ERROR_TEXT);
  }
  if (lodash_es_isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return lodash_es_debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/* harmony default export */ var lodash_es_throttle = (throttle);

// CONCATENATED MODULE: ./node_modules/lodash-es/thru.js
/**
 * This method is like `_.tap` except that it returns the result of `interceptor`.
 * The purpose of this method is to "pass thru" values replacing intermediate
 * results in a method chain sequence.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Seq
 * @param {*} value The value to provide to `interceptor`.
 * @param {Function} interceptor The function to invoke.
 * @returns {*} Returns the result of `interceptor`.
 * @example
 *
 * _('  abc  ')
 *  .chain()
 *  .trim()
 *  .thru(function(value) {
 *    return [value];
 *  })
 *  .value();
 * // => ['abc']
 */
function thru(value, interceptor) {
  return interceptor(value);
}

/* harmony default export */ var lodash_es_thru = (thru);

// CONCATENATED MODULE: ./node_modules/lodash-es/times.js




/** Used as references for various `Number` constants. */
var times_MAX_SAFE_INTEGER = 9007199254740991;

/** Used as references for the maximum length and index of an array. */
var times_MAX_ARRAY_LENGTH = 4294967295;

/* Built-in method references for those with the same name as other `lodash` methods. */
var times_nativeMin = Math.min;

/**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */
function times(n, iteratee) {
  n = lodash_es_toInteger(n);
  if (n < 1 || n > times_MAX_SAFE_INTEGER) {
    return [];
  }
  var index = times_MAX_ARRAY_LENGTH,
      length = times_nativeMin(n, times_MAX_ARRAY_LENGTH);

  iteratee = _castFunction(iteratee);
  n -= times_MAX_ARRAY_LENGTH;

  var result = _baseTimes(length, iteratee);
  while (++index < n) {
    iteratee(index);
  }
  return result;
}

/* harmony default export */ var lodash_es_times = (times);

// CONCATENATED MODULE: ./node_modules/lodash-es/toIterator.js
/**
 * Enables the wrapper to be iterable.
 *
 * @name Symbol.iterator
 * @memberOf _
 * @since 4.0.0
 * @category Seq
 * @returns {Object} Returns the wrapper object.
 * @example
 *
 * var wrapped = _([1, 2]);
 *
 * wrapped[Symbol.iterator]() === wrapped;
 * // => true
 *
 * Array.from(wrapped);
 * // => [1, 2]
 */
function wrapperToIterator() {
  return this;
}

/* harmony default export */ var toIterator = (wrapperToIterator);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseWrapperValue.js




/**
 * The base implementation of `wrapperValue` which returns the result of
 * performing a sequence of actions on the unwrapped `value`, where each
 * successive action is supplied the return value of the previous.
 *
 * @private
 * @param {*} value The unwrapped value.
 * @param {Array} actions Actions to perform to resolve the unwrapped value.
 * @returns {*} Returns the resolved value.
 */
function baseWrapperValue(value, actions) {
  var result = value;
  if (result instanceof _LazyWrapper) {
    result = result.value();
  }
  return _arrayReduce(actions, function(result, action) {
    return action.func.apply(action.thisArg, _arrayPush([result], action.args));
  }, result);
}

/* harmony default export */ var _baseWrapperValue = (baseWrapperValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/wrapperValue.js


/**
 * Executes the chain sequence to resolve the unwrapped value.
 *
 * @name value
 * @memberOf _
 * @since 0.1.0
 * @alias toJSON, valueOf
 * @category Seq
 * @returns {*} Returns the resolved unwrapped value.
 * @example
 *
 * _([1, 2, 3]).value();
 * // => [1, 2, 3]
 */
function wrapperValue() {
  return _baseWrapperValue(this.__wrapped__, this.__actions__);
}

/* harmony default export */ var lodash_es_wrapperValue = (wrapperValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/toLower.js


/**
 * Converts `string`, as a whole, to lower case just like
 * [String#toLowerCase](https://mdn.io/toLowerCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the lower cased string.
 * @example
 *
 * _.toLower('--Foo-Bar--');
 * // => '--foo-bar--'
 *
 * _.toLower('fooBar');
 * // => 'foobar'
 *
 * _.toLower('__FOO_BAR__');
 * // => '__foo_bar__'
 */
function toLower(value) {
  return lodash_es_toString(value).toLowerCase();
}

/* harmony default export */ var lodash_es_toLower = (toLower);

// CONCATENATED MODULE: ./node_modules/lodash-es/toPath.js








/**
 * Converts `value` to a property path array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {*} value The value to convert.
 * @returns {Array} Returns the new property path array.
 * @example
 *
 * _.toPath('a.b.c');
 * // => ['a', 'b', 'c']
 *
 * _.toPath('a[0].b.c');
 * // => ['a', '0', 'b', 'c']
 */
function toPath(value) {
  if (lodash_es_isArray(value)) {
    return _arrayMap(value, _toKey);
  }
  return lodash_es_isSymbol(value) ? [value] : _copyArray(_stringToPath(lodash_es_toString(value)));
}

/* harmony default export */ var lodash_es_toPath = (toPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/toSafeInteger.js



/** Used as references for various `Number` constants. */
var toSafeInteger_MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Converts `value` to a safe integer. A safe integer can be compared and
 * represented correctly.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toSafeInteger(3.2);
 * // => 3
 *
 * _.toSafeInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toSafeInteger(Infinity);
 * // => 9007199254740991
 *
 * _.toSafeInteger('3.2');
 * // => 3
 */
function toSafeInteger(value) {
  return value
    ? _baseClamp(lodash_es_toInteger(value), -toSafeInteger_MAX_SAFE_INTEGER, toSafeInteger_MAX_SAFE_INTEGER)
    : (value === 0 ? value : 0);
}

/* harmony default export */ var lodash_es_toSafeInteger = (toSafeInteger);

// CONCATENATED MODULE: ./node_modules/lodash-es/toUpper.js


/**
 * Converts `string`, as a whole, to upper case just like
 * [String#toUpperCase](https://mdn.io/toUpperCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.toUpper('--foo-bar--');
 * // => '--FOO-BAR--'
 *
 * _.toUpper('fooBar');
 * // => 'FOOBAR'
 *
 * _.toUpper('__foo_bar__');
 * // => '__FOO_BAR__'
 */
function toUpper(value) {
  return lodash_es_toString(value).toUpperCase();
}

/* harmony default export */ var lodash_es_toUpper = (toUpper);

// CONCATENATED MODULE: ./node_modules/lodash-es/transform.js











/**
 * An alternative to `_.reduce`; this method transforms `object` to a new
 * `accumulator` object which is the result of running each of its own
 * enumerable string keyed properties thru `iteratee`, with each invocation
 * potentially mutating the `accumulator` object. If `accumulator` is not
 * provided, a new object with the same `[[Prototype]]` will be used. The
 * iteratee is invoked with four arguments: (accumulator, value, key, object).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The custom accumulator value.
 * @returns {*} Returns the accumulated value.
 * @example
 *
 * _.transform([2, 3, 4], function(result, n) {
 *   result.push(n *= n);
 *   return n % 2 == 0;
 * }, []);
 * // => [4, 9]
 *
 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] }
 */
function transform_transform(object, iteratee, accumulator) {
  var isArr = lodash_es_isArray(object),
      isArrLike = isArr || Object(isBuffer["a" /* default */])(object) || lodash_es_isTypedArray(object);

  iteratee = _baseIteratee(iteratee, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor : [];
    }
    else if (lodash_es_isObject(object)) {
      accumulator = lodash_es_isFunction(Ctor) ? _baseCreate(Object(_getPrototype["a" /* default */])(object)) : {};
    }
    else {
      accumulator = {};
    }
  }
  (isArrLike ? _arrayEach : _baseForOwn)(object, function(value, index, object) {
    return iteratee(accumulator, value, index, object);
  });
  return accumulator;
}

/* harmony default export */ var lodash_es_transform = (transform_transform);

// CONCATENATED MODULE: ./node_modules/lodash-es/_charsEndIndex.js


/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && _baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/* harmony default export */ var _charsEndIndex = (charsEndIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_charsStartIndex.js


/**
 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the first unmatched string symbol.
 */
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1,
      length = strSymbols.length;

  while (++index < length && _baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/* harmony default export */ var _charsStartIndex = (charsStartIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/trim.js








/**
 * Removes leading and trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trim('  abc  ');
 * // => 'abc'
 *
 * _.trim('-_-abc-_-', '_-');
 * // => 'abc'
 *
 * _.map(['  foo  ', '  bar  '], _.trim);
 * // => ['foo', 'bar']
 */
function trim(string, chars, guard) {
  string = lodash_es_toString(string);
  if (string && (guard || chars === undefined)) {
    return _baseTrim(string);
  }
  if (!string || !(chars = _baseToString(chars))) {
    return string;
  }
  var strSymbols = _stringToArray(string),
      chrSymbols = _stringToArray(chars),
      start = _charsStartIndex(strSymbols, chrSymbols),
      end = _charsEndIndex(strSymbols, chrSymbols) + 1;

  return _castSlice(strSymbols, start, end).join('');
}

/* harmony default export */ var lodash_es_trim = (trim);

// CONCATENATED MODULE: ./node_modules/lodash-es/trimEnd.js







/**
 * Removes trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimEnd('  abc  ');
 * // => '  abc'
 *
 * _.trimEnd('-_-abc-_-', '_-');
 * // => '-_-abc'
 */
function trimEnd(string, chars, guard) {
  string = lodash_es_toString(string);
  if (string && (guard || chars === undefined)) {
    return string.slice(0, _trimmedEndIndex(string) + 1);
  }
  if (!string || !(chars = _baseToString(chars))) {
    return string;
  }
  var strSymbols = _stringToArray(string),
      end = _charsEndIndex(strSymbols, _stringToArray(chars)) + 1;

  return _castSlice(strSymbols, 0, end).join('');
}

/* harmony default export */ var lodash_es_trimEnd = (trimEnd);

// CONCATENATED MODULE: ./node_modules/lodash-es/trimStart.js






/** Used to match leading whitespace. */
var trimStart_reTrimStart = /^\s+/;

/**
 * Removes leading whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimStart('  abc  ');
 * // => 'abc  '
 *
 * _.trimStart('-_-abc-_-', '_-');
 * // => 'abc-_-'
 */
function trimStart(string, chars, guard) {
  string = lodash_es_toString(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(trimStart_reTrimStart, '');
  }
  if (!string || !(chars = _baseToString(chars))) {
    return string;
  }
  var strSymbols = _stringToArray(string),
      start = _charsStartIndex(strSymbols, _stringToArray(chars));

  return _castSlice(strSymbols, start).join('');
}

/* harmony default export */ var lodash_es_trimStart = (trimStart);

// CONCATENATED MODULE: ./node_modules/lodash-es/truncate.js










/** Used as default options for `_.truncate`. */
var DEFAULT_TRUNC_LENGTH = 30,
    DEFAULT_TRUNC_OMISSION = '...';

/** Used to match `RegExp` flags from their coerced string values. */
var truncate_reFlags = /\w*$/;

/**
 * Truncates `string` if it's longer than the given maximum string length.
 * The last characters of the truncated string are replaced with the omission
 * string which defaults to "...".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to truncate.
 * @param {Object} [options={}] The options object.
 * @param {number} [options.length=30] The maximum string length.
 * @param {string} [options.omission='...'] The string to indicate text is omitted.
 * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
 * @returns {string} Returns the truncated string.
 * @example
 *
 * _.truncate('hi-diddly-ho there, neighborino');
 * // => 'hi-diddly-ho there, neighbo...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': ' '
 * });
 * // => 'hi-diddly-ho there,...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': /,? +/
 * });
 * // => 'hi-diddly-ho there...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'omission': ' [...]'
 * });
 * // => 'hi-diddly-ho there, neig [...]'
 */
function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH,
      omission = DEFAULT_TRUNC_OMISSION;

  if (lodash_es_isObject(options)) {
    var separator = 'separator' in options ? options.separator : separator;
    length = 'length' in options ? lodash_es_toInteger(options.length) : length;
    omission = 'omission' in options ? _baseToString(options.omission) : omission;
  }
  string = lodash_es_toString(string);

  var strLength = string.length;
  if (_hasUnicode(string)) {
    var strSymbols = _stringToArray(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - _stringSize(omission);
  if (end < 1) {
    return omission;
  }
  var result = strSymbols
    ? _castSlice(strSymbols, 0, end).join('')
    : string.slice(0, end);

  if (separator === undefined) {
    return result + omission;
  }
  if (strSymbols) {
    end += (result.length - end);
  }
  if (lodash_es_isRegExp(separator)) {
    if (string.slice(end).search(separator)) {
      var match,
          substring = result;

      if (!separator.global) {
        separator = RegExp(separator.source, lodash_es_toString(truncate_reFlags.exec(separator)) + 'g');
      }
      separator.lastIndex = 0;
      while ((match = separator.exec(substring))) {
        var newEnd = match.index;
      }
      result = result.slice(0, newEnd === undefined ? end : newEnd);
    }
  } else if (string.indexOf(_baseToString(separator), end) != end) {
    var index = result.lastIndexOf(separator);
    if (index > -1) {
      result = result.slice(0, index);
    }
  }
  return result + omission;
}

/* harmony default export */ var lodash_es_truncate = (truncate);

// CONCATENATED MODULE: ./node_modules/lodash-es/unary.js


/**
 * Creates a function that accepts up to one argument, ignoring any
 * additional arguments.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.unary(parseInt));
 * // => [6, 8, 10]
 */
function unary(func) {
  return lodash_es_ary(func, 1);
}

/* harmony default export */ var lodash_es_unary = (unary);

// CONCATENATED MODULE: ./node_modules/lodash-es/_unescapeHtmlChar.js


/** Used to map HTML entities to characters. */
var htmlUnescapes = {
  '&amp;': '&',
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&#39;': "'"
};

/**
 * Used by `_.unescape` to convert HTML entities to characters.
 *
 * @private
 * @param {string} chr The matched character to unescape.
 * @returns {string} Returns the unescaped character.
 */
var unescapeHtmlChar = _basePropertyOf(htmlUnescapes);

/* harmony default export */ var _unescapeHtmlChar = (unescapeHtmlChar);

// CONCATENATED MODULE: ./node_modules/lodash-es/unescape.js



/** Used to match HTML entities and HTML characters. */
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
    reHasEscapedHtml = RegExp(reEscapedHtml.source);

/**
 * The inverse of `_.escape`; this method converts the HTML entities
 * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
 * their corresponding characters.
 *
 * **Note:** No other HTML entities are unescaped. To unescape additional
 * HTML entities use a third-party library like [_he_](https://mths.be/he).
 *
 * @static
 * @memberOf _
 * @since 0.6.0
 * @category String
 * @param {string} [string=''] The string to unescape.
 * @returns {string} Returns the unescaped string.
 * @example
 *
 * _.unescape('fred, barney, &amp; pebbles');
 * // => 'fred, barney, & pebbles'
 */
function unescape_unescape(string) {
  string = lodash_es_toString(string);
  return (string && reHasEscapedHtml.test(string))
    ? string.replace(reEscapedHtml, _unescapeHtmlChar)
    : string;
}

/* harmony default export */ var lodash_es_unescape = (unescape_unescape);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createSet.js




/** Used as references for various `Number` constants. */
var _createSet_INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(_Set && (1 / _setToArray(new _Set([,-0]))[1]) == _createSet_INFINITY) ? lodash_es_noop : function(values) {
  return new _Set(values);
};

/* harmony default export */ var _createSet = (createSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseUniq.js







/** Used as the size to enable large array optimizations. */
var _baseUniq_LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = _arrayIncludesWith;
  }
  else if (length >= _baseUniq_LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : _createSet(array);
    if (set) {
      return _setToArray(set);
    }
    isCommon = false;
    includes = _cacheHas;
    seen = new _SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ var _baseUniq = (baseUniq);

// CONCATENATED MODULE: ./node_modules/lodash-es/union.js





/**
 * Creates an array of unique values, in order, from all given arrays using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.union([2], [1, 2]);
 * // => [2, 1]
 */
var union = _baseRest(function(arrays) {
  return _baseUniq(_baseFlatten(arrays, 1, lodash_es_isArrayLikeObject, true));
});

/* harmony default export */ var lodash_es_union = (union);

// CONCATENATED MODULE: ./node_modules/lodash-es/unionBy.js







/**
 * This method is like `_.union` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which uniqueness is computed. Result values are chosen from the first
 * array in which the value occurs. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.unionBy([2.1], [1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
var unionBy = _baseRest(function(arrays) {
  var iteratee = lodash_es_last(arrays);
  if (lodash_es_isArrayLikeObject(iteratee)) {
    iteratee = undefined;
  }
  return _baseUniq(_baseFlatten(arrays, 1, lodash_es_isArrayLikeObject, true), _baseIteratee(iteratee, 2));
});

/* harmony default export */ var lodash_es_unionBy = (unionBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/unionWith.js






/**
 * This method is like `_.union` except that it accepts `comparator` which
 * is invoked to compare elements of `arrays`. Result values are chosen from
 * the first array in which the value occurs. The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.unionWith(objects, others, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
 */
var unionWith = _baseRest(function(arrays) {
  var comparator = lodash_es_last(arrays);
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return _baseUniq(_baseFlatten(arrays, 1, lodash_es_isArrayLikeObject, true), undefined, comparator);
});

/* harmony default export */ var lodash_es_unionWith = (unionWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/uniq.js


/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? _baseUniq(array) : [];
}

/* harmony default export */ var lodash_es_uniq = (uniq);

// CONCATENATED MODULE: ./node_modules/lodash-es/uniqBy.js



/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? _baseUniq(array, _baseIteratee(iteratee, 2)) : [];
}

/* harmony default export */ var lodash_es_uniqBy = (uniqBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/uniqWith.js


/**
 * This method is like `_.uniq` except that it accepts `comparator` which
 * is invoked to compare elements of `array`. The order of result values is
 * determined by the order they occur in the array.The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.uniqWith(objects, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
 */
function uniqWith(array, comparator) {
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return (array && array.length) ? _baseUniq(array, undefined, comparator) : [];
}

/* harmony default export */ var lodash_es_uniqWith = (uniqWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/uniqueId.js


/** Used to generate unique IDs. */
var idCounter = 0;

/**
 * Generates a unique ID. If `prefix` is given, the ID is appended to it.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {string} [prefix=''] The value to prefix the ID with.
 * @returns {string} Returns the unique ID.
 * @example
 *
 * _.uniqueId('contact_');
 * // => 'contact_104'
 *
 * _.uniqueId();
 * // => '105'
 */
function uniqueId(prefix) {
  var id = ++idCounter;
  return lodash_es_toString(prefix) + id;
}

/* harmony default export */ var lodash_es_uniqueId = (uniqueId);

// CONCATENATED MODULE: ./node_modules/lodash-es/unset.js


/**
 * Removes the property at `path` of `object`.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 7 } }] };
 * _.unset(object, 'a[0].b.c');
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 *
 * _.unset(object, ['a', '0', 'b', 'c']);
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 */
function unset(object, path) {
  return object == null ? true : _baseUnset(object, path);
}

/* harmony default export */ var lodash_es_unset = (unset);

// CONCATENATED MODULE: ./node_modules/lodash-es/unzip.js






/* Built-in method references for those with the same name as other `lodash` methods. */
var unzip_nativeMax = Math.max;

/**
 * This method is like `_.zip` except that it accepts an array of grouped
 * elements and creates an array regrouping the elements to their pre-zip
 * configuration.
 *
 * @static
 * @memberOf _
 * @since 1.2.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 *
 * _.unzip(zipped);
 * // => [['a', 'b'], [1, 2], [true, false]]
 */
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = _arrayFilter(array, function(group) {
    if (lodash_es_isArrayLikeObject(group)) {
      length = unzip_nativeMax(group.length, length);
      return true;
    }
  });
  return _baseTimes(length, function(index) {
    return _arrayMap(array, _baseProperty(index));
  });
}

/* harmony default export */ var lodash_es_unzip = (unzip);

// CONCATENATED MODULE: ./node_modules/lodash-es/unzipWith.js




/**
 * This method is like `_.unzip` except that it accepts `iteratee` to specify
 * how regrouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  regrouped values.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
 * // => [[1, 10, 100], [2, 20, 200]]
 *
 * _.unzipWith(zipped, _.add);
 * // => [3, 30, 300]
 */
function unzipWith(array, iteratee) {
  if (!(array && array.length)) {
    return [];
  }
  var result = lodash_es_unzip(array);
  if (iteratee == null) {
    return result;
  }
  return _arrayMap(result, function(group) {
    return _apply(iteratee, undefined, group);
  });
}

/* harmony default export */ var lodash_es_unzipWith = (unzipWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseUpdate.js



/**
 * The base implementation of `_.update`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to update.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseUpdate(object, path, updater, customizer) {
  return _baseSet(object, path, updater(_baseGet(object, path)), customizer);
}

/* harmony default export */ var _baseUpdate = (baseUpdate);

// CONCATENATED MODULE: ./node_modules/lodash-es/update.js



/**
 * This method is like `_.set` except that accepts `updater` to produce the
 * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
 * is invoked with one argument: (value).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {Function} updater The function to produce the updated value.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.update(object, 'a[0].b.c', function(n) { return n * n; });
 * console.log(object.a[0].b.c);
 * // => 9
 *
 * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
 * console.log(object.x[0].y.z);
 * // => 0
 */
function update(object, path, updater) {
  return object == null ? object : _baseUpdate(object, path, _castFunction(updater));
}

/* harmony default export */ var lodash_es_update = (update);

// CONCATENATED MODULE: ./node_modules/lodash-es/updateWith.js



/**
 * This method is like `_.update` except that it accepts `customizer` which is
 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
 * path creation is handled by the method instead. The `customizer` is invoked
 * with three arguments: (nsValue, key, nsObject).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {};
 *
 * _.updateWith(object, '[0][1]', _.constant('a'), Object);
 * // => { '0': { '1': 'a' } }
 */
function updateWith(object, path, updater, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return object == null ? object : _baseUpdate(object, path, _castFunction(updater), customizer);
}

/* harmony default export */ var lodash_es_updateWith = (updateWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/upperCase.js


/**
 * Converts `string`, as space separated words, to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.upperCase('--foo-bar');
 * // => 'FOO BAR'
 *
 * _.upperCase('fooBar');
 * // => 'FOO BAR'
 *
 * _.upperCase('__foo_bar__');
 * // => 'FOO BAR'
 */
var upperCase = _createCompounder(function(result, word, index) {
  return result + (index ? ' ' : '') + word.toUpperCase();
});

/* harmony default export */ var lodash_es_upperCase = (upperCase);

// CONCATENATED MODULE: ./node_modules/lodash-es/valuesIn.js



/**
 * Creates an array of the own and inherited enumerable string keyed property
 * values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.valuesIn(new Foo);
 * // => [1, 2, 3] (iteration order is not guaranteed)
 */
function valuesIn(object) {
  return object == null ? [] : _baseValues(object, lodash_es_keysIn(object));
}

/* harmony default export */ var lodash_es_valuesIn = (valuesIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/without.js




/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = _baseRest(function(array, values) {
  return lodash_es_isArrayLikeObject(array)
    ? _baseDifference(array, values)
    : [];
});

/* harmony default export */ var lodash_es_without = (without);

// CONCATENATED MODULE: ./node_modules/lodash-es/wrap.js



/**
 * Creates a function that provides `value` to `wrapper` as its first
 * argument. Any additional arguments provided to the function are appended
 * to those provided to the `wrapper`. The wrapper is invoked with the `this`
 * binding of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {*} value The value to wrap.
 * @param {Function} [wrapper=identity] The wrapper function.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var p = _.wrap(_.escape, function(func, text) {
 *   return '<p>' + func(text) + '</p>';
 * });
 *
 * p('fred, barney, & pebbles');
 * // => '<p>fred, barney, &amp; pebbles</p>'
 */
function wrap(value, wrapper) {
  return lodash_es_partial(_castFunction(wrapper), value);
}

/* harmony default export */ var lodash_es_wrap = (wrap);

// CONCATENATED MODULE: ./node_modules/lodash-es/wrapperAt.js







/**
 * This method is the wrapper version of `_.at`.
 *
 * @name at
 * @memberOf _
 * @since 1.0.0
 * @category Seq
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _(object).at(['a[0].b.c', 'a[1]']).value();
 * // => [3, 4]
 */
var wrapperAt = _flatRest(function(paths) {
  var length = paths.length,
      start = length ? paths[0] : 0,
      value = this.__wrapped__,
      interceptor = function(object) { return _baseAt(object, paths); };

  if (length > 1 || this.__actions__.length ||
      !(value instanceof _LazyWrapper) || !_isIndex(start)) {
    return this.thru(interceptor);
  }
  value = value.slice(start, +start + (length ? 1 : 0));
  value.__actions__.push({
    'func': lodash_es_thru,
    'args': [interceptor],
    'thisArg': undefined
  });
  return new _LodashWrapper(value, this.__chain__).thru(function(array) {
    if (length && !array.length) {
      array.push(undefined);
    }
    return array;
  });
});

/* harmony default export */ var lodash_es_wrapperAt = (wrapperAt);

// CONCATENATED MODULE: ./node_modules/lodash-es/wrapperChain.js


/**
 * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
 *
 * @name chain
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 }
 * ];
 *
 * // A sequence without explicit chaining.
 * _(users).head();
 * // => { 'user': 'barney', 'age': 36 }
 *
 * // A sequence with explicit chaining.
 * _(users)
 *   .chain()
 *   .head()
 *   .pick('user')
 *   .value();
 * // => { 'user': 'barney' }
 */
function wrapperChain() {
  return lodash_es_chain(this);
}

/* harmony default export */ var lodash_es_wrapperChain = (wrapperChain);

// CONCATENATED MODULE: ./node_modules/lodash-es/wrapperReverse.js





/**
 * This method is the wrapper version of `_.reverse`.
 *
 * **Note:** This method mutates the wrapped array.
 *
 * @name reverse
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _(array).reverse().value()
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */
function wrapperReverse() {
  var value = this.__wrapped__;
  if (value instanceof _LazyWrapper) {
    var wrapped = value;
    if (this.__actions__.length) {
      wrapped = new _LazyWrapper(this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      'func': lodash_es_thru,
      'args': [lodash_es_reverse],
      'thisArg': undefined
    });
    return new _LodashWrapper(wrapped, this.__chain__);
  }
  return this.thru(lodash_es_reverse);
}

/* harmony default export */ var lodash_es_wrapperReverse = (wrapperReverse);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseXor.js




/**
 * The base implementation of methods like `_.xor`, without support for
 * iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of values.
 */
function baseXor(arrays, iteratee, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? _baseUniq(arrays[0]) : [];
  }
  var index = -1,
      result = Array(length);

  while (++index < length) {
    var array = arrays[index],
        othIndex = -1;

    while (++othIndex < length) {
      if (othIndex != index) {
        result[index] = _baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
      }
    }
  }
  return _baseUniq(_baseFlatten(result, 1), iteratee, comparator);
}

/* harmony default export */ var _baseXor = (baseXor);

// CONCATENATED MODULE: ./node_modules/lodash-es/xor.js





/**
 * Creates an array of unique values that is the
 * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
 * of the given arrays. The order of result values is determined by the order
 * they occur in the arrays.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.without
 * @example
 *
 * _.xor([2, 1], [2, 3]);
 * // => [1, 3]
 */
var xor = _baseRest(function(arrays) {
  return _baseXor(_arrayFilter(arrays, lodash_es_isArrayLikeObject));
});

/* harmony default export */ var lodash_es_xor = (xor);

// CONCATENATED MODULE: ./node_modules/lodash-es/xorBy.js







/**
 * This method is like `_.xor` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which by which they're compared. The order of result values is determined
 * by the order they occur in the arrays. The iteratee is invoked with one
 * argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2, 3.4]
 *
 * // The `_.property` iteratee shorthand.
 * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var xorBy = _baseRest(function(arrays) {
  var iteratee = lodash_es_last(arrays);
  if (lodash_es_isArrayLikeObject(iteratee)) {
    iteratee = undefined;
  }
  return _baseXor(_arrayFilter(arrays, lodash_es_isArrayLikeObject), _baseIteratee(iteratee, 2));
});

/* harmony default export */ var lodash_es_xorBy = (xorBy);

// CONCATENATED MODULE: ./node_modules/lodash-es/xorWith.js






/**
 * This method is like `_.xor` except that it accepts `comparator` which is
 * invoked to compare elements of `arrays`. The order of result values is
 * determined by the order they occur in the arrays. The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.xorWith(objects, others, _.isEqual);
 * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
 */
var xorWith = _baseRest(function(arrays) {
  var comparator = lodash_es_last(arrays);
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return _baseXor(_arrayFilter(arrays, lodash_es_isArrayLikeObject), undefined, comparator);
});

/* harmony default export */ var lodash_es_xorWith = (xorWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/zip.js



/**
 * Creates an array of grouped elements, the first of which contains the
 * first elements of the given arrays, the second of which contains the
 * second elements of the given arrays, and so on.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 */
var zip = _baseRest(lodash_es_unzip);

/* harmony default export */ var lodash_es_zip = (zip);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseZipObject.js
/**
 * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
 *
 * @private
 * @param {Array} props The property identifiers.
 * @param {Array} values The property values.
 * @param {Function} assignFunc The function to assign values.
 * @returns {Object} Returns the new object.
 */
function baseZipObject(props, values, assignFunc) {
  var index = -1,
      length = props.length,
      valsLength = values.length,
      result = {};

  while (++index < length) {
    var value = index < valsLength ? values[index] : undefined;
    assignFunc(result, props[index], value);
  }
  return result;
}

/* harmony default export */ var _baseZipObject = (baseZipObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/zipObject.js



/**
 * This method is like `_.fromPairs` except that it accepts two arrays,
 * one of property identifiers and one of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 0.4.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObject(['a', 'b'], [1, 2]);
 * // => { 'a': 1, 'b': 2 }
 */
function zipObject(props, values) {
  return _baseZipObject(props || [], values || [], _assignValue);
}

/* harmony default export */ var lodash_es_zipObject = (zipObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/zipObjectDeep.js



/**
 * This method is like `_.zipObject` except that it supports property paths.
 *
 * @static
 * @memberOf _
 * @since 4.1.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
 * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
 */
function zipObjectDeep(props, values) {
  return _baseZipObject(props || [], values || [], _baseSet);
}

/* harmony default export */ var lodash_es_zipObjectDeep = (zipObjectDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/zipWith.js



/**
 * This method is like `_.zip` except that it accepts `iteratee` to specify
 * how grouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  grouped values.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
 *   return a + b + c;
 * });
 * // => [111, 222]
 */
var zipWith = _baseRest(function(arrays) {
  var length = arrays.length,
      iteratee = length > 1 ? arrays[length - 1] : undefined;

  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
  return lodash_es_unzipWith(arrays, iteratee);
});

/* harmony default export */ var lodash_es_zipWith = (zipWith);

// CONCATENATED MODULE: ./node_modules/lodash-es/array.default.js


































































/* harmony default export */ var array_default = ({
  chunk: lodash_es_chunk, compact: lodash_es_compact, concat: lodash_es_concat, difference: lodash_es_difference, differenceBy: lodash_es_differenceBy,
  differenceWith: lodash_es_differenceWith, drop: lodash_es_drop, dropRight: lodash_es_dropRight, dropRightWhile: lodash_es_dropRightWhile, dropWhile: lodash_es_dropWhile,
  fill: lodash_es_fill, findIndex: lodash_es_findIndex, findLastIndex: lodash_es_findLastIndex, first: lodash_es_head, flatten: lodash_es_flatten,
  flattenDeep: lodash_es_flattenDeep, flattenDepth: lodash_es_flattenDepth, fromPairs: lodash_es_fromPairs, head: lodash_es_head, indexOf: lodash_es_indexOf,
  initial: lodash_es_initial, intersection: lodash_es_intersection, intersectionBy: lodash_es_intersectionBy, intersectionWith: lodash_es_intersectionWith, join: lodash_es_join,
  last: lodash_es_last, lastIndexOf: lodash_es_lastIndexOf, nth: lodash_es_nth, pull: lodash_es_pull, pullAll: lodash_es_pullAll,
  pullAllBy: lodash_es_pullAllBy, pullAllWith: lodash_es_pullAllWith, pullAt: lodash_es_pullAt, remove: lodash_es_remove, reverse: lodash_es_reverse,
  slice: lodash_es_slice, sortedIndex: lodash_es_sortedIndex, sortedIndexBy: lodash_es_sortedIndexBy, sortedIndexOf: lodash_es_sortedIndexOf, sortedLastIndex: lodash_es_sortedLastIndex,
  sortedLastIndexBy: lodash_es_sortedLastIndexBy, sortedLastIndexOf: lodash_es_sortedLastIndexOf, sortedUniq: lodash_es_sortedUniq, sortedUniqBy: lodash_es_sortedUniqBy, tail: lodash_es_tail,
  take: lodash_es_take, takeRight: lodash_es_takeRight, takeRightWhile: lodash_es_takeRightWhile, takeWhile: lodash_es_takeWhile, union: lodash_es_union,
  unionBy: lodash_es_unionBy, unionWith: lodash_es_unionWith, uniq: lodash_es_uniq, uniqBy: lodash_es_uniqBy, uniqWith: lodash_es_uniqWith,
  unzip: lodash_es_unzip, unzipWith: lodash_es_unzipWith, without: lodash_es_without, xor: lodash_es_xor, xorBy: lodash_es_xorBy,
  xorWith: lodash_es_xorWith, zip: lodash_es_zip, zipObject: lodash_es_zipObject, zipObjectDeep: lodash_es_zipObjectDeep, zipWith: lodash_es_zipWith
});

// CONCATENATED MODULE: ./node_modules/lodash-es/collection.default.js





























/* harmony default export */ var collection_default = ({
  countBy: lodash_es_countBy, each: lodash_es_forEach, eachRight: lodash_es_forEachRight, every: lodash_es_every, filter: lodash_es_filter,
  find: lodash_es_find, findLast: lodash_es_findLast, flatMap: lodash_es_flatMap, flatMapDeep: lodash_es_flatMapDeep, flatMapDepth: lodash_es_flatMapDepth,
  forEach: lodash_es_forEach, forEachRight: lodash_es_forEachRight, groupBy: lodash_es_groupBy, includes: lodash_es_includes, invokeMap: lodash_es_invokeMap,
  keyBy: lodash_es_keyBy, map: lodash_es_map, orderBy: lodash_es_orderBy, partition: lodash_es_partition, reduce: lodash_es_reduce,
  reduceRight: lodash_es_reduceRight, reject: lodash_es_reject, sample: lodash_es_sample, sampleSize: lodash_es_sampleSize, shuffle: lodash_es_shuffle,
  size: lodash_es_size, some: lodash_es_some, sortBy: lodash_es_sortBy
});

// CONCATENATED MODULE: ./node_modules/lodash-es/date.default.js


/* harmony default export */ var date_default = ({
  now: lodash_es_now
});

// CONCATENATED MODULE: ./node_modules/lodash-es/function.default.js
























/* harmony default export */ var function_default = ({
  after: lodash_es_after, ary: lodash_es_ary, before: lodash_es_before, bind: lodash_es_bind, bindKey: lodash_es_bindKey,
  curry: lodash_es_curry, curryRight: lodash_es_curryRight, debounce: lodash_es_debounce, defer: lodash_es_defer, delay: lodash_es_delay,
  flip: lodash_es_flip, memoize: lodash_es_memoize, negate: lodash_es_negate, once: lodash_es_once, overArgs: lodash_es_overArgs,
  partial: lodash_es_partial, partialRight: lodash_es_partialRight, rearg: lodash_es_rearg, rest: lodash_es_rest, spread: lodash_es_spread,
  throttle: lodash_es_throttle, unary: lodash_es_unary, wrap: lodash_es_wrap
});

// CONCATENATED MODULE: ./node_modules/lodash-es/lang.default.js

























































/* harmony default export */ var lang_default = ({
  castArray: lodash_es_castArray, clone: lodash_es_clone, cloneDeep: lodash_es_cloneDeep, cloneDeepWith: lodash_es_cloneDeepWith, cloneWith: lodash_es_cloneWith,
  conformsTo: lodash_es_conformsTo, eq: lodash_es_eq, gt: lodash_es_gt, gte: lodash_es_gte, isArguments: lodash_es_isArguments,
  isArray: lodash_es_isArray, isArrayBuffer: lodash_es_isArrayBuffer, isArrayLike: lodash_es_isArrayLike, isArrayLikeObject: lodash_es_isArrayLikeObject, isBoolean: lodash_es_isBoolean,
  isBuffer: isBuffer["a" /* default */], isDate: lodash_es_isDate, isElement: lodash_es_isElement, isEmpty: lodash_es_isEmpty, isEqual: lodash_es_isEqual,
  isEqualWith: lodash_es_isEqualWith, isError: lodash_es_isError, isFinite: lodash_es_isFinite, isFunction: lodash_es_isFunction, isInteger: lodash_es_isInteger,
  isLength: lodash_es_isLength, isMap: lodash_es_isMap, isMatch: lodash_es_isMatch, isMatchWith: lodash_es_isMatchWith, isNaN: lodash_es_isNaN,
  isNative: lodash_es_isNative, isNil: lodash_es_isNil, isNull: lodash_es_isNull, isNumber: lodash_es_isNumber, isObject: lodash_es_isObject,
  isObjectLike: isObjectLike["a" /* default */], isPlainObject: isPlainObject["default"], isRegExp: lodash_es_isRegExp, isSafeInteger: lodash_es_isSafeInteger, isSet: lodash_es_isSet,
  isString: lodash_es_isString, isSymbol: lodash_es_isSymbol, isTypedArray: lodash_es_isTypedArray, isUndefined: lodash_es_isUndefined, isWeakMap: lodash_es_isWeakMap,
  isWeakSet: lodash_es_isWeakSet, lt: lodash_es_lt, lte: lodash_es_lte, toArray: lodash_es_toArray, toFinite: lodash_es_toFinite,
  toInteger: lodash_es_toInteger, toLength: lodash_es_toLength, toNumber: lodash_es_toNumber, toPlainObject: lodash_es_toPlainObject, toSafeInteger: lodash_es_toSafeInteger,
  toString: lodash_es_toString
});

// CONCATENATED MODULE: ./node_modules/lodash-es/math.default.js
















/* harmony default export */ var math_default = ({
  add: lodash_es_add, ceil: lodash_es_ceil, divide: lodash_es_divide, floor: lodash_es_floor, max: lodash_es_max,
  maxBy: lodash_es_maxBy, mean: lodash_es_mean, meanBy: lodash_es_meanBy, min: lodash_es_min, minBy: lodash_es_minBy,
  multiply: lodash_es_multiply, round: lodash_es_round, subtract: lodash_es_subtract, sum: lodash_es_sum, sumBy: lodash_es_sumBy
});

// CONCATENATED MODULE: ./node_modules/lodash-es/number.default.js




/* harmony default export */ var number_default = ({
  clamp: lodash_es_clamp, inRange: lodash_es_inRange, random: lodash_es_random
});

// CONCATENATED MODULE: ./node_modules/lodash-es/object.default.js
















































/* harmony default export */ var object_default = ({
  assign: lodash_es_assign, assignIn: lodash_es_assignIn, assignInWith: lodash_es_assignInWith, assignWith: lodash_es_assignWith, at: lodash_es_at,
  create: lodash_es_create, defaults: lodash_es_defaults, defaultsDeep: lodash_es_defaultsDeep, entries: lodash_es_toPairs, entriesIn: lodash_es_toPairsIn,
  extend: lodash_es_assignIn, extendWith: lodash_es_assignInWith, findKey: lodash_es_findKey, findLastKey: lodash_es_findLastKey, forIn: lodash_es_forIn,
  forInRight: lodash_es_forInRight, forOwn: lodash_es_forOwn, forOwnRight: lodash_es_forOwnRight, functions: lodash_es_functions, functionsIn: lodash_es_functionsIn,
  get: lodash_es_get, has: lodash_es_has, hasIn: lodash_es_hasIn, invert: lodash_es_invert, invertBy: lodash_es_invertBy,
  invoke: lodash_es_invoke, keys: lodash_es_keys, keysIn: lodash_es_keysIn, mapKeys: lodash_es_mapKeys, mapValues: lodash_es_mapValues,
  merge: lodash_es_merge, mergeWith: lodash_es_mergeWith, omit: lodash_es_omit, omitBy: lodash_es_omitBy, pick: lodash_es_pick,
  pickBy: lodash_es_pickBy, result: lodash_es_result, set: lodash_es_set, setWith: lodash_es_setWith, toPairs: lodash_es_toPairs,
  toPairsIn: lodash_es_toPairsIn, transform: lodash_es_transform, unset: lodash_es_unset, update: lodash_es_update, updateWith: lodash_es_updateWith,
  values: lodash_es_values, valuesIn: lodash_es_valuesIn
});

// CONCATENATED MODULE: ./node_modules/lodash-es/seq.default.js















/* harmony default export */ var seq_default = ({
  at: lodash_es_wrapperAt, chain: lodash_es_chain, commit: commit, lodash: wrapperLodash, next: next,
  plant: plant, reverse: lodash_es_wrapperReverse, tap: lodash_es_tap, thru: lodash_es_thru, toIterator: toIterator,
  toJSON: lodash_es_wrapperValue, value: lodash_es_wrapperValue, valueOf: lodash_es_wrapperValue, wrapperChain: lodash_es_wrapperChain
});

// CONCATENATED MODULE: ./node_modules/lodash-es/string.default.js
































/* harmony default export */ var string_default = ({
  camelCase: lodash_es_camelCase, capitalize: lodash_es_capitalize, deburr: lodash_es_deburr, endsWith: lodash_es_endsWith, escape: lodash_es_escape,
  escapeRegExp: lodash_es_escapeRegExp, kebabCase: lodash_es_kebabCase, lowerCase: lodash_es_lowerCase, lowerFirst: lodash_es_lowerFirst, pad: lodash_es_pad,
  padEnd: lodash_es_padEnd, padStart: lodash_es_padStart, parseInt: lodash_es_parseInt, repeat: lodash_es_repeat, replace: lodash_es_replace,
  snakeCase: lodash_es_snakeCase, split: lodash_es_split, startCase: lodash_es_startCase, startsWith: lodash_es_startsWith, template: lodash_es_template,
  templateSettings: lodash_es_templateSettings, toLower: lodash_es_toLower, toUpper: lodash_es_toUpper, trim: lodash_es_trim, trimEnd: lodash_es_trimEnd,
  trimStart: lodash_es_trimStart, truncate: lodash_es_truncate, unescape: lodash_es_unescape, upperCase: lodash_es_upperCase, upperFirst: lodash_es_upperFirst,
  words: lodash_es_words
});

// CONCATENATED MODULE: ./node_modules/lodash-es/util.default.js

































/* harmony default export */ var util_default = ({
  attempt: lodash_es_attempt, bindAll: lodash_es_bindAll, cond: lodash_es_cond, conforms: lodash_es_conforms, constant: lodash_es_constant,
  defaultTo: lodash_es_defaultTo, flow: lodash_es_flow, flowRight: lodash_es_flowRight, identity: lodash_es_identity, iteratee: lodash_es_iteratee,
  matches: lodash_es_matches, matchesProperty: lodash_es_matchesProperty, method: lodash_es_method, methodOf: lodash_es_methodOf, mixin: lodash_es_mixin,
  noop: lodash_es_noop, nthArg: lodash_es_nthArg, over: lodash_es_over, overEvery: lodash_es_overEvery, overSome: lodash_es_overSome,
  property: lodash_es_property, propertyOf: lodash_es_propertyOf, range: lodash_es_range, rangeRight: lodash_es_rangeRight, stubArray: lodash_es_stubArray,
  stubFalse: stubFalse["a" /* default */], stubObject: lodash_es_stubObject, stubString: lodash_es_stubString, stubTrue: lodash_es_stubTrue, times: lodash_es_times,
  toPath: lodash_es_toPath, uniqueId: lodash_es_uniqueId
});

// CONCATENATED MODULE: ./node_modules/lodash-es/_lazyClone.js



/**
 * Creates a clone of the lazy wrapper object.
 *
 * @private
 * @name clone
 * @memberOf LazyWrapper
 * @returns {Object} Returns the cloned `LazyWrapper` object.
 */
function lazyClone() {
  var result = new _LazyWrapper(this.__wrapped__);
  result.__actions__ = _copyArray(this.__actions__);
  result.__dir__ = this.__dir__;
  result.__filtered__ = this.__filtered__;
  result.__iteratees__ = _copyArray(this.__iteratees__);
  result.__takeCount__ = this.__takeCount__;
  result.__views__ = _copyArray(this.__views__);
  return result;
}

/* harmony default export */ var _lazyClone = (lazyClone);

// CONCATENATED MODULE: ./node_modules/lodash-es/_lazyReverse.js


/**
 * Reverses the direction of lazy iteration.
 *
 * @private
 * @name reverse
 * @memberOf LazyWrapper
 * @returns {Object} Returns the new reversed `LazyWrapper` object.
 */
function lazyReverse() {
  if (this.__filtered__) {
    var result = new _LazyWrapper(this);
    result.__dir__ = -1;
    result.__filtered__ = true;
  } else {
    result = this.clone();
    result.__dir__ *= -1;
  }
  return result;
}

/* harmony default export */ var _lazyReverse = (lazyReverse);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getView.js
/* Built-in method references for those with the same name as other `lodash` methods. */
var _getView_nativeMax = Math.max,
    _getView_nativeMin = Math.min;

/**
 * Gets the view, applying any `transforms` to the `start` and `end` positions.
 *
 * @private
 * @param {number} start The start of the view.
 * @param {number} end The end of the view.
 * @param {Array} transforms The transformations to apply to the view.
 * @returns {Object} Returns an object containing the `start` and `end`
 *  positions of the view.
 */
function getView(start, end, transforms) {
  var index = -1,
      length = transforms.length;

  while (++index < length) {
    var data = transforms[index],
        size = data.size;

    switch (data.type) {
      case 'drop':      start += size; break;
      case 'dropRight': end -= size; break;
      case 'take':      end = _getView_nativeMin(end, start + size); break;
      case 'takeRight': start = _getView_nativeMax(start, end - size); break;
    }
  }
  return { 'start': start, 'end': end };
}

/* harmony default export */ var _getView = (getView);

// CONCATENATED MODULE: ./node_modules/lodash-es/_lazyValue.js




/** Used to indicate the type of lazy iteratees. */
var LAZY_FILTER_FLAG = 1,
    LAZY_MAP_FLAG = 2;

/* Built-in method references for those with the same name as other `lodash` methods. */
var _lazyValue_nativeMin = Math.min;

/**
 * Extracts the unwrapped value from its lazy wrapper.
 *
 * @private
 * @name value
 * @memberOf LazyWrapper
 * @returns {*} Returns the unwrapped value.
 */
function lazyValue() {
  var array = this.__wrapped__.value(),
      dir = this.__dir__,
      isArr = lodash_es_isArray(array),
      isRight = dir < 0,
      arrLength = isArr ? array.length : 0,
      view = _getView(0, arrLength, this.__views__),
      start = view.start,
      end = view.end,
      length = end - start,
      index = isRight ? end : (start - 1),
      iteratees = this.__iteratees__,
      iterLength = iteratees.length,
      resIndex = 0,
      takeCount = _lazyValue_nativeMin(length, this.__takeCount__);

  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
    return _baseWrapperValue(array, this.__actions__);
  }
  var result = [];

  outer:
  while (length-- && resIndex < takeCount) {
    index += dir;

    var iterIndex = -1,
        value = array[index];

    while (++iterIndex < iterLength) {
      var data = iteratees[iterIndex],
          iteratee = data.iteratee,
          type = data.type,
          computed = iteratee(value);

      if (type == LAZY_MAP_FLAG) {
        value = computed;
      } else if (!computed) {
        if (type == LAZY_FILTER_FLAG) {
          continue outer;
        } else {
          break outer;
        }
      }
    }
    result[resIndex++] = value;
  }
  return result;
}

/* harmony default export */ var _lazyValue = (lazyValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/lodash.default.js
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */





































/** Used as the semantic version number. */
var VERSION = '4.17.21';

/** Used to compose bitmasks for function metadata. */
var lodash_default_WRAP_BIND_KEY_FLAG = 2;

/** Used to indicate the type of lazy iteratees. */
var lodash_default_LAZY_FILTER_FLAG = 1,
    LAZY_WHILE_FLAG = 3;

/** Used as references for the maximum length and index of an array. */
var lodash_default_MAX_ARRAY_LENGTH = 4294967295;

/** Used for built-in method references. */
var lodash_default_arrayProto = Array.prototype,
    lodash_default_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var lodash_default_hasOwnProperty = lodash_default_objectProto.hasOwnProperty;

/** Built-in value references. */
var lodash_default_symIterator = _Symbol["a" /* default */] ? _Symbol["a" /* default */].iterator : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var lodash_default_nativeMax = Math.max,
    lodash_default_nativeMin = Math.min;

// wrap `_.mixin` so it works when provided only one argument
var lodash_default_mixin = (function(func) {
  return function(object, source, options) {
    if (options == null) {
      var isObj = lodash_es_isObject(source),
          props = isObj && lodash_es_keys(source),
          methodNames = props && props.length && _baseFunctions(source, props);

      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object;
        object = this;
      }
    }
    return func(object, source, options);
  };
}(lodash_es_mixin));

// Add methods that return wrapped values in chain sequences.
wrapperLodash.after = function_default.after;
wrapperLodash.ary = function_default.ary;
wrapperLodash.assign = object_default.assign;
wrapperLodash.assignIn = object_default.assignIn;
wrapperLodash.assignInWith = object_default.assignInWith;
wrapperLodash.assignWith = object_default.assignWith;
wrapperLodash.at = object_default.at;
wrapperLodash.before = function_default.before;
wrapperLodash.bind = function_default.bind;
wrapperLodash.bindAll = util_default.bindAll;
wrapperLodash.bindKey = function_default.bindKey;
wrapperLodash.castArray = lang_default.castArray;
wrapperLodash.chain = seq_default.chain;
wrapperLodash.chunk = array_default.chunk;
wrapperLodash.compact = array_default.compact;
wrapperLodash.concat = array_default.concat;
wrapperLodash.cond = util_default.cond;
wrapperLodash.conforms = util_default.conforms;
wrapperLodash.constant = util_default.constant;
wrapperLodash.countBy = collection_default.countBy;
wrapperLodash.create = object_default.create;
wrapperLodash.curry = function_default.curry;
wrapperLodash.curryRight = function_default.curryRight;
wrapperLodash.debounce = function_default.debounce;
wrapperLodash.defaults = object_default.defaults;
wrapperLodash.defaultsDeep = object_default.defaultsDeep;
wrapperLodash.defer = function_default.defer;
wrapperLodash.delay = function_default.delay;
wrapperLodash.difference = array_default.difference;
wrapperLodash.differenceBy = array_default.differenceBy;
wrapperLodash.differenceWith = array_default.differenceWith;
wrapperLodash.drop = array_default.drop;
wrapperLodash.dropRight = array_default.dropRight;
wrapperLodash.dropRightWhile = array_default.dropRightWhile;
wrapperLodash.dropWhile = array_default.dropWhile;
wrapperLodash.fill = array_default.fill;
wrapperLodash.filter = collection_default.filter;
wrapperLodash.flatMap = collection_default.flatMap;
wrapperLodash.flatMapDeep = collection_default.flatMapDeep;
wrapperLodash.flatMapDepth = collection_default.flatMapDepth;
wrapperLodash.flatten = array_default.flatten;
wrapperLodash.flattenDeep = array_default.flattenDeep;
wrapperLodash.flattenDepth = array_default.flattenDepth;
wrapperLodash.flip = function_default.flip;
wrapperLodash.flow = util_default.flow;
wrapperLodash.flowRight = util_default.flowRight;
wrapperLodash.fromPairs = array_default.fromPairs;
wrapperLodash.functions = object_default.functions;
wrapperLodash.functionsIn = object_default.functionsIn;
wrapperLodash.groupBy = collection_default.groupBy;
wrapperLodash.initial = array_default.initial;
wrapperLodash.intersection = array_default.intersection;
wrapperLodash.intersectionBy = array_default.intersectionBy;
wrapperLodash.intersectionWith = array_default.intersectionWith;
wrapperLodash.invert = object_default.invert;
wrapperLodash.invertBy = object_default.invertBy;
wrapperLodash.invokeMap = collection_default.invokeMap;
wrapperLodash.iteratee = util_default.iteratee;
wrapperLodash.keyBy = collection_default.keyBy;
wrapperLodash.keys = lodash_es_keys;
wrapperLodash.keysIn = object_default.keysIn;
wrapperLodash.map = collection_default.map;
wrapperLodash.mapKeys = object_default.mapKeys;
wrapperLodash.mapValues = object_default.mapValues;
wrapperLodash.matches = util_default.matches;
wrapperLodash.matchesProperty = util_default.matchesProperty;
wrapperLodash.memoize = function_default.memoize;
wrapperLodash.merge = object_default.merge;
wrapperLodash.mergeWith = object_default.mergeWith;
wrapperLodash.method = util_default.method;
wrapperLodash.methodOf = util_default.methodOf;
wrapperLodash.mixin = lodash_default_mixin;
wrapperLodash.negate = lodash_es_negate;
wrapperLodash.nthArg = util_default.nthArg;
wrapperLodash.omit = object_default.omit;
wrapperLodash.omitBy = object_default.omitBy;
wrapperLodash.once = function_default.once;
wrapperLodash.orderBy = collection_default.orderBy;
wrapperLodash.over = util_default.over;
wrapperLodash.overArgs = function_default.overArgs;
wrapperLodash.overEvery = util_default.overEvery;
wrapperLodash.overSome = util_default.overSome;
wrapperLodash.partial = function_default.partial;
wrapperLodash.partialRight = function_default.partialRight;
wrapperLodash.partition = collection_default.partition;
wrapperLodash.pick = object_default.pick;
wrapperLodash.pickBy = object_default.pickBy;
wrapperLodash.property = util_default.property;
wrapperLodash.propertyOf = util_default.propertyOf;
wrapperLodash.pull = array_default.pull;
wrapperLodash.pullAll = array_default.pullAll;
wrapperLodash.pullAllBy = array_default.pullAllBy;
wrapperLodash.pullAllWith = array_default.pullAllWith;
wrapperLodash.pullAt = array_default.pullAt;
wrapperLodash.range = util_default.range;
wrapperLodash.rangeRight = util_default.rangeRight;
wrapperLodash.rearg = function_default.rearg;
wrapperLodash.reject = collection_default.reject;
wrapperLodash.remove = array_default.remove;
wrapperLodash.rest = function_default.rest;
wrapperLodash.reverse = array_default.reverse;
wrapperLodash.sampleSize = collection_default.sampleSize;
wrapperLodash.set = object_default.set;
wrapperLodash.setWith = object_default.setWith;
wrapperLodash.shuffle = collection_default.shuffle;
wrapperLodash.slice = array_default.slice;
wrapperLodash.sortBy = collection_default.sortBy;
wrapperLodash.sortedUniq = array_default.sortedUniq;
wrapperLodash.sortedUniqBy = array_default.sortedUniqBy;
wrapperLodash.split = string_default.split;
wrapperLodash.spread = function_default.spread;
wrapperLodash.tail = array_default.tail;
wrapperLodash.take = array_default.take;
wrapperLodash.takeRight = array_default.takeRight;
wrapperLodash.takeRightWhile = array_default.takeRightWhile;
wrapperLodash.takeWhile = array_default.takeWhile;
wrapperLodash.tap = seq_default.tap;
wrapperLodash.throttle = function_default.throttle;
wrapperLodash.thru = lodash_es_thru;
wrapperLodash.toArray = lang_default.toArray;
wrapperLodash.toPairs = object_default.toPairs;
wrapperLodash.toPairsIn = object_default.toPairsIn;
wrapperLodash.toPath = util_default.toPath;
wrapperLodash.toPlainObject = lang_default.toPlainObject;
wrapperLodash.transform = object_default.transform;
wrapperLodash.unary = function_default.unary;
wrapperLodash.union = array_default.union;
wrapperLodash.unionBy = array_default.unionBy;
wrapperLodash.unionWith = array_default.unionWith;
wrapperLodash.uniq = array_default.uniq;
wrapperLodash.uniqBy = array_default.uniqBy;
wrapperLodash.uniqWith = array_default.uniqWith;
wrapperLodash.unset = object_default.unset;
wrapperLodash.unzip = array_default.unzip;
wrapperLodash.unzipWith = array_default.unzipWith;
wrapperLodash.update = object_default.update;
wrapperLodash.updateWith = object_default.updateWith;
wrapperLodash.values = object_default.values;
wrapperLodash.valuesIn = object_default.valuesIn;
wrapperLodash.without = array_default.without;
wrapperLodash.words = string_default.words;
wrapperLodash.wrap = function_default.wrap;
wrapperLodash.xor = array_default.xor;
wrapperLodash.xorBy = array_default.xorBy;
wrapperLodash.xorWith = array_default.xorWith;
wrapperLodash.zip = array_default.zip;
wrapperLodash.zipObject = array_default.zipObject;
wrapperLodash.zipObjectDeep = array_default.zipObjectDeep;
wrapperLodash.zipWith = array_default.zipWith;

// Add aliases.
wrapperLodash.entries = object_default.toPairs;
wrapperLodash.entriesIn = object_default.toPairsIn;
wrapperLodash.extend = object_default.assignIn;
wrapperLodash.extendWith = object_default.assignInWith;

// Add methods to `lodash.prototype`.
lodash_default_mixin(wrapperLodash, wrapperLodash);

// Add methods that return unwrapped values in chain sequences.
wrapperLodash.add = math_default.add;
wrapperLodash.attempt = util_default.attempt;
wrapperLodash.camelCase = string_default.camelCase;
wrapperLodash.capitalize = string_default.capitalize;
wrapperLodash.ceil = math_default.ceil;
wrapperLodash.clamp = number_default.clamp;
wrapperLodash.clone = lang_default.clone;
wrapperLodash.cloneDeep = lang_default.cloneDeep;
wrapperLodash.cloneDeepWith = lang_default.cloneDeepWith;
wrapperLodash.cloneWith = lang_default.cloneWith;
wrapperLodash.conformsTo = lang_default.conformsTo;
wrapperLodash.deburr = string_default.deburr;
wrapperLodash.defaultTo = util_default.defaultTo;
wrapperLodash.divide = math_default.divide;
wrapperLodash.endsWith = string_default.endsWith;
wrapperLodash.eq = lang_default.eq;
wrapperLodash.escape = string_default.escape;
wrapperLodash.escapeRegExp = string_default.escapeRegExp;
wrapperLodash.every = collection_default.every;
wrapperLodash.find = collection_default.find;
wrapperLodash.findIndex = array_default.findIndex;
wrapperLodash.findKey = object_default.findKey;
wrapperLodash.findLast = collection_default.findLast;
wrapperLodash.findLastIndex = array_default.findLastIndex;
wrapperLodash.findLastKey = object_default.findLastKey;
wrapperLodash.floor = math_default.floor;
wrapperLodash.forEach = collection_default.forEach;
wrapperLodash.forEachRight = collection_default.forEachRight;
wrapperLodash.forIn = object_default.forIn;
wrapperLodash.forInRight = object_default.forInRight;
wrapperLodash.forOwn = object_default.forOwn;
wrapperLodash.forOwnRight = object_default.forOwnRight;
wrapperLodash.get = object_default.get;
wrapperLodash.gt = lang_default.gt;
wrapperLodash.gte = lang_default.gte;
wrapperLodash.has = object_default.has;
wrapperLodash.hasIn = object_default.hasIn;
wrapperLodash.head = array_default.head;
wrapperLodash.identity = lodash_es_identity;
wrapperLodash.includes = collection_default.includes;
wrapperLodash.indexOf = array_default.indexOf;
wrapperLodash.inRange = number_default.inRange;
wrapperLodash.invoke = object_default.invoke;
wrapperLodash.isArguments = lang_default.isArguments;
wrapperLodash.isArray = lodash_es_isArray;
wrapperLodash.isArrayBuffer = lang_default.isArrayBuffer;
wrapperLodash.isArrayLike = lang_default.isArrayLike;
wrapperLodash.isArrayLikeObject = lang_default.isArrayLikeObject;
wrapperLodash.isBoolean = lang_default.isBoolean;
wrapperLodash.isBuffer = lang_default.isBuffer;
wrapperLodash.isDate = lang_default.isDate;
wrapperLodash.isElement = lang_default.isElement;
wrapperLodash.isEmpty = lang_default.isEmpty;
wrapperLodash.isEqual = lang_default.isEqual;
wrapperLodash.isEqualWith = lang_default.isEqualWith;
wrapperLodash.isError = lang_default.isError;
wrapperLodash.isFinite = lang_default.isFinite;
wrapperLodash.isFunction = lang_default.isFunction;
wrapperLodash.isInteger = lang_default.isInteger;
wrapperLodash.isLength = lang_default.isLength;
wrapperLodash.isMap = lang_default.isMap;
wrapperLodash.isMatch = lang_default.isMatch;
wrapperLodash.isMatchWith = lang_default.isMatchWith;
wrapperLodash.isNaN = lang_default.isNaN;
wrapperLodash.isNative = lang_default.isNative;
wrapperLodash.isNil = lang_default.isNil;
wrapperLodash.isNull = lang_default.isNull;
wrapperLodash.isNumber = lang_default.isNumber;
wrapperLodash.isObject = lodash_es_isObject;
wrapperLodash.isObjectLike = lang_default.isObjectLike;
wrapperLodash.isPlainObject = lang_default.isPlainObject;
wrapperLodash.isRegExp = lang_default.isRegExp;
wrapperLodash.isSafeInteger = lang_default.isSafeInteger;
wrapperLodash.isSet = lang_default.isSet;
wrapperLodash.isString = lang_default.isString;
wrapperLodash.isSymbol = lang_default.isSymbol;
wrapperLodash.isTypedArray = lang_default.isTypedArray;
wrapperLodash.isUndefined = lang_default.isUndefined;
wrapperLodash.isWeakMap = lang_default.isWeakMap;
wrapperLodash.isWeakSet = lang_default.isWeakSet;
wrapperLodash.join = array_default.join;
wrapperLodash.kebabCase = string_default.kebabCase;
wrapperLodash.last = lodash_es_last;
wrapperLodash.lastIndexOf = array_default.lastIndexOf;
wrapperLodash.lowerCase = string_default.lowerCase;
wrapperLodash.lowerFirst = string_default.lowerFirst;
wrapperLodash.lt = lang_default.lt;
wrapperLodash.lte = lang_default.lte;
wrapperLodash.max = math_default.max;
wrapperLodash.maxBy = math_default.maxBy;
wrapperLodash.mean = math_default.mean;
wrapperLodash.meanBy = math_default.meanBy;
wrapperLodash.min = math_default.min;
wrapperLodash.minBy = math_default.minBy;
wrapperLodash.stubArray = util_default.stubArray;
wrapperLodash.stubFalse = util_default.stubFalse;
wrapperLodash.stubObject = util_default.stubObject;
wrapperLodash.stubString = util_default.stubString;
wrapperLodash.stubTrue = util_default.stubTrue;
wrapperLodash.multiply = math_default.multiply;
wrapperLodash.nth = array_default.nth;
wrapperLodash.noop = util_default.noop;
wrapperLodash.now = date_default.now;
wrapperLodash.pad = string_default.pad;
wrapperLodash.padEnd = string_default.padEnd;
wrapperLodash.padStart = string_default.padStart;
wrapperLodash.parseInt = string_default.parseInt;
wrapperLodash.random = number_default.random;
wrapperLodash.reduce = collection_default.reduce;
wrapperLodash.reduceRight = collection_default.reduceRight;
wrapperLodash.repeat = string_default.repeat;
wrapperLodash.replace = string_default.replace;
wrapperLodash.result = object_default.result;
wrapperLodash.round = math_default.round;
wrapperLodash.sample = collection_default.sample;
wrapperLodash.size = collection_default.size;
wrapperLodash.snakeCase = string_default.snakeCase;
wrapperLodash.some = collection_default.some;
wrapperLodash.sortedIndex = array_default.sortedIndex;
wrapperLodash.sortedIndexBy = array_default.sortedIndexBy;
wrapperLodash.sortedIndexOf = array_default.sortedIndexOf;
wrapperLodash.sortedLastIndex = array_default.sortedLastIndex;
wrapperLodash.sortedLastIndexBy = array_default.sortedLastIndexBy;
wrapperLodash.sortedLastIndexOf = array_default.sortedLastIndexOf;
wrapperLodash.startCase = string_default.startCase;
wrapperLodash.startsWith = string_default.startsWith;
wrapperLodash.subtract = math_default.subtract;
wrapperLodash.sum = math_default.sum;
wrapperLodash.sumBy = math_default.sumBy;
wrapperLodash.template = string_default.template;
wrapperLodash.times = util_default.times;
wrapperLodash.toFinite = lang_default.toFinite;
wrapperLodash.toInteger = lodash_es_toInteger;
wrapperLodash.toLength = lang_default.toLength;
wrapperLodash.toLower = string_default.toLower;
wrapperLodash.toNumber = lang_default.toNumber;
wrapperLodash.toSafeInteger = lang_default.toSafeInteger;
wrapperLodash.toString = lang_default.toString;
wrapperLodash.toUpper = string_default.toUpper;
wrapperLodash.trim = string_default.trim;
wrapperLodash.trimEnd = string_default.trimEnd;
wrapperLodash.trimStart = string_default.trimStart;
wrapperLodash.truncate = string_default.truncate;
wrapperLodash.unescape = string_default.unescape;
wrapperLodash.uniqueId = util_default.uniqueId;
wrapperLodash.upperCase = string_default.upperCase;
wrapperLodash.upperFirst = string_default.upperFirst;

// Add aliases.
wrapperLodash.each = collection_default.forEach;
wrapperLodash.eachRight = collection_default.forEachRight;
wrapperLodash.first = array_default.head;

lodash_default_mixin(wrapperLodash, (function() {
  var source = {};
  _baseForOwn(wrapperLodash, function(func, methodName) {
    if (!lodash_default_hasOwnProperty.call(wrapperLodash.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}()), { 'chain': false });

/**
 * The semantic version number.
 *
 * @static
 * @memberOf _
 * @type {string}
 */
wrapperLodash.VERSION = VERSION;
(wrapperLodash.templateSettings = string_default.templateSettings).imports._ = wrapperLodash;

// Assign default placeholders.
_arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
  wrapperLodash[methodName].placeholder = wrapperLodash;
});

// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
_arrayEach(['drop', 'take'], function(methodName, index) {
  _LazyWrapper.prototype[methodName] = function(n) {
    n = n === undefined ? 1 : lodash_default_nativeMax(lodash_es_toInteger(n), 0);

    var result = (this.__filtered__ && !index)
      ? new _LazyWrapper(this)
      : this.clone();

    if (result.__filtered__) {
      result.__takeCount__ = lodash_default_nativeMin(n, result.__takeCount__);
    } else {
      result.__views__.push({
        'size': lodash_default_nativeMin(n, lodash_default_MAX_ARRAY_LENGTH),
        'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
      });
    }
    return result;
  };

  _LazyWrapper.prototype[methodName + 'Right'] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});

// Add `LazyWrapper` methods that accept an `iteratee` value.
_arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
  var type = index + 1,
      isFilter = type == lodash_default_LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

  _LazyWrapper.prototype[methodName] = function(iteratee) {
    var result = this.clone();
    result.__iteratees__.push({
      'iteratee': _baseIteratee(iteratee, 3),
      'type': type
    });
    result.__filtered__ = result.__filtered__ || isFilter;
    return result;
  };
});

// Add `LazyWrapper` methods for `_.head` and `_.last`.
_arrayEach(['head', 'last'], function(methodName, index) {
  var takeName = 'take' + (index ? 'Right' : '');

  _LazyWrapper.prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});

// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
_arrayEach(['initial', 'tail'], function(methodName, index) {
  var dropName = 'drop' + (index ? '' : 'Right');

  _LazyWrapper.prototype[methodName] = function() {
    return this.__filtered__ ? new _LazyWrapper(this) : this[dropName](1);
  };
});

_LazyWrapper.prototype.compact = function() {
  return this.filter(lodash_es_identity);
};

_LazyWrapper.prototype.find = function(predicate) {
  return this.filter(predicate).head();
};

_LazyWrapper.prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};

_LazyWrapper.prototype.invokeMap = _baseRest(function(path, args) {
  if (typeof path == 'function') {
    return new _LazyWrapper(this);
  }
  return this.map(function(value) {
    return _baseInvoke(value, path, args);
  });
});

_LazyWrapper.prototype.reject = function(predicate) {
  return this.filter(lodash_es_negate(_baseIteratee(predicate)));
};

_LazyWrapper.prototype.slice = function(start, end) {
  start = lodash_es_toInteger(start);

  var result = this;
  if (result.__filtered__ && (start > 0 || end < 0)) {
    return new _LazyWrapper(result);
  }
  if (start < 0) {
    result = result.takeRight(-start);
  } else if (start) {
    result = result.drop(start);
  }
  if (end !== undefined) {
    end = lodash_es_toInteger(end);
    result = end < 0 ? result.dropRight(-end) : result.take(end - start);
  }
  return result;
};

_LazyWrapper.prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};

_LazyWrapper.prototype.toArray = function() {
  return this.take(lodash_default_MAX_ARRAY_LENGTH);
};

// Add `LazyWrapper` methods to `lodash.prototype`.
_baseForOwn(_LazyWrapper.prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
      isTaker = /^(?:head|last)$/.test(methodName),
      lodashFunc = wrapperLodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
      retUnwrapped = isTaker || /^find/.test(methodName);

  if (!lodashFunc) {
    return;
  }
  wrapperLodash.prototype[methodName] = function() {
    var value = this.__wrapped__,
        args = isTaker ? [1] : arguments,
        isLazy = value instanceof _LazyWrapper,
        iteratee = args[0],
        useLazy = isLazy || lodash_es_isArray(value);

    var interceptor = function(value) {
      var result = lodashFunc.apply(wrapperLodash, _arrayPush([value], args));
      return (isTaker && chainAll) ? result[0] : result;
    };

    if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
      // Avoid lazy use if the iteratee has a "length" value other than `1`.
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__,
        isHybrid = !!this.__actions__.length,
        isUnwrapped = retUnwrapped && !chainAll,
        onlyLazy = isLazy && !isHybrid;

    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new _LazyWrapper(this);
      var result = func.apply(value, args);
      result.__actions__.push({ 'func': lodash_es_thru, 'args': [interceptor], 'thisArg': undefined });
      return new _LodashWrapper(result, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result = this.thru(interceptor);
    return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
  };
});

// Add `Array` methods to `lodash.prototype`.
_arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
  var func = lodash_default_arrayProto[methodName],
      chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
      retUnwrapped = /^(?:pop|shift)$/.test(methodName);

  wrapperLodash.prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply(lodash_es_isArray(value) ? value : [], args);
    }
    return this[chainName](function(value) {
      return func.apply(lodash_es_isArray(value) ? value : [], args);
    });
  };
});

// Map minified method names to their real names.
_baseForOwn(_LazyWrapper.prototype, function(func, methodName) {
  var lodashFunc = wrapperLodash[methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + '';
    if (!lodash_default_hasOwnProperty.call(_realNames, key)) {
      _realNames[key] = [];
    }
    _realNames[key].push({ 'name': methodName, 'func': lodashFunc });
  }
});

_realNames[_createHybrid(undefined, lodash_default_WRAP_BIND_KEY_FLAG).name] = [{
  'name': 'wrapper',
  'func': undefined
}];

// Add methods to `LazyWrapper`.
_LazyWrapper.prototype.clone = _lazyClone;
_LazyWrapper.prototype.reverse = _lazyReverse;
_LazyWrapper.prototype.value = _lazyValue;

// Add chain sequence methods to the `lodash` wrapper.
wrapperLodash.prototype.at = seq_default.at;
wrapperLodash.prototype.chain = seq_default.wrapperChain;
wrapperLodash.prototype.commit = seq_default.commit;
wrapperLodash.prototype.next = seq_default.next;
wrapperLodash.prototype.plant = seq_default.plant;
wrapperLodash.prototype.reverse = seq_default.reverse;
wrapperLodash.prototype.toJSON = wrapperLodash.prototype.valueOf = wrapperLodash.prototype.value = seq_default.value;

// Add lazy aliases.
wrapperLodash.prototype.first = wrapperLodash.prototype.head;

if (lodash_default_symIterator) {
  wrapperLodash.prototype[lodash_default_symIterator] = seq_default.toIterator;
}

/* harmony default export */ var lodash_default = (wrapperLodash);

// CONCATENATED MODULE: ./node_modules/lodash-es/lodash.js
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */




































































































































































































































































































































/***/ }),

/***/ "5057":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getEvents = getEvents;
exports.getEvent = getEvent;
exports.getDataEvents = getDataEvents;
exports.getListeners = getListeners;
exports.getClass = getClass;
exports.getStyle = getStyle;
exports.getComponentName = getComponentName;
exports.isFragment = isFragment;
exports.isEmptyElement = isEmptyElement;
exports.isStringElement = isStringElement;
exports.filterEmpty = filterEmpty;
exports.mergeProps = mergeProps;
exports.isValidElement = isValidElement;
Object.defineProperty(exports, "camelize", {
  enumerable: true,
  get: function get() {
    return _util.camelize;
  }
});
exports.default = exports.flattenChildren = exports.findDOMNode = exports.getAllChildren = exports.getAllProps = exports.getSlot = exports.getSlots = exports.initDefaultProps = exports.parseStyleText = exports.getValueByProp = exports.getAttrs = exports.getKey = exports.getPropsData = exports.slotHasProp = exports.getSlotOptions = exports.getComponentFromProp = exports.getComponent = exports.getOptionProps = exports.hasProp = exports.splitAttrs = void 0;

var _isPlainObject = _interopRequireDefault(__webpack_require__("e8b2"));

var _classNames = _interopRequireDefault(__webpack_require__("59af"));

var _vue = __webpack_require__("8bbf");

var _util = __webpack_require__("d529");

var _isValid = _interopRequireDefault(__webpack_require__("74f6"));

var _this = void 0;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// function getType(fn) {
//   const match = fn && fn.toString().match(/^\s*function (\w+)/);
//   return match ? match[1] : '';
// }
var splitAttrs = function splitAttrs(attrs) {
  var allAttrs = Object.keys(attrs);
  var eventAttrs = {};
  var onEvents = {};
  var extraAttrs = {};

  for (var i = 0, l = allAttrs.length; i < l; i++) {
    var key = allAttrs[i];

    if ((0, _util.isOn)(key)) {
      eventAttrs[key[2].toLowerCase() + key.slice(3)] = attrs[key];
      onEvents[key] = attrs[key];
    } else {
      extraAttrs[key] = attrs[key];
    }
  }

  return {
    onEvents: onEvents,
    events: eventAttrs,
    extraAttrs: extraAttrs
  };
};

exports.splitAttrs = splitAttrs;

var parseStyleText = function parseStyleText() {
  var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var camel = arguments.length > 1 ? arguments[1] : undefined;
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);

      if (tmp.length > 1) {
        var k = camel ? (0, _util.camelize)(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};

exports.parseStyleText = parseStyleText;

var hasProp = function hasProp(instance, prop) {
  return prop in getOptionProps(instance);
}; // 重构后直接使用 hasProp 替换


exports.hasProp = hasProp;

var slotHasProp = function slotHasProp(slot, prop) {
  return hasProp(slot, prop);
};

exports.slotHasProp = slotHasProp;

var getScopedSlots = function getScopedSlots(ele) {
  return ele.data && ele.data.scopedSlots || {};
};

var getSlots = function getSlots(ele) {
  var componentOptions = ele.componentOptions || {};

  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }

  var children = ele.children || componentOptions.children || [];
  var slots = {};
  children.forEach(function (child) {
    if (!isEmptyElement(child)) {
      var name = child.data && child.data.slot || 'default';
      slots[name] = slots[name] || [];
      slots[name].push(child);
    }
  });
  return _extends(_extends({}, slots), getScopedSlots(ele));
};

exports.getSlots = getSlots;

var flattenChildren = function flattenChildren() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var filterEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var temp = Array.isArray(children) ? children : [children];
  var res = [];
  temp.forEach(function (child) {
    if (Array.isArray(child)) {
      res.push.apply(res, _toConsumableArray(flattenChildren(child, filterEmpty)));
    } else if (child && child.type === _vue.Fragment) {
      res.push.apply(res, _toConsumableArray(flattenChildren(child.children, filterEmpty)));
    } else if (child && (0, _vue.isVNode)(child)) {
      if (filterEmpty && !isEmptyElement(child)) {
        res.push(child);
      } else if (!filterEmpty) {
        res.push(child);
      }
    } else if ((0, _isValid.default)(child)) {
      res.push(child);
    }
  });
  return res;
};

exports.flattenChildren = flattenChildren;

var getSlot = function getSlot(self) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if ((0, _vue.isVNode)(self)) {
    if (self.type === _vue.Fragment) {
      return name === 'default' ? flattenChildren(self.children) : [];
    } else if (self.children && self.children[name]) {
      return flattenChildren(self.children[name](options));
    } else {
      return [];
    }
  } else {
    var res = self.$slots[name] && self.$slots[name](options);
    return flattenChildren(res);
  }
};

exports.getSlot = getSlot;

var getAllChildren = function getAllChildren(ele) {
  var componentOptions = ele.componentOptions || {};

  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }

  return ele.children || componentOptions.children || [];
};

exports.getAllChildren = getAllChildren;

var getSlotOptions = function getSlotOptions() {
  throw Error('使用 .type 直接取值');
};

exports.getSlotOptions = getSlotOptions;

var findDOMNode = function findDOMNode(instance) {
  var node = instance && (instance.$el || instance);

  while (node && !node.tagName) {
    node = node.nextSibling;
  }

  return node;
};

exports.findDOMNode = findDOMNode;

var getOptionProps = function getOptionProps(instance) {
  var res = {};

  if (instance.$ && instance.$.vnode) {
    var props = instance.$.vnode.props || {};
    Object.keys(instance.$props).forEach(function (k) {
      var v = instance.$props[k];
      var hyphenateKey = (0, _util.hyphenate)(k);

      if (v !== undefined || hyphenateKey in props) {
        res[k] = v; // 直接取 $props[k]
      }
    });
  } else if ((0, _vue.isVNode)(instance) && _typeof(instance.type) === 'object') {
    var originProps = instance.props || {};
    var _props = {};
    Object.keys(originProps).forEach(function (key) {
      _props[(0, _util.camelize)(key)] = originProps[key];
    });
    var options = instance.type.props || {};
    Object.keys(options).forEach(function (k) {
      var v = (0, _util.resolvePropValue)(options, _props, k, _props[k]);

      if (v !== undefined || k in _props) {
        res[k] = v;
      }
    });
  }

  return res;
};

exports.getOptionProps = getOptionProps;

var getComponent = function getComponent(instance) {
  var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var com = undefined;

  if (instance.$) {
    var temp = instance[prop];

    if (temp !== undefined) {
      return typeof temp === 'function' && execute ? temp(options) : temp;
    } else {
      com = instance.$slots[prop];
      com = execute && com ? com(options) : com;
    }
  } else if ((0, _vue.isVNode)(instance)) {
    var _temp = instance.props && instance.props[prop];

    if (_temp !== undefined && instance.props !== null) {
      return typeof _temp === 'function' && execute ? _temp(options) : _temp;
    } else if (instance.type === _vue.Fragment) {
      com = instance.children;
    } else if (instance.children && instance.children[prop]) {
      com = instance.children[prop];
      com = execute && com ? com(options) : com;
    }
  }

  if (Array.isArray(com)) {
    com = flattenChildren(com);
    com = com.length === 1 ? com[0] : com;
    com = com.length === 0 ? undefined : com;
  }

  return com;
};

exports.getComponent = getComponent;

var getComponentFromProp = function getComponentFromProp(instance, prop) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (instance.$createElement) {
    // const h = instance.$createElement;
    var temp = instance[prop];

    if (temp !== undefined) {
      return typeof temp === 'function' && execute ? temp(_vue.h, options) : temp;
    }

    return instance.$scopedSlots[prop] && execute && instance.$scopedSlots[prop](options) || instance.$scopedSlots[prop] || instance.$slots[prop] || undefined;
  } else {
    // const h = instance.context.$createElement;
    var _temp2 = getPropsData(instance)[prop];

    if (_temp2 !== undefined) {
      return typeof _temp2 === 'function' && execute ? _temp2(_vue.h, options) : _temp2;
    }

    var slotScope = getScopedSlots(instance)[prop];

    if (slotScope !== undefined) {
      return typeof slotScope === 'function' && execute ? slotScope(_vue.h, options) : slotScope;
    }

    var slotsProp = [];
    var componentOptions = instance.componentOptions || {};
    (componentOptions.children || []).forEach(function (child) {
      if (child.data && child.data.slot === prop) {
        if (child.data.attrs) {
          delete child.data.attrs.slot;
        }

        if (child.tag === 'template') {
          slotsProp.push(child.children);
        } else {
          slotsProp.push(child);
        }
      }
    });
    return slotsProp.length ? slotsProp : undefined;
  }
};

exports.getComponentFromProp = getComponentFromProp;

var getAllProps = function getAllProps(ele) {
  var props = getOptionProps(ele);

  if (ele.$) {
    props = _extends(_extends({}, props), _this.$attrs);
  } else {
    props = _extends(_extends({}, ele.props), props);
  }

  return props;
};

exports.getAllProps = getAllProps;

var getPropsData = function getPropsData(ins) {
  var vnode = ins.$ ? ins.$ : ins;
  var res = {};
  var originProps = vnode.props || {};
  var props = {};
  Object.keys(originProps).forEach(function (key) {
    props[(0, _util.camelize)(key)] = originProps[key];
  });
  var options = (0, _isPlainObject.default)(vnode.type) ? vnode.type.props : {};
  options && Object.keys(options).forEach(function (k) {
    var v = (0, _util.resolvePropValue)(options, props, k, props[k]);

    if (k in props) {
      // 仅包含 props，不包含默认值
      res[k] = v;
    }
  });
  return _extends(_extends({}, props), res); // 合并事件、未声明属性等
};

exports.getPropsData = getPropsData;

var getValueByProp = function getValueByProp(ele, prop) {
  return getPropsData(ele)[prop];
};

exports.getValueByProp = getValueByProp;

var getAttrs = function getAttrs(ele) {
  var data = ele.data;

  if (ele.$vnode) {
    data = ele.$vnode.data;
  }

  return data ? data.attrs || {} : {};
};

exports.getAttrs = getAttrs;

var getKey = function getKey(ele) {
  var key = ele.key;
  return key;
};

exports.getKey = getKey;

function getEvents() {
  var ele = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var on = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var props = {};

  if (ele.$) {
    props = _extends(_extends({}, props), ele.$attrs);
  } else {
    props = _extends(_extends({}, props), ele.props);
  }

  return splitAttrs(props)[on ? 'onEvents' : 'events'];
}

function getEvent(child, event) {
  return child.props && child.props[event];
} // 获取 xxx.native 或者 原生标签 事件


function getDataEvents(child) {
  var events = {};

  if (child.data && child.data.on) {
    events = child.data.on;
  }

  return _extends({}, events);
} // use getListeners instead this.$listeners
// https://github.com/vueComponent/ant-design-vue/issues/1705


function getListeners(context) {
  return (context.$vnode ? context.$vnode.componentOptions.listeners : context.$listeners) || {};
}

function getClass(ele) {
  var props = ((0, _vue.isVNode)(ele) ? ele.props : ele.$attrs) || {};
  var tempCls = props.class || {};
  var cls = {};

  if (typeof tempCls === 'string') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else if (Array.isArray(tempCls)) {
    (0, _classNames.default)(tempCls).split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = _extends(_extends({}, cls), tempCls);
  }

  return cls;
}

function getStyle(ele, camel) {
  var props = ((0, _vue.isVNode)(ele) ? ele.props : ele.$attrs) || {};
  var style = props.style || {};

  if (typeof style === 'string') {
    style = parseStyleText(style, camel);
  } else if (camel && style) {
    // 驼峰化
    var res = {};
    Object.keys(style).forEach(function (k) {
      return res[(0, _util.camelize)(k)] = style[k];
    });
    return res;
  }

  return style;
}

function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function isFragment(c) {
  return c.length === 1 && c[0].type === _vue.Fragment;
}

function isEmptyElement(c) {
  return c.type === _vue.Comment || c.type === _vue.Fragment && c.children.length === 0 || c.type === _vue.Text && c.children.trim() === '';
}

function isStringElement(c) {
  return c && c.type === _vue.Text;
}

function filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var res = [];
  children.forEach(function (child) {
    if (Array.isArray(child)) {
      res.push.apply(res, _toConsumableArray(child));
    } else if (child.type === _vue.Fragment) {
      res.push.apply(res, _toConsumableArray(child.children));
    } else {
      res.push(child);
    }
  });
  return res.filter(function (c) {
    return !isEmptyElement(c);
  });
}

var initDefaultProps = function initDefaultProps(propTypes, defaultProps) {
  Object.keys(defaultProps).forEach(function (k) {
    if (propTypes[k]) {
      propTypes[k].def && (propTypes[k] = propTypes[k].def(defaultProps[k]));
    } else {
      throw new Error("not have ".concat(k, " prop"));
    }
  });
  return propTypes;
};

exports.initDefaultProps = initDefaultProps;

function mergeProps() {
  var args = [].slice.call(arguments, 0);
  var props = {};
  args.forEach(function () {
    var p = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    for (var _i = 0, _Object$entries = Object.entries(p); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
          k = _Object$entries$_i[0],
          v = _Object$entries$_i[1];

      props[k] = props[k] || {};

      if ((0, _isPlainObject.default)(v)) {
        _extends(props[k], v);
      } else {
        props[k] = v;
      }
    }
  });
  return props;
}

function isValidElement(element) {
  return element && element.__v_isVNode && _typeof(element.type) !== 'symbol'; // remove text node
}

var _default = hasProp;
exports.default = _default;

/***/ }),

/***/ "50ed":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "5168":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("dbdb")('wks');
var uid = __webpack_require__("62a0");
var Symbol = __webpack_require__("e53d").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "51b6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a3c3");
module.exports = __webpack_require__("584a").Object.assign;


/***/ }),

/***/ "51eb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function required(rule, value, callback, source, options) {
  var errors = [];
  var type = Array.isArray(value) ? 'array' : typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value);
  _rule2['default'].required(rule, value, source, errors, options, type);
  callback(errors);
}

exports['default'] = required;

/***/ }),

/***/ "52e7":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _overArg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("53a2");


/** Built-in value references. */
var getPrototype = Object(_overArg_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(Object.getPrototypeOf, Object);

/* harmony default export */ __webpack_exports__["a"] = (getPrototype);


/***/ }),

/***/ "532b":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "53a2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ __webpack_exports__["a"] = (overArg);


/***/ }),

/***/ "53e2":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("07e3");
var toObject = __webpack_require__("241e");
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "545c":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "5559":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("dbdb")('keys');
var uid = __webpack_require__("62a0");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "573a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

var _switchScrollingEffect2 = _interopRequireDefault(__webpack_require__("3a3f"));

var _setStyle = _interopRequireDefault(__webpack_require__("12f1"));

var _Portal = _interopRequireDefault(__webpack_require__("136b"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var openCount = 0;
var windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement); // https://github.com/ant-design/ant-design/issues/19340
// https://github.com/ant-design/ant-design/issues/19332

var cacheOverflow = {};

var _default = (0, _vue.defineComponent)({
  name: 'PortalWrapper',
  props: {
    wrapperClassName: _vueTypes.default.string,
    forceRender: _vueTypes.default.looseBool,
    getContainer: _vueTypes.default.any,
    children: _vueTypes.default.func,
    visible: _vueTypes.default.looseBool
  },
  data: function data() {
    this._component = null;
    var visible = this.$props.visible;
    openCount = visible ? openCount + 1 : openCount;
    return {};
  },
  watch: {
    visible: function visible(val) {
      openCount = val ? openCount + 1 : openCount - 1;
    },
    getContainer: function getContainer(_getContainer, prevGetContainer) {
      var getContainerIsFunc = typeof _getContainer === 'function' && typeof prevGetContainer === 'function';

      if (getContainerIsFunc ? _getContainer.toString() !== prevGetContainer.toString() : _getContainer !== prevGetContainer) {
        this.removeCurrentContainer(false);
      }
    }
  },
  updated: function updated() {
    this.setWrapperClassName();
  },
  beforeUnmount: function beforeUnmount() {
    var visible = this.$props.visible; // 离开时不会 render， 导到离开时数值不变，改用 func 。。

    openCount = visible && openCount ? openCount - 1 : openCount;
    this.removeCurrentContainer(visible);
  },
  methods: {
    getParent: function getParent() {
      var getContainer = this.$props.getContainer;

      if (getContainer) {
        if (typeof getContainer === 'string') {
          return document.querySelectorAll(getContainer)[0];
        }

        if (typeof getContainer === 'function') {
          return getContainer();
        }

        if (_typeof(getContainer) === 'object' && getContainer instanceof window.HTMLElement) {
          return getContainer;
        }
      }

      return document.body;
    },
    getDomContainer: function getDomContainer() {
      if (windowIsUndefined) {
        return null;
      }

      if (!this.container) {
        this.container = document.createElement('div');
        var parent = this.getParent();

        if (parent) {
          parent.appendChild(this.container);
        }
      }

      this.setWrapperClassName();
      return this.container;
    },
    setWrapperClassName: function setWrapperClassName() {
      var wrapperClassName = this.$props.wrapperClassName;

      if (this.container && wrapperClassName && wrapperClassName !== this.container.className) {
        this.container.className = wrapperClassName;
      }
    },
    savePortal: function savePortal(c) {
      // Warning: don't rename _component
      // https://github.com/react-component/util/pull/65#discussion_r352407916
      this._component = c;
    },
    removeCurrentContainer: function removeCurrentContainer() {
      this.container = null;
      this._component = null;
    },

    /**
     * Enhance ./switchScrollingEffect
     * 1. Simulate document body scroll bar with
     * 2. Record body has overflow style and recover when all of PortalWrapper invisible
     * 3. Disable body scroll when PortalWrapper has open
     *
     * @memberof PortalWrapper
     */
    switchScrollingEffect: function switchScrollingEffect() {
      if (openCount === 1 && !Object.keys(cacheOverflow).length) {
        (0, _switchScrollingEffect2.default)(); // Must be set after switchScrollingEffect

        cacheOverflow = (0, _setStyle.default)({
          overflow: 'hidden',
          overflowX: 'hidden',
          overflowY: 'hidden'
        });
      } else if (!openCount) {
        (0, _setStyle.default)(cacheOverflow);
        cacheOverflow = {};
        (0, _switchScrollingEffect2.default)(true);
      }
    }
  },
  render: function render() {
    var _this$$props = this.$props,
        children = _this$$props.children,
        forceRender = _this$$props.forceRender,
        visible = _this$$props.visible;
    var portal = null;
    var childProps = {
      getOpenCount: function getOpenCount() {
        return openCount;
      },
      getContainer: this.getDomContainer,
      switchScrollingEffect: this.switchScrollingEffect
    };

    if (forceRender || visible || this._component) {
      portal = (0, _vue.createVNode)(_Portal.default, {
        "getContainer": this.getDomContainer,
        "children": children(childProps),
        "ref": this.savePortal
      }, null);
    }

    return portal;
  }
});

exports.default = _default;

/***/ }),

/***/ "584a":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "58e0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("26ee");
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("2f74");



/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"];

/* harmony default export */ __webpack_exports__["a"] = (isBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("dd40")(module)))

/***/ }),

/***/ "59af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = __webpack_require__("d529");

function classNames() {
  var classes = [];

  for (var i = 0; i < arguments.length; i++) {
    var value = i < 0 || arguments.length <= i ? undefined : arguments[i];
    if (!value) continue;

    if ((0, _util.isString)(value)) {
      classes.push(value);
    } else if ((0, _util.isArray)(value)) {
      for (var _i = 0; _i < value.length; _i++) {
        var inner = classNames(value[_i]);

        if (inner) {
          classes.push(inner);
        }
      }
    } else if ((0, _util.isObject)(value)) {
      for (var name in value) {
        if (value[name]) {
          classes.push(name);
        }
      }
    }
  }

  return classes.join(' ');
}

var _default = classNames;
exports.default = _default;

/***/ }),

/***/ "5b4e":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("36c3");
var toLength = __webpack_require__("b447");
var toAbsoluteIndex = __webpack_require__("0fc9");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "5c95":
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__("35e8");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "5d1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a number is an integer.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function integer(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = integer;

/***/ }),

/***/ "5d90":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates an object.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function object(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = object;

/***/ }),

/***/ "5ea3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ __webpack_exports__["a"] = (freeGlobal);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "5f3d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "62a0":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "62e4":
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "63b6":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var ctx = __webpack_require__("d864");
var hide = __webpack_require__("35e8");
var has = __webpack_require__("07e3");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "656e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__("79aa");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "6692":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "6718":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var LIBRARY = __webpack_require__("b8e3");
var wksExt = __webpack_require__("ccb9");
var defineProperty = __webpack_require__("d9f6").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "696e":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c207");
__webpack_require__("1654");
__webpack_require__("6c1c");
__webpack_require__("24c5");
__webpack_require__("3c11");
__webpack_require__("43fc");
module.exports = __webpack_require__("584a").Promise;


/***/ }),

/***/ "69d3":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6718")('asyncIterator');


/***/ }),

/***/ "6abf":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("e6f3");
var hiddenKeys = __webpack_require__("1691").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "6b4c":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "6c1c":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c367");
var global = __webpack_require__("e53d");
var hide = __webpack_require__("35e8");
var Iterators = __webpack_require__("481b");
var TO_STRING_TAG = __webpack_require__("5168")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "6d08":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "6dd8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["a"] = (index);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "70b3":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "71c1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("3a38");
var defined = __webpack_require__("25eb");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "721c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function type(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, ruleType) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options, ruleType);
    if (!(0, _util.isEmptyValue)(value, ruleType)) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = type;

/***/ }),

/***/ "722e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cssAnimation = _interopRequireDefault(__webpack_require__("401b"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function animate(node, show, transitionName, done) {
  var height;
  return (0, _cssAnimation.default)(node, transitionName, {
    start: function start() {
      if (!show) {
        node.style.height = "".concat(node.offsetHeight, "px");
      } else {
        height = node.offsetHeight;
        node.style.height = 0;
      }
    },
    active: function active() {
      node.style.height = "".concat(show ? height : 0, "px");
    },
    end: function end() {
      node.style.height = '';
      done();
    }
  });
}

function animation(prefixCls) {
  return {
    onEnter: function onEnter(node, done) {
      return animate(node, true, "".concat(prefixCls, "-anim"), done);
    },
    onLeave: function onLeave(node, done) {
      return animate(node, false, "".concat(prefixCls, "-anim"), done);
    }
  };
}

var _default = animation;
exports.default = _default;

/***/ }),

/***/ "7277":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "72d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

var _propsUtil = __webpack_require__("5057");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = (0, _vue.defineComponent)({
  name: 'PanelContent',
  props: {
    prefixCls: _vueTypes.default.string,
    isActive: _vueTypes.default.looseBool,
    destroyInactivePanel: _vueTypes.default.looseBool,
    forceRender: _vueTypes.default.looseBool,
    role: _vueTypes.default.any
  },
  data: function data() {
    return {
      _isActive: undefined
    };
  },
  render: function render() {
    var _contentCls;

    this._isActive = this.forceRender || this._isActive || this.isActive;

    if (!this._isActive) {
      return null;
    }

    var _this$$props = this.$props,
        prefixCls = _this$$props.prefixCls,
        isActive = _this$$props.isActive,
        destroyInactivePanel = _this$$props.destroyInactivePanel,
        forceRender = _this$$props.forceRender,
        role = _this$$props.role;
    var contentCls = (_contentCls = {}, _defineProperty(_contentCls, "".concat(prefixCls, "-content"), true), _defineProperty(_contentCls, "".concat(prefixCls, "-content-active"), isActive), _contentCls);
    var child = !forceRender && !isActive && destroyInactivePanel ? null : (0, _vue.createVNode)("div", {
      "class": "".concat(prefixCls, "-content-box")
    }, [(0, _propsUtil.getSlot)(this)]);
    return (0, _vue.createVNode)("div", {
      "class": contentCls,
      "role": role
    }, [child]);
  }
});

exports.default = _default;

/***/ }),

/***/ "730c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates an array.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function array(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, 'array') && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options, 'array');
    if (!(0, _util.isEmptyValue)(value, 'array')) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = array;

/***/ }),

/***/ "7477":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "74f6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var isValid = function isValid(value) {
  return value !== undefined && value !== null && value !== '';
};

var _default = isValid;
exports.default = _default;

/***/ }),

/***/ "765d":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6718")('observable');


/***/ }),

/***/ "794b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("8e60") && !__webpack_require__("294c")(function () {
  return Object.defineProperty(__webpack_require__("1ec9")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "79aa":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "7b44":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withUndefined = withUndefined;
exports.default = void 0;

var _vueTypes = __webpack_require__("84d4");

var PropTypes = (0, _vueTypes.createTypes)({
  func: undefined,
  bool: undefined,
  string: undefined,
  number: undefined,
  array: undefined,
  object: undefined,
  integer: undefined
});
PropTypes.extend([{
  name: 'looseBool',
  getter: true,
  type: Boolean,
  default: undefined
}, {
  name: 'style',
  getter: true,
  type: [String, Object],
  default: undefined
}, {
  name: 'VNodeChild',
  getter: true,
  type: null
}]);

function withUndefined(type) {
  type.default = undefined;
  return type;
}

var _default = PropTypes;
exports.default = _default;

/***/ }),

/***/ "7cd6":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("40c3");
var ITERATOR = __webpack_require__("5168")('iterator');
var Iterators = __webpack_require__("481b");
module.exports = __webpack_require__("584a").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "7e90":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("d9f6");
var anObject = __webpack_require__("e4ae");
var getKeys = __webpack_require__("c3a1");

module.exports = __webpack_require__("8e60") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "8034":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("a21f"), __esModule: true };

/***/ }),

/***/ "8147":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8436":
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "84d4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "any", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array", function() { return S; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayOf", function() { return I; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bool", function() { return E; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTypes", function() { return z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "custom", function() { return L; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromType", function() { return k; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "func", function() { return A; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "instanceOf", function() { return J; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "integer", function() { return F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "number", function() { return q; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return V; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "objectOf", function() { return M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "oneOf", function() { return Y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "oneOfType", function() { return B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shape", function() { return R; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return N; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toType", function() { return T; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toValidableType", function() { return w; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateType", function() { return _; });
function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function i(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t.indexOf(n=o[r])>=0||(i[n]=e[n]);return i}function o(e){return 1==(null!=(t=e)&&"object"==typeof t&&!1===Array.isArray(t))&&"[object Object]"===Object.prototype.toString.call(e);var t}var u=Object.prototype,a=u.toString,f=u.hasOwnProperty,c=/^\s*function (\w+)/;function l(e){var t,n=null!==(t=null==e?void 0:e.type)&&void 0!==t?t:e;if(n){var r=n.toString().match(c);return r?r[1]:""}return""}var s=function(e){var t,n;return!1!==o(e)&&"function"==typeof(t=e.constructor)&&!1!==o(n=t.prototype)&&!1!==n.hasOwnProperty("isPrototypeOf")},v=function(e){return e},y=v;if(false){ var p; }var d=function(e,t){return f.call(e,t)},h=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},b=Array.isArray||function(e){return"[object Array]"===a.call(e)},O=function(e){return"[object Function]"===a.call(e)},g=function(e){return s(e)&&d(e,"_vueTypes_name")},m=function(e){return s(e)&&(d(e,"type")||["_vueTypes_name","validator","default","required"].some(function(t){return d(e,t)}))};function j(e,t){return Object.defineProperty(e.bind(t),"__original",{value:e})}function _(e,t,n){var r;void 0===n&&(n=!1);var i=!0,o="";r=s(e)?e:{type:e};var u=g(r)?r._vueTypes_name+" - ":"";if(m(r)&&null!==r.type){if(void 0===r.type||!0===r.type)return i;if(!r.required&&void 0===t)return i;b(r.type)?(i=r.type.some(function(e){return!0===_(e,t,!0)}),o=r.type.map(function(e){return l(e)}).join(" or ")):i="Array"===(o=l(r))?b(t):"Object"===o?s(t):"String"===o||"Number"===o||"Boolean"===o||"Function"===o?function(e){if(null==e)return"";var t=e.constructor.toString().match(c);return t?t[1]:""}(t)===o:t instanceof r.type}if(!i){var a=u+'value "'+t+'" should be of type "'+o+'"';return!1===n?(y(a),!1):a}if(d(r,"validator")&&O(r.validator)){var f=y,v=[];if(y=function(e){v.push(e)},i=r.validator(t),y=f,!i){var p=(v.length>1?"* ":"")+v.join("\n* ");return v.length=0,!1===n?(y(p),i):p}}return i}function T(e,t){var n=Object.defineProperties(t,{_vueTypes_name:{value:e,writable:!0},isRequired:{get:function(){return this.required=!0,this}},def:{value:function(e){return void 0!==e||this.default?O(e)||!0===_(this,e,!0)?(this.default=b(e)?function(){return[].concat(e)}:s(e)?function(){return Object.assign({},e)}:e,this):(y(this._vueTypes_name+' - invalid default value: "'+e+'"'),this):this}}}),r=n.validator;return O(r)&&(n.validator=j(r,n)),n}function w(e,t){var n=T(e,t);return Object.defineProperty(n,"validate",{value:function(e){return O(this.validator)&&y(this._vueTypes_name+" - calling .validate() will overwrite the current custom validator function. Validator info:\n"+JSON.stringify(this)),this.validator=j(e,this),this}})}function k(e,t,n){var r,o,u=(r=t,o={},Object.getOwnPropertyNames(r).forEach(function(e){o[e]=Object.getOwnPropertyDescriptor(r,e)}),Object.defineProperties({},o));if(u._vueTypes_name=e,!s(n))return u;var a,f,c=n.validator,l=i(n,["validator"]);if(O(c)){var v=u.validator;v&&(v=null!==(f=(a=v).__original)&&void 0!==f?f:a),u.validator=j(v?function(e){return v.call(this,e)&&c.call(this,e)}:c,u)}return Object.assign(u,l)}function P(e){return e.replace(/^(?!\s*$)/gm,"  ")}var x=function(){return w("any",{})},A=function(){return w("function",{type:Function})},E=function(){return w("boolean",{type:Boolean})},N=function(){return w("string",{type:String})},q=function(){return w("number",{type:Number})},S=function(){return w("array",{type:Array})},V=function(){return w("object",{type:Object})},F=function(){return T("integer",{type:Number,validator:function(e){return h(e)}})},D=function(){return T("symbol",{validator:function(e){return"symbol"==typeof e}})};function L(e,t){if(void 0===t&&(t="custom validation failed"),"function"!=typeof e)throw new TypeError("[VueTypes error]: You must provide a function as argument");return T(e.name||"<<anonymous function>>",{validator:function(n){var r=e(n);return r||y(this._vueTypes_name+" - "+t),r}})}function Y(e){if(!b(e))throw new TypeError("[VueTypes error]: You must provide an array as argument.");var t='oneOf - value should be one of "'+e.join('", "')+'".',n=e.reduce(function(e,t){if(null!=t){var n=t.constructor;-1===e.indexOf(n)&&e.push(n)}return e},[]);return T("oneOf",{type:n.length>0?n:void 0,validator:function(n){var r=-1!==e.indexOf(n);return r||y(t),r}})}function B(e){if(!b(e))throw new TypeError("[VueTypes error]: You must provide an array as argument");for(var t=!1,n=[],r=0;r<e.length;r+=1){var i=e[r];if(m(i)){if(g(i)&&"oneOf"===i._vueTypes_name){n=n.concat(i.type);continue}if(O(i.validator)&&(t=!0),!0!==i.type&&i.type){n=n.concat(i.type);continue}}n.push(i)}return n=n.filter(function(e,t){return n.indexOf(e)===t}),T("oneOfType",t?{type:n,validator:function(t){var n=[],r=e.some(function(e){var r=_(g(e)&&"oneOf"===e._vueTypes_name?e.type||null:e,t,!0);return"string"==typeof r&&n.push(r),!0===r});return r||y("oneOfType - provided value does not match any of the "+n.length+" passed-in validators:\n"+P(n.join("\n"))),r}}:{type:n})}function I(e){return T("arrayOf",{type:Array,validator:function(t){var n,r=t.every(function(t){return!0===(n=_(e,t,!0))});return r||y("arrayOf - value validation error:\n"+P(n)),r}})}function J(e){return T("instanceOf",{type:e})}function M(e){return T("objectOf",{type:Object,validator:function(t){var n,r=Object.keys(t).every(function(r){return!0===(n=_(e,t[r],!0))});return r||y("objectOf - value validation error:\n"+P(n)),r}})}function R(e){var t=Object.keys(e),n=t.filter(function(t){var n;return!!(null===(n=e[t])||void 0===n?void 0:n.required)}),r=T("shape",{type:Object,validator:function(r){var i=this;if(!s(r))return!1;var o=Object.keys(r);if(n.length>0&&n.some(function(e){return-1===o.indexOf(e)})){var u=n.filter(function(e){return-1===o.indexOf(e)});return y(1===u.length?'shape - required property "'+u[0]+'" is not defined.':'shape - required properties "'+u.join('", "')+'" are not defined.'),!1}return o.every(function(n){if(-1===t.indexOf(n))return!0===i._vueTypes_isLoose||(y('shape - shape definition does not include a "'+n+'" property. Allowed keys: "'+t.join('", "')+'".'),!1);var o=_(e[n],r[n],!0);return"string"==typeof o&&y('shape - "'+n+'" property validation error:\n '+P(o)),!0===o})}});return Object.defineProperty(r,"_vueTypes_isLoose",{writable:!0,value:!1}),Object.defineProperty(r,"loose",{get:function(){return this._vueTypes_isLoose=!0,this}}),r}var $=function(){function e(){}return e.extend=function(e){var t=this;if(b(e))return e.forEach(function(e){return t.extend(e)}),this;var n=e.name,r=e.validate,o=void 0!==r&&r,u=e.getter,a=void 0!==u&&u,f=i(e,["name","validate","getter"]);if(d(this,n))throw new TypeError('[VueTypes error]: Type "'+n+'" already defined');var c,l=f.type;return g(l)?(delete f.type,Object.defineProperty(this,n,a?{get:function(){return k(n,l,f)}}:{value:function(){var e,t=k(n,l,f);return t.validator&&(t.validator=(e=t.validator).bind.apply(e,[t].concat([].slice.call(arguments)))),t}})):(c=a?{get:function(){var e=Object.assign({},f);return o?w(n,e):T(n,e)},enumerable:!0}:{value:function(){var e,t,r=Object.assign({},f);return e=o?w(n,r):T(n,r),r.validator&&(e.validator=(t=r.validator).bind.apply(t,[e].concat([].slice.call(arguments)))),e},enumerable:!0},Object.defineProperty(this,n,c))},t(e,null,[{key:"any",get:function(){return x()}},{key:"func",get:function(){return A().def(this.defaults.func)}},{key:"bool",get:function(){return E().def(this.defaults.bool)}},{key:"string",get:function(){return N().def(this.defaults.string)}},{key:"number",get:function(){return q().def(this.defaults.number)}},{key:"array",get:function(){return S().def(this.defaults.array)}},{key:"object",get:function(){return V().def(this.defaults.object)}},{key:"integer",get:function(){return F().def(this.defaults.integer)}},{key:"symbol",get:function(){return D()}}]),e}();function z(e){var i;return void 0===e&&(e={func:function(){},bool:!0,string:"",number:0,array:function(){return[]},object:function(){return{}},integer:0}),(i=function(i){function o(){return i.apply(this,arguments)||this}return r(o,i),t(o,null,[{key:"sensibleDefaults",get:function(){return n({},this.defaults)},set:function(t){this.defaults=!1!==t?n({},!0!==t?t:e):{}}}]),o}($)).defaults=n({},e),i}$.defaults={},$.custom=L,$.oneOf=Y,$.instanceOf=J,$.oneOfType=B,$.arrayOf=I,$.objectOf=M,$.shape=R,$.utils={validate:function(e,t){return!0===_(t,e,!0)},toType:function(e,t,n){return void 0===n&&(n=!1),n?w(e,t):T(e,t)}};var C=function(e){function t(){return e.apply(this,arguments)||this}return r(t,e),t}(z());/* harmony default export */ __webpack_exports__["default"] = (C);
//# sourceMappingURL=vue-types.m.js.map


/***/ }),

/***/ "84e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.panelProps = exports.collapseProps = void 0;

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var collapseProps = function collapseProps() {
  return {
    prefixCls: _vueTypes.default.string,
    activeKey: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number, _vueTypes.default.arrayOf(_vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number]))]),
    defaultActiveKey: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number, _vueTypes.default.arrayOf(_vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number]))]),
    accordion: _vueTypes.default.looseBool,
    destroyInactivePanel: _vueTypes.default.looseBool,
    bordered: _vueTypes.default.looseBool,
    expandIcon: _vueTypes.default.func,
    openAnimation: _vueTypes.default.object,
    expandIconPosition: _vueTypes.default.oneOf(['left', 'right']),
    onChange: _vueTypes.default.func
  };
};

exports.collapseProps = collapseProps;

var panelProps = function panelProps() {
  return {
    openAnimation: _vueTypes.default.object,
    prefixCls: _vueTypes.default.string,
    header: _vueTypes.default.any,
    headerClass: _vueTypes.default.string,
    showArrow: _vueTypes.default.looseBool,
    isActive: _vueTypes.default.looseBool,
    destroyInactivePanel: _vueTypes.default.looseBool,
    disabled: _vueTypes.default.looseBool,
    accordion: _vueTypes.default.looseBool,
    forceRender: _vueTypes.default.looseBool,
    expandIcon: _vueTypes.default.func,
    extra: _vueTypes.default.any,
    panelKey: _vueTypes.default.any
  };
};

exports.panelProps = panelProps;

/***/ }),

/***/ "86e5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "87d7":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "887c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function number(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (value === '') {
      value = undefined;
    }
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = number;

/***/ }),

/***/ "8aae":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("32a6");
module.exports = __webpack_require__("584a").Object.keys;


/***/ }),

/***/ "8b54":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Notification = _interopRequireDefault(__webpack_require__("1af7"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// based on rc-notification 3.3.1
var _default = _Notification.default;
exports.default = _default;

/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;

/***/ }),

/***/ "8c44":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _string = __webpack_require__("ccff");

var _string2 = _interopRequireDefault(_string);

var _method = __webpack_require__("acdb");

var _method2 = _interopRequireDefault(_method);

var _number = __webpack_require__("887c");

var _number2 = _interopRequireDefault(_number);

var _boolean = __webpack_require__("12d4");

var _boolean2 = _interopRequireDefault(_boolean);

var _regexp = __webpack_require__("1ce5");

var _regexp2 = _interopRequireDefault(_regexp);

var _integer = __webpack_require__("5d1f");

var _integer2 = _interopRequireDefault(_integer);

var _float = __webpack_require__("123a");

var _float2 = _interopRequireDefault(_float);

var _array = __webpack_require__("730c");

var _array2 = _interopRequireDefault(_array);

var _object = __webpack_require__("5d90");

var _object2 = _interopRequireDefault(_object);

var _enum = __webpack_require__("ae3c");

var _enum2 = _interopRequireDefault(_enum);

var _pattern = __webpack_require__("2f6c");

var _pattern2 = _interopRequireDefault(_pattern);

var _date = __webpack_require__("9b23");

var _date2 = _interopRequireDefault(_date);

var _required = __webpack_require__("51eb");

var _required2 = _interopRequireDefault(_required);

var _type = __webpack_require__("721c");

var _type2 = _interopRequireDefault(_type);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  string: _string2['default'],
  method: _method2['default'],
  number: _number2['default'],
  boolean: _boolean2['default'],
  regexp: _regexp2['default'],
  integer: _integer2['default'],
  float: _float2['default'],
  array: _array2['default'],
  object: _object2['default'],
  'enum': _enum2['default'],
  pattern: _pattern2['default'],
  date: _date2['default'],
  url: _type2['default'],
  hex: _type2['default'],
  email: _type2['default'],
  required: _required2['default']
};

/***/ }),

/***/ "8cd7":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8e1b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TransitionGroup = exports.Transition = exports.getTransitionGroupProps = exports.getTransitionProps = void 0;

var _vue = __webpack_require__("8bbf");

var _propsUtil = __webpack_require__("5057");

var _this = void 0;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !(0, _vue.isVNode)(s);
}

var getTransitionProps = function getTransitionProps(transitionName) {
  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (false) {}

  var transitionProps = transitionName ? _extends({
    appear: true,
    appearFromClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-prepare"),
    // appearActiveClass: `antdv-base-transtion`,
    appearToClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-active"),
    enterFromClass: "".concat(transitionName, "-enter ").concat(transitionName, "-enter-prepare"),
    // enterActiveClass: `antdv-base-transtion`,
    enterToClass: "".concat(transitionName, "-enter ").concat(transitionName, "-enter-active"),
    leaveFromClass: " ".concat(transitionName, "-leave"),
    leaveActiveClass: "".concat(transitionName, "-leave ").concat(transitionName, "-leave-active"),
    leaveToClass: "".concat(transitionName, "-leave ").concat(transitionName, "-leave-active")
  }, opt) : _extends({
    css: false
  }, opt);
  return transitionProps;
};

exports.getTransitionProps = getTransitionProps;

var getTransitionGroupProps = function getTransitionGroupProps(transitionName) {
  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var transitionProps = transitionName ? _extends({
    appear: true,
    appearFromClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-prepare"),
    appearActiveClass: "".concat(transitionName),
    appearToClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-active"),
    enterFromClass: "".concat(transitionName, "-appear ").concat(transitionName, "-enter ").concat(transitionName, "-appear-prepare ").concat(transitionName, "-enter-prepare"),
    enterActiveClass: "".concat(transitionName),
    enterToClass: "".concat(transitionName, "-enter ").concat(transitionName, "-appear ").concat(transitionName, "-appear-active ").concat(transitionName, "-enter-active"),
    leaveActiveClass: "".concat(transitionName, " ").concat(transitionName, "-leave"),
    leaveToClass: "".concat(transitionName, "-leave-active")
  }, opt) : _extends({
    css: false
  }, opt);
  return transitionProps;
};

exports.getTransitionGroupProps = getTransitionGroupProps;
var Transition = _vue.Transition;
exports.Transition = Transition;
var TransitionGroup = _vue.TransitionGroup;
exports.TransitionGroup = TransitionGroup;

if (false) {}

var _default2 = Transition;
exports.default = _default2;

/***/ }),

/***/ "8e34":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8e60":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("294c")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "8f60":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("a159");
var descriptor = __webpack_require__("aebd");
var setToStringTag = __webpack_require__("45f2");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("35e8")(IteratorPrototype, __webpack_require__("5168")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "8fcf":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9003":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("6b4c");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "9138":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("35e8");


/***/ }),

/***/ "928f":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9306":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__("c3a1");
var gOPS = __webpack_require__("9aa9");
var pIE = __webpack_require__("355d");
var toObject = __webpack_require__("241e");
var IObject = __webpack_require__("335c");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__("294c")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "9372":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "938f":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9479":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

var _propsUtil = __webpack_require__("5057");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ILazyRenderBoxPropTypes = {
  visible: _vueTypes.default.looseBool,
  hiddenClassName: _vueTypes.default.string,
  forceRender: _vueTypes.default.looseBool
};
var _default = {
  props: ILazyRenderBoxPropTypes,
  render: function render() {
    return (0, _vue.createVNode)("div", null, [(0, _propsUtil.getSlot)(this)]);
  }
};
exports.default = _default;

/***/ }),

/***/ "9517":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _propsUtil = __webpack_require__("5057");

var _KeyCode = _interopRequireDefault(__webpack_require__("af09"));

var _contains = _interopRequireDefault(__webpack_require__("af8e"));

var _LazyRenderBox = _interopRequireDefault(__webpack_require__("9479"));

var _BaseMixin = _interopRequireDefault(__webpack_require__("48bb"));

var _transition = __webpack_require__("8e1b");

var _switchScrollingEffect2 = _interopRequireDefault(__webpack_require__("3a3f"));

var _IDialogPropTypes = _interopRequireDefault(__webpack_require__("9a8b"));

var _warning = _interopRequireDefault(__webpack_require__("a7e2"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !(0, _vue.isVNode)(s);
}

var IDialogPropTypes = (0, _IDialogPropTypes.default)();
var uuid = 0;

function noop() {}

function getScroll(w, top) {
  var ret = w["page".concat(top ? 'Y' : 'X', "Offset")];
  var method = "scroll".concat(top ? 'Top' : 'Left');

  if (typeof ret !== 'number') {
    var d = w.document;
    ret = d.documentElement[method];

    if (typeof ret !== 'number') {
      ret = d.body[method];
    }
  }

  return ret;
}

function setTransformOrigin(node, value) {
  var style = node.style;
  ['Webkit', 'Moz', 'Ms', 'ms'].forEach(function (prefix) {
    style["".concat(prefix, "TransformOrigin")] = value;
  });
  style["transformOrigin"] = value;
}

function offset(el) {
  var rect = el.getBoundingClientRect();
  var pos = {
    left: rect.left,
    top: rect.top
  };
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScroll(w);
  pos.top += getScroll(w, true);
  return pos;
}

var cacheOverflow = {};

var _default2 = (0, _vue.defineComponent)({
  name: 'VcDialog',
  mixins: [_BaseMixin.default],
  inheritAttrs: false,
  props: (0, _propsUtil.initDefaultProps)(IDialogPropTypes, {
    mask: true,
    visible: false,
    keyboard: true,
    closable: true,
    maskClosable: true,
    destroyOnClose: false,
    prefixCls: 'rc-dialog',
    getOpenCount: function getOpenCount() {
      return null;
    },
    focusTriggerAfterClose: true
  }),
  data: function data() {
    (0, _warning.default)(!this.dialogClass, 'Modal', 'dialogClass is deprecated, please use class instead.');
    (0, _warning.default)(!this.dialogStyle, 'Modal', 'dialogStyle is deprecated, please use style instead.');
    return {
      inTransition: false,
      titleId: "rcDialogTitle".concat(uuid++),
      dialogMouseDown: undefined
    };
  },
  watch: {
    visible: function visible(val) {
      var _this = this;

      this.$nextTick(function () {
        _this.updatedCallback(!val);
      });
    }
  },
  created: function created() {
    (0, _vue.provide)('dialogContext', this);
  },
  mounted: function mounted() {
    var _this2 = this;

    this.$nextTick(function () {
      _this2.updatedCallback(false); // if forceRender is true, set element style display to be none;


      if ((_this2.forceRender || _this2.getContainer === false && !_this2.visible) && _this2.$refs.wrap) {
        _this2.$refs.wrap.style.display = 'none';
      }
    });
  },
  beforeUnmount: function beforeUnmount() {
    var visible = this.visible,
        getOpenCount = this.getOpenCount;

    if ((visible || this.inTransition) && !getOpenCount()) {
      this.switchScrollingEffect();
    }

    clearTimeout(this.timeoutId);
  },
  methods: {
    // 对外暴露的 api 不要更改名称或删除
    getDialogWrap: function getDialogWrap() {
      return this.$refs.wrap;
    },
    updatedCallback: function updatedCallback(visible) {
      var mousePosition = this.mousePosition;
      var mask = this.mask,
          focusTriggerAfterClose = this.focusTriggerAfterClose;

      if (this.visible) {
        // first show
        if (!visible) {
          this.openTime = Date.now(); // this.lastOutSideFocusNode = document.activeElement

          this.switchScrollingEffect(); // this.$refs.wrap.focus()

          this.tryFocus();
          var dialogNode = (0, _propsUtil.findDOMNode)(this.$refs.dialog);

          if (mousePosition) {
            var elOffset = offset(dialogNode);
            setTransformOrigin(dialogNode, "".concat(mousePosition.x - elOffset.left, "px ").concat(mousePosition.y - elOffset.top, "px"));
          } else {
            setTransformOrigin(dialogNode, '');
          }
        }
      } else if (visible) {
        this.inTransition = true;

        if (mask && this.lastOutSideFocusNode && focusTriggerAfterClose) {
          try {
            this.lastOutSideFocusNode.focus();
          } catch (e) {
            this.lastOutSideFocusNode = null;
          }

          this.lastOutSideFocusNode = null;
        }
      }
    },
    tryFocus: function tryFocus() {
      if (!(0, _contains.default)(this.$refs.wrap, document.activeElement)) {
        this.lastOutSideFocusNode = document.activeElement;
        this.$refs.sentinelStart.focus();
      }
    },
    onAnimateLeave: function onAnimateLeave() {
      var afterClose = this.afterClose; // need demo?
      // https://github.com/react-component/dialog/pull/28

      if (this.$refs.wrap) {
        this.$refs.wrap.style.display = 'none';
      }

      this.inTransition = false;
      this.switchScrollingEffect();

      if (afterClose) {
        afterClose();
      }
    },
    onDialogMouseDown: function onDialogMouseDown() {
      this.dialogMouseDown = true;
    },
    onMaskMouseUp: function onMaskMouseUp() {
      var _this3 = this;

      if (this.dialogMouseDown) {
        this.timeoutId = setTimeout(function () {
          _this3.dialogMouseDown = false;
        }, 0);
      }
    },
    onMaskClick: function onMaskClick(e) {
      // android trigger click on open (fastclick??)
      if (Date.now() - this.openTime < 300) {
        return;
      }

      if (e.target === e.currentTarget && !this.dialogMouseDown) {
        this.close(e);
      }
    },
    onKeydown: function onKeydown(e) {
      var props = this.$props;

      if (props.keyboard && e.keyCode === _KeyCode.default.ESC) {
        e.stopPropagation();
        this.close(e);
        return;
      } // keep focus inside dialog


      if (props.visible) {
        if (e.keyCode === _KeyCode.default.TAB) {
          var activeElement = document.activeElement;
          var sentinelStart = this.$refs.sentinelStart;

          if (e.shiftKey) {
            if (activeElement === sentinelStart) {
              this.$refs.sentinelEnd.focus();
            }
          } else if (activeElement === this.$refs.sentinelEnd) {
            sentinelStart.focus();
          }
        }
      }
    },
    getDialogElement: function getDialogElement() {
      var _this4 = this;

      var closable = this.closable,
          prefixCls = this.prefixCls,
          width = this.width,
          height = this.height,
          title = this.title,
          tempFooter = this.footer,
          bodyStyle = this.bodyStyle,
          visible = this.visible,
          bodyProps = this.bodyProps,
          forceRender = this.forceRender,
          closeIcon = this.closeIcon,
          _this$dialogStyle = this.dialogStyle,
          dialogStyle = _this$dialogStyle === void 0 ? {} : _this$dialogStyle,
          _this$dialogClass = this.dialogClass,
          dialogClass = _this$dialogClass === void 0 ? '' : _this$dialogClass;

      var dest = _extends({}, dialogStyle);

      if (width !== undefined) {
        dest.width = typeof width === 'number' ? "".concat(width, "px") : width;
      }

      if (height !== undefined) {
        dest.height = typeof height === 'number' ? "".concat(height, "px") : height;
      }

      var footer;

      if (tempFooter) {
        footer = (0, _vue.createVNode)("div", {
          "key": "footer",
          "class": "".concat(prefixCls, "-footer"),
          "ref": "footer"
        }, [tempFooter]);
      }

      var header;

      if (title) {
        header = (0, _vue.createVNode)("div", {
          "key": "header",
          "class": "".concat(prefixCls, "-header"),
          "ref": "header"
        }, [(0, _vue.createVNode)("div", {
          "class": "".concat(prefixCls, "-title"),
          "id": this.titleId
        }, [title])]);
      }

      var closer;

      if (closable) {
        closer = (0, _vue.createVNode)("button", {
          "type": "button",
          "key": "close",
          "onClick": this.close || noop,
          "aria-label": "Close",
          "class": "".concat(prefixCls, "-close")
        }, [closeIcon || (0, _vue.createVNode)("span", {
          "class": "".concat(prefixCls, "-close-x")
        }, null)]);
      }

      var _this$$attrs = this.$attrs,
          stl = _this$$attrs.style,
          className = _this$$attrs.class;

      var style = _extends(_extends({}, stl), dest);

      var sentinelStyle = {
        width: 0,
        height: 0,
        overflow: 'hidden'
      };
      var cls = [prefixCls, className, dialogClass];
      var transitionName = this.getTransitionName();
      var dialogElement = (0, _vue.withDirectives)((0, _vue.createVNode)(_LazyRenderBox.default, {
        "key": "dialog-element",
        "role": "document",
        "ref": "dialog",
        "style": style,
        "class": cls,
        "forceRender": forceRender,
        "onMousedown": this.onDialogMouseDown
      }, {
        default: function _default() {
          return [(0, _vue.createVNode)("div", {
            "tabindex": 0,
            "ref": "sentinelStart",
            "style": sentinelStyle,
            "aria-hidden": "true"
          }, null), (0, _vue.createVNode)("div", {
            "class": "".concat(prefixCls, "-content")
          }, [closer, header, (0, _vue.createVNode)("div", _objectSpread({
            "key": "body",
            "class": "".concat(prefixCls, "-body"),
            "style": bodyStyle,
            "ref": "body"
          }, bodyProps), [(0, _propsUtil.getSlot)(_this4)]), footer]), (0, _vue.createVNode)("div", {
            "tabindex": 0,
            "ref": "sentinelEnd",
            "style": sentinelStyle,
            "aria-hidden": "true"
          }, null)];
        }
      }), [[_vue.vShow, visible]]);
      var dialogTransitionProps = (0, _transition.getTransitionProps)(transitionName, {
        onAfterLeave: this.onAnimateLeave
      });
      return (0, _vue.createVNode)(_transition.Transition, _objectSpread({
        "key": "dialog"
      }, dialogTransitionProps), {
        default: function _default() {
          return [visible || !_this4.destroyOnClose ? dialogElement : null];
        }
      });
    },
    getZIndexStyle: function getZIndexStyle() {
      var style = {};
      var props = this.$props;

      if (props.zIndex !== undefined) {
        style.zIndex = props.zIndex;
      }

      return style;
    },
    getWrapStyle: function getWrapStyle() {
      return _extends(_extends({}, this.getZIndexStyle()), this.wrapStyle);
    },
    getMaskStyle: function getMaskStyle() {
      return _extends(_extends({}, this.getZIndexStyle()), this.maskStyle);
    },
    getMaskElement: function getMaskElement() {
      var props = this.$props;
      var maskElement;

      if (props.mask) {
        var maskTransition = this.getMaskTransitionName();
        var tempMaskElement = (0, _vue.withDirectives)((0, _vue.createVNode)(_LazyRenderBox.default, _objectSpread({
          "style": this.getMaskStyle(),
          "key": "mask",
          "class": "".concat(props.prefixCls, "-mask")
        }, props.maskProps || {}), null), [[_vue.vShow, props.visible]]);

        if (maskTransition) {
          var maskTransitionProps = (0, _transition.getTransitionProps)(maskTransition);
          maskElement = (0, _vue.createVNode)(_transition.Transition, _objectSpread({
            "key": "mask"
          }, maskTransitionProps), _isSlot(tempMaskElement) ? tempMaskElement : {
            default: function _default() {
              return [tempMaskElement];
            }
          });
        } else {
          maskElement = tempMaskElement;
        }
      }

      return maskElement;
    },
    getMaskTransitionName: function getMaskTransitionName() {
      var props = this.$props;
      var transitionName = props.maskTransitionName;
      var animation = props.maskAnimation;

      if (!transitionName && animation) {
        transitionName = "".concat(props.prefixCls, "-").concat(animation);
      }

      return transitionName;
    },
    getTransitionName: function getTransitionName() {
      var props = this.$props;
      var transitionName = props.transitionName;
      var animation = props.animation;

      if (!transitionName && animation) {
        transitionName = "".concat(props.prefixCls, "-").concat(animation);
      }

      return transitionName;
    },
    // setScrollbar() {
    //   if (this.bodyIsOverflowing && this.scrollbarWidth !== undefined) {
    //     document.body.style.paddingRight = `${this.scrollbarWidth}px`;
    //   }
    // },
    switchScrollingEffect: function switchScrollingEffect() {
      var getOpenCount = this.getOpenCount;
      var openCount = getOpenCount();

      if (openCount === 1) {
        if (cacheOverflow.hasOwnProperty('overflowX')) {
          return;
        }

        cacheOverflow = {
          overflowX: document.body.style.overflowX,
          overflowY: document.body.style.overflowY,
          overflow: document.body.style.overflow
        };
        (0, _switchScrollingEffect2.default)(); // Must be set after switchScrollingEffect

        document.body.style.overflow = 'hidden';
      } else if (!openCount) {
        // IE browser doesn't merge overflow style, need to set it separately
        // https://github.com/ant-design/ant-design/issues/19393
        if (cacheOverflow.overflow !== undefined) {
          document.body.style.overflow = cacheOverflow.overflow;
        }

        if (cacheOverflow.overflowX !== undefined) {
          document.body.style.overflowX = cacheOverflow.overflowX;
        }

        if (cacheOverflow.overflowY !== undefined) {
          document.body.style.overflowY = cacheOverflow.overflowY;
        }

        cacheOverflow = {};
        (0, _switchScrollingEffect2.default)(true);
      }
    },
    // removeScrollingEffect() {
    //   const { getOpenCount } = this;
    //   const openCount = getOpenCount();
    //   if (openCount !== 0) {
    //     return;
    //   }
    //   document.body.style.overflow = '';
    //   switchScrollingEffect(true);
    //   // this.resetAdjustments();
    // },
    close: function close(e) {
      this.__emit('close', e);
    }
  },
  render: function render() {
    var prefixCls = this.prefixCls,
        maskClosable = this.maskClosable,
        visible = this.visible,
        wrapClassName = this.wrapClassName,
        title = this.title,
        wrapProps = this.wrapProps;
    var style = this.getWrapStyle(); // clear hide display
    // and only set display after async anim, not here for hide

    if (visible) {
      style.display = null;
    }

    return (0, _vue.createVNode)("div", {
      "class": "".concat(prefixCls, "-root")
    }, [this.getMaskElement(), (0, _vue.createVNode)("div", _objectSpread({
      "tabindex": -1,
      "onKeydown": this.onKeydown,
      "class": "".concat(prefixCls, "-wrap ").concat(wrapClassName || ''),
      "ref": "wrap",
      "onClick": maskClosable ? this.onMaskClick : noop,
      "onMouseup": maskClosable ? this.onMaskMouseUp : noop,
      "role": "dialog",
      "aria-labelledby": title ? this.titleId : null,
      "style": style
    }, wrapProps), [this.getDialogElement()])]);
  }
});

exports.default = _default2;

/***/ }),

/***/ "975a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function required(rule, value, source, errors, options, type) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type || rule.type))) {
    errors.push(util.format(options.messages.required, rule.fullField));
  }
}

exports['default'] = required;

/***/ }),

/***/ "97c3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function range(rule, value, source, errors, options) {
  var len = typeof rule.len === 'number';
  var min = typeof rule.min === 'number';
  var max = typeof rule.max === 'number';
  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === 'number';
  var str = typeof value === 'string';
  var arr = Array.isArray(value);
  if (num) {
    key = 'number';
  } else if (str) {
    key = 'string';
  } else if (arr) {
    key = 'array';
  }
  // if the value is not of a supported type for range validation
  // the validation rule rule should use the
  // type property to also test for a particular type
  if (!key) {
    return false;
  }
  if (arr) {
    val = value.length;
  }
  if (str) {
    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
    val = value.replace(spRegexp, '_').length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min && !max && val < rule.min) {
    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max && !min && val > rule.max) {
    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min && max && (val < rule.min || val > rule.max)) {
    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
}

exports['default'] = range;

/***/ }),

/***/ "9a85":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
      // flag is accidentally set to `true`, which in a validation scenario
      // is not necessary and the result might be misleading
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value)) {
        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === 'string') {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value)) {
        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
}

exports['default'] = pattern;

/***/ }),

/***/ "9a8b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function IDialogPropTypes() {
  return {
    keyboard: _vueTypes.default.looseBool,
    mask: _vueTypes.default.looseBool,
    afterClose: _vueTypes.default.func,
    // onClose: PropTypes. (e: SyntheticEvent<HTMLDivElement>) =>any,
    closable: _vueTypes.default.looseBool,
    maskClosable: _vueTypes.default.looseBool,
    visible: _vueTypes.default.looseBool,
    destroyOnClose: _vueTypes.default.looseBool,
    mousePosition: _vueTypes.default.shape({
      x: _vueTypes.default.number,
      y: _vueTypes.default.number
    }).loose,
    title: _vueTypes.default.any,
    footer: _vueTypes.default.any,
    transitionName: _vueTypes.default.string,
    maskTransitionName: _vueTypes.default.string,
    animation: _vueTypes.default.any,
    maskAnimation: _vueTypes.default.any,
    wrapStyle: _vueTypes.default.object,
    bodyStyle: _vueTypes.default.object,
    maskStyle: _vueTypes.default.object,
    prefixCls: _vueTypes.default.string,
    wrapClassName: _vueTypes.default.string,
    width: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number]),
    height: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number]),
    zIndex: _vueTypes.default.number,
    bodyProps: _vueTypes.default.any,
    maskProps: _vueTypes.default.any,
    wrapProps: _vueTypes.default.any,
    getContainer: _vueTypes.default.any,
    dialogStyle: _vueTypes.default.object,
    dialogClass: _vueTypes.default.string,
    closeIcon: _vueTypes.default.any,
    forceRender: _vueTypes.default.looseBool,
    getOpenCount: _vueTypes.default.func,
    // https://github.com/ant-design/ant-design/issues/19771
    // https://github.com/react-component/dialog/issues/95
    focusTriggerAfterClose: _vueTypes.default.looseBool,
    onClose: _vueTypes.default.func
  };
}

var _default = IDialogPropTypes;
exports.default = _default;

/***/ }),

/***/ "9aa9":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "9b23":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function date(rule, value, callback, source, options) {
  // console.log('integer rule called %j', rule);
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  // console.log('validate on %s value', value);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (!(0, _util.isEmptyValue)(value)) {
      var dateObject = void 0;

      if (typeof value === 'number') {
        dateObject = new Date(value);
      } else {
        dateObject = value;
      }

      _rule2['default'].type(rule, dateObject, source, errors, options);
      if (dateObject) {
        _rule2['default'].range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }
  callback(errors);
}

exports['default'] = date;

/***/ }),

/***/ "9bac":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9c4a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = undefined;

var _stringify = __webpack_require__("8034");

var _stringify2 = _interopRequireDefault(_stringify);

exports.newMessages = newMessages;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function newMessages() {
  return {
    'default': 'Validation error on field %s',
    required: '%s is required',
    'enum': '%s must be one of %s',
    whitespace: '%s cannot be empty',
    date: {
      format: '%s date %s is invalid for format %s',
      parse: '%s date could not be parsed, %s is invalid ',
      invalid: '%s date %s is invalid'
    },
    types: {
      string: '%s is not a %s',
      method: '%s is not a %s (function)',
      array: '%s is not an %s',
      object: '%s is not an %s',
      number: '%s is not a %s',
      date: '%s is not a %s',
      boolean: '%s is not a %s',
      integer: '%s is not an %s',
      float: '%s is not a %s',
      regexp: '%s is not a valid %s',
      email: '%s is not a valid %s',
      url: '%s is not a valid %s',
      hex: '%s is not a valid %s'
    },
    string: {
      len: '%s must be exactly %s characters',
      min: '%s must be at least %s characters',
      max: '%s cannot be longer than %s characters',
      range: '%s must be between %s and %s characters'
    },
    number: {
      len: '%s must equal %s',
      min: '%s cannot be less than %s',
      max: '%s cannot be greater than %s',
      range: '%s must be between %s and %s'
    },
    array: {
      len: '%s must be exactly %s in length',
      min: '%s cannot be less than %s in length',
      max: '%s cannot be greater than %s in length',
      range: '%s must be between %s and %s in length'
    },
    pattern: {
      mismatch: '%s value %s does not match pattern %s'
    },
    clone: function clone() {
      var cloned = JSON.parse((0, _stringify2['default'])(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}

var messages = exports.messages = newMessages();

/***/ }),

/***/ "9d03":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _vueTypes = _interopRequireDefault(__webpack_require__("7b44"));

var _propsUtil = __webpack_require__("5057");

var _BaseMixin = _interopRequireDefault(__webpack_require__("48bb"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = {
  mixins: [_BaseMixin.default],
  props: {
    duration: _vueTypes.default.number.def(1.5),
    closable: _vueTypes.default.looseBool,
    prefixCls: _vueTypes.default.string,
    update: _vueTypes.default.looseBool,
    closeIcon: _vueTypes.default.any,
    onClose: _vueTypes.default.func
  },
  watch: {
    duration: function duration() {
      this.restartCloseTimer();
    }
  },
  mounted: function mounted() {
    this.startCloseTimer();
  },
  updated: function updated() {
    if (this.update) {
      this.restartCloseTimer();
    }
  },
  beforeUnmount: function beforeUnmount() {
    this.clearCloseTimer();
    this.willDestroy = true; // beforeUnmount调用后依然会触发onMouseleave事件
  },
  methods: {
    close: function close(e) {
      if (e) {
        e.stopPropagation();
      }

      this.clearCloseTimer();

      this.__emit('close');
    },
    startCloseTimer: function startCloseTimer() {
      var _this = this;

      this.clearCloseTimer();

      if (!this.willDestroy && this.duration) {
        this.closeTimer = setTimeout(function () {
          _this.close();
        }, this.duration * 1000);
      }
    },
    clearCloseTimer: function clearCloseTimer() {
      if (this.closeTimer) {
        clearTimeout(this.closeTimer);
        this.closeTimer = null;
      }
    },
    restartCloseTimer: function restartCloseTimer() {
      this.clearCloseTimer();
      this.startCloseTimer();
    }
  },
  render: function render() {
    var _className;

    var prefixCls = this.prefixCls,
        closable = this.closable,
        clearCloseTimer = this.clearCloseTimer,
        startCloseTimer = this.startCloseTimer,
        close = this.close,
        $attrs = this.$attrs;
    var componentClass = "".concat(prefixCls, "-notice");
    var className = (_className = {}, _defineProperty(_className, "".concat(componentClass), 1), _defineProperty(_className, "".concat(componentClass, "-closable"), closable), _className);
    var closeIcon = (0, _propsUtil.getComponent)(this, 'closeIcon');
    return (0, _vue.createVNode)("div", {
      "class": className,
      "style": $attrs.style || {
        right: '50%'
      },
      "onMouseenter": clearCloseTimer,
      "onMouseleave": startCloseTimer
    }, [(0, _vue.createVNode)("div", {
      "class": "".concat(componentClass, "-content")
    }, [(0, _propsUtil.getSlot)(this)]), closable ? (0, _vue.createVNode)("a", {
      "tabindex": "0",
      "onClick": close,
      "class": "".concat(componentClass, "-close")
    }, [closeIcon || (0, _vue.createVNode)("span", {
      "class": "".concat(componentClass, "-close-x")
    }, null)]) : null]);
  }
};
exports.default = _default;

/***/ }),

/***/ "9dee":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _DialogWrap = _interopRequireDefault(__webpack_require__("1318"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// based on vc-dialog 7.5.14
var _default = _DialogWrap.default;
exports.default = _default;

/***/ }),

/***/ "9e2d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "a043":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

var _required = __webpack_require__("975a");

var _required2 = _interopRequireDefault(_required);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint max-len:0 */

var pattern = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};

var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  float: function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === 'number';
  },
  object: function object(value) {
    return (typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) === 'object' && !types.array(value);
  },
  method: function method(value) {
    return typeof value === 'function';
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern.url);
  },
  hex: function hex(value) {
    return typeof value === 'string' && !!value.match(pattern.hex);
  }
};

/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function type(rule, value, source, errors, options) {
  if (rule.required && value === undefined) {
    (0, _required2['default'])(rule, value, source, errors, options);
    return;
  }
  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
    }
    // straight typeof check
  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) !== rule.type) {
    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
}

exports['default'] = type;

/***/ }),

/***/ "a159":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("e4ae");
var dPs = __webpack_require__("7e90");
var enumBugKeys = __webpack_require__("1691");
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("1ec9")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("32fc").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "a15e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _promise = __webpack_require__("e1de");

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__("1907");

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _util = __webpack_require__("fa49");

var _validator = __webpack_require__("8c44");

var _validator2 = _interopRequireDefault(_validator);

var _messages2 = __webpack_require__("9c4a");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Encapsulates a validation schema.
 *
 *  @param descriptor An object declaring validation rules
 *  for this schema.
 */
function Schema(descriptor) {
  this.rules = null;
  this._messages = _messages2.messages;
  this.define(descriptor);
}

Schema.prototype = {
  messages: function messages(_messages) {
    if (_messages) {
      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);
    }
    return this._messages;
  },
  define: function define(rules) {
    if (!rules) {
      throw new Error('Cannot configure a schema with no rules');
    }
    if ((typeof rules === 'undefined' ? 'undefined' : (0, _typeof3['default'])(rules)) !== 'object' || Array.isArray(rules)) {
      throw new Error('Rules must be an object');
    }
    this.rules = {};
    var z = void 0;
    var item = void 0;
    for (z in rules) {
      if (rules.hasOwnProperty(z)) {
        item = rules[z];
        this.rules[z] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_) {
    var _this = this;

    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var source = source_;
    var options = o;
    var callback = oc;
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (!this.rules || (0, _keys2['default'])(this.rules).length === 0) {
      if (callback) {
        callback();
      }
      return _promise2['default'].resolve();
    }
    function complete(results) {
      var i = void 0;
      var errors = [];
      var fields = {};

      function add(e) {
        if (Array.isArray(e)) {
          var _errors;

          errors = (_errors = errors).concat.apply(_errors, e);
        } else {
          errors.push(e);
        }
      }

      for (i = 0; i < results.length; i++) {
        add(results[i]);
      }
      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        fields = (0, _util.convertFieldsError)(errors);
      }
      callback(errors, fields);
    }

    if (options.messages) {
      var messages = this.messages();
      if (messages === _messages2.messages) {
        messages = (0, _messages2.newMessages)();
      }
      (0, _util.deepMerge)(messages, options.messages);
      options.messages = messages;
    } else {
      options.messages = this.messages();
    }
    var arr = void 0;
    var value = void 0;
    var series = {};
    var keys = options.keys || (0, _keys2['default'])(this.rules);
    keys.forEach(function (z) {
      arr = _this.rules[z];
      value = source[z];
      arr.forEach(function (r) {
        var rule = r;
        if (typeof rule.transform === 'function') {
          if (source === source_) {
            source = (0, _extends3['default'])({}, source);
          }
          value = source[z] = rule.transform(value);
        }
        if (typeof rule === 'function') {
          rule = {
            validator: rule
          };
        } else {
          rule = (0, _extends3['default'])({}, rule);
        }
        rule.validator = _this.getValidationMethod(rule);
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this.getType(rule);
        if (!rule.validator) {
          return;
        }
        series[z] = series[z] || [];
        series[z].push({
          rule: rule,
          value: value,
          source: source,
          field: z
        });
      });
    });
    var errorFields = {};
    return (0, _util.asyncMap)(series, options, function (data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === 'object' || rule.type === 'array') && ((0, _typeof3['default'])(rule.fields) === 'object' || (0, _typeof3['default'])(rule.defaultField) === 'object');
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullfield(key, schema) {
        return (0, _extends3['default'])({}, schema, {
          fullField: rule.fullField + '.' + key
        });
      }

      function cb() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        var errors = e;
        if (!Array.isArray(errors)) {
          errors = [errors];
        }
        if (errors.length) {
          Schema.warning('async-validator:', errors);
        }
        if (errors.length && rule.message) {
          errors = [].concat(rule.message);
        }

        errors = errors.map((0, _util.complementError)(rule));

        if (options.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }
        if (!deep) {
          doIt(errors);
        } else {
          // if rule is required but the target object
          // does not exist fail at the rule level and don't
          // go deeper
          if (rule.required && !data.value) {
            if (rule.message) {
              errors = [].concat(rule.message).map((0, _util.complementError)(rule));
            } else if (options.error) {
              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];
            } else {
              errors = [];
            }
            return doIt(errors);
          }

          var fieldsSchema = {};
          if (rule.defaultField) {
            for (var k in data.value) {
              if (data.value.hasOwnProperty(k)) {
                fieldsSchema[k] = rule.defaultField;
              }
            }
          }
          fieldsSchema = (0, _extends3['default'])({}, fieldsSchema, data.rule.fields);
          for (var f in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f)) {
              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
            }
          }
          var schema = new Schema(fieldsSchema);
          schema.messages(options.messages);
          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }
          schema.validate(data.value, data.rule.options || options, function (errs) {
            doIt(errs && errs.length ? errors.concat(errs) : errs);
          });
        }
      }

      var res = void 0;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data.value, cb, data.source, options);
      } else if (rule.validator) {
        res = rule.validator(rule, data.value, cb, data.source, options);
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(rule.message || rule.field + ' fails');
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function () {
          return cb();
        }, function (e) {
          return cb(e);
        });
      }
    }, function (results) {
      complete(results);
    });
  },
  getType: function getType(rule) {
    if (rule.type === undefined && rule.pattern instanceof RegExp) {
      rule.type = 'pattern';
    }
    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {
      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));
    }
    return rule.type || 'string';
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === 'function') {
      return rule.validator;
    }
    var keys = (0, _keys2['default'])(rule);
    var messageIndex = keys.indexOf('message');
    if (messageIndex !== -1) {
      keys.splice(messageIndex, 1);
    }
    if (keys.length === 1 && keys[0] === 'required') {
      return _validator2['default'].required;
    }
    return _validator2['default'][this.getType(rule)] || false;
  }
};

Schema.register = function register(type, validator) {
  if (typeof validator !== 'function') {
    throw new Error('Cannot register a validator by type, validator is not a function');
  }
  _validator2['default'][type] = validator;
};

Schema.warning = _util.warning;

Schema.messages = _messages2.messages;

exports['default'] = Schema;

/***/ }),

/***/ "a21f":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("584a");
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),

/***/ "a22a":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("d864");
var call = __webpack_require__("b0dc");
var isArrayIter = __webpack_require__("3702");
var anObject = __webpack_require__("e4ae");
var toLength = __webpack_require__("b447");
var getIterFn = __webpack_require__("7cd6");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "a27d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "a3c3":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__("63b6");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__("9306") });


/***/ }),

/***/ "a5a7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createChainedFunction;

/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @returns {function|null}
 */
function createChainedFunction() {
  var args = [].slice.call(arguments, 0);

  if (args.length === 1) {
    return args[0];
  }

  return function chainedFunction() {
    for (var i = 0; i < args.length; i++) {
      if (args[i] && args[i].apply) {
        args[i].apply(this, arguments);
      }
    }
  };
}

/***/ }),

/***/ "a7e2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "resetWarned", {
  enumerable: true,
  get: function get() {
    return _warning.resetWarned;
  }
});
exports.default = void 0;

var _warning = _interopRequireWildcard(__webpack_require__("1db9"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _default = function _default(valid, component) {
  var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  (0, _warning.default)(valid, "[antdv: ".concat(component, "] ").concat(message));
};

exports.default = _default;

/***/ }),

/***/ "aba2":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var macrotask = __webpack_require__("4178").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__("6b4c")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "acdb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a function.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function method(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = method;

/***/ }),

/***/ "ae3c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var ENUM = 'enum';

/**
 *  Validates an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value) {
      _rule2['default'][ENUM](rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = enumerable;

/***/ }),

/***/ "aebd":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "af09":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @ignore
 * some key-codes definition and utils from closure-library
 * @author yiminghe@gmail.com
 */
var KeyCode = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,

  /**
   * BACKSPACE
   */
  BACKSPACE: 8,

  /**
   * TAB
   */
  TAB: 9,

  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12,

  /**
   * ENTER
   */
  ENTER: 13,

  /**
   * SHIFT
   */
  SHIFT: 16,

  /**
   * CTRL
   */
  CTRL: 17,

  /**
   * ALT
   */
  ALT: 18,

  /**
   * PAUSE
   */
  PAUSE: 19,

  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,

  /**
   * ESC
   */
  ESC: 27,

  /**
   * SPACE
   */
  SPACE: 32,

  /**
   * PAGE_UP
   */
  PAGE_UP: 33,

  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34,

  /**
   * END
   */
  END: 35,

  /**
   * HOME
   */
  HOME: 36,

  /**
   * LEFT
   */
  LEFT: 37,

  /**
   * UP
   */
  UP: 38,

  /**
   * RIGHT
   */
  RIGHT: 39,

  /**
   * DOWN
   */
  DOWN: 40,

  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,

  /**
   * INSERT
   */
  INSERT: 45,

  /**
   * DELETE
   */
  DELETE: 46,

  /**
   * ZERO
   */
  ZERO: 48,

  /**
   * ONE
   */
  ONE: 49,

  /**
   * TWO
   */
  TWO: 50,

  /**
   * THREE
   */
  THREE: 51,

  /**
   * FOUR
   */
  FOUR: 52,

  /**
   * FIVE
   */
  FIVE: 53,

  /**
   * SIX
   */
  SIX: 54,

  /**
   * SEVEN
   */
  SEVEN: 55,

  /**
   * EIGHT
   */
  EIGHT: 56,

  /**
   * NINE
   */
  NINE: 57,

  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63,

  /**
   * A
   */
  A: 65,

  /**
   * B
   */
  B: 66,

  /**
   * C
   */
  C: 67,

  /**
   * D
   */
  D: 68,

  /**
   * E
   */
  E: 69,

  /**
   * F
   */
  F: 70,

  /**
   * G
   */
  G: 71,

  /**
   * H
   */
  H: 72,

  /**
   * I
   */
  I: 73,

  /**
   * J
   */
  J: 74,

  /**
   * K
   */
  K: 75,

  /**
   * L
   */
  L: 76,

  /**
   * M
   */
  M: 77,

  /**
   * N
   */
  N: 78,

  /**
   * O
   */
  O: 79,

  /**
   * P
   */
  P: 80,

  /**
   * Q
   */
  Q: 81,

  /**
   * R
   */
  R: 82,

  /**
   * S
   */
  S: 83,

  /**
   * T
   */
  T: 84,

  /**
   * U
   */
  U: 85,

  /**
   * V
   */
  V: 86,

  /**
   * W
   */
  W: 87,

  /**
   * X
   */
  X: 88,

  /**
   * Y
   */
  Y: 89,

  /**
   * Z
   */
  Z: 90,

  /**
   * META
   */
  META: 91,

  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,

  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,

  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,

  /**
   * NUM_ONE
   */
  NUM_ONE: 97,

  /**
   * NUM_TWO
   */
  NUM_TWO: 98,

  /**
   * NUM_THREE
   */
  NUM_THREE: 99,

  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,

  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,

  /**
   * NUM_SIX
   */
  NUM_SIX: 102,

  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,

  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,

  /**
   * NUM_NINE
   */
  NUM_NINE: 105,

  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,

  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,

  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,

  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,

  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,

  /**
   * F1
   */
  F1: 112,

  /**
   * F2
   */
  F2: 113,

  /**
   * F3
   */
  F3: 114,

  /**
   * F4
   */
  F4: 115,

  /**
   * F5
   */
  F5: 116,

  /**
   * F6
   */
  F6: 117,

  /**
   * F7
   */
  F7: 118,

  /**
   * F8
   */
  F8: 119,

  /**
   * F9
   */
  F9: 120,

  /**
   * F10
   */
  F10: 121,

  /**
   * F11
   */
  F11: 122,

  /**
   * F12
   */
  F12: 123,

  /**
   * NUMLOCK
   */
  NUMLOCK: 144,

  /**
   * SEMICOLON
   */
  SEMICOLON: 186,

  /**
   * DASH
   */
  DASH: 189,

  /**
   * EQUALS
   */
  EQUALS: 187,

  /**
   * COMMA
   */
  COMMA: 188,

  /**
   * PERIOD
   */
  PERIOD: 190,

  /**
   * SLASH
   */
  SLASH: 191,

  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192,

  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222,

  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219,

  /**
   * BACKSLASH
   */
  BACKSLASH: 220,

  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221,

  /**
   * WIN_KEY
   */
  WIN_KEY: 224,

  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224,

  /**
   * WIN_IME
   */
  WIN_IME: 229,
  // ======================== Function ========================

  /**
   * whether text and modified key is entered at the same time.
   */
  isTextModifyingKeyEvent: function isTextModifyingKeyEvent(e) {
    var keyCode = e.keyCode;

    if (e.altKey && !e.ctrlKey || e.metaKey || // Function keys don't generate text
    keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
      return false;
    } // The following keys are quite harmless, even in combination with
    // CTRL, ALT or SHIFT.


    switch (keyCode) {
      case KeyCode.ALT:
      case KeyCode.CAPS_LOCK:
      case KeyCode.CONTEXT_MENU:
      case KeyCode.CTRL:
      case KeyCode.DOWN:
      case KeyCode.END:
      case KeyCode.ESC:
      case KeyCode.HOME:
      case KeyCode.INSERT:
      case KeyCode.LEFT:
      case KeyCode.MAC_FF_META:
      case KeyCode.META:
      case KeyCode.NUMLOCK:
      case KeyCode.NUM_CENTER:
      case KeyCode.PAGE_DOWN:
      case KeyCode.PAGE_UP:
      case KeyCode.PAUSE:
      case KeyCode.PRINT_SCREEN:
      case KeyCode.RIGHT:
      case KeyCode.SHIFT:
      case KeyCode.UP:
      case KeyCode.WIN_KEY:
      case KeyCode.WIN_KEY_RIGHT:
        return false;

      default:
        return true;
    }
  },

  /**
   * whether character is entered.
   */
  isCharacterKey: function isCharacterKey(keyCode) {
    if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
      return true;
    }

    if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
      return true;
    }

    if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
      return true;
    } // Safari sends zero key code for non-latin characters.


    if (window.navigator.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
      return true;
    }

    switch (keyCode) {
      case KeyCode.SPACE:
      case KeyCode.QUESTION_MARK:
      case KeyCode.NUM_PLUS:
      case KeyCode.NUM_MINUS:
      case KeyCode.NUM_PERIOD:
      case KeyCode.NUM_DIVISION:
      case KeyCode.SEMICOLON:
      case KeyCode.DASH:
      case KeyCode.EQUALS:
      case KeyCode.COMMA:
      case KeyCode.PERIOD:
      case KeyCode.SLASH:
      case KeyCode.APOSTROPHE:
      case KeyCode.SINGLE_QUOTE:
      case KeyCode.OPEN_SQUARE_BRACKET:
      case KeyCode.BACKSLASH:
      case KeyCode.CLOSE_SQUARE_BRACKET:
        return true;

      default:
        return false;
    }
  }
};
var _default = KeyCode;
exports.default = _default;

/***/ }),

/***/ "af8e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = contains;

function contains(root, n) {
  if (!root) {
    return false;
  }

  return root.contains(n);
}

/***/ }),

/***/ "b012":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "b078":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.ClassList = void 0;

var _lodashEs = __webpack_require__("4fcf");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Whitespace regexp.
 */
var re = /\s+/;

var ClassList = /*#__PURE__*/function () {
  function ClassList(el) {
    _classCallCheck(this, ClassList);

    if (!el || !el.nodeType) {
      throw new Error('A DOM element reference is required');
    }

    this.el = el;
    this.list = el.classList;
  }

  _createClass(ClassList, [{
    key: "array",
    value: function array() {
      var className = this.el.getAttribute('class') || '';
      var str = className.replace(/^\s+|\s+$/g, '');
      var arr = str.split(re);
      if ('' === arr[0]) arr.shift();
      return arr;
    }
    /**
     * Add class `name` if not already present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */

  }, {
    key: "add",
    value: function add(name) {
      // classList
      if (this.list) {
        this.list.add(name);
        return this;
      } // fallback


      var arr = this.array();
      var i = (0, _lodashEs.indexOf)(arr, name);
      if (!~i) arr.push(name);
      this.el.className = arr.join(' ');
      return this;
    }
    /**
     * Remove class `name` when present, or
     * pass a regular expression to remove
     * any which match.
     *
     * @param {String|RegExp} name
     * @return {ClassList}
     * @api public
     */

  }, {
    key: "remove",
    value: function remove(name) {
      if ('[object RegExp]' === toString.call(name)) {
        return this._removeMatching(name);
      } // classList


      if (this.list) {
        this.list.remove(name);
        return this;
      } // fallback


      var arr = this.array();
      var i = (0, _lodashEs.indexOf)(arr, name);
      if (~i) arr.splice(i, 1);
      this.el.className = arr.join(' ');
      return this;
    }
    /**
     * Remove all classes matching `re`.
     *
     * @param {RegExp} re
     * @return {ClassList}
     * @api private
     */

  }, {
    key: "_removeMatching",
    value: function _removeMatching(re) {
      var arr = this.array();

      for (var i = 0; i < arr.length; i++) {
        if (re.test(arr[i])) {
          this.remove(arr[i]);
        }
      }

      return this;
    }
    /**
     * Toggle class `name`, can force state via `force`.
     *
     * For browsers that support classList, but do not support `force` yet,
     * the mistake will be detected and corrected.
     *
     * @param {String} name
     * @param {Boolean} force
     * @return {ClassList}
     * @api public
     */

  }, {
    key: "toggle",
    value: function toggle(name, force) {
      // classList
      if (this.list) {
        if ('undefined' !== typeof force) {
          if (force !== this.list.toggle(name, force)) {
            this.list.toggle(name); // toggle again to correct
          }
        } else {
          this.list.toggle(name);
        }

        return this;
      } // fallback


      if ('undefined' !== typeof force) {
        if (!force) {
          this.remove(name);
        } else {
          this.add(name);
        }
      } else {
        if (this.has(name)) {
          this.remove(name);
        } else {
          this.add(name);
        }
      }

      return this;
    }
    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @api public
     */

  }, {
    key: "has",
    value: function has(name) {
      return this.list ? this.list.contains(name) : !!~(0, _lodashEs.indexOf)(this.array(), name);
    }
    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @api public
     */

  }, {
    key: "contains",
    value: function contains(name) {
      return this.has(name);
    }
  }]);

  return ClassList;
}();
/**
 * Wrap `el` in a `ClassList`.
 *
 * @param {Element} el
 * @return {ClassList}
 * @api public
 */


exports.ClassList = ClassList;

function _default(el) {
  return new ClassList(el);
}

/***/ }),

/***/ "b084":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "b0dc":
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__("e4ae");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "b447":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("3a38");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "b550":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "b8ad":
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

function arrayTreeFilter(data, filterFn, options) {
    options = options || {};
    options.childrenKeyName = options.childrenKeyName || "children";
    var children = data || [];
    var result = [];
    var level = 0;
    do {
        var foundItem = children.filter(function (item) {
            return filterFn(item, level);
        })[0];
        if (!foundItem) {
            break;
        }
        result.push(foundItem);
        children = foundItem[options.childrenKeyName] || [];
        level += 1;
    } while (children.length > 0);
    return result;
}

return arrayTreeFilter;

})));


/***/ }),

/***/ "b8e3":
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "bc13":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "bf0b":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("355d");
var createDesc = __webpack_require__("aebd");
var toIObject = __webpack_require__("36c3");
var toPrimitive = __webpack_require__("1bc3");
var has = __webpack_require__("07e3");
var IE8_DOM_DEFINE = __webpack_require__("794b");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("8e60") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "c05b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = __webpack_require__("8bbf");

var _BaseMixin = _interopRequireDefault(__webpack_require__("48bb"));

var _propsUtil = __webpack_require__("5057");

var _vnode = __webpack_require__("d2f9");

var _openAnimationFactory = _interopRequireDefault(__webpack_require__("722e"));

var _commonProps = __webpack_require__("84e7");

var _util = __webpack_require__("d529");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _toArray(activeKey) {
  var currentActiveKey = activeKey;

  if (!Array.isArray(currentActiveKey)) {
    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];
  }

  return currentActiveKey.map(function (key) {
    return String(key);
  });
}

var _default = (0, _vue.defineComponent)({
  name: 'Collapse',
  mixins: [_BaseMixin.default],
  inheritAttrs: false,
  props: (0, _propsUtil.initDefaultProps)((0, _commonProps.collapseProps)(), {
    prefixCls: 'rc-collapse',
    accordion: false,
    destroyInactivePanel: false
  }),
  data: function data() {
    var _this$$props = this.$props,
        activeKey = _this$$props.activeKey,
        defaultActiveKey = _this$$props.defaultActiveKey,
        openAnimation = _this$$props.openAnimation,
        prefixCls = _this$$props.prefixCls;
    var currentActiveKey = defaultActiveKey;

    if ((0, _propsUtil.hasProp)(this, 'activeKey')) {
      currentActiveKey = activeKey;
    }

    var currentOpenAnimations = openAnimation || (0, _openAnimationFactory.default)(prefixCls);
    return {
      currentOpenAnimations: currentOpenAnimations,
      stateActiveKey: _toArray(currentActiveKey)
    };
  },
  watch: {
    activeKey: function activeKey(val) {
      this.setState({
        stateActiveKey: _toArray(val)
      });
    },
    openAnimation: function openAnimation(val) {
      this.setState({
        currentOpenAnimations: val
      });
    }
  },
  methods: {
    onClickItem: function onClickItem(key) {
      var activeKey = this.stateActiveKey;

      if (this.accordion) {
        activeKey = activeKey[0] === key ? [] : [key];
      } else {
        activeKey = _toConsumableArray(activeKey);
        var index = activeKey.indexOf(key);
        var isActive = index > -1;

        if (isActive) {
          // remove active state
          activeKey.splice(index, 1);
        } else {
          activeKey.push(key);
        }
      }

      this.setActiveKey(activeKey);
    },
    getNewChild: function getNewChild(child, index) {
      if ((0, _propsUtil.isEmptyElement)(child)) return;
      var activeKey = this.stateActiveKey;
      var _this$$props2 = this.$props,
          prefixCls = _this$$props2.prefixCls,
          accordion = _this$$props2.accordion,
          destroyInactivePanel = _this$$props2.destroyInactivePanel,
          expandIcon = _this$$props2.expandIcon; // If there is no key provide, use the panel order as default key

      var key = child.key || String(index);

      var _getPropsData = (0, _propsUtil.getPropsData)(child),
          header = _getPropsData.header,
          headerClass = _getPropsData.headerClass,
          disabled = _getPropsData.disabled;

      var isActive = false;

      if (accordion) {
        isActive = activeKey[0] === key;
      } else {
        isActive = activeKey.indexOf(key) > -1;
      }

      var panelEvents = {};

      if (!disabled && disabled !== '') {
        panelEvents = {
          onItemClick: this.onClickItem
        };
      }

      var props = _extends({
        key: key,
        panelKey: key,
        header: header,
        headerClass: headerClass,
        isActive: isActive,
        prefixCls: prefixCls,
        destroyInactivePanel: destroyInactivePanel,
        openAnimation: this.currentOpenAnimations,
        accordion: accordion,
        expandIcon: expandIcon
      }, panelEvents);

      return (0, _vnode.cloneElement)(child, props);
    },
    getItems: function getItems() {
      var _this = this;

      var newChildren = [];
      var children = (0, _propsUtil.getSlot)(this);
      children && children.forEach(function (child, index) {
        newChildren.push(_this.getNewChild(child, index));
      });
      return newChildren;
    },
    setActiveKey: function setActiveKey(activeKey) {
      if (!(0, _propsUtil.hasProp)(this, 'activeKey')) {
        this.setState({
          stateActiveKey: activeKey
        });
      }

      this.__emit('change', this.accordion ? activeKey[0] : activeKey);
    }
  },
  render: function render() {
    var _collapseClassName;

    var _this$$props3 = this.$props,
        prefixCls = _this$$props3.prefixCls,
        accordion = _this$$props3.accordion;
    var _this$$attrs = this.$attrs,
        className = _this$$attrs.class,
        style = _this$$attrs.style;
    var collapseClassName = (_collapseClassName = {}, _defineProperty(_collapseClassName, prefixCls, true), _defineProperty(_collapseClassName, className, className), _collapseClassName);
    return (0, _vue.createVNode)("div", _objectSpread(_objectSpread({
      "class": collapseClassName
    }, (0, _util.getDataAndAriaProps)(this.$attrs)), {}, {
      "style": style,
      "role": accordion ? 'tablist' : null
    }), [this.getItems()]);
  }
});

exports.default = _default;

/***/ }),

/***/ "c0ad":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "c207":
/***/ (function(module, exports) {



/***/ }),

/***/ "c26e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getScrollBarSize;
var cached;

function getScrollBarSize(fresh) {
  if (fresh || cached === undefined) {
    var inner = document.createElement('div');
    inner.style.width = '100%';
    inner.style.height = '200px';
    var outer = document.createElement('div');
    var outerStyle = outer.style;
    outerStyle.position = 'absolute';
    outerStyle.top = 0;
    outerStyle.left = 0;
    outerStyle.pointerEvents = 'none';
    outerStyle.visibility = 'hidden';
    outerStyle.width = '200px';
    outerStyle.height = '150px';
    outerStyle.overflow = 'hidden';
    outer.appendChild(inner);
    document.body.appendChild(outer);
    var widthContained = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var widthScroll = inner.offsetWidth;

    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }

    document.body.removeChild(outer);
    cached = widthContained - widthScroll;
  }

  return cached;
}

/***/ }),

/***/ "c326":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "c32d":
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_c32d__;

/***/ }),

/***/ "c367":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("8436");
var step = __webpack_require__("50ed");
var Iterators = __webpack_require__("481b");
var toIObject = __webpack_require__("36c3");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("30f1")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "c3a1":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("e6f3");
var enumBugKeys = __webpack_require__("1691");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "c426":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "c449":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__("6d08")
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "c6eb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5ea3");


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* harmony default export */ __webpack_exports__["a"] = (nodeUtil);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("dd40")(module)))

/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "ca06":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "collapseProps", {
  enumerable: true,
  get: function get() {
    return _commonProps.collapseProps;
  }
});
Object.defineProperty(exports, "panelProps", {
  enumerable: true,
  get: function get() {
    return _commonProps.panelProps;
  }
});
exports.default = void 0;

var _Panel = _interopRequireDefault(__webpack_require__("4671"));

var _Collapse = _interopRequireDefault(__webpack_require__("c05b"));

var _commonProps = __webpack_require__("84e7");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// based on rc-collapse 1.11.8
_Collapse.default.Panel = _Panel.default;
var _default = _Collapse.default;
exports.default = _default;

/***/ }),

/***/ "ca54":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("26ee");


/** Built-in value references. */
var Symbol = _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Symbol;

/* harmony default export */ __webpack_exports__["a"] = (Symbol);


/***/ }),

/***/ "ccb9":
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__("5168");


/***/ }),

/***/ "ccff":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Performs validation for string types.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function string(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options, 'string');
    if (!(0, _util.isEmptyValue)(value, 'string')) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
      _rule2['default'].pattern(rule, value, source, errors, options);
      if (rule.whitespace === true) {
        _rule2['default'].whitespace(rule, value, source, errors, options);
      }
    }
  }
  callback(errors);
}

exports['default'] = string;

/***/ }),

/***/ "cd3f":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array ? array.length : 0;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeKeys = overArg(Object.keys, Object);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  this.__data__ = new ListCache(entries);
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  return this.__data__['delete'](key);
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var cache = this.__data__;
  if (cache instanceof ListCache) {
    var pairs = cache.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      return this;
    }
    cache = this.__data__ = new MapCache(pairs);
  }
  cache.set(key, value);
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @param {boolean} [isFull] Specify a clone including symbols.
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
  var result;
  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      if (isHostObject(value)) {
        return object ? value : {};
      }
      result = initCloneObject(isFunc ? {} : value);
      if (!isDeep) {
        return copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (!isArr) {
    var props = isFull ? getAllKeys(value) : keys(value);
  }
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
  });
  return result;
}

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} prototype The object to inherit from.
 * @returns {Object} Returns the new object.
 */
function baseCreate(proto) {
  return isObject(proto) ? objectCreate(proto) : {};
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `getTag`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  return objectToString.call(value);
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var result = new buffer.constructor(buffer.length);
  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    assignValue(object, key, newValue === undefined ? source[key] : newValue);
  }
  return object;
}

/**
 * Copies own symbol properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Creates an array of the own enumerable symbol properties of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11,
// for data views in Edge < 14, and promises in Node.js.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = objectToString.call(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : undefined;

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, true, true);
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = cloneDeep;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba"), __webpack_require__("62e4")(module)))

/***/ }),

/***/ "cd3f4":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "cd78":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var isObject = __webpack_require__("f772");
var newPromiseCapability = __webpack_require__("656e");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce7e":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("63b6");
var core = __webpack_require__("584a");
var fails = __webpack_require__("294c");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "d0ed":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "d1dd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _src.default;
  }
});

var _src = _interopRequireDefault(__webpack_require__("0422"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ "d2f9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cloneElement = cloneElement;
exports.cloneVNodes = cloneVNodes;

var _propsUtil = __webpack_require__("5057");

var _vue = __webpack_require__("8bbf");

var _warning = _interopRequireDefault(__webpack_require__("a7e2"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function cloneElement(vnode) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var mergeRef = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var ele = vnode;

  if (Array.isArray(vnode)) {
    ele = (0, _propsUtil.filterEmpty)(vnode)[0];
  }

  if (!ele) {
    return null;
  }

  var node = (0, _vue.cloneVNode)(ele, nodeProps, mergeRef); // cloneVNode内部是合并属性，这里改成覆盖属性

  node.props = override ? _extends(_extends({}, node.props), nodeProps) : node.props;
  (0, _warning.default)(_typeof(node.props.class) !== 'object', 'class must be string');
  return node;
}

function cloneVNodes(vnodes) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  return vnodes.map(function (vnode) {
    return cloneElement(vnode, nodeProps, override);
  });
}

/***/ }),

/***/ "d409":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "d529":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDataAndAriaProps = getDataAndAriaProps;
exports.resolvePropValue = resolvePropValue;
exports.capitalize = exports.hyphenate = exports.camelize = exports.cacheStringFunction = exports.isOn = exports.isObject = exports.isSymbol = exports.isString = exports.isArray = exports.isFunction = void 0;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var isFunction = function isFunction(val) {
  return typeof val === 'function';
};

exports.isFunction = isFunction;
var isArray = Array.isArray;
exports.isArray = isArray;

var isString = function isString(val) {
  return typeof val === 'string';
};

exports.isString = isString;

var isSymbol = function isSymbol(val) {
  return _typeof(val) === 'symbol';
};

exports.isSymbol = isSymbol;

var isObject = function isObject(val) {
  return val !== null && _typeof(val) === 'object';
};

exports.isObject = isObject;
var onRE = /^on[^a-z]/;

var isOn = function isOn(key) {
  return onRE.test(key);
};

exports.isOn = isOn;

var cacheStringFunction = function cacheStringFunction(fn) {
  var cache = Object.create(null);
  return function (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
};

exports.cacheStringFunction = cacheStringFunction;
var camelizeRE = /-(\w)/g;
var camelize = cacheStringFunction(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
exports.camelize = camelize;
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cacheStringFunction(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
});
exports.hyphenate = hyphenate;
var capitalize = cacheStringFunction(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
exports.capitalize = capitalize;
var hasOwnProperty = Object.prototype.hasOwnProperty;

var hasOwn = function hasOwn(val, key) {
  return hasOwnProperty.call(val, key);
}; // change from vue sourcecode


function resolvePropValue(options, props, key, value) {
  var opt = options[key];

  if (opt != null) {
    var hasDefault = hasOwn(opt, 'default'); // default values

    if (hasDefault && value === undefined) {
      var defaultValue = opt.default;
      value = opt.type !== Function && isFunction(defaultValue) ? defaultValue() : defaultValue;
    } // boolean casting


    if (opt.type === Boolean) {
      if (!hasOwn(props, key) && !hasDefault) {
        value = false;
      } else if (value === '') {
        value = true;
      }
    }
  }

  return value;
}

function getDataAndAriaProps(props) {
  return Object.keys(props).reduce(function (memo, key) {
    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {
      memo[key] = props[key];
    }

    return memo;
  }, {});
}

/***/ }),

/***/ "d864":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("79aa");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "d8d6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1654");
__webpack_require__("6c1c");
module.exports = __webpack_require__("ccb9").f('iterator');


/***/ }),

/***/ "d8e5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "d9f6":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var IE8_DOM_DEFINE = __webpack_require__("794b");
var toPrimitive = __webpack_require__("1bc3");
var dP = Object.defineProperty;

exports.f = __webpack_require__("8e60") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "dab3":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
/* global define */

(function () {
	'use strict';

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (true) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return ExecutionEnvironment;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}());


/***/ }),

/***/ "dbdb":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("584a");
var global = __webpack_require__("e53d");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("b8e3") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "dd40":
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "deaf":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "df7c":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "dff1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("26ee");


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (cloneBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("dd40")(module)))

/***/ }),

/***/ "e098":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: 'transitionstart',
    WebkitTransition: 'webkitTransitionStart',
    MozTransition: 'mozTransitionStart',
    OTransition: 'oTransitionStart',
    msTransition: 'MSTransitionStart'
  },
  animationstart: {
    animation: 'animationstart',
    WebkitAnimation: 'webkitAnimationStart',
    MozAnimation: 'mozAnimationStart',
    OAnimation: 'oAnimationStart',
    msAnimation: 'MSAnimationStart'
  }
};
var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd',
    MozTransition: 'mozTransitionEnd',
    OTransition: 'oTransitionEnd',
    msTransition: 'MSTransitionEnd'
  },
  animationend: {
    animation: 'animationend',
    WebkitAnimation: 'webkitAnimationEnd',
    MozAnimation: 'mozAnimationEnd',
    OAnimation: 'oAnimationEnd',
    msAnimation: 'MSAnimationEnd'
  }
};
var startEvents = [];
var endEvents = [];

function detectEvents() {
  var testEl = document.createElement('div');
  var style = testEl.style;

  if (!('AnimationEvent' in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }

  if (!('TransitionEvent' in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }

  function process(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];

        for (var styleName in baseEvents) {
          if (styleName in style) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }

  process(START_EVENT_NAME_MAP, startEvents);
  process(END_EVENT_NAME_MAP, endEvents);
}

if (typeof window !== 'undefined' && typeof document !== 'undefined') {
  detectEvents();
}

function addEventListener(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}

function removeEventListener(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}

var TransitionEvents = {
  // Start events
  startEvents: startEvents,
  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }

    startEvents.forEach(function (startEvent) {
      addEventListener(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }

    startEvents.forEach(function (startEvent) {
      removeEventListener(node, startEvent, eventListener);
    });
  },
  // End events
  endEvents: endEvents,
  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }

    endEvents.forEach(function (endEvent) {
      addEventListener(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }

    endEvents.forEach(function (endEvent) {
      removeEventListener(node, endEvent, eventListener);
    });
  }
};
var _default = TransitionEvents;
exports.default = _default;

/***/ }),

/***/ "e170":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e1de":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("696e"), __esModule: true };

/***/ }),

/***/ "e4ae":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "e53d":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "e6ea":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e6f3":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("07e3");
var toIObject = __webpack_require__("36c3");
var arrayIndexOf = __webpack_require__("5b4e")(false);
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "e82a":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e8b2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("f0ce");
/* harmony import */ var _getPrototype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("52e7");
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("1147");




/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(value) || Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(value) != objectTag) {
    return false;
  }
  var proto = Object(_getPrototype_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ __webpack_exports__["default"] = (isPlainObject);


/***/ }),

/***/ "ea70":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "eb40":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "ebfd":
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__("62a0")('meta');
var isObject = __webpack_require__("f772");
var has = __webpack_require__("07e3");
var setDesc = __webpack_require__("d9f6").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__("294c")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "ec9d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "eef0":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "f0ce":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/lodash-es/_Symbol.js
var _Symbol = __webpack_require__("ca54");

// CONCATENATED MODULE: ./node_modules/lodash-es/_getRawTag.js


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _getRawTag_hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol["a" /* default */] ? _Symbol["a" /* default */].toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ var _getRawTag = (getRawTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_objectToString.js
/** Used for built-in method references. */
var _objectToString_objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var _objectToString_nativeObjectToString = _objectToString_objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return _objectToString_nativeObjectToString.call(value);
}

/* harmony default export */ var _objectToString = (objectToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGetTag.js




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var _baseGetTag_symToStringTag = _Symbol["a" /* default */] ? _Symbol["a" /* default */].toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))
    ? _getRawTag(value)
    : _objectToString(value);
}

/* harmony default export */ var _baseGetTag = __webpack_exports__["a"] = (baseGetTag);


/***/ }),

/***/ "f201":
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__("e4ae");
var aFunction = __webpack_require__("79aa");
var SPECIES = __webpack_require__("5168")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "f66e":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "f772":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "f893":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("f921"), __esModule: true };

/***/ }),

/***/ "f921":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("014b");
__webpack_require__("c207");
__webpack_require__("69d3");
__webpack_require__("765d");
module.exports = __webpack_require__("584a").Symbol;


/***/ }),

/***/ "fa49":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warning = undefined;

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _promise = __webpack_require__("e1de");

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__("1907");

var _keys2 = _interopRequireDefault(_keys);

var _stringify = __webpack_require__("8034");

var _stringify2 = _interopRequireDefault(_stringify);

exports.convertFieldsError = convertFieldsError;
exports.format = format;
exports.isEmptyValue = isEmptyValue;
exports.isEmptyObject = isEmptyObject;
exports.asyncMap = asyncMap;
exports.complementError = complementError;
exports.deepMerge = deepMerge;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint no-console:0 */

var formatRegExp = /%[sdj%]/g;

var warning = exports.warning = function warning() {};

// don't print warning message when in production env or node runtime
if (false) {}

function convertFieldsError(errors) {
  if (!errors || !errors.length) return null;
  var fields = {};
  errors.forEach(function (error) {
    var field = error.field;
    fields[field] = fields[field] || [];
    fields[field].push(error);
  });
  return fields;
}

function format() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var i = 1;
  var f = args[0];
  var len = args.length;
  if (typeof f === 'function') {
    return f.apply(null, args.slice(1));
  }
  if (typeof f === 'string') {
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') {
        return '%';
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case '%s':
          return String(args[i++]);
        case '%d':
          return Number(args[i++]);
        case '%j':
          try {
            return (0, _stringify2['default'])(args[i++]);
          } catch (_) {
            return '[Circular]';
          }
          break;
        default:
          return x;
      }
    });
    for (var arg = args[i]; i < len; arg = args[++i]) {
      str += ' ' + arg;
    }
    return str;
  }
  return f;
}

function isNativeStringType(type) {
  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'pattern';
}

function isEmptyValue(value, type) {
  if (value === undefined || value === null) {
    return true;
  }
  if (type === 'array' && Array.isArray(value) && !value.length) {
    return true;
  }
  if (isNativeStringType(type) && typeof value === 'string' && !value) {
    return true;
  }
  return false;
}

function isEmptyObject(obj) {
  return (0, _keys2['default'])(obj).length === 0;
}

function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total = 0;
  var arrLength = arr.length;

  function count(errors) {
    results.push.apply(results, errors);
    total++;
    if (total === arrLength) {
      callback(results);
    }
  }

  arr.forEach(function (a) {
    func(a, count);
  });
}

function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;

  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index;
    index = index + 1;
    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }

  next([]);
}

function flattenObjArr(objArr) {
  var ret = [];
  (0, _keys2['default'])(objArr).forEach(function (k) {
    ret.push.apply(ret, objArr[k]);
  });
  return ret;
}

function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var flattenArr = flattenObjArr(objArr);
    return asyncSerialArray(flattenArr, func, callback);
  }
  var firstFields = option.firstFields || [];
  if (firstFields === true) {
    firstFields = (0, _keys2['default'])(objArr);
  }
  var objArrKeys = (0, _keys2['default'])(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];
  var pending = new _promise2['default'](function (resolve, reject) {
    var next = function next(errors) {
      results.push.apply(results, errors);
      total++;
      if (total === objArrLength) {
        callback(results);
        return results.length ? reject({ errors: results, fields: convertFieldsError(results) }) : resolve();
      }
    };
    objArrKeys.forEach(function (key) {
      var arr = objArr[key];
      if (firstFields.indexOf(key) !== -1) {
        asyncSerialArray(arr, func, next);
      } else {
        asyncParallelArray(arr, func, next);
      }
    });
  });
  pending['catch'](function (e) {
    return e;
  });
  return pending;
}

function complementError(rule) {
  return function (oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }
    return {
      message: oe,
      field: oe.field || rule.fullField
    };
  };
}

function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value = source[s];
        if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) === 'object' && (0, _typeof3['default'])(target[s]) === 'object') {
          target[s] = (0, _extends3['default'])({}, target[s], value);
        } else {
          target[s] = value;
        }
      }
    }
  }
  return target;
}

/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "HttpMethod", function() { return /* reexport */ http_method; });
__webpack_require__.d(__webpack_exports__, "Accordion", function() { return /* reexport */ accordion; });
__webpack_require__.d(__webpack_exports__, "ActionSheet", function() { return /* reexport */ action_sheet; });
__webpack_require__.d(__webpack_exports__, "ActivityIndicator", function() { return /* reexport */ activity_indicator; });
__webpack_require__.d(__webpack_exports__, "Badge", function() { return /* reexport */ packages_badge; });
__webpack_require__.d(__webpack_exports__, "Button", function() { return /* reexport */ packages_button; });
__webpack_require__.d(__webpack_exports__, "Calendar", function() { return /* reexport */ packages_calendar; });
__webpack_require__.d(__webpack_exports__, "Card", function() { return /* reexport */ card; });
__webpack_require__.d(__webpack_exports__, "Carousel", function() { return /* reexport */ packages_carousel; });
__webpack_require__.d(__webpack_exports__, "Checkbox", function() { return /* reexport */ packages_checkbox; });
__webpack_require__.d(__webpack_exports__, "DatePicker", function() { return /* reexport */ packages_date_picker; });
__webpack_require__.d(__webpack_exports__, "DatePickerView", function() { return /* reexport */ date_picker_view; });
__webpack_require__.d(__webpack_exports__, "Drawer", function() { return /* reexport */ packages_drawer; });
__webpack_require__.d(__webpack_exports__, "Flex", function() { return /* reexport */ packages_flex; });
__webpack_require__.d(__webpack_exports__, "Grid", function() { return /* reexport */ grid; });
__webpack_require__.d(__webpack_exports__, "Icon", function() { return /* reexport */ packages_icon; });
__webpack_require__.d(__webpack_exports__, "ImagePicker", function() { return /* reexport */ image_picker; });
__webpack_require__.d(__webpack_exports__, "Input", function() { return /* reexport */ packages_input; });
__webpack_require__.d(__webpack_exports__, "List", function() { return /* reexport */ packages_list; });
__webpack_require__.d(__webpack_exports__, "LoadingDirective", function() { return /* reexport */ loading_directive; });
__webpack_require__.d(__webpack_exports__, "Menu", function() { return /* reexport */ packages_menu; });
__webpack_require__.d(__webpack_exports__, "Modal", function() { return /* reexport */ packages_modal; });
__webpack_require__.d(__webpack_exports__, "NavBar", function() { return /* reexport */ nav_bar; });
__webpack_require__.d(__webpack_exports__, "NoticeBar", function() { return /* reexport */ notice_bar; });
__webpack_require__.d(__webpack_exports__, "Pagination", function() { return /* reexport */ pagination; });
__webpack_require__.d(__webpack_exports__, "Picker", function() { return /* reexport */ packages_picker; });
__webpack_require__.d(__webpack_exports__, "PickerView", function() { return /* reexport */ picker_view; });
__webpack_require__.d(__webpack_exports__, "Popover", function() { return /* reexport */ packages_popover; });
__webpack_require__.d(__webpack_exports__, "Popup", function() { return /* reexport */ packages_popup; });
__webpack_require__.d(__webpack_exports__, "Progress", function() { return /* reexport */ progress; });
__webpack_require__.d(__webpack_exports__, "PullRefresh", function() { return /* reexport */ pull_refresh; });
__webpack_require__.d(__webpack_exports__, "Radio", function() { return /* reexport */ packages_radio; });
__webpack_require__.d(__webpack_exports__, "Range", function() { return /* reexport */ packages_range; });
__webpack_require__.d(__webpack_exports__, "Result", function() { return /* reexport */ packages_result; });
__webpack_require__.d(__webpack_exports__, "SearchBar", function() { return /* reexport */ search_bar; });
__webpack_require__.d(__webpack_exports__, "SegmentedControl", function() { return /* reexport */ segmented_control; });
__webpack_require__.d(__webpack_exports__, "Slider", function() { return /* reexport */ slider; });
__webpack_require__.d(__webpack_exports__, "Stepper", function() { return /* reexport */ stepper; });
__webpack_require__.d(__webpack_exports__, "Steps", function() { return /* reexport */ packages_steps; });
__webpack_require__.d(__webpack_exports__, "Switch", function() { return /* reexport */ packages_switch; });
__webpack_require__.d(__webpack_exports__, "TabBar", function() { return /* reexport */ tab_bar; });
__webpack_require__.d(__webpack_exports__, "Tabs", function() { return /* reexport */ packages_tabs; });
__webpack_require__.d(__webpack_exports__, "Tag", function() { return /* reexport */ tag; });
__webpack_require__.d(__webpack_exports__, "Textarea", function() { return /* reexport */ packages_textarea; });
__webpack_require__.d(__webpack_exports__, "TimeDirective", function() { return /* reexport */ time_directive; });
__webpack_require__.d(__webpack_exports__, "Toast", function() { return /* reexport */ packages_toast; });
__webpack_require__.d(__webpack_exports__, "WhiteSpace", function() { return /* reexport */ white_space; });
__webpack_require__.d(__webpack_exports__, "WingBlank", function() { return /* reexport */ wing_blank; });

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// CONCATENATED MODULE: ./src/packages/http-method/index.ts
var HttpMethod;

(function (HttpMethod) {
  HttpMethod["GET"] = "GET";
  HttpMethod["POST"] = "POST";
  HttpMethod["PUT"] = "PUT";
  HttpMethod["DELETE"] = "DELETE";
})(HttpMethod || (HttpMethod = {}));

/* harmony default export */ var http_method = (HttpMethod);
// CONCATENATED MODULE: ./src/packages/moment-zh_CN.ts
/* harmony default export */ var moment_zh_CN = (window.moment && window.moment.updateLocale('zh-cn', {
  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
  longDateFormat: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'YYYY/MM/DD',
    LL: 'YYYY年M月D日',
    LLL: 'YYYY年M月D日Ah点mm分',
    LLLL: 'YYYY年M月D日ddddAh点mm分',
    l: 'YYYY/M/D',
    ll: 'YYYY年M月D日',
    lll: 'YYYY年M月D日 HH:mm',
    llll: 'YYYY年M月D日dddd HH:mm'
  },
  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
  meridiemHour: function meridiemHour(hour, meridiem) {
    var copyHour = hour;

    if (copyHour === 12) {
      copyHour = 0;
    }

    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
      return copyHour;
    } else if (meridiem === '下午' || meridiem === '晚上') {
      return copyHour + 12;
    } else {
      // '中午'
      return copyHour >= 11 ? copyHour : copyHour + 12;
    }
  },
  meridiem: function meridiem(hour, minute, isLower) {
    var hm = hour * 100 + minute;

    if (hm < 600) {
      return '凌晨';
    } else if (hm < 900) {
      return '早上';
    } else if (hm < 1130) {
      return '上午';
    } else if (hm < 1230) {
      return '中午';
    } else if (hm < 1800) {
      return '下午';
    } else {
      return '晚上';
    }
  },
  calendar: {
    sameDay: '[今天]LT',
    nextDay: '[明天]LT',
    nextWeek: '[下]ddddLT',
    lastDay: '[昨天]LT',
    lastWeek: '[上]ddddLT',
    sameElse: 'L'
  },
  dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
  ordinal: function ordinal(number, period) {
    switch (period) {
      case 'd':
      case 'D':
      case 'DDD':
        return number + '日';

      case 'M':
        return number + '月';

      case 'w':
      case 'W':
        return number + '周';

      default:
        return number;
    }
  },
  relativeTime: {
    future: '%s内',
    past: '%s前',
    s: '几秒',
    ss: '%d 秒',
    m: '1 分钟',
    mm: '%d 分钟',
    h: '1 小时',
    hh: '%d 小时',
    d: '1 天',
    dd: '%d 天',
    M: '1 个月',
    MM: '%d 个月',
    y: '1 年',
    yy: '%d 年'
  },
  week: {
    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
    dow: 1,
    doy: 4 // The week that contains Jan 4th is the first week of the year.

  }
}));
// EXTERNAL MODULE: external "Vue"
var external_Vue_ = __webpack_require__("8bbf");

// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-collapse/index.js
var vc_collapse = __webpack_require__("ca06");
var vc_collapse_default = /*#__PURE__*/__webpack_require__.n(vc_collapse);

// CONCATENATED MODULE: ./src/packages/accordion/src/index.tsx




function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var accordion_src = (Object(external_Vue_["defineComponent"])({
  Panel: vc_collapse_default.a.Panel,
  install: null,
  name: 'Accordion',
  props: {
    prefixCls: {
      default: 'am-accordion'
    },
    openAnimation: {},
    accordion: {
      type: Boolean,
      default: false
    },
    activeKey: {
      type: [String, Array]
    }
  },
  render: function render() {
    var _slot;

    var _this = this;

    return this.$slots.default ? Object(external_Vue_["createVNode"])(vc_collapse_default.a, Object(external_Vue_["mergeProps"])(this.$props, {
      "onChange": function onChange() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.$emit.apply(_this, ['change'].concat(args));
      }
    }), _isSlot(_slot = this.$slots.default()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    }) : null;
  }
}));
// EXTERNAL MODULE: ./node_modules/normalize.css/normalize.css
var normalize = __webpack_require__("f5df");

// EXTERNAL MODULE: ./src/packages/style/index.less
var packages_style = __webpack_require__("19dd");

// CONCATENATED MODULE: ./src/packages/style/index.tsx


// EXTERNAL MODULE: ./src/packages/accordion/style/index.less
var accordion_style = __webpack_require__("c326");

// CONCATENATED MODULE: ./src/packages/accordion/style/index.tsx


// CONCATENATED MODULE: ./src/packages/accordion/index.ts



accordion_src.install = function (Vue) {
  Vue.component('MAccordion', accordion_src);
  Vue.component('MAccordionPanel', accordion_src.Panel);
};

/* harmony default export */ var accordion = (accordion_src);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__("4d26");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./src/packages/badge/src/index.tsx


function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/* harmony default export */ var badge_src = (Object(external_Vue_["defineComponent"])({
  name: 'Badge',
  props: {
    prefixCls: {
      default: 'am-badge'
    },
    hot: {
      type: Boolean,
      default: false
    },
    size: {
      type: String,
      default: 'small'
    },
    overflowCount: {
      type: Number,
      default: 99
    },
    corner: {
      type: Boolean,
      default: false
    },
    dot: {
      type: Boolean,
      default: false
    },
    text: {
      type: [String, Number]
    },
    textStyle: {
      type: Object
    }
  },
  render: function render() {
    var _classnames, _classnames2;

    var _a, _b, _c, _d;

    var overflowCount = this.overflowCount,
        text = this.text;
    var prefixCls = this.prefixCls,
        size = this.size,
        dot = this.dot,
        corner = this.corner,
        hot = this.hot;
    overflowCount = overflowCount;
    text = typeof text === 'number' && text > overflowCount ? "".concat(overflowCount, "+") : text; // dot mode don't need text

    if (dot) {
      text = '';
    }

    var scrollNumberCls = classnames_default()((_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-dot"), dot), _defineProperty(_classnames, "".concat(prefixCls, "-dot-large"), dot && size === 'large'), _defineProperty(_classnames, "".concat(prefixCls, "-text"), !dot && !corner), _defineProperty(_classnames, "".concat(prefixCls, "-corner"), corner), _defineProperty(_classnames, "".concat(prefixCls, "-corner-large"), corner && size === 'large'), _classnames));
    var badgeCls = classnames_default()(prefixCls, (_classnames2 = {}, _defineProperty(_classnames2, "".concat(prefixCls, "-not-a-wrapper"), !((_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a))), _defineProperty(_classnames2, "".concat(prefixCls, "-corner-wrapper"), corner), _defineProperty(_classnames2, "".concat(prefixCls, "-hot"), hot), _defineProperty(_classnames2, "".concat(prefixCls, "-corner-wrapper-large"), corner && size === 'large'), _classnames2));
    return Object(external_Vue_["createVNode"])("span", {
      "class": badgeCls
    }, [(_d = (_c = this.$slots).default) === null || _d === void 0 ? void 0 : _d.call(_c), (text || dot) && // tslint:disable-next-line:jsx-no-multiline-js
    Object(external_Vue_["createVNode"])("sup", {
      "class": scrollNumberCls,
      "style": this.textStyle
    }, [text])]);
  }
}));
// EXTERNAL MODULE: ./src/packages/badge/style/index.less
var badge_style = __webpack_require__("eb40");

// CONCATENATED MODULE: ./src/packages/badge/style/index.tsx


// CONCATENATED MODULE: ./src/packages/badge/index.ts


var Plugin = badge_src;

Plugin.install = function (Vue) {
  Vue.component('MBadge', badge_src);
};

/* harmony default export */ var packages_badge = (Plugin);
// EXTERNAL MODULE: ./src/packages/popup/style/index.less
var popup_style = __webpack_require__("532b");

// EXTERNAL MODULE: ./src/packages/popup/style/popup.less
var style_popup = __webpack_require__("928f");

// CONCATENATED MODULE: ./src/packages/popup/style/index.ts


// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/style/index.css
var es_style = __webpack_require__("b550");

// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/drawer/style/index.css
var drawer_style = __webpack_require__("4b9d");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/drawer/style/css.js
// deps-lint-skip: empty


// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/util.js
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var isFunction = function isFunction(val) {
  return typeof val === 'function';
};
var isArray = Array.isArray;
var isString = function isString(val) {
  return typeof val === 'string';
};
var isSymbol = function isSymbol(val) {
  return _typeof(val) === 'symbol';
};
var isObject = function isObject(val) {
  return val !== null && _typeof(val) === 'object';
};
var onRE = /^on[^a-z]/;

var isOn = function isOn(key) {
  return onRE.test(key);
};

var cacheStringFunction = function cacheStringFunction(fn) {
  var cache = Object.create(null);
  return function (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
};

var camelizeRE = /-(\w)/g;
var camelize = cacheStringFunction(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cacheStringFunction(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
});
var capitalize = cacheStringFunction(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
var util_hasOwnProperty = Object.prototype.hasOwnProperty;

var hasOwn = function hasOwn(val, key) {
  return util_hasOwnProperty.call(val, key);
}; // change from vue sourcecode


function resolvePropValue(options, props, key, value) {
  var opt = options[key];

  if (opt != null) {
    var hasDefault = hasOwn(opt, 'default'); // default values

    if (hasDefault && value === undefined) {
      var defaultValue = opt.default;
      value = opt.type !== Function && isFunction(defaultValue) ? defaultValue() : defaultValue;
    } // boolean casting


    if (opt.type === Boolean) {
      if (!hasOwn(props, key) && !hasDefault) {
        value = false;
      } else if (value === '') {
        value = true;
      }
    }
  }

  return value;
}

function getDataAndAriaProps(props) {
  return Object.keys(props).reduce(function (memo, key) {
    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {
      memo[key] = props[key];
    }

    return memo;
  }, {});
}

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/classNames.js


function classNames() {
  var classes = [];

  for (var i = 0; i < arguments.length; i++) {
    var value = i < 0 || arguments.length <= i ? undefined : arguments[i];
    if (!value) continue;

    if (isString(value)) {
      classes.push(value);
    } else if (isArray(value)) {
      for (var _i = 0; _i < value.length; _i++) {
        var inner = classNames(value[_i]);

        if (inner) {
          classes.push(inner);
        }
      }
    } else if (isObject(value)) {
      for (var name in value) {
        if (value[name]) {
          classes.push(name);
        }
      }
    }
  }

  return classes.join(' ');
}

/* harmony default export */ var _util_classNames = (classNames);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/node_modules/omit.js/es/index.js
function omit(obj, fields) {
  // eslint-disable-next-line prefer-object-spread
  var shallowCopy = Object.assign({}, obj);

  for (var i = 0; i < fields.length; i += 1) {
    var key = fields[i];
    delete shallowCopy[key];
  }

  return shallowCopy;
}

/* harmony default export */ var es = (omit);
// EXTERNAL MODULE: ./node_modules/lodash-es/isPlainObject.js
var isPlainObject = __webpack_require__("e8b2");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/isValid.js
var isValid = function isValid(value) {
  return value !== undefined && value !== null && value !== '';
};

/* harmony default export */ var _util_isValid = (isValid);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/props-util/index.js
var props_util_this = undefined;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function props_util_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { props_util_typeof = function _typeof(obj) { return typeof obj; }; } else { props_util_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return props_util_typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }





 // function getType(fn) {
//   const match = fn && fn.toString().match(/^\s*function (\w+)/);
//   return match ? match[1] : '';
// }

var props_util_splitAttrs = function splitAttrs(attrs) {
  var allAttrs = Object.keys(attrs);
  var eventAttrs = {};
  var onEvents = {};
  var extraAttrs = {};

  for (var i = 0, l = allAttrs.length; i < l; i++) {
    var key = allAttrs[i];

    if (isOn(key)) {
      eventAttrs[key[2].toLowerCase() + key.slice(3)] = attrs[key];
      onEvents[key] = attrs[key];
    } else {
      extraAttrs[key] = attrs[key];
    }
  }

  return {
    onEvents: onEvents,
    events: eventAttrs,
    extraAttrs: extraAttrs
  };
};

var props_util_parseStyleText = function parseStyleText() {
  var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var camel = arguments.length > 1 ? arguments[1] : undefined;
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);

      if (tmp.length > 1) {
        var k = camel ? camelize(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};

var hasProp = function hasProp(instance, prop) {
  return prop in props_util_getOptionProps(instance);
}; // 重构后直接使用 hasProp 替换


var slotHasProp = function slotHasProp(slot, prop) {
  return hasProp(slot, prop);
};

var getScopedSlots = function getScopedSlots(ele) {
  return ele.data && ele.data.scopedSlots || {};
};

var props_util_getSlots = function getSlots(ele) {
  var componentOptions = ele.componentOptions || {};

  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }

  var children = ele.children || componentOptions.children || [];
  var slots = {};
  children.forEach(function (child) {
    if (!isEmptyElement(child)) {
      var name = child.data && child.data.slot || 'default';
      slots[name] = slots[name] || [];
      slots[name].push(child);
    }
  });
  return _extends(_extends({}, slots), getScopedSlots(ele));
};

var props_util_flattenChildren = function flattenChildren() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var filterEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var temp = Array.isArray(children) ? children : [children];
  var res = [];
  temp.forEach(function (child) {
    if (Array.isArray(child)) {
      res.push.apply(res, _toConsumableArray(flattenChildren(child, filterEmpty)));
    } else if (child && child.type === external_Vue_["Fragment"]) {
      res.push.apply(res, _toConsumableArray(flattenChildren(child.children, filterEmpty)));
    } else if (child && Object(external_Vue_["isVNode"])(child)) {
      if (filterEmpty && !isEmptyElement(child)) {
        res.push(child);
      } else if (!filterEmpty) {
        res.push(child);
      }
    } else if (_util_isValid(child)) {
      res.push(child);
    }
  });
  return res;
};

var props_util_getSlot = function getSlot(self) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (Object(external_Vue_["isVNode"])(self)) {
    if (self.type === external_Vue_["Fragment"]) {
      return name === 'default' ? props_util_flattenChildren(self.children) : [];
    } else if (self.children && self.children[name]) {
      return props_util_flattenChildren(self.children[name](options));
    } else {
      return [];
    }
  } else {
    var res = self.$slots[name] && self.$slots[name](options);
    return props_util_flattenChildren(res);
  }
};

var getAllChildren = function getAllChildren(ele) {
  var componentOptions = ele.componentOptions || {};

  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }

  return ele.children || componentOptions.children || [];
};

var getSlotOptions = function getSlotOptions() {
  throw Error('使用 .type 直接取值');
};

var findDOMNode = function findDOMNode(instance) {
  var node = instance && (instance.$el || instance);

  while (node && !node.tagName) {
    node = node.nextSibling;
  }

  return node;
};

var props_util_getOptionProps = function getOptionProps(instance) {
  var res = {};

  if (instance.$ && instance.$.vnode) {
    var props = instance.$.vnode.props || {};
    Object.keys(instance.$props).forEach(function (k) {
      var v = instance.$props[k];
      var hyphenateKey = hyphenate(k);

      if (v !== undefined || hyphenateKey in props) {
        res[k] = v; // 直接取 $props[k]
      }
    });
  } else if (Object(external_Vue_["isVNode"])(instance) && props_util_typeof(instance.type) === 'object') {
    var originProps = instance.props || {};
    var _props = {};
    Object.keys(originProps).forEach(function (key) {
      _props[camelize(key)] = originProps[key];
    });
    var options = instance.type.props || {};
    Object.keys(options).forEach(function (k) {
      var v = resolvePropValue(options, _props, k, _props[k]);

      if (v !== undefined || k in _props) {
        res[k] = v;
      }
    });
  }

  return res;
};

var props_util_getComponent = function getComponent(instance) {
  var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var com = undefined;

  if (instance.$) {
    var temp = instance[prop];

    if (temp !== undefined) {
      return typeof temp === 'function' && execute ? temp(options) : temp;
    } else {
      com = instance.$slots[prop];
      com = execute && com ? com(options) : com;
    }
  } else if (Object(external_Vue_["isVNode"])(instance)) {
    var _temp = instance.props && instance.props[prop];

    if (_temp !== undefined && instance.props !== null) {
      return typeof _temp === 'function' && execute ? _temp(options) : _temp;
    } else if (instance.type === external_Vue_["Fragment"]) {
      com = instance.children;
    } else if (instance.children && instance.children[prop]) {
      com = instance.children[prop];
      com = execute && com ? com(options) : com;
    }
  }

  if (Array.isArray(com)) {
    com = props_util_flattenChildren(com);
    com = com.length === 1 ? com[0] : com;
    com = com.length === 0 ? undefined : com;
  }

  return com;
};

var props_util_getComponentFromProp = function getComponentFromProp(instance, prop) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (instance.$createElement) {
    // const h = instance.$createElement;
    var temp = instance[prop];

    if (temp !== undefined) {
      return typeof temp === 'function' && execute ? temp(external_Vue_["h"], options) : temp;
    }

    return instance.$scopedSlots[prop] && execute && instance.$scopedSlots[prop](options) || instance.$scopedSlots[prop] || instance.$slots[prop] || undefined;
  } else {
    // const h = instance.context.$createElement;
    var _temp2 = props_util_getPropsData(instance)[prop];

    if (_temp2 !== undefined) {
      return typeof _temp2 === 'function' && execute ? _temp2(external_Vue_["h"], options) : _temp2;
    }

    var slotScope = getScopedSlots(instance)[prop];

    if (slotScope !== undefined) {
      return typeof slotScope === 'function' && execute ? slotScope(external_Vue_["h"], options) : slotScope;
    }

    var slotsProp = [];
    var componentOptions = instance.componentOptions || {};
    (componentOptions.children || []).forEach(function (child) {
      if (child.data && child.data.slot === prop) {
        if (child.data.attrs) {
          delete child.data.attrs.slot;
        }

        if (child.tag === 'template') {
          slotsProp.push(child.children);
        } else {
          slotsProp.push(child);
        }
      }
    });
    return slotsProp.length ? slotsProp : undefined;
  }
};

var getAllProps = function getAllProps(ele) {
  var props = props_util_getOptionProps(ele);

  if (ele.$) {
    props = _extends(_extends({}, props), props_util_this.$attrs);
  } else {
    props = _extends(_extends({}, ele.props), props);
  }

  return props;
};

var props_util_getPropsData = function getPropsData(ins) {
  var vnode = ins.$ ? ins.$ : ins;
  var res = {};
  var originProps = vnode.props || {};
  var props = {};
  Object.keys(originProps).forEach(function (key) {
    props[camelize(key)] = originProps[key];
  });
  var options = Object(isPlainObject["default"])(vnode.type) ? vnode.type.props : {};
  options && Object.keys(options).forEach(function (k) {
    var v = resolvePropValue(options, props, k, props[k]);

    if (k in props) {
      // 仅包含 props，不包含默认值
      res[k] = v;
    }
  });
  return _extends(_extends({}, props), res); // 合并事件、未声明属性等
};

var getValueByProp = function getValueByProp(ele, prop) {
  return props_util_getPropsData(ele)[prop];
};

var getAttrs = function getAttrs(ele) {
  var data = ele.data;

  if (ele.$vnode) {
    data = ele.$vnode.data;
  }

  return data ? data.attrs || {} : {};
};

var getKey = function getKey(ele) {
  var key = ele.key;
  return key;
};

function getEvents() {
  var ele = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var on = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var props = {};

  if (ele.$) {
    props = _extends(_extends({}, props), ele.$attrs);
  } else {
    props = _extends(_extends({}, props), ele.props);
  }

  return props_util_splitAttrs(props)[on ? 'onEvents' : 'events'];
}
function getEvent(child, event) {
  return child.props && child.props[event];
} // 获取 xxx.native 或者 原生标签 事件

function getDataEvents(child) {
  var events = {};

  if (child.data && child.data.on) {
    events = child.data.on;
  }

  return _extends({}, events);
} // use getListeners instead this.$listeners
// https://github.com/vueComponent/ant-design-vue/issues/1705

function props_util_getListeners(context) {
  return (context.$vnode ? context.$vnode.componentOptions.listeners : context.$listeners) || {};
}
function getClass(ele) {
  var props = (Object(external_Vue_["isVNode"])(ele) ? ele.props : ele.$attrs) || {};
  var tempCls = props.class || {};
  var cls = {};

  if (typeof tempCls === 'string') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else if (Array.isArray(tempCls)) {
    _util_classNames(tempCls).split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = _extends(_extends({}, cls), tempCls);
  }

  return cls;
}
function getStyle(ele, camel) {
  var props = (Object(external_Vue_["isVNode"])(ele) ? ele.props : ele.$attrs) || {};
  var style = props.style || {};

  if (typeof style === 'string') {
    style = props_util_parseStyleText(style, camel);
  } else if (camel && style) {
    // 驼峰化
    var res = {};
    Object.keys(style).forEach(function (k) {
      return res[camelize(k)] = style[k];
    });
    return res;
  }

  return style;
}
function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}
function isFragment(c) {
  return c.length === 1 && c[0].type === external_Vue_["Fragment"];
}
function isEmptyElement(c) {
  return c.type === external_Vue_["Comment"] || c.type === external_Vue_["Fragment"] && c.children.length === 0 || c.type === external_Vue_["Text"] && c.children.trim() === '';
}
function isStringElement(c) {
  return c && c.type === external_Vue_["Text"];
}
function props_util_filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var res = [];
  children.forEach(function (child) {
    if (Array.isArray(child)) {
      res.push.apply(res, _toConsumableArray(child));
    } else if (child.type === external_Vue_["Fragment"]) {
      res.push.apply(res, _toConsumableArray(child.children));
    } else {
      res.push(child);
    }
  });
  return res.filter(function (c) {
    return !isEmptyElement(c);
  });
}

var initDefaultProps = function initDefaultProps(propTypes, defaultProps) {
  Object.keys(defaultProps).forEach(function (k) {
    if (propTypes[k]) {
      propTypes[k].def && (propTypes[k] = propTypes[k].def(defaultProps[k]));
    } else {
      throw new Error("not have ".concat(k, " prop"));
    }
  });
  return propTypes;
};

function mergeProps() {
  var args = [].slice.call(arguments, 0);
  var props = {};
  args.forEach(function () {
    var p = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    for (var _i = 0, _Object$entries = Object.entries(p); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
          k = _Object$entries$_i[0],
          v = _Object$entries$_i[1];

      props[k] = props[k] || {};

      if (Object(isPlainObject["default"])(v)) {
        _extends(props[k], v);
      } else {
        props[k] = v;
      }
    }
  });
  return props;
}

function isValidElement(element) {
  return element && element.__v_isVNode && props_util_typeof(element.type) !== 'symbol'; // remove text node
}


/* harmony default export */ var props_util = (hasProp);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/BaseMixin.js
function BaseMixin_toConsumableArray(arr) { return BaseMixin_arrayWithoutHoles(arr) || BaseMixin_iterableToArray(arr) || BaseMixin_unsupportedIterableToArray(arr) || BaseMixin_nonIterableSpread(); }

function BaseMixin_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function BaseMixin_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return BaseMixin_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return BaseMixin_arrayLikeToArray(o, minLen); }

function BaseMixin_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function BaseMixin_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return BaseMixin_arrayLikeToArray(arr); }

function BaseMixin_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function BaseMixin_extends() { BaseMixin_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return BaseMixin_extends.apply(this, arguments); }



/* harmony default export */ var BaseMixin = ({
  methods: {
    setState: function setState() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;
      var newState = typeof state === 'function' ? state(this.$data, this.$props) : state;

      if (this.getDerivedStateFromProps) {
        var s = this.getDerivedStateFromProps(props_util_getOptionProps(this), BaseMixin_extends(BaseMixin_extends({}, this.$data), newState));

        if (s === null) {
          return;
        } else {
          newState = BaseMixin_extends(BaseMixin_extends({}, newState), s || {});
        }
      }

      BaseMixin_extends(this.$data, newState);

      if (this._.isMounted) {
        this.$forceUpdate();
      }

      Object(external_Vue_["nextTick"])(function () {
        callback && callback();
      });
    },
    __emit: function __emit() {
      // 直接调用事件，底层组件不需要vueTool记录events
      var args = [].slice.call(arguments, 0);
      var eventName = args[0];
      eventName = "on".concat(eventName[0].toUpperCase()).concat(eventName.substring(1));
      var event = this.$props[eventName] || this.$attrs[eventName];

      if (args.length && event) {
        if (Array.isArray(event)) {
          for (var i = 0, l = event.length; i < l; i++) {
            event[i].apply(event, BaseMixin_toConsumableArray(args.slice(1)));
          }
        } else {
          event.apply(void 0, BaseMixin_toConsumableArray(args.slice(1)));
        }
      }
    }
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/getScrollBarSize.js
var cached;
function getScrollBarSize(fresh) {
  if (fresh || cached === undefined) {
    var inner = document.createElement('div');
    inner.style.width = '100%';
    inner.style.height = '200px';
    var outer = document.createElement('div');
    var outerStyle = outer.style;
    outerStyle.position = 'absolute';
    outerStyle.top = 0;
    outerStyle.left = 0;
    outerStyle.pointerEvents = 'none';
    outerStyle.visibility = 'hidden';
    outerStyle.width = '200px';
    outerStyle.height = '150px';
    outerStyle.overflow = 'hidden';
    outer.appendChild(inner);
    document.body.appendChild(outer);
    var widthContained = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var widthScroll = inner.offsetWidth;

    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }

    document.body.removeChild(outer);
    cached = widthContained - widthScroll;
  }

  return cached;
}
// EXTERNAL MODULE: ./node_modules/vue-types/dist/vue-types.m.js
var vue_types_m = __webpack_require__("84d4");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/vue-types/index.js

var PropTypes = Object(vue_types_m["createTypes"])({
  func: undefined,
  bool: undefined,
  string: undefined,
  number: undefined,
  array: undefined,
  object: undefined,
  integer: undefined
});
PropTypes.extend([{
  name: 'looseBool',
  getter: true,
  type: Boolean,
  default: undefined
}, {
  name: 'style',
  getter: true,
  type: [String, Object],
  default: undefined
}, {
  name: 'VNodeChild',
  getter: true,
  type: null
}]);
function withUndefined(type) {
  type.default = undefined;
  return type;
}
/* harmony default export */ var vue_types = (PropTypes);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/IDrawerPropTypes.js
function IDrawerPropTypes_extends() { IDrawerPropTypes_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return IDrawerPropTypes_extends.apply(this, arguments); }


var IProps = {
  width: vue_types.any,
  height: vue_types.any,
  defaultOpen: vue_types.looseBool,
  firstEnter: vue_types.looseBool,
  open: vue_types.looseBool,
  prefixCls: vue_types.string,
  placement: vue_types.string,
  level: vue_types.oneOfType([vue_types.string, vue_types.array]),
  levelMove: vue_types.oneOfType([vue_types.number, vue_types.func, vue_types.array]),
  ease: vue_types.string,
  duration: vue_types.string,
  handler: vue_types.any,
  showMask: vue_types.looseBool,
  maskStyle: vue_types.object,
  className: vue_types.string,
  wrapStyle: vue_types.object,
  maskClosable: vue_types.looseBool,
  afterVisibleChange: vue_types.func,
  keyboard: vue_types.looseBool
};

var IDrawerProps = IDrawerPropTypes_extends(IDrawerPropTypes_extends({}, IProps), {
  wrapperClassName: vue_types.string,
  forceRender: vue_types.looseBool,
  getContainer: vue_types.oneOfType([vue_types.string, vue_types.func, vue_types.object, vue_types.looseBool])
});

var IDrawerChildProps = IDrawerPropTypes_extends(IDrawerPropTypes_extends({}, IProps), {
  getContainer: vue_types.func,
  getOpenCount: vue_types.func,
  switchScrollingEffect: vue_types.func
});


// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/KeyCode.js
/**
 * @ignore
 * some key-codes definition and utils from closure-library
 * @author yiminghe@gmail.com
 */
var KeyCode = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,

  /**
   * BACKSPACE
   */
  BACKSPACE: 8,

  /**
   * TAB
   */
  TAB: 9,

  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12,

  /**
   * ENTER
   */
  ENTER: 13,

  /**
   * SHIFT
   */
  SHIFT: 16,

  /**
   * CTRL
   */
  CTRL: 17,

  /**
   * ALT
   */
  ALT: 18,

  /**
   * PAUSE
   */
  PAUSE: 19,

  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,

  /**
   * ESC
   */
  ESC: 27,

  /**
   * SPACE
   */
  SPACE: 32,

  /**
   * PAGE_UP
   */
  PAGE_UP: 33,

  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34,

  /**
   * END
   */
  END: 35,

  /**
   * HOME
   */
  HOME: 36,

  /**
   * LEFT
   */
  LEFT: 37,

  /**
   * UP
   */
  UP: 38,

  /**
   * RIGHT
   */
  RIGHT: 39,

  /**
   * DOWN
   */
  DOWN: 40,

  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,

  /**
   * INSERT
   */
  INSERT: 45,

  /**
   * DELETE
   */
  DELETE: 46,

  /**
   * ZERO
   */
  ZERO: 48,

  /**
   * ONE
   */
  ONE: 49,

  /**
   * TWO
   */
  TWO: 50,

  /**
   * THREE
   */
  THREE: 51,

  /**
   * FOUR
   */
  FOUR: 52,

  /**
   * FIVE
   */
  FIVE: 53,

  /**
   * SIX
   */
  SIX: 54,

  /**
   * SEVEN
   */
  SEVEN: 55,

  /**
   * EIGHT
   */
  EIGHT: 56,

  /**
   * NINE
   */
  NINE: 57,

  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63,

  /**
   * A
   */
  A: 65,

  /**
   * B
   */
  B: 66,

  /**
   * C
   */
  C: 67,

  /**
   * D
   */
  D: 68,

  /**
   * E
   */
  E: 69,

  /**
   * F
   */
  F: 70,

  /**
   * G
   */
  G: 71,

  /**
   * H
   */
  H: 72,

  /**
   * I
   */
  I: 73,

  /**
   * J
   */
  J: 74,

  /**
   * K
   */
  K: 75,

  /**
   * L
   */
  L: 76,

  /**
   * M
   */
  M: 77,

  /**
   * N
   */
  N: 78,

  /**
   * O
   */
  O: 79,

  /**
   * P
   */
  P: 80,

  /**
   * Q
   */
  Q: 81,

  /**
   * R
   */
  R: 82,

  /**
   * S
   */
  S: 83,

  /**
   * T
   */
  T: 84,

  /**
   * U
   */
  U: 85,

  /**
   * V
   */
  V: 86,

  /**
   * W
   */
  W: 87,

  /**
   * X
   */
  X: 88,

  /**
   * Y
   */
  Y: 89,

  /**
   * Z
   */
  Z: 90,

  /**
   * META
   */
  META: 91,

  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,

  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,

  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,

  /**
   * NUM_ONE
   */
  NUM_ONE: 97,

  /**
   * NUM_TWO
   */
  NUM_TWO: 98,

  /**
   * NUM_THREE
   */
  NUM_THREE: 99,

  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,

  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,

  /**
   * NUM_SIX
   */
  NUM_SIX: 102,

  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,

  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,

  /**
   * NUM_NINE
   */
  NUM_NINE: 105,

  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,

  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,

  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,

  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,

  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,

  /**
   * F1
   */
  F1: 112,

  /**
   * F2
   */
  F2: 113,

  /**
   * F3
   */
  F3: 114,

  /**
   * F4
   */
  F4: 115,

  /**
   * F5
   */
  F5: 116,

  /**
   * F6
   */
  F6: 117,

  /**
   * F7
   */
  F7: 118,

  /**
   * F8
   */
  F8: 119,

  /**
   * F9
   */
  F9: 120,

  /**
   * F10
   */
  F10: 121,

  /**
   * F11
   */
  F11: 122,

  /**
   * F12
   */
  F12: 123,

  /**
   * NUMLOCK
   */
  NUMLOCK: 144,

  /**
   * SEMICOLON
   */
  SEMICOLON: 186,

  /**
   * DASH
   */
  DASH: 189,

  /**
   * EQUALS
   */
  EQUALS: 187,

  /**
   * COMMA
   */
  COMMA: 188,

  /**
   * PERIOD
   */
  PERIOD: 190,

  /**
   * SLASH
   */
  SLASH: 191,

  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192,

  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222,

  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219,

  /**
   * BACKSLASH
   */
  BACKSLASH: 220,

  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221,

  /**
   * WIN_KEY
   */
  WIN_KEY: 224,

  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224,

  /**
   * WIN_IME
   */
  WIN_IME: 229,
  // ======================== Function ========================

  /**
   * whether text and modified key is entered at the same time.
   */
  isTextModifyingKeyEvent: function isTextModifyingKeyEvent(e) {
    var keyCode = e.keyCode;

    if (e.altKey && !e.ctrlKey || e.metaKey || // Function keys don't generate text
    keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
      return false;
    } // The following keys are quite harmless, even in combination with
    // CTRL, ALT or SHIFT.


    switch (keyCode) {
      case KeyCode.ALT:
      case KeyCode.CAPS_LOCK:
      case KeyCode.CONTEXT_MENU:
      case KeyCode.CTRL:
      case KeyCode.DOWN:
      case KeyCode.END:
      case KeyCode.ESC:
      case KeyCode.HOME:
      case KeyCode.INSERT:
      case KeyCode.LEFT:
      case KeyCode.MAC_FF_META:
      case KeyCode.META:
      case KeyCode.NUMLOCK:
      case KeyCode.NUM_CENTER:
      case KeyCode.PAGE_DOWN:
      case KeyCode.PAGE_UP:
      case KeyCode.PAUSE:
      case KeyCode.PRINT_SCREEN:
      case KeyCode.RIGHT:
      case KeyCode.SHIFT:
      case KeyCode.UP:
      case KeyCode.WIN_KEY:
      case KeyCode.WIN_KEY_RIGHT:
        return false;

      default:
        return true;
    }
  },

  /**
   * whether character is entered.
   */
  isCharacterKey: function isCharacterKey(keyCode) {
    if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
      return true;
    }

    if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
      return true;
    }

    if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
      return true;
    } // Safari sends zero key code for non-latin characters.


    if (window.navigator.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
      return true;
    }

    switch (keyCode) {
      case KeyCode.SPACE:
      case KeyCode.QUESTION_MARK:
      case KeyCode.NUM_PLUS:
      case KeyCode.NUM_MINUS:
      case KeyCode.NUM_PERIOD:
      case KeyCode.NUM_DIVISION:
      case KeyCode.SEMICOLON:
      case KeyCode.DASH:
      case KeyCode.EQUALS:
      case KeyCode.COMMA:
      case KeyCode.PERIOD:
      case KeyCode.SLASH:
      case KeyCode.APOSTROPHE:
      case KeyCode.SINGLE_QUOTE:
      case KeyCode.OPEN_SQUARE_BRACKET:
      case KeyCode.BACKSLASH:
      case KeyCode.CLOSE_SQUARE_BRACKET:
        return true;

      default:
        return false;
    }
  }
};
/* harmony default export */ var _util_KeyCode = (KeyCode);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/utils.js
function dataToArray(vars) {
  if (Array.isArray(vars)) {
    return vars;
  }

  return [vars];
}
var transitionEndObject = {
  transition: 'transitionend',
  WebkitTransition: 'webkitTransitionEnd',
  MozTransition: 'transitionend',
  OTransition: 'oTransitionEnd otransitionend'
};
var transitionStr = Object.keys(transitionEndObject).filter(function (key) {
  if (typeof document === 'undefined') {
    return false;
  }

  var html = document.getElementsByTagName('html')[0];
  return key in (html ? html.style : {});
})[0];
var transitionEnd = transitionEndObject[transitionStr];
function addEventListener(target, eventType, callback, options) {
  if (target.addEventListener) {
    target.addEventListener(eventType, callback, options);
  } else if (target.attachEvent) {
    target.attachEvent("on".concat(eventType), callback);
  }
}
function removeEventListener(target, eventType, callback, options) {
  if (target.removeEventListener) {
    target.removeEventListener(eventType, callback, options);
  } else if (target.attachEvent) {
    target.detachEvent("on".concat(eventType), callback);
  }
}
function transformArguments(arg, cb) {
  var result;

  if (typeof arg === 'function') {
    result = arg(cb);
  } else {
    result = arg;
  }

  if (Array.isArray(result)) {
    if (result.length === 2) {
      return result;
    }

    return [result[0], result[1]];
  }

  return [result];
}
var isNumeric = function isNumeric(value) {
  return !isNaN(parseFloat(value)) && isFinite(value); // eslint-disable-line
};
var windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement);
var getTouchParentScroll = function getTouchParentScroll(root, currentTarget, differX, differY) {
  if (!currentTarget || currentTarget === document || currentTarget instanceof Document) {
    return false;
  } // root 为 drawer-content 设定了 overflow, 判断为 root 的 parent 时结束滚动；


  if (currentTarget === root.parentNode) {
    return true;
  }

  var isY = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differY);
  var isX = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differX);
  var scrollY = currentTarget.scrollHeight - currentTarget.clientHeight;
  var scrollX = currentTarget.scrollWidth - currentTarget.clientWidth;
  var style = document.defaultView.getComputedStyle(currentTarget);
  var overflowY = style.overflowY === 'auto' || style.overflowY === 'scroll';
  var overflowX = style.overflowX === 'auto' || style.overflowX === 'scroll';
  var y = scrollY && overflowY;
  var x = scrollX && overflowX;

  if (isY && (!y || y && (currentTarget.scrollTop >= scrollY && differY < 0 || currentTarget.scrollTop <= 0 && differY > 0)) || isX && (!x || x && (currentTarget.scrollLeft >= scrollX && scrollX < 0 || currentTarget.scrollLeft <= 0 && scrollX > 0))) {
    return getTouchParentScroll(root, currentTarget.parentNode, differX, differY);
  }

  return false;
};
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/supportsPassive.js
// Test via a getter in the options object to see if the passive property is accessed
var supportsPassive = false;

try {
  var supportsPassive_opts = Object.defineProperty({}, 'passive', {
    get: function get() {
      supportsPassive = true;
    }
  });
  window.addEventListener('testPassive', null, supportsPassive_opts);
  window.removeEventListener('testPassive', null, supportsPassive_opts);
} catch (e) {}

/* harmony default export */ var _util_supportsPassive = (supportsPassive);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-util/warning.js
/* eslint-disable no-console */
var warned = {};
function warning(valid, message) {
  // Support uglify
  if (false) {}
}
function note(valid, message) {
  // Support uglify
  if (false) {}
}
function resetWarned() {
  warned = {};
}
function call(method, valid, message) {
  if (!valid && !warned[message]) {
    method(false, message);
    warned[message] = true;
  }
}
function warningOnce(valid, message) {
  call(warning, valid, message);
}
function noteOnce(valid, message) {
  call(note, valid, message);
}
/* harmony default export */ var vc_util_warning = (warningOnce);
/* eslint-enable */
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/warning.js


/* harmony default export */ var _util_warning = (function (valid, component) {
  var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  vc_util_warning(valid, "[antdv: ".concat(component, "] ").concat(message));
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/vnode.js
function vnode_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { vnode_typeof = function _typeof(obj) { return typeof obj; }; } else { vnode_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return vnode_typeof(obj); }

function vnode_extends() { vnode_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return vnode_extends.apply(this, arguments); }




function cloneElement(vnode) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var mergeRef = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var ele = vnode;

  if (Array.isArray(vnode)) {
    ele = props_util_filterEmpty(vnode)[0];
  }

  if (!ele) {
    return null;
  }

  var node = Object(external_Vue_["cloneVNode"])(ele, nodeProps, mergeRef); // cloneVNode内部是合并属性，这里改成覆盖属性

  node.props = override ? vnode_extends(vnode_extends({}, node.props), nodeProps) : node.props;
  _util_warning(vnode_typeof(node.props.class) !== 'object', 'class must be string');
  return node;
}
function cloneVNodes(vnodes) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  return vnodes.map(function (vnode) {
    return cloneElement(vnode, nodeProps, override);
  });
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/Drawer.js


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Drawer_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function Drawer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Drawer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Drawer_typeof = function _typeof(obj) { return typeof obj; }; } else { Drawer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Drawer_typeof(obj); }

function Drawer_extends() { Drawer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Drawer_extends.apply(this, arguments); }

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};












function Drawer_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

function noop() {}

var currentDrawer = {};
var Drawer_windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement);
var Drawer = Object(external_Vue_["defineComponent"])({
  name: 'Drawer',
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps(IDrawerProps, {
    prefixCls: 'drawer',
    placement: 'left',
    getContainer: 'body',
    level: 'all',
    duration: '.3s',
    ease: 'cubic-bezier(0.78, 0.14, 0.15, 0.86)',
    firstEnter: false,
    showMask: true,
    handler: true,
    maskStyle: {},
    wrapperClassName: ''
  }),
  data: function data() {
    this.levelDom = [];
    this.contentDom = null;
    this.maskDom = null;
    this.handlerdom = null;
    this.mousePos = null;
    this.sFirstEnter = this.firstEnter;
    this.timeout = null;
    this.children = null;
    this.dom = null;
    this.drawerId = Number((Date.now() + Math.random()).toString().replace('.', Math.round(Math.random() * 9))).toString(16);
    var open = this.open !== undefined ? this.open : !!this.defaultOpen;
    currentDrawer[this.drawerId] = open;
    this.orignalOpen = this.open;
    this.preProps = Drawer_extends({}, this.$props);
    return {
      sOpen: open,
      isOpenChange: undefined,
      passive: undefined,
      container: undefined
    };
  },
  watch: {
    open: function (_open) {
      function open(_x) {
        return _open.apply(this, arguments);
      }

      open.toString = function () {
        return _open.toString();
      };

      return open;
    }(function (val) {
      var _this = this;

      if (val !== undefined && val !== this.preProps.open) {
        this.isOpenChange = true; // 没渲染 dom 时，获取默认数据;

        if (!this.container) {
          this.getDefault(this.$props);
        }

        this.setState({
          sOpen: open
        });
      }

      this.preProps.open = val;

      if (val) {
        Object(external_Vue_["nextTick"])(function () {
          _this.domFocus();
        });
      }
    }),
    placement: function placement(val) {
      if (val !== this.preProps.placement) {
        // test 的 bug, 有动画过场，删除 dom
        this.contentDom = null;
      }

      this.preProps.placement = val;
    },
    level: function level(val) {
      if (this.preProps.level !== val) {
        this.getParentAndLevelDom(this.$props);
      }

      this.preProps.level = val;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    Object(external_Vue_["nextTick"])(function () {
      if (!Drawer_windowIsUndefined) {
        _this2.passive = _util_supportsPassive ? {
          passive: false
        } : false;
      }

      var open = _this2.getOpen();

      if (_this2.handler || open || _this2.sFirstEnter) {
        _this2.getDefault(_this2.$props);

        if (open) {
          _this2.isOpenChange = true;
          Object(external_Vue_["nextTick"])(function () {
            _this2.domFocus();
          });
        }

        _this2.$forceUpdate();
      }
    });
  },
  updated: function updated() {
    var _this3 = this;

    Object(external_Vue_["nextTick"])(function () {
      // dom 没渲染时，重走一遍。
      if (!_this3.sFirstEnter && _this3.container) {
        _this3.$forceUpdate();

        _this3.sFirstEnter = true;
      }
    });
  },
  beforeUnmount: function beforeUnmount() {
    delete currentDrawer[this.drawerId];
    delete this.isOpenChange;

    if (this.container) {
      if (this.sOpen) {
        this.setLevelDomTransform(false, true);
      }

      document.body.style.overflow = '';
    }

    this.sFirstEnter = false;
    clearTimeout(this.timeout);
  },
  methods: {
    domFocus: function domFocus() {
      if (this.dom) {
        this.dom.focus();
      }
    },
    onKeyDown: function onKeyDown(e) {
      if (e.keyCode === _util_KeyCode.ESC) {
        e.stopPropagation();

        this.__emit('close', e);
      }
    },
    onMaskTouchEnd: function onMaskTouchEnd(e) {
      this.__emit('close', e);

      this.onTouchEnd(e, true);
    },
    onIconTouchEnd: function onIconTouchEnd(e) {
      this.__emit('handleClick', e);

      this.onTouchEnd(e);
    },
    onTouchEnd: function onTouchEnd(e, close) {
      if (this.open !== undefined) {
        return;
      }

      var open = close || this.sOpen;
      this.isOpenChange = true;
      this.setState({
        sOpen: !open
      });
    },
    onWrapperTransitionEnd: function onWrapperTransitionEnd(e) {
      if (e.target === this.contentWrapper && e.propertyName.match(/transform$/)) {
        var _open2 = this.getOpen();

        this.dom.style.transition = '';

        if (!_open2 && this.getCurrentDrawerSome()) {
          document.body.style.overflowX = '';

          if (this.maskDom) {
            this.maskDom.style.left = '';
            this.maskDom.style.width = '';
          }
        }

        if (this.afterVisibleChange) {
          this.afterVisibleChange(!!_open2);
        }
      }
    },
    getDefault: function getDefault(props) {
      this.getParentAndLevelDom(props);

      if (props.getContainer || props.parent) {
        this.container = this.defaultGetContainer();
      }
    },
    getCurrentDrawerSome: function getCurrentDrawerSome() {
      return !Object.keys(currentDrawer).some(function (key) {
        return currentDrawer[key];
      });
    },
    getSelfContainer: function getSelfContainer() {
      return this.container;
    },
    getParentAndLevelDom: function getParentAndLevelDom(props) {
      var _this4 = this;

      if (Drawer_windowIsUndefined) {
        return;
      }

      var level = props.level,
          getContainer = props.getContainer;
      this.levelDom = [];

      if (getContainer) {
        if (typeof getContainer === 'string') {
          var dom = document.querySelectorAll(getContainer)[0];
          this.parent = dom;
        }

        if (typeof getContainer === 'function') {
          this.parent = getContainer();
        }

        if (Drawer_typeof(getContainer) === 'object' && getContainer instanceof window.HTMLElement) {
          this.parent = getContainer;
        }
      }

      if (!getContainer && this.container) {
        this.parent = this.container.parentNode;
      }

      if (level === 'all') {
        var children = Array.prototype.slice.call(this.parent.children);
        children.forEach(function (child) {
          if (child.nodeName !== 'SCRIPT' && child.nodeName !== 'STYLE' && child.nodeName !== 'LINK' && child !== _this4.container) {
            _this4.levelDom.push(child);
          }
        });
      } else if (level) {
        dataToArray(level).forEach(function (key) {
          document.querySelectorAll(key).forEach(function (item) {
            _this4.levelDom.push(item);
          });
        });
      }
    },
    setLevelDomTransform: function setLevelDomTransform(open, openTransition, placementName, value) {
      var _this5 = this;

      var _this$$props = this.$props,
          placement = _this$$props.placement,
          levelMove = _this$$props.levelMove,
          duration = _this$$props.duration,
          ease = _this$$props.ease,
          getContainer = _this$$props.getContainer;

      if (!Drawer_windowIsUndefined) {
        this.levelDom.forEach(function (dom) {
          if (dom && (_this5.isOpenChange || openTransition)) {
            /* eslint no-param-reassign: "error" */
            dom.style.transition = "transform ".concat(duration, " ").concat(ease);
            addEventListener(dom, transitionEnd, _this5.trnasitionEnd);
            var levelValue = open ? value : 0;

            if (levelMove) {
              var $levelMove = transformArguments(levelMove, {
                target: dom,
                open: open
              });
              levelValue = open ? $levelMove[0] : $levelMove[1] || 0;
            }

            var $value = typeof levelValue === 'number' ? "".concat(levelValue, "px") : levelValue;
            var placementPos = placement === 'left' || placement === 'top' ? $value : "-".concat($value);
            dom.style.transform = levelValue ? "".concat(placementName, "(").concat(placementPos, ")") : '';
            dom.style.msTransform = levelValue ? "".concat(placementName, "(").concat(placementPos, ")") : '';
          }
        }); // 处理 body 滚动

        if (getContainer === 'body') {
          var eventArray = ['touchstart'];
          var domArray = [document.body, this.maskDom, this.handlerdom, this.contentDom];
          var right = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth ? getScrollBarSize(1) : 0;
          var widthTransition = "width ".concat(duration, " ").concat(ease);
          var trannsformTransition = "transform ".concat(duration, " ").concat(ease);

          if (open && document.body.style.overflow !== 'hidden') {
            document.body.style.overflow = 'hidden';

            if (right) {
              document.body.style.position = 'relative';
              document.body.style.width = "calc(100% - ".concat(right, "px)");
              clearTimeout(this.timeout);

              if (this.dom) {
                this.dom.style.transition = 'none';

                switch (placement) {
                  case 'right':
                    this.dom.style.transform = "translateX(-".concat(right, "px)");
                    this.dom.style.msTransform = "translateX(-".concat(right, "px)");
                    break;

                  case 'top':
                  case 'bottom':
                    this.dom.style.width = "calc(100% - ".concat(right, "px)");
                    this.dom.style.transform = 'translateZ(0)';
                    break;

                  default:
                    break;
                }

                this.timeout = setTimeout(function () {
                  _this5.dom.style.transition = "".concat(trannsformTransition, ",").concat(widthTransition);
                  _this5.dom.style.width = '';
                  _this5.dom.style.transform = '';
                  _this5.dom.style.msTransform = '';
                });
              }
            } // 手机禁滚


            domArray.forEach(function (item, i) {
              if (!item) {
                return;
              }

              addEventListener(item, eventArray[i] || 'touchmove', i ? _this5.removeMoveHandler : _this5.removeStartHandler, _this5.passive);
            });
          } else if (this.getCurrentDrawerSome()) {
            document.body.style.overflow = '';

            if ((this.isOpenChange || openTransition) && right) {
              document.body.style.position = '';
              document.body.style.width = '';

              if (transitionStr) {
                document.body.style.overflowX = 'hidden';
              }

              if (placement === 'right' && this.maskDom) {
                this.maskDom.style.left = "-".concat(right, "px");
                this.maskDom.style.width = "calc(100% + ".concat(right, "px)");
              }

              clearTimeout(this.timeout);

              if (this.dom) {
                this.dom.style.transition = 'none';
                var heightTransition;

                switch (placement) {
                  case 'right':
                    {
                      this.dom.style.transform = "translateX(".concat(right, "px)");
                      this.dom.style.msTransform = "translateX(".concat(right, "px)");
                      this.dom.style.width = '100%';
                      widthTransition = "width 0s ".concat(ease, " ").concat(duration);
                      break;
                    }

                  case 'top':
                  case 'bottom':
                    {
                      this.dom.style.width = "calc(100% + ".concat(right, "px)");
                      this.dom.style.height = '100%';
                      this.dom.style.transform = 'translateZ(0)';
                      heightTransition = "height 0s ".concat(ease, " ").concat(duration);
                      break;
                    }

                  default:
                    break;
                }

                this.timeout = setTimeout(function () {
                  _this5.dom.style.transition = "".concat(trannsformTransition, ",").concat(heightTransition ? "".concat(heightTransition, ",") : '').concat(widthTransition);
                  _this5.dom.style.transform = '';
                  _this5.dom.style.msTransform = '';
                  _this5.dom.style.width = '';
                  _this5.dom.style.height = '';
                });
              }
            }

            domArray.forEach(function (item, i) {
              if (!item) {
                return;
              }

              removeEventListener(item, eventArray[i] || 'touchmove', i ? _this5.removeMoveHandler : _this5.removeStartHandler, _this5.passive);
            });
          }
        }
      }

      var onChange = this.$attrs.onChange;

      if (onChange && this.isOpenChange && this.sFirstEnter) {
        onChange(open);
        this.isOpenChange = false;
      }
    },
    getChildToRender: function getChildToRender(open) {
      var _classnames,
          _this6 = this;

      var _this$$props2 = this.$props,
          prefixCls = _this$$props2.prefixCls,
          placement = _this$$props2.placement,
          handler = _this$$props2.handler,
          showMask = _this$$props2.showMask,
          maskStyle = _this$$props2.maskStyle,
          width = _this$$props2.width,
          height = _this$$props2.height,
          wrapStyle = _this$$props2.wrapStyle,
          keyboard = _this$$props2.keyboard,
          maskClosable = _this$$props2.maskClosable;

      var _a = this.$attrs,
          cls = _a.class,
          style = _a.style,
          restAttrs = __rest(_a, ["class", "style"]);

      var children = props_util_getSlot(this);
      var wrapperClassname = _util_classNames(prefixCls, (_classnames = {}, Drawer_defineProperty(_classnames, "".concat(prefixCls, "-").concat(placement), true), Drawer_defineProperty(_classnames, "".concat(prefixCls, "-open"), open), Drawer_defineProperty(_classnames, 'no-mask', !showMask), Drawer_defineProperty(_classnames, cls, cls), _classnames));
      var isOpenChange = this.isOpenChange;
      var isHorizontal = placement === 'left' || placement === 'right';
      var placementName = "translate".concat(isHorizontal ? 'X' : 'Y'); // 百分比与像素动画不同步，第一次打用后全用像素动画。
      // const defaultValue = !this.contentDom || !level ? '100%' : `${value}px`;

      var placementPos = placement === 'left' || placement === 'top' ? '-100%' : '100%';
      var transform = open ? '' : "".concat(placementName, "(").concat(placementPos, ")");

      if (isOpenChange === undefined || isOpenChange) {
        var contentValue = this.contentDom ? this.contentDom.getBoundingClientRect()[isHorizontal ? 'width' : 'height'] : 0;
        var value = (isHorizontal ? width : height) || contentValue;
        this.setLevelDomTransform(open, false, placementName, value);
      }

      var handlerChildren;

      if (handler !== false) {
        var handlerDefalut = Object(external_Vue_["createVNode"])("div", {
          "class": "drawer-handle",
          "onClick": function onClick() {}
        }, [Object(external_Vue_["createVNode"])("i", {
          "class": "drawer-handle-icon"
        }, null)]);

        var handlerSlot = this.handler;
        var handlerSlotVnode = handlerSlot || handlerDefalut;
        var handleIconClick = handlerSlotVnode.props && handlerSlotVnode.props.onClick;
        handlerChildren = cloneElement(handlerSlotVnode, {
          onClick: function onClick(e) {
            handleIconClick && handleIconClick(e);

            _this6.onIconTouchEnd(e);
          },
          ref: function ref(c) {
            _this6.handlerdom = c;
          }
        });
      }

      var domContProps = Drawer_extends(Drawer_extends({}, restAttrs), {
        class: wrapperClassname,
        onTransitionend: this.onWrapperTransitionEnd,
        onKeydown: open && keyboard ? this.onKeyDown : noop,
        style: Drawer_extends(Drawer_extends({}, wrapStyle), style)
      });

      return Object(external_Vue_["createVNode"])("div", _objectSpread(_objectSpread({
        "ref": function ref(c) {
          _this6.dom = c;
        }
      }, domContProps), {}, {
        "tabindex": -1
      }), [showMask && Object(external_Vue_["createVNode"])("div", {
        "key": open,
        "class": "".concat(prefixCls, "-mask"),
        "onClick": maskClosable ? this.onMaskTouchEnd : noop,
        "style": maskStyle,
        "ref": function ref(c) {
          _this6.maskDom = c;
        }
      }, null), Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-content-wrapper"),
        "style": {
          transform: transform,
          msTransform: transform,
          width: isNumeric(width) ? "".concat(width, "px") : width,
          height: isNumeric(height) ? "".concat(height, "px") : height
        },
        "ref": function ref(c) {
          _this6.contentWrapper = c;
        }
      }, [Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-content"),
        "ref": function ref(c) {
          _this6.contentDom = c;
        },
        "onTouchstart": open ? this.removeStartHandler : noop,
        "onTouchmove": open ? this.removeMoveHandler : noop
      }, [children]), handlerChildren])]);
    },
    getOpen: function getOpen() {
      return this.open !== undefined ? this.open : this.sOpen;
    },
    getTouchParentScroll: function getTouchParentScroll(root, currentTarget, differX, differY) {
      if (!currentTarget || currentTarget === document) {
        return false;
      } // root 为 drawer-content 设定了 overflow, 判断为 root 的 parent 时结束滚动；


      if (currentTarget === root.parentNode) {
        return true;
      }

      var isY = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differY);
      var isX = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differX);
      var scrollY = currentTarget.scrollHeight - currentTarget.clientHeight;
      var scrollX = currentTarget.scrollWidth - currentTarget.clientWidth;
      /**
       * <div style="height: 300px">
       *   <div style="height: 900px"></div>
       * </div>
       * 在没设定 overflow: auto 或 scroll 时，currentTarget 里获取不到 scrollTop 或 scrollLeft,
       * 预先用 scrollTo 来滚动，如果取出的值跟滚动前取出不同，则 currnetTarget 被设定了 overflow; 否则就是上面这种。
       */

      var t = currentTarget.scrollTop;
      var l = currentTarget.scrollLeft;

      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft + 1, currentTarget.scrollTop + 1);
      }

      var currentT = currentTarget.scrollTop;
      var currentL = currentTarget.scrollLeft;

      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft - 1, currentTarget.scrollTop - 1);
      }

      if (isY && (!scrollY || !(currentT - t) || scrollY && (currentTarget.scrollTop >= scrollY && differY < 0 || currentTarget.scrollTop <= 0 && differY > 0)) || isX && (!scrollX || !(currentL - l) || scrollX && (currentTarget.scrollLeft >= scrollX && differX < 0 || currentTarget.scrollLeft <= 0 && differX > 0))) {
        return this.getTouchParentScroll(root, currentTarget.parentNode, differX, differY);
      }

      return false;
    },
    removeStartHandler: function removeStartHandler(e) {
      if (e.touches.length > 1) {
        return;
      }

      this.startPos = {
        x: e.touches[0].clientX,
        y: e.touches[0].clientY
      };
    },
    removeMoveHandler: function removeMoveHandler(e) {
      if (e.changedTouches.length > 1) {
        return;
      }

      var currentTarget = e.currentTarget;
      var differX = e.changedTouches[0].clientX - this.startPos.x;
      var differY = e.changedTouches[0].clientY - this.startPos.y;

      if (currentTarget === this.maskDom || currentTarget === this.handlerdom || currentTarget === this.contentDom && this.getTouchParentScroll(currentTarget, e.target, differX, differY)) {
        e.preventDefault();
      }
    },
    trnasitionEnd: function trnasitionEnd(e) {
      removeEventListener(e.target, transitionEnd, this.trnasitionEnd);
      e.target.style.transition = '';
    },
    defaultGetContainer: function defaultGetContainer() {
      if (Drawer_windowIsUndefined) {
        return null;
      }

      var container = document.createElement('div');
      this.parent.appendChild(container);

      if (this.wrapperClassName) {
        container.className = this.wrapperClassName;
      }

      return container;
    }
  },
  render: function render() {
    var _this7 = this;

    var _this$$props3 = this.$props,
        getContainer = _this$$props3.getContainer,
        wrapperClassName = _this$$props3.wrapperClassName,
        handler = _this$$props3.handler,
        forceRender = _this$$props3.forceRender;
    var open = this.getOpen();
    var portal = null;
    currentDrawer[this.drawerId] = open ? this.container : open;
    var children = this.getChildToRender(this.sFirstEnter ? open : false);

    if (!getContainer) {
      return Object(external_Vue_["createVNode"])("div", {
        "class": wrapperClassName,
        "ref": function ref(c) {
          _this7.container = c;
        }
      }, [children]);
    }

    if (!this.container || !open && !this.sFirstEnter) {
      return null;
    } // 如果有 handler 为内置强制渲染；


    var $forceRender = !!handler || forceRender;

    if ($forceRender || open || this.dom) {
      portal = Object(external_Vue_["createVNode"])(external_Vue_["Teleport"], {
        "to": this.getSelfContainer()
      }, Drawer_isSlot(children) ? children : {
        default: function _default() {
          return [children];
        }
      });
    }

    return portal;
  }
});
/* harmony default export */ var src_Drawer = (Drawer);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/index.js
// base in 1.7.7
// export this package's api

/* harmony default export */ var vc_drawer_src = (src_Drawer);
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js
// This icon file is generated automatically.
var CloseOutlined_CloseOutlined = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z" } }] }, "name": "close", "theme": "outlined" };
/* harmony default export */ var asn_CloseOutlined = (CloseOutlined_CloseOutlined);

// CONCATENATED MODULE: ./node_modules/@ctrl/tinycolor/dist/module/util.js
/**
 * Take input from [0, n] and return it as [0, 1]
 * @hidden
 */
function bound01(n, max) {
    if (isOnePointZero(n)) {
        n = '100%';
    }
    var isPercent = isPercentage(n);
    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));
    // Automatically convert percentage into number
    if (isPercent) {
        n = parseInt(String(n * max), 10) / 100;
    }
    // Handle floating point rounding errors
    if (Math.abs(n - max) < 0.000001) {
        return 1;
    }
    // Convert into [0, 1] range if it isn't already
    if (max === 360) {
        // If n is a hue given in degrees,
        // wrap around out-of-range values into [0, 360] range
        // then convert into [0, 1].
        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));
    }
    else {
        // If n not a hue given in degrees
        // Convert into [0, 1] range if it isn't already.
        n = (n % max) / parseFloat(String(max));
    }
    return n;
}
/**
 * Force a number between 0 and 1
 * @hidden
 */
function clamp01(val) {
    return Math.min(1, Math.max(0, val));
}
/**
 * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
 * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
 * @hidden
 */
function isOnePointZero(n) {
    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;
}
/**
 * Check to see if string passed in is a percentage
 * @hidden
 */
function isPercentage(n) {
    return typeof n === 'string' && n.indexOf('%') !== -1;
}
/**
 * Return a valid alpha value [0,1] with all invalid values being set to 1
 * @hidden
 */
function boundAlpha(a) {
    a = parseFloat(a);
    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }
    return a;
}
/**
 * Replace a decimal with it's percentage value
 * @hidden
 */
function convertToPercentage(n) {
    if (n <= 1) {
        return Number(n) * 100 + "%";
    }
    return n;
}
/**
 * Force a hex value to have 2 characters
 * @hidden
 */
function pad2(c) {
    return c.length === 1 ? '0' + c : String(c);
}

// CONCATENATED MODULE: ./node_modules/@ctrl/tinycolor/dist/module/conversion.js

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>
/**
 * Handle bounds / percentage checking to conform to CSS color spec
 * <http://www.w3.org/TR/css3-color/>
 * *Assumes:* r, g, b in [0, 255] or [0, 1]
 * *Returns:* { r, g, b } in [0, 255]
 */
function rgbToRgb(r, g, b) {
    return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255,
    };
}
/**
 * Converts an RGB color value to HSL.
 * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
 * *Returns:* { h, s, l } in [0,1]
 */
function rgbToHsl(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var s = 0;
    var l = (max + min) / 2;
    if (max === min) {
        s = 0;
        h = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
            default:
                break;
        }
        h /= 6;
    }
    return { h: h, s: s, l: l };
}
function hue2rgb(p, q, t) {
    if (t < 0) {
        t += 1;
    }
    if (t > 1) {
        t -= 1;
    }
    if (t < 1 / 6) {
        return p + (q - p) * (6 * t);
    }
    if (t < 1 / 2) {
        return q;
    }
    if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
    }
    return p;
}
/**
 * Converts an HSL color value to RGB.
 *
 * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
 * *Returns:* { r, g, b } in the set [0, 255]
 */
function hslToRgb(h, s, l) {
    var r;
    var g;
    var b;
    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);
    if (s === 0) {
        // achromatic
        g = l;
        b = l;
        r = l;
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
    }
    return { r: r * 255, g: g * 255, b: b * 255 };
}
/**
 * Converts an RGB color value to HSV
 *
 * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
 * *Returns:* { h, s, v } in [0,1]
 */
function rgbToHsv(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var v = max;
    var d = max - min;
    var s = max === 0 ? 0 : d / max;
    if (max === min) {
        h = 0; // achromatic
    }
    else {
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
            default:
                break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}
/**
 * Converts an HSV color value to RGB.
 *
 * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
 * *Returns:* { r, g, b } in the set [0, 255]
 */
function hsvToRgb(h, s, v) {
    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);
    var i = Math.floor(h);
    var f = h - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);
    var mod = i % 6;
    var r = [v, q, p, p, t, v][mod];
    var g = [t, v, v, q, p, p][mod];
    var b = [p, p, t, v, v, q][mod];
    return { r: r * 255, g: g * 255, b: b * 255 };
}
/**
 * Converts an RGB color to hex
 *
 * Assumes r, g, and b are contained in the set [0, 255]
 * Returns a 3 or 6 character hex
 */
function rgbToHex(r, g, b, allow3Char) {
    var hex = [
        pad2(Math.round(r).toString(16)),
        pad2(Math.round(g).toString(16)),
        pad2(Math.round(b).toString(16)),
    ];
    // Return a 3 character hex if possible
    if (allow3Char &&
        hex[0].startsWith(hex[0].charAt(1)) &&
        hex[1].startsWith(hex[1].charAt(1)) &&
        hex[2].startsWith(hex[2].charAt(1))) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }
    return hex.join('');
}
/**
 * Converts an RGBA color plus alpha transparency to hex
 *
 * Assumes r, g, b are contained in the set [0, 255] and
 * a in [0, 1]. Returns a 4 or 8 character rgba hex
 */
// eslint-disable-next-line max-params
function rgbaToHex(r, g, b, a, allow4Char) {
    var hex = [
        pad2(Math.round(r).toString(16)),
        pad2(Math.round(g).toString(16)),
        pad2(Math.round(b).toString(16)),
        pad2(convertDecimalToHex(a)),
    ];
    // Return a 4 character hex if possible
    if (allow4Char &&
        hex[0].startsWith(hex[0].charAt(1)) &&
        hex[1].startsWith(hex[1].charAt(1)) &&
        hex[2].startsWith(hex[2].charAt(1)) &&
        hex[3].startsWith(hex[3].charAt(1))) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }
    return hex.join('');
}
/**
 * Converts an RGBA color to an ARGB Hex8 string
 * Rarely used, but required for "toFilter()"
 */
function rgbaToArgbHex(r, g, b, a) {
    var hex = [
        pad2(convertDecimalToHex(a)),
        pad2(Math.round(r).toString(16)),
        pad2(Math.round(g).toString(16)),
        pad2(Math.round(b).toString(16)),
    ];
    return hex.join('');
}
/** Converts a decimal to a hex value */
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
/** Converts a hex value to a decimal */
function convertHexToDecimal(h) {
    return parseIntFromHex(h) / 255;
}
/** Parse a base-16 hex value into a base-10 integer */
function parseIntFromHex(val) {
    return parseInt(val, 16);
}
function numberInputToObject(color) {
    return {
        r: color >> 16,
        g: (color & 0xff00) >> 8,
        b: color & 0xff,
    };
}

// CONCATENATED MODULE: ./node_modules/@ctrl/tinycolor/dist/module/css-color-names.js
// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json
/**
 * @hidden
 */
var names = {
    aliceblue: '#f0f8ff',
    antiquewhite: '#faebd7',
    aqua: '#00ffff',
    aquamarine: '#7fffd4',
    azure: '#f0ffff',
    beige: '#f5f5dc',
    bisque: '#ffe4c4',
    black: '#000000',
    blanchedalmond: '#ffebcd',
    blue: '#0000ff',
    blueviolet: '#8a2be2',
    brown: '#a52a2a',
    burlywood: '#deb887',
    cadetblue: '#5f9ea0',
    chartreuse: '#7fff00',
    chocolate: '#d2691e',
    coral: '#ff7f50',
    cornflowerblue: '#6495ed',
    cornsilk: '#fff8dc',
    crimson: '#dc143c',
    cyan: '#00ffff',
    darkblue: '#00008b',
    darkcyan: '#008b8b',
    darkgoldenrod: '#b8860b',
    darkgray: '#a9a9a9',
    darkgreen: '#006400',
    darkgrey: '#a9a9a9',
    darkkhaki: '#bdb76b',
    darkmagenta: '#8b008b',
    darkolivegreen: '#556b2f',
    darkorange: '#ff8c00',
    darkorchid: '#9932cc',
    darkred: '#8b0000',
    darksalmon: '#e9967a',
    darkseagreen: '#8fbc8f',
    darkslateblue: '#483d8b',
    darkslategray: '#2f4f4f',
    darkslategrey: '#2f4f4f',
    darkturquoise: '#00ced1',
    darkviolet: '#9400d3',
    deeppink: '#ff1493',
    deepskyblue: '#00bfff',
    dimgray: '#696969',
    dimgrey: '#696969',
    dodgerblue: '#1e90ff',
    firebrick: '#b22222',
    floralwhite: '#fffaf0',
    forestgreen: '#228b22',
    fuchsia: '#ff00ff',
    gainsboro: '#dcdcdc',
    ghostwhite: '#f8f8ff',
    goldenrod: '#daa520',
    gold: '#ffd700',
    gray: '#808080',
    green: '#008000',
    greenyellow: '#adff2f',
    grey: '#808080',
    honeydew: '#f0fff0',
    hotpink: '#ff69b4',
    indianred: '#cd5c5c',
    indigo: '#4b0082',
    ivory: '#fffff0',
    khaki: '#f0e68c',
    lavenderblush: '#fff0f5',
    lavender: '#e6e6fa',
    lawngreen: '#7cfc00',
    lemonchiffon: '#fffacd',
    lightblue: '#add8e6',
    lightcoral: '#f08080',
    lightcyan: '#e0ffff',
    lightgoldenrodyellow: '#fafad2',
    lightgray: '#d3d3d3',
    lightgreen: '#90ee90',
    lightgrey: '#d3d3d3',
    lightpink: '#ffb6c1',
    lightsalmon: '#ffa07a',
    lightseagreen: '#20b2aa',
    lightskyblue: '#87cefa',
    lightslategray: '#778899',
    lightslategrey: '#778899',
    lightsteelblue: '#b0c4de',
    lightyellow: '#ffffe0',
    lime: '#00ff00',
    limegreen: '#32cd32',
    linen: '#faf0e6',
    magenta: '#ff00ff',
    maroon: '#800000',
    mediumaquamarine: '#66cdaa',
    mediumblue: '#0000cd',
    mediumorchid: '#ba55d3',
    mediumpurple: '#9370db',
    mediumseagreen: '#3cb371',
    mediumslateblue: '#7b68ee',
    mediumspringgreen: '#00fa9a',
    mediumturquoise: '#48d1cc',
    mediumvioletred: '#c71585',
    midnightblue: '#191970',
    mintcream: '#f5fffa',
    mistyrose: '#ffe4e1',
    moccasin: '#ffe4b5',
    navajowhite: '#ffdead',
    navy: '#000080',
    oldlace: '#fdf5e6',
    olive: '#808000',
    olivedrab: '#6b8e23',
    orange: '#ffa500',
    orangered: '#ff4500',
    orchid: '#da70d6',
    palegoldenrod: '#eee8aa',
    palegreen: '#98fb98',
    paleturquoise: '#afeeee',
    palevioletred: '#db7093',
    papayawhip: '#ffefd5',
    peachpuff: '#ffdab9',
    peru: '#cd853f',
    pink: '#ffc0cb',
    plum: '#dda0dd',
    powderblue: '#b0e0e6',
    purple: '#800080',
    rebeccapurple: '#663399',
    red: '#ff0000',
    rosybrown: '#bc8f8f',
    royalblue: '#4169e1',
    saddlebrown: '#8b4513',
    salmon: '#fa8072',
    sandybrown: '#f4a460',
    seagreen: '#2e8b57',
    seashell: '#fff5ee',
    sienna: '#a0522d',
    silver: '#c0c0c0',
    skyblue: '#87ceeb',
    slateblue: '#6a5acd',
    slategray: '#708090',
    slategrey: '#708090',
    snow: '#fffafa',
    springgreen: '#00ff7f',
    steelblue: '#4682b4',
    tan: '#d2b48c',
    teal: '#008080',
    thistle: '#d8bfd8',
    tomato: '#ff6347',
    turquoise: '#40e0d0',
    violet: '#ee82ee',
    wheat: '#f5deb3',
    white: '#ffffff',
    whitesmoke: '#f5f5f5',
    yellow: '#ffff00',
    yellowgreen: '#9acd32',
};

// CONCATENATED MODULE: ./node_modules/@ctrl/tinycolor/dist/module/format-input.js



/**
 * Given a string or object, convert that input to RGB
 *
 * Possible string inputs:
 * ```
 * "red"
 * "#f00" or "f00"
 * "#ff0000" or "ff0000"
 * "#ff000000" or "ff000000"
 * "rgb 255 0 0" or "rgb (255, 0, 0)"
 * "rgb 1.0 0 0" or "rgb (1, 0, 0)"
 * "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
 * "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
 * "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
 * "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
 * "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
 * ```
 */
function inputToRGB(color) {
    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;
    if (typeof color === 'string') {
        color = stringInputToObject(color);
    }
    if (typeof color === 'object') {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = convertToPercentage(color.s);
            v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s, v);
            ok = true;
            format = 'hsv';
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = convertToPercentage(color.s);
            l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s, l);
            ok = true;
            format = 'hsl';
        }
        if (Object.prototype.hasOwnProperty.call(color, 'a')) {
            a = color.a;
        }
    }
    a = boundAlpha(a);
    return {
        ok: ok,
        format: color.format || format,
        r: Math.min(255, Math.max(rgb.r, 0)),
        g: Math.min(255, Math.max(rgb.g, 0)),
        b: Math.min(255, Math.max(rgb.b, 0)),
        a: a,
    };
}
// <http://www.w3.org/TR/css3-values/#integers>
var CSS_INTEGER = '[-\\+]?\\d+%?';
// <http://www.w3.org/TR/css3-values/#number-value>
var CSS_NUMBER = '[-\\+]?\\d*\\.\\d+%?';
// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
// Actual matching.
// Parentheses and commas are optional, but not required.
// Whitespace can take the place of commas or opening paren
var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var matchers = {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),
    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),
    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),
    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),
    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),
    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
};
/**
 * Permissive string parsing.  Take in a number of formats, and output an object
 * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
 */
function stringInputToObject(color) {
    color = color.trim().toLowerCase();
    if (color.length === 0) {
        return false;
    }
    var named = false;
    if (names[color]) {
        color = names[color];
        named = true;
    }
    else if (color === 'transparent') {
        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };
    }
    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match = matchers.rgb.exec(color);
    if (match) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    match = matchers.rgba.exec(color);
    if (match) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    match = matchers.hsl.exec(color);
    if (match) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    match = matchers.hsla.exec(color);
    if (match) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    match = matchers.hsv.exec(color);
    if (match) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    match = matchers.hsva.exec(color);
    if (match) {
        return { h: match[1], s: match[2], v: match[3], a: match[4] };
    }
    match = matchers.hex8.exec(color);
    if (match) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? 'name' : 'hex8',
        };
    }
    match = matchers.hex6.exec(color);
    if (match) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? 'name' : 'hex',
        };
    }
    match = matchers.hex4.exec(color);
    if (match) {
        return {
            r: parseIntFromHex(match[1] + match[1]),
            g: parseIntFromHex(match[2] + match[2]),
            b: parseIntFromHex(match[3] + match[3]),
            a: convertHexToDecimal(match[4] + match[4]),
            format: named ? 'name' : 'hex8',
        };
    }
    match = matchers.hex3.exec(color);
    if (match) {
        return {
            r: parseIntFromHex(match[1] + match[1]),
            g: parseIntFromHex(match[2] + match[2]),
            b: parseIntFromHex(match[3] + match[3]),
            format: named ? 'name' : 'hex',
        };
    }
    return false;
}
/**
 * Check to see if it looks like a CSS unit
 * (see `matchers` above for definition).
 */
function isValidCSSUnit(color) {
    return Boolean(matchers.CSS_UNIT.exec(String(color)));
}

// CONCATENATED MODULE: ./node_modules/@ctrl/tinycolor/dist/module/index.js




var module_TinyColor = /** @class */ (function () {
    function TinyColor(color, opts) {
        if (color === void 0) { color = ''; }
        if (opts === void 0) { opts = {}; }
        var _a;
        // If input is already a tinycolor, return itself
        if (color instanceof TinyColor) {
            // eslint-disable-next-line no-constructor-return
            return color;
        }
        if (typeof color === 'number') {
            color = numberInputToObject(color);
        }
        this.originalInput = color;
        var rgb = inputToRGB(color);
        this.originalInput = color;
        this.r = rgb.r;
        this.g = rgb.g;
        this.b = rgb.b;
        this.a = rgb.a;
        this.roundA = Math.round(100 * this.a) / 100;
        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;
        this.gradientType = opts.gradientType;
        // Don't let the range of [0,255] come back in [0,1].
        // Potentially lose a little bit of precision here, but will fix issues where
        // .5 gets interpreted as half of the total, instead of half of 1
        // If it was supposed to be 128, this was already taken care of by `inputToRgb`
        if (this.r < 1) {
            this.r = Math.round(this.r);
        }
        if (this.g < 1) {
            this.g = Math.round(this.g);
        }
        if (this.b < 1) {
            this.b = Math.round(this.b);
        }
        this.isValid = rgb.ok;
    }
    TinyColor.prototype.isDark = function () {
        return this.getBrightness() < 128;
    };
    TinyColor.prototype.isLight = function () {
        return !this.isDark();
    };
    /**
     * Returns the perceived brightness of the color, from 0-255.
     */
    TinyColor.prototype.getBrightness = function () {
        // http://www.w3.org/TR/AERT#color-contrast
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    };
    /**
     * Returns the perceived luminance of a color, from 0-1.
     */
    TinyColor.prototype.getLuminance = function () {
        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        var rgb = this.toRgb();
        var R;
        var G;
        var B;
        var RsRGB = rgb.r / 255;
        var GsRGB = rgb.g / 255;
        var BsRGB = rgb.b / 255;
        if (RsRGB <= 0.03928) {
            R = RsRGB / 12.92;
        }
        else {
            // eslint-disable-next-line prefer-exponentiation-operator
            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
        }
        if (GsRGB <= 0.03928) {
            G = GsRGB / 12.92;
        }
        else {
            // eslint-disable-next-line prefer-exponentiation-operator
            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
        }
        if (BsRGB <= 0.03928) {
            B = BsRGB / 12.92;
        }
        else {
            // eslint-disable-next-line prefer-exponentiation-operator
            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
        }
        return 0.2126 * R + 0.7152 * G + 0.0722 * B;
    };
    /**
     * Returns the alpha value of a color, from 0-1.
     */
    TinyColor.prototype.getAlpha = function () {
        return this.a;
    };
    /**
     * Sets the alpha value on the current color.
     *
     * @param alpha - The new alpha value. The accepted range is 0-1.
     */
    TinyColor.prototype.setAlpha = function (alpha) {
        this.a = boundAlpha(alpha);
        this.roundA = Math.round(100 * this.a) / 100;
        return this;
    };
    /**
     * Returns the object as a HSVA object.
     */
    TinyColor.prototype.toHsv = function () {
        var hsv = rgbToHsv(this.r, this.g, this.b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };
    };
    /**
     * Returns the hsva values interpolated into a string with the following format:
     * "hsva(xxx, xxx, xxx, xx)".
     */
    TinyColor.prototype.toHsvString = function () {
        var hsv = rgbToHsv(this.r, this.g, this.b);
        var h = Math.round(hsv.h * 360);
        var s = Math.round(hsv.s * 100);
        var v = Math.round(hsv.v * 100);
        return this.a === 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this.roundA + ")";
    };
    /**
     * Returns the object as a HSLA object.
     */
    TinyColor.prototype.toHsl = function () {
        var hsl = rgbToHsl(this.r, this.g, this.b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };
    };
    /**
     * Returns the hsla values interpolated into a string with the following format:
     * "hsla(xxx, xxx, xxx, xx)".
     */
    TinyColor.prototype.toHslString = function () {
        var hsl = rgbToHsl(this.r, this.g, this.b);
        var h = Math.round(hsl.h * 360);
        var s = Math.round(hsl.s * 100);
        var l = Math.round(hsl.l * 100);
        return this.a === 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this.roundA + ")";
    };
    /**
     * Returns the hex value of the color.
     * @param allow3Char will shorten hex value to 3 char if possible
     */
    TinyColor.prototype.toHex = function (allow3Char) {
        if (allow3Char === void 0) { allow3Char = false; }
        return rgbToHex(this.r, this.g, this.b, allow3Char);
    };
    /**
     * Returns the hex value of the color -with a # appened.
     * @param allow3Char will shorten hex value to 3 char if possible
     */
    TinyColor.prototype.toHexString = function (allow3Char) {
        if (allow3Char === void 0) { allow3Char = false; }
        return '#' + this.toHex(allow3Char);
    };
    /**
     * Returns the hex 8 value of the color.
     * @param allow4Char will shorten hex value to 4 char if possible
     */
    TinyColor.prototype.toHex8 = function (allow4Char) {
        if (allow4Char === void 0) { allow4Char = false; }
        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);
    };
    /**
     * Returns the hex 8 value of the color -with a # appened.
     * @param allow4Char will shorten hex value to 4 char if possible
     */
    TinyColor.prototype.toHex8String = function (allow4Char) {
        if (allow4Char === void 0) { allow4Char = false; }
        return '#' + this.toHex8(allow4Char);
    };
    /**
     * Returns the object as a RGBA object.
     */
    TinyColor.prototype.toRgb = function () {
        return {
            r: Math.round(this.r),
            g: Math.round(this.g),
            b: Math.round(this.b),
            a: this.a,
        };
    };
    /**
     * Returns the RGBA values interpolated into a string with the following format:
     * "RGBA(xxx, xxx, xxx, xx)".
     */
    TinyColor.prototype.toRgbString = function () {
        var r = Math.round(this.r);
        var g = Math.round(this.g);
        var b = Math.round(this.b);
        return this.a === 1 ? "rgb(" + r + ", " + g + ", " + b + ")" : "rgba(" + r + ", " + g + ", " + b + ", " + this.roundA + ")";
    };
    /**
     * Returns the object as a RGBA object.
     */
    TinyColor.prototype.toPercentageRgb = function () {
        var fmt = function (x) { return Math.round(bound01(x, 255) * 100) + "%"; };
        return {
            r: fmt(this.r),
            g: fmt(this.g),
            b: fmt(this.b),
            a: this.a,
        };
    };
    /**
     * Returns the RGBA relative values interpolated into a string
     */
    TinyColor.prototype.toPercentageRgbString = function () {
        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };
        return this.a === 1
            ? "rgb(" + rnd(this.r) + "%, " + rnd(this.g) + "%, " + rnd(this.b) + "%)"
            : "rgba(" + rnd(this.r) + "%, " + rnd(this.g) + "%, " + rnd(this.b) + "%, " + this.roundA + ")";
    };
    /**
     * The 'real' name of the color -if there is one.
     */
    TinyColor.prototype.toName = function () {
        if (this.a === 0) {
            return 'transparent';
        }
        if (this.a < 1) {
            return false;
        }
        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);
        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (hex === value) {
                return key;
            }
        }
        return false;
    };
    TinyColor.prototype.toString = function (format) {
        var formatSet = Boolean(format);
        format = format !== null && format !== void 0 ? format : this.format;
        var formattedString = false;
        var hasAlpha = this.a < 1 && this.a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');
        if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === 'name' && this.a === 0) {
                return this.toName();
            }
            return this.toRgbString();
        }
        if (format === 'rgb') {
            formattedString = this.toRgbString();
        }
        if (format === 'prgb') {
            formattedString = this.toPercentageRgbString();
        }
        if (format === 'hex' || format === 'hex6') {
            formattedString = this.toHexString();
        }
        if (format === 'hex3') {
            formattedString = this.toHexString(true);
        }
        if (format === 'hex4') {
            formattedString = this.toHex8String(true);
        }
        if (format === 'hex8') {
            formattedString = this.toHex8String();
        }
        if (format === 'name') {
            formattedString = this.toName();
        }
        if (format === 'hsl') {
            formattedString = this.toHslString();
        }
        if (format === 'hsv') {
            formattedString = this.toHsvString();
        }
        return formattedString || this.toHexString();
    };
    TinyColor.prototype.toNumber = function () {
        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    };
    TinyColor.prototype.clone = function () {
        return new TinyColor(this.toString());
    };
    /**
     * Lighten the color a given amount. Providing 100 will always return white.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.lighten = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.l += amount / 100;
        hsl.l = clamp01(hsl.l);
        return new TinyColor(hsl);
    };
    /**
     * Brighten the color a given amount, from 0 to 100.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.brighten = function (amount) {
        if (amount === void 0) { amount = 10; }
        var rgb = this.toRgb();
        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
        return new TinyColor(rgb);
    };
    /**
     * Darken the color a given amount, from 0 to 100.
     * Providing 100 will always return black.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.darken = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.l -= amount / 100;
        hsl.l = clamp01(hsl.l);
        return new TinyColor(hsl);
    };
    /**
     * Mix the color with pure white, from 0 to 100.
     * Providing 0 will do nothing, providing 100 will always return white.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.tint = function (amount) {
        if (amount === void 0) { amount = 10; }
        return this.mix('white', amount);
    };
    /**
     * Mix the color with pure black, from 0 to 100.
     * Providing 0 will do nothing, providing 100 will always return black.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.shade = function (amount) {
        if (amount === void 0) { amount = 10; }
        return this.mix('black', amount);
    };
    /**
     * Desaturate the color a given amount, from 0 to 100.
     * Providing 100 will is the same as calling greyscale
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.desaturate = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.s -= amount / 100;
        hsl.s = clamp01(hsl.s);
        return new TinyColor(hsl);
    };
    /**
     * Saturate the color a given amount, from 0 to 100.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.saturate = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.s += amount / 100;
        hsl.s = clamp01(hsl.s);
        return new TinyColor(hsl);
    };
    /**
     * Completely desaturates a color into greyscale.
     * Same as calling `desaturate(100)`
     */
    TinyColor.prototype.greyscale = function () {
        return this.desaturate(100);
    };
    /**
     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
     * Values outside of this range will be wrapped into this range.
     */
    TinyColor.prototype.spin = function (amount) {
        var hsl = this.toHsl();
        var hue = (hsl.h + amount) % 360;
        hsl.h = hue < 0 ? 360 + hue : hue;
        return new TinyColor(hsl);
    };
    /**
     * Mix the current color a given amount with another color, from 0 to 100.
     * 0 means no mixing (return current color).
     */
    TinyColor.prototype.mix = function (color, amount) {
        if (amount === void 0) { amount = 50; }
        var rgb1 = this.toRgb();
        var rgb2 = new TinyColor(color).toRgb();
        var p = amount / 100;
        var rgba = {
            r: (rgb2.r - rgb1.r) * p + rgb1.r,
            g: (rgb2.g - rgb1.g) * p + rgb1.g,
            b: (rgb2.b - rgb1.b) * p + rgb1.b,
            a: (rgb2.a - rgb1.a) * p + rgb1.a,
        };
        return new TinyColor(rgba);
    };
    TinyColor.prototype.analogous = function (results, slices) {
        if (results === void 0) { results = 6; }
        if (slices === void 0) { slices = 30; }
        var hsl = this.toHsl();
        var part = 360 / slices;
        var ret = [this];
        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {
            hsl.h = (hsl.h + part) % 360;
            ret.push(new TinyColor(hsl));
        }
        return ret;
    };
    /**
     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js
     */
    TinyColor.prototype.complement = function () {
        var hsl = this.toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return new TinyColor(hsl);
    };
    TinyColor.prototype.monochromatic = function (results) {
        if (results === void 0) { results = 6; }
        var hsv = this.toHsv();
        var h = hsv.h;
        var s = hsv.s;
        var v = hsv.v;
        var res = [];
        var modification = 1 / results;
        while (results--) {
            res.push(new TinyColor({ h: h, s: s, v: v }));
            v = (v + modification) % 1;
        }
        return res;
    };
    TinyColor.prototype.splitcomplement = function () {
        var hsl = this.toHsl();
        var h = hsl.h;
        return [
            this,
            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),
            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),
        ];
    };
    /**
     * Compute how the color would appear on a background
     */
    TinyColor.prototype.onBackground = function (background) {
        var fg = this.toRgb();
        var bg = new TinyColor(background).toRgb();
        return new TinyColor({
            r: bg.r + (fg.r - bg.r) * fg.a,
            g: bg.g + (fg.g - bg.g) * fg.a,
            b: bg.b + (fg.b - bg.b) * fg.a,
        });
    };
    /**
     * Alias for `polyad(3)`
     */
    TinyColor.prototype.triad = function () {
        return this.polyad(3);
    };
    /**
     * Alias for `polyad(4)`
     */
    TinyColor.prototype.tetrad = function () {
        return this.polyad(4);
    };
    /**
     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)
     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...
     */
    TinyColor.prototype.polyad = function (n) {
        var hsl = this.toHsl();
        var h = hsl.h;
        var result = [this];
        var increment = 360 / n;
        for (var i = 1; i < n; i++) {
            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));
        }
        return result;
    };
    /**
     * compare color vs current color
     */
    TinyColor.prototype.equals = function (color) {
        return this.toRgbString() === new TinyColor(color).toRgbString();
    };
    return TinyColor;
}());

// kept for backwards compatability with v1
function tinycolor(color, opts) {
    if (color === void 0) { color = ''; }
    if (opts === void 0) { opts = {}; }
    return new module_TinyColor(color, opts);
}

// CONCATENATED MODULE: ./node_modules/@ant-design/colors/dist/index.esm.js


var hueStep = 2; // 色相阶梯

var saturationStep = 0.16; // 饱和度阶梯，浅色部分

var saturationStep2 = 0.05; // 饱和度阶梯，深色部分

var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分

var brightnessStep2 = 0.15; // 亮度阶梯，深色部分

var lightColorCount = 5; // 浅色数量，主色上

var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表

var darkColorMap = [{
  index: 7,
  opacity: 0.15
}, {
  index: 6,
  opacity: 0.25
}, {
  index: 5,
  opacity: 0.3
}, {
  index: 5,
  opacity: 0.45
}, {
  index: 5,
  opacity: 0.65
}, {
  index: 5,
  opacity: 0.85
}, {
  index: 4,
  opacity: 0.9
}, {
  index: 3,
  opacity: 0.95
}, {
  index: 2,
  opacity: 0.97
}, {
  index: 1,
  opacity: 0.98
}];

function getHue(hsv, i, light) {
  var hue; // 根据色相不同，色相转向不同

  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
  } else {
    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
  }

  if (hue < 0) {
    hue += 360;
  } else if (hue >= 360) {
    hue -= 360;
  }

  return hue;
}

function getSaturation(hsv, i, light) {
  // grey color don't change saturation
  if (hsv.h === 0 && hsv.s === 0) {
    return hsv.s;
  }

  var saturation;

  if (light) {
    saturation = hsv.s - saturationStep * i;
  } else if (i === darkColorCount) {
    saturation = hsv.s + saturationStep;
  } else {
    saturation = hsv.s + saturationStep2 * i;
  } // 边界值修正


  if (saturation > 1) {
    saturation = 1;
  } // 第一格的 s 限制在 0.06-0.1 之间


  if (light && i === lightColorCount && saturation > 0.1) {
    saturation = 0.1;
  }

  if (saturation < 0.06) {
    saturation = 0.06;
  }

  return Number(saturation.toFixed(2));
}

function index_esm_getValue(hsv, i, light) {
  var value;

  if (light) {
    value = hsv.v + brightnessStep1 * i;
  } else {
    value = hsv.v - brightnessStep2 * i;
  }

  if (value > 1) {
    value = 1;
  }

  return Number(value.toFixed(2));
}

function generate(color) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var patterns = [];
  var pColor = new module_TinyColor(color);

  for (var i = lightColorCount; i > 0; i -= 1) {
    var hsv = pColor.toHsv();
    var colorString = new module_TinyColor({
      h: getHue(hsv, i, true),
      s: getSaturation(hsv, i, true),
      v: index_esm_getValue(hsv, i, true)
    }).toHexString();
    patterns.push(colorString);
  }

  patterns.push(pColor.toHexString());

  for (var _i = 1; _i <= darkColorCount; _i += 1) {
    var _hsv = pColor.toHsv();

    var _colorString = new module_TinyColor({
      h: getHue(_hsv, _i),
      s: getSaturation(_hsv, _i),
      v: index_esm_getValue(_hsv, _i)
    }).toHexString();

    patterns.push(_colorString);
  } // dark theme patterns


  if (opts.theme === 'dark') {
    return darkColorMap.map(function (_ref) {
      var index = _ref.index,
          opacity = _ref.opacity;
      var darkColorString = new module_TinyColor(opts.backgroundColor || '#141414').mix(patterns[index], opacity * 100).toHexString();
      return darkColorString;
    });
  }

  return patterns;
}

var presetPrimaryColors = {
  red: '#F5222D',
  volcano: '#FA541C',
  orange: '#FA8C16',
  gold: '#FAAD14',
  yellow: '#FADB14',
  lime: '#A0D911',
  green: '#52C41A',
  cyan: '#13C2C2',
  blue: '#1890FF',
  geekblue: '#2F54EB',
  purple: '#722ED1',
  magenta: '#EB2F96',
  grey: '#666666'
};
var presetPalettes = {};
var presetDarkPalettes = {};
Object.keys(presetPrimaryColors).forEach(function (key) {
  presetPalettes[key] = generate(presetPrimaryColors[key]);
  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes

  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {
    theme: 'dark',
    backgroundColor: '#141414'
  });
  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];
});
var red = presetPalettes.red;
var volcano = presetPalettes.volcano;
var gold = presetPalettes.gold;
var orange = presetPalettes.orange;
var yellow = presetPalettes.yellow;
var lime = presetPalettes.lime;
var green = presetPalettes.green;
var cyan = presetPalettes.cyan;
var blue = presetPalettes.blue;
var geekblue = presetPalettes.geekblue;
var purple = presetPalettes.purple;
var magenta = presetPalettes.magenta;
var grey = presetPalettes.grey;



// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/insert-css.js
// https://github.com/substack/insert-css
var containers = []; // will store container HTMLElement references

var styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}

var usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';

function createStyleElement() {
  var styleElement = document.createElement('style');
  styleElement.setAttribute('type', 'text/css');
  return styleElement;
} // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types


function insertCss(css, options) {
  options = options || {};

  if (css === undefined) {
    throw new Error(usage);
  }

  var position = options.prepend === true ? 'prepend' : 'append';
  var container = options.container !== undefined ? options.container : document.querySelector('head');
  var containerId = containers.indexOf(container); // first time we see this container, create the necessary entries

  if (containerId === -1) {
    containerId = containers.push(container) - 1;
    styleElements[containerId] = {};
  } // try to get the correponding container + position styleElement, create it otherwise


  var styleElement;

  if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {
    styleElement = styleElements[containerId][position];
  } else {
    styleElement = styleElements[containerId][position] = createStyleElement();

    if (position === 'prepend') {
      container.insertBefore(styleElement, container.childNodes[0]);
    } else {
      container.appendChild(styleElement);
    }
  } // strip potential UTF-8 BOM if css was read from a file


  if (css.charCodeAt(0) === 0xfeff) {
    css = css.substr(1, css.length);
  } // actually add the stylesheet


  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText += css;
  } else {
    styleElement.textContent += css;
  }

  return styleElement;
}

/* harmony default export */ var insert_css = (insertCss);
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/utils.js
function utils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { utils_defineProperty(target, key, source[key]); }); } return target; }

function utils_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function warn(valid, message) {
  // Support uglify
  if (false) {}
}
function utils_warning(valid, message) {
  warn(valid, "[@ant-design/icons-vue] ".concat(message));
} // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types

function isIconDefinition(target) {
  return typeof target === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (typeof target.icon === 'object' || typeof target.icon === 'function');
}
function normalizeAttrs() {
  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return Object.keys(attrs).reduce(function (acc, key) {
    var val = attrs[key];

    switch (key) {
      case 'class':
        acc.className = val;
        delete acc["class"];
        break;

      default:
        acc[key] = val;
    }

    return acc;
  }, {});
}
function utils_generate(node, key, rootProps) {
  if (!rootProps) {
    return Object(external_Vue_["h"])(node.tag, utils_objectSpread({
      key: key
    }, node.attrs), (node.children || []).map(function (child, index) {
      return utils_generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
    }));
  }

  return Object(external_Vue_["h"])(node.tag, utils_objectSpread({
    key: key
  }, rootProps, node.attrs), (node.children || []).map(function (child, index) {
    return utils_generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
  }));
}
function getSecondaryColor(primaryColor) {
  // choose the second color
  return generate(primaryColor)[0];
}
function normalizeTwoToneColors(twoToneColor) {
  if (!twoToneColor) {
    return [];
  }

  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];
} // These props make sure that the SVG behaviours like general text.
// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4

var svgBaseProps = {
  width: '1em',
  height: '1em',
  fill: 'currentColor',
  'aria-hidden': 'true',
  focusable: 'false'
};
var iconStyles = "\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";
var cssInjectedFlag = false;
var utils_useInsertStyles = function useInsertStyles() {
  var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;
  Object(external_Vue_["nextTick"])(function () {
    if (!cssInjectedFlag) {
      if (typeof window !== 'undefined' && window.document && window.document.documentElement) {
        insert_css(styleStr, {
          prepend: true
        });
      }

      cssInjectedFlag = true;
    }
  });
};
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/components/IconBase.js
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function IconBase_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { IconBase_defineProperty(target, key, source[key]); }); } return target; }

function IconBase_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var twoToneColorPalette = {
  primaryColor: '#333',
  secondaryColor: '#E6E6E6',
  calculated: false
};

function setTwoToneColors(_ref) {
  var primaryColor = _ref.primaryColor,
      secondaryColor = _ref.secondaryColor;
  twoToneColorPalette.primaryColor = primaryColor;
  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);
  twoToneColorPalette.calculated = !!secondaryColor;
}

function getTwoToneColors() {
  return IconBase_objectSpread({}, twoToneColorPalette);
}

var IconBase_IconBase = function IconBase(props, context) {
  var _props$context$attrs = IconBase_objectSpread({}, props, context.attrs),
      icon = _props$context$attrs.icon,
      primaryColor = _props$context$attrs.primaryColor,
      secondaryColor = _props$context$attrs.secondaryColor,
      restProps = _objectWithoutProperties(_props$context$attrs, ["icon", "primaryColor", "secondaryColor"]);

  var colors = twoToneColorPalette;

  if (primaryColor) {
    colors = {
      primaryColor: primaryColor,
      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)
    };
  }

  utils_useInsertStyles();
  utils_warning(isIconDefinition(icon), "icon should be icon definiton, but got ".concat(icon));

  if (!isIconDefinition(icon)) {
    return null;
  }

  var target = icon;

  if (target && typeof target.icon === 'function') {
    target = IconBase_objectSpread({}, target, {
      icon: target.icon(colors.primaryColor, colors.secondaryColor)
    });
  }

  return utils_generate(target.icon, "svg-".concat(target.name), IconBase_objectSpread({}, restProps, {
    'data-icon': target.name,
    width: '1em',
    height: '1em',
    fill: 'currentColor',
    'aria-hidden': 'true'
  })); // },
};

IconBase_IconBase.props = {
  icon: Object,
  primaryColor: String,
  secondaryColor: String,
  focusable: String
};
IconBase_IconBase.inheritAttrs = false;
IconBase_IconBase.displayName = 'IconBase';
IconBase_IconBase.getTwoToneColors = getTwoToneColors;
IconBase_IconBase.setTwoToneColors = setTwoToneColors;
/* harmony default export */ var components_IconBase = (IconBase_IconBase);
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/components/twoTonePrimaryColor.js
function twoTonePrimaryColor_slicedToArray(arr, i) { return twoTonePrimaryColor_arrayWithHoles(arr) || twoTonePrimaryColor_iterableToArrayLimit(arr, i) || twoTonePrimaryColor_unsupportedIterableToArray(arr, i) || twoTonePrimaryColor_nonIterableRest(); }

function twoTonePrimaryColor_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function twoTonePrimaryColor_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return twoTonePrimaryColor_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return twoTonePrimaryColor_arrayLikeToArray(o, minLen); }

function twoTonePrimaryColor_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function twoTonePrimaryColor_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function twoTonePrimaryColor_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



function setTwoToneColor(twoToneColor) {
  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),
      _normalizeTwoToneColo2 = twoTonePrimaryColor_slicedToArray(_normalizeTwoToneColo, 2),
      primaryColor = _normalizeTwoToneColo2[0],
      secondaryColor = _normalizeTwoToneColo2[1];

  return components_IconBase.setTwoToneColors({
    primaryColor: primaryColor,
    secondaryColor: secondaryColor
  });
}
function getTwoToneColor() {
  var colors = components_IconBase.getTwoToneColors();

  if (!colors.calculated) {
    return colors.primaryColor;
  }

  return [colors.primaryColor, colors.secondaryColor];
}
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/components/AntdIcon.js


function AntdIcon_slicedToArray(arr, i) { return AntdIcon_arrayWithHoles(arr) || AntdIcon_iterableToArrayLimit(arr, i) || AntdIcon_unsupportedIterableToArray(arr, i) || AntdIcon_nonIterableRest(); }

function AntdIcon_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function AntdIcon_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return AntdIcon_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return AntdIcon_arrayLikeToArray(o, minLen); }

function AntdIcon_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function AntdIcon_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function AntdIcon_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function AntdIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { AntdIcon_defineProperty(target, key, source[key]); }); } return target; }

function AntdIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function AntdIcon_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = AntdIcon_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function AntdIcon_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



 // Initial setting

setTwoToneColor('#1890ff');

var AntdIcon_Icon = function Icon(props, context) {
  var _classObj;

  var _props$context$attrs = AntdIcon_objectSpread({}, props, context.attrs),
      cls = _props$context$attrs["class"],
      icon = _props$context$attrs.icon,
      spin = _props$context$attrs.spin,
      rotate = _props$context$attrs.rotate,
      tabindex = _props$context$attrs.tabindex,
      twoToneColor = _props$context$attrs.twoToneColor,
      onClick = _props$context$attrs.onClick,
      restProps = AntdIcon_objectWithoutProperties(_props$context$attrs, ["class", "icon", "spin", "rotate", "tabindex", "twoToneColor", "onClick"]);

  var classObj = (_classObj = {
    anticon: true
  }, AntdIcon_defineProperty(_classObj, "anticon-".concat(icon.name), Boolean(icon.name)), AntdIcon_defineProperty(_classObj, cls, cls), _classObj);
  var svgClassString = spin === '' || !!spin || icon.name === 'loading' ? 'anticon-spin' : '';
  var iconTabIndex = tabindex;

  if (iconTabIndex === undefined && onClick) {
    iconTabIndex = -1;
    restProps.tabindex = iconTabIndex;
  }

  var svgStyle = rotate ? {
    msTransform: "rotate(".concat(rotate, "deg)"),
    transform: "rotate(".concat(rotate, "deg)")
  } : undefined;

  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),
      _normalizeTwoToneColo2 = AntdIcon_slicedToArray(_normalizeTwoToneColo, 2),
      primaryColor = _normalizeTwoToneColo2[0],
      secondaryColor = _normalizeTwoToneColo2[1];

  return external_Vue_["createVNode"]("span", external_Vue_["mergeProps"](restProps, {
    "role": "img",
    "aria-label": icon.name,
    "onClick": onClick,
    "class": classObj
  }), [external_Vue_["createVNode"](components_IconBase, {
    "class": svgClassString,
    "icon": icon,
    "primaryColor": primaryColor,
    "secondaryColor": secondaryColor,
    "style": svgStyle
  }, null)]);
};

AntdIcon_Icon.props = {
  spin: Boolean,
  rotate: Number,
  icon: Object,
  twoToneColor: String
};
AntdIcon_Icon.displayName = 'AntdIcon';
AntdIcon_Icon.inheritAttrs = false;
AntdIcon_Icon.getTwoToneColor = getTwoToneColor;
AntdIcon_Icon.setTwoToneColor = setTwoToneColor;
/* harmony default export */ var AntdIcon = (AntdIcon_Icon);
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/icons/CloseOutlined.js


function CloseOutlined_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { CloseOutlined_defineProperty(target, key, source[key]); }); } return target; }

function CloseOutlined_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY



var icons_CloseOutlined_CloseOutlined = function CloseOutlined(props, context) {
  var p = CloseOutlined_objectSpread({}, props, context.attrs);

  return external_Vue_["createVNode"](AntdIcon, external_Vue_["mergeProps"](p, {
    "icon": asn_CloseOutlined
  }), null);
};

icons_CloseOutlined_CloseOutlined.displayName = 'CloseOutlined';
icons_CloseOutlined_CloseOutlined.inheritAttrs = false;
/* harmony default export */ var icons_CloseOutlined = (icons_CloseOutlined_CloseOutlined);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-pagination/locale/en_US.js
/* harmony default export */ var en_US = ({
  // Options.jsx
  items_per_page: '/ page',
  jump_to: 'Go to',
  jump_to_confirm: 'confirm',
  page: '',
  // Pagination.jsx
  prev_page: 'Previous Page',
  next_page: 'Next Page',
  prev_5: 'Previous 5 Pages',
  next_5: 'Next 5 Pages',
  prev_3: 'Previous 3 Pages',
  next_3: 'Next 3 Pages'
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-calendar/src/locale/en_US.js
/* harmony default export */ var locale_en_US = ({
  today: 'Today',
  now: 'Now',
  backToToday: 'Back to today',
  ok: 'Ok',
  clear: 'Clear',
  month: 'Month',
  year: 'Year',
  timeSelect: 'select time',
  dateSelect: 'select date',
  weekSelect: 'Choose a week',
  monthSelect: 'Choose a month',
  yearSelect: 'Choose a year',
  decadeSelect: 'Choose a decade',
  yearFormat: 'YYYY',
  dateFormat: 'M/D/YYYY',
  dayFormat: 'D',
  dateTimeFormat: 'M/D/YYYY HH:mm:ss',
  monthBeforeYear: true,
  previousMonth: 'Previous month (PageUp)',
  nextMonth: 'Next month (PageDown)',
  previousYear: 'Last year (Control + left)',
  nextYear: 'Next year (Control + right)',
  previousDecade: 'Last decade',
  nextDecade: 'Next decade',
  previousCentury: 'Last century',
  nextCentury: 'Next century'
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/time-picker/locale/en_US.js
var en_US_locale = {
  placeholder: 'Select time'
};
/* harmony default export */ var time_picker_locale_en_US = (en_US_locale);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/date-picker/locale/en_US.js
function en_US_extends() { en_US_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return en_US_extends.apply(this, arguments); }


 // Merge into a locale object

var locale_en_US_locale = {
  lang: en_US_extends({
    placeholder: 'Select date',
    rangePlaceholder: ['Start date', 'End date']
  }, locale_en_US),
  timePickerLocale: en_US_extends({}, time_picker_locale_en_US)
}; // All settings at:
// https://github.com/vueComponent/ant-design-vue/blob/master/components/date-picker/locale/example.json

/* harmony default export */ var date_picker_locale_en_US = (locale_en_US_locale);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/calendar/locale/en_US.js

/* harmony default export */ var calendar_locale_en_US = (date_picker_locale_en_US);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/locale/default.js



 // import ColorPicker from '../color-picker/locale/en_US';

/* harmony default export */ var locale_default = ({
  locale: 'en',
  Pagination: en_US,
  DatePicker: date_picker_locale_en_US,
  TimePicker: time_picker_locale_en_US,
  Calendar: calendar_locale_en_US,
  // ColorPicker,
  global: {
    placeholder: 'Please select'
  },
  Table: {
    filterTitle: 'Filter menu',
    filterConfirm: 'OK',
    filterReset: 'Reset',
    selectAll: 'Select current page',
    selectInvert: 'Invert current page',
    sortTitle: 'Sort',
    expand: 'Expand row',
    collapse: 'Collapse row'
  },
  Modal: {
    okText: 'OK',
    cancelText: 'Cancel',
    justOkText: 'OK'
  },
  Popconfirm: {
    okText: 'OK',
    cancelText: 'Cancel'
  },
  Transfer: {
    titles: ['', ''],
    searchPlaceholder: 'Search here',
    itemUnit: 'item',
    itemsUnit: 'items'
  },
  Upload: {
    uploading: 'Uploading...',
    removeFile: 'Remove file',
    uploadError: 'Upload error',
    previewFile: 'Preview file',
    downloadFile: 'Download file'
  },
  Empty: {
    description: 'No Data'
  },
  Icon: {
    icon: 'icon'
  },
  Text: {
    edit: 'Edit',
    copy: 'Copy',
    copied: 'Copied',
    expand: 'Expand'
  },
  PageHeader: {
    back: 'Back'
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/locale-provider/default.js

/* harmony default export */ var locale_provider_default = (locale_default);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/locale-provider/LocaleReceiver.js
function LocaleReceiver_extends() { LocaleReceiver_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return LocaleReceiver_extends.apply(this, arguments); }




/* harmony default export */ var LocaleReceiver = (Object(external_Vue_["defineComponent"])({
  name: 'LocaleReceiver',
  props: {
    componentName: vue_types.string,
    defaultLocale: {
      type: [Object, Function]
    },
    children: {
      type: Function
    }
  },
  setup: function setup() {
    return {
      localeData: Object(external_Vue_["inject"])('localeData', {})
    };
  },
  methods: {
    getLocale: function getLocale() {
      var _this$componentName = this.componentName,
          componentName = _this$componentName === void 0 ? 'global' : _this$componentName,
          defaultLocale = this.defaultLocale;
      var locale = defaultLocale || locale_provider_default[componentName || 'global'];
      var antLocale = this.localeData.antLocale;
      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};
      return LocaleReceiver_extends(LocaleReceiver_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});
    },
    getLocaleCode: function getLocaleCode() {
      var antLocale = this.localeData.antLocale;
      var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale

      if (antLocale && antLocale.exist && !localeCode) {
        return locale_provider_default.locale;
      }

      return localeCode;
    }
  },
  render: function render() {
    var $slots = this.$slots;
    var children = this.children || $slots.default;
    var antLocale = this.localeData.antLocale;
    return children === null || children === void 0 ? void 0 : children(this.getLocale(), this.getLocaleCode(), antLocale);
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/empty/empty.js




var empty_Empty = function Empty() {
  var _inject = Object(external_Vue_["inject"])('configProvider', defaultConfigProvider),
      getPrefixCls = _inject.getPrefixCls;

  var prefixCls = getPrefixCls('empty-img-default');
  return Object(external_Vue_["createVNode"])("svg", {
    "class": prefixCls,
    "width": "184",
    "height": "152",
    "viewBox": "0 0 184 152"
  }, [Object(external_Vue_["createVNode"])("g", {
    "fill": "none",
    "fill-rule": "evenodd"
  }, [Object(external_Vue_["createVNode"])("g", {
    "transform": "translate(24 31.67)"
  }, [Object(external_Vue_["createVNode"])("ellipse", {
    "class": "".concat(prefixCls, "-ellipse"),
    "cx": "67.797",
    "cy": "106.89",
    "rx": "67.797",
    "ry": "12.668"
  }, null), Object(external_Vue_["createVNode"])("path", {
    "class": "".concat(prefixCls, "-path-1"),
    "d": "M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z"
  }, null), Object(external_Vue_["createVNode"])("path", {
    "class": "".concat(prefixCls, "-path-2"),
    "d": "M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z",
    "transform": "translate(13.56)"
  }, null), Object(external_Vue_["createVNode"])("path", {
    "class": "".concat(prefixCls, "-path-3"),
    "d": "M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z"
  }, null), Object(external_Vue_["createVNode"])("path", {
    "class": "".concat(prefixCls, "-path-4"),
    "d": "M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z"
  }, null)]), Object(external_Vue_["createVNode"])("path", {
    "class": "".concat(prefixCls, "-path-5"),
    "d": "M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z"
  }, null), Object(external_Vue_["createVNode"])("g", {
    "class": "".concat(prefixCls, "-g"),
    "transform": "translate(149.65 15.383)"
  }, [Object(external_Vue_["createVNode"])("ellipse", {
    "cx": "20.654",
    "cy": "3.167",
    "rx": "2.849",
    "ry": "2.815"
  }, null), Object(external_Vue_["createVNode"])("path", {
    "d": "M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z"
  }, null)])])]);
};

empty_Empty.PRESENTED_IMAGE_DEFAULT = true;
/* harmony default export */ var empty = (empty_Empty);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/empty/simple.js




var simple_Simple = function Simple() {
  var _inject = Object(external_Vue_["inject"])('configProvider', defaultConfigProvider),
      getPrefixCls = _inject.getPrefixCls;

  var prefixCls = getPrefixCls('empty-img-simple');
  return Object(external_Vue_["createVNode"])("svg", {
    "class": prefixCls,
    "width": "64",
    "height": "41",
    "viewBox": "0 0 64 41"
  }, [Object(external_Vue_["createVNode"])("g", {
    "transform": "translate(0 1)",
    "fill": "none",
    "fill-rule": "evenodd"
  }, [Object(external_Vue_["createVNode"])("ellipse", {
    "class": "".concat(prefixCls, "-ellipse"),
    "fill": "#F5F5F5",
    "cx": "32",
    "cy": "33",
    "rx": "32",
    "ry": "7"
  }, null), Object(external_Vue_["createVNode"])("g", {
    "class": "".concat(prefixCls, "-g"),
    "fill-rule": "nonzero",
    "stroke": "#D9D9D9"
  }, [Object(external_Vue_["createVNode"])("path", {
    "d": "M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
  }, null), Object(external_Vue_["createVNode"])("path", {
    "d": "M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z",
    "fill": "#FAFAFA",
    "class": "".concat(prefixCls, "-path")
  }, null)])])]);
};

simple_Simple.PRESENTED_IMAGE_SIMPLE = true;
/* harmony default export */ var empty_simple = (simple_Simple);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/type.js
// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead
var tuple = function tuple() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return args;
};
var tupleNum = function tupleNum() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return args;
};
var withInstall = function withInstall(comp) {
  var c = comp;

  c.install = function (app) {
    app.component(c.displayName || c.name, comp);
  };

  return comp;
};
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/empty/index.js


function empty_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function empty_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { empty_ownKeys(Object(source), true).forEach(function (key) { empty_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { empty_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function empty_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function empty_extends() { empty_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return empty_extends.apply(this, arguments); }

var empty_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};











var defaultEmptyImg = Object(external_Vue_["createVNode"])(empty, null, null);

var simpleEmptyImg = Object(external_Vue_["createVNode"])(empty_simple, null, null);

var es_empty_Empty = function Empty(props, _ref) {
  var _ref$slots = _ref.slots,
      slots = _ref$slots === void 0 ? {} : _ref$slots,
      attrs = _ref.attrs;

  var _a;

  var configProvider = Object(external_Vue_["inject"])('configProvider', defaultConfigProvider);
  var getPrefixCls = configProvider.getPrefixCls,
      direction = configProvider.direction;

  var _b = empty_extends(empty_extends({}, props), attrs),
      customizePrefixCls = _b.prefixCls,
      _b$image = _b.image,
      image = _b$image === void 0 ? defaultEmptyImg : _b$image,
      _b$description = _b.description,
      description = _b$description === void 0 ? ((_a = slots.description) === null || _a === void 0 ? void 0 : _a.call(slots)) || undefined : _b$description,
      imageStyle = _b.imageStyle,
      _b$class = _b.class,
      className = _b$class === void 0 ? '' : _b$class,
      restProps = empty_rest(_b, ["prefixCls", "image", "description", "imageStyle", "class"]);

  return Object(external_Vue_["createVNode"])(LocaleReceiver, {
    "componentName": "Empty",
    "children": function children(locale) {
      var _classNames;

      var prefixCls = getPrefixCls('empty', customizePrefixCls);
      var des = typeof description !== 'undefined' ? description : locale.description;
      var alt = typeof des === 'string' ? des : 'empty';
      var imageNode = null;

      if (typeof image === 'string') {
        imageNode = Object(external_Vue_["createVNode"])("img", {
          "alt": alt,
          "src": image
        }, null);
      } else {
        imageNode = image;
      }

      return Object(external_Vue_["createVNode"])("div", empty_objectSpread({
        "class": _util_classNames(prefixCls, className, (_classNames = {}, empty_defineProperty(_classNames, "".concat(prefixCls, "-normal"), image === simpleEmptyImg), empty_defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === 'rtl'), _classNames))
      }, restProps), [Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-image"),
        "style": imageStyle
      }, [imageNode]), des && Object(external_Vue_["createVNode"])("p", {
        "class": "".concat(prefixCls, "-description")
      }, [des]), slots.default && Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-footer")
      }, [props_util_filterEmpty(slots.default())])]);
    }
  }, null);
};

es_empty_Empty.displayName = 'AEmpty';
es_empty_Empty.PRESENTED_IMAGE_DEFAULT = defaultEmptyImg;
es_empty_Empty.PRESENTED_IMAGE_SIMPLE = simpleEmptyImg;
es_empty_Empty.inheritAttrs = false;
es_empty_Empty.props = {
  prefixCls: vue_types.string,
  image: vue_types.any,
  description: vue_types.any,
  imageStyle: vue_types.object
};
/* harmony default export */ var es_empty = (withInstall(es_empty_Empty));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/config-provider/renderEmpty.js





var renderEmpty_RenderEmpty = function RenderEmpty(props) {
  var configProvider = Object(external_Vue_["inject"])('configProvider', defaultConfigProvider);

  var renderHtml = function renderHtml(componentName) {
    var getPrefixCls = configProvider.getPrefixCls;
    var prefix = getPrefixCls('empty');

    switch (componentName) {
      case 'Table':
      case 'List':
        return Object(external_Vue_["createVNode"])(es_empty, {
          "image": es_empty.PRESENTED_IMAGE_SIMPLE
        }, null);

      case 'Select':
      case 'TreeSelect':
      case 'Cascader':
      case 'Transfer':
      case 'Mentions':
        return Object(external_Vue_["createVNode"])(es_empty, {
          "image": es_empty.PRESENTED_IMAGE_SIMPLE,
          "class": "".concat(prefix, "-small")
        }, null);

      default:
        return Object(external_Vue_["createVNode"])(es_empty, null, null);
    }
  };

  return renderHtml(props.componentName);
};

function renderEmpty_renderEmpty(componentName) {
  return Object(external_Vue_["createVNode"])(renderEmpty_RenderEmpty, {
    "componentName": componentName
  }, null);
}

/* harmony default export */ var config_provider_renderEmpty = (renderEmpty_renderEmpty);
// EXTERNAL MODULE: external "moment"
var external_moment_ = __webpack_require__("c32d");
var external_moment_default = /*#__PURE__*/__webpack_require__.n(external_moment_);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/interopDefault.js
// https://github.com/moment/moment/issues/3650
function interopDefault(m) {
  return m.default || m;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/modal/locale.js
function locale_extends() { locale_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return locale_extends.apply(this, arguments); }



var runtimeLocale = locale_extends({}, locale_default.Modal);

function changeConfirmLocale(newLocale) {
  if (newLocale) {
    runtimeLocale = locale_extends(locale_extends({}, runtimeLocale), newLocale);
  } else {
    runtimeLocale = locale_extends({}, locale_default.Modal);
  }
}
function getConfirmLocale() {
  return runtimeLocale;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/locale-provider/index.js
function locale_provider_extends() { locale_provider_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return locale_provider_extends.apply(this, arguments); }









var ANT_MARK = 'internalMark';

function setMomentLocale(locale) {
  if (locale && locale.locale) {
    interopDefault(external_moment_default.a).locale(locale.locale);
  } else {
    interopDefault(external_moment_default.a).locale('en');
  }
}

var LocaleProvider = Object(external_Vue_["defineComponent"])({
  name: 'ALocaleProvider',
  props: {
    locale: {
      type: Object
    },
    ANT_MARK__: vue_types.string
  },
  setup: function setup(props) {
    _util_warning(props.ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead');
    var state = Object(external_Vue_["reactive"])({
      antLocale: locale_provider_extends(locale_provider_extends({}, props.locale), {
        exist: true
      }),
      ANT_MARK__: ANT_MARK
    });
    Object(external_Vue_["provide"])('localeData', state);
    return {
      state: state
    };
  },
  watch: {
    locale: function locale(val) {
      this.state.antLocale = locale_provider_extends(locale_provider_extends({}, val), {
        exist: true
      });
      setMomentLocale(val);
      changeConfirmLocale(val && val.Modal);
    }
  },
  created: function created() {
    var locale = this.locale;
    setMomentLocale(locale);
    changeConfirmLocale(locale && locale.Modal);
  },
  beforeUnmount: function beforeUnmount() {
    changeConfirmLocale();
  },
  render: function render() {
    return props_util_getSlot(this);
  }
});
/* istanbul ignore next */

LocaleProvider.install = function (app) {
  app.component(LocaleProvider.name, LocaleProvider);
  return app;
};

/* harmony default export */ var locale_provider = (withInstall(LocaleProvider));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/config-provider/index.js


function config_provider_extends() { config_provider_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return config_provider_extends.apply(this, arguments); }







var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader'];
var ConfigProvider = Object(external_Vue_["defineComponent"])({
  name: 'AConfigProvider',
  props: {
    getTargetContainer: {
      type: Function
    },
    getPopupContainer: {
      type: Function
    },
    prefixCls: String,
    getPrefixCls: {
      type: Function
    },
    renderEmpty: {
      type: Function
    },
    transformCellText: {
      type: Function
    },
    csp: {
      type: Object
    },
    autoInsertSpaceInButton: vue_types.looseBool,
    locale: {
      type: Object
    },
    pageHeader: {
      type: Object
    },
    componentSize: {
      type: Object
    },
    direction: {
      type: String
    },
    space: {
      type: [String, Number]
    },
    virtual: vue_types.looseBool,
    dropdownMatchSelectWidth: vue_types.looseBool
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots;

    var getPrefixCls = function getPrefixCls(suffixCls, customizePrefixCls) {
      var _props$prefixCls = props.prefixCls,
          prefixCls = _props$prefixCls === void 0 ? 'ant' : _props$prefixCls;
      if (customizePrefixCls) return customizePrefixCls;
      return suffixCls ? "".concat(prefixCls, "-").concat(suffixCls) : prefixCls;
    };

    var renderEmptyComponent = function renderEmptyComponent(name) {
      var renderEmpty = props.renderEmpty || slots.renderEmpty || config_provider_renderEmpty;
      return renderEmpty(name);
    };

    var getPrefixClsWrapper = function getPrefixClsWrapper(suffixCls, customizePrefixCls) {
      var prefixCls = props.prefixCls;
      if (customizePrefixCls) return customizePrefixCls;
      var mergedPrefixCls = prefixCls || getPrefixCls('');
      return suffixCls ? "".concat(mergedPrefixCls, "-").concat(suffixCls) : mergedPrefixCls;
    };

    var configProvider = Object(external_Vue_["reactive"])(config_provider_extends(config_provider_extends({}, props), {
      getPrefixCls: getPrefixClsWrapper,
      renderEmpty: renderEmptyComponent
    }));
    Object(external_Vue_["watch"])(props, function () {
      config_provider_extends(configProvider, props);
    });
    Object(external_Vue_["provide"])('configProvider', configProvider);

    var renderProvider = function renderProvider(legacyLocale) {
      var _a;

      return Object(external_Vue_["createVNode"])(locale_provider, {
        "locale": props.locale || legacyLocale,
        "ANT_MARK__": ANT_MARK
      }, {
        default: function _default() {
          return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
        }
      });
    };

    return function () {
      return Object(external_Vue_["createVNode"])(LocaleReceiver, {
        "children": function children(_, __, legacyLocale) {
          return renderProvider(legacyLocale);
        }
      }, null);
    };
  }
});
var defaultConfigProvider = {
  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {
    if (customizePrefixCls) return customizePrefixCls;
    return "ant-".concat(suffixCls);
  },
  renderEmpty: config_provider_renderEmpty
};
/* harmony default export */ var config_provider = (withInstall(ConfigProvider));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/drawer/index.js


function drawer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function drawer_extends() { drawer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return drawer_extends.apply(this, arguments); }

var drawer_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};












function drawer_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var PlacementTypes = tuple('top', 'right', 'bottom', 'left');
var drawer_Drawer = Object(external_Vue_["defineComponent"])({
  name: 'ADrawer',
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    closable: vue_types.looseBool.def(true),
    destroyOnClose: vue_types.looseBool,
    getContainer: vue_types.any,
    maskClosable: vue_types.looseBool.def(true),
    mask: vue_types.looseBool.def(true),
    maskStyle: vue_types.object,
    wrapStyle: vue_types.object,
    bodyStyle: vue_types.object,
    headerStyle: vue_types.object,
    drawerStyle: vue_types.object,
    title: vue_types.VNodeChild,
    visible: vue_types.looseBool,
    width: vue_types.oneOfType([vue_types.string, vue_types.number]).def(256),
    height: vue_types.oneOfType([vue_types.string, vue_types.number]).def(256),
    zIndex: vue_types.number,
    prefixCls: vue_types.string,
    placement: vue_types.oneOf(PlacementTypes).def('right'),
    level: vue_types.any.def(null),
    wrapClassName: vue_types.string,
    handle: vue_types.VNodeChild,
    afterVisibleChange: vue_types.func,
    keyboard: vue_types.looseBool.def(true),
    onClose: vue_types.func,
    'onUpdate:visible': vue_types.func
  },
  setup: function setup(props) {
    var configProvider = Object(external_Vue_["inject"])('configProvider', defaultConfigProvider);
    return {
      configProvider: configProvider,
      destroyClose: false,
      preVisible: props.visible,
      parentDrawer: Object(external_Vue_["inject"])('parentDrawer', null)
    };
  },
  data: function data() {
    return {
      sPush: false
    };
  },
  beforeCreate: function beforeCreate() {
    Object(external_Vue_["provide"])('parentDrawer', this);
  },
  mounted: function mounted() {
    // fix: delete drawer in child and re-render, no push started.
    // <Drawer>{show && <Drawer />}</Drawer>
    var visible = this.visible;

    if (visible && this.parentDrawer) {
      this.parentDrawer.push();
    }
  },
  updated: function updated() {
    var _this = this;

    Object(external_Vue_["nextTick"])(function () {
      if (_this.preVisible !== _this.visible && _this.parentDrawer) {
        if (_this.visible) {
          _this.parentDrawer.push();
        } else {
          _this.parentDrawer.pull();
        }
      }

      _this.preVisible = _this.visible;
    });
  },
  beforeUnmount: function beforeUnmount() {
    // unmount drawer in child, clear push.
    if (this.parentDrawer) {
      this.parentDrawer.pull();
    }
  },
  methods: {
    domFocus: function domFocus() {
      if (this.$refs.vcDrawer) {
        this.$refs.vcDrawer.domFocus();
      }
    },
    close: function close(e) {
      this.$emit('update:visible', false);
      this.$emit('close', e);
    },
    // onMaskClick(e) {
    //   if (!this.maskClosable) {
    //     return;
    //   }
    //   this.close(e);
    // },
    push: function push() {
      this.setState({
        sPush: true
      });
    },
    pull: function pull() {
      var _this2 = this;

      this.setState({
        sPush: false
      }, function () {
        _this2.domFocus();
      });
    },
    onDestroyTransitionEnd: function onDestroyTransitionEnd() {
      var isDestroyOnClose = this.getDestroyOnClose();

      if (!isDestroyOnClose) {
        return;
      }

      if (!this.visible) {
        this.destroyClose = true;
        this.$forceUpdate();
      }
    },
    getDestroyOnClose: function getDestroyOnClose() {
      return this.destroyOnClose && !this.visible;
    },
    // get drawar push width or height
    getPushTransform: function getPushTransform(placement) {
      if (placement === 'left' || placement === 'right') {
        return "translateX(".concat(placement === 'left' ? 180 : -180, "px)");
      }

      if (placement === 'top' || placement === 'bottom') {
        return "translateY(".concat(placement === 'top' ? 180 : -180, "px)");
      }
    },
    getRcDrawerStyle: function getRcDrawerStyle() {
      var _this$$props = this.$props,
          zIndex = _this$$props.zIndex,
          placement = _this$$props.placement,
          wrapStyle = _this$$props.wrapStyle;
      var push = this.$data.sPush;
      return drawer_extends({
        zIndex: zIndex,
        transform: push ? this.getPushTransform(placement) : undefined
      }, wrapStyle);
    },
    renderHeader: function renderHeader(prefixCls) {
      var _this$$props2 = this.$props,
          closable = _this$$props2.closable,
          headerStyle = _this$$props2.headerStyle;
      var title = props_util_getComponent(this, 'title');

      if (!title && !closable) {
        return null;
      }

      var headerClassName = title ? "".concat(prefixCls, "-header") : "".concat(prefixCls, "-header-no-title");
      return Object(external_Vue_["createVNode"])("div", {
        "class": headerClassName,
        "style": headerStyle
      }, [title && Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-title")
      }, [title]), closable ? this.renderCloseIcon(prefixCls) : null]);
    },
    renderCloseIcon: function renderCloseIcon(prefixCls) {
      var closable = this.closable;
      return closable && Object(external_Vue_["createVNode"])("button", {
        "key": "closer",
        "onClick": this.close,
        "aria-label": "Close",
        "class": "".concat(prefixCls, "-close")
      }, [Object(external_Vue_["createVNode"])(icons_CloseOutlined, null, null)]);
    },
    // render drawer body dom
    renderBody: function renderBody(prefixCls) {
      var _a, _b;

      if (this.destroyClose && !this.visible) {
        return null;
      }

      this.destroyClose = false;
      var _this$$props3 = this.$props,
          bodyStyle = _this$$props3.bodyStyle,
          drawerStyle = _this$$props3.drawerStyle;
      var containerStyle = {};
      var isDestroyOnClose = this.getDestroyOnClose();

      if (isDestroyOnClose) {
        // Increase the opacity transition, delete children after closing.
        containerStyle.opacity = 0;
        containerStyle.transition = 'opacity .3s';
      }

      return Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-wrapper-body"),
        "style": drawer_extends(drawer_extends({}, containerStyle), drawerStyle),
        "onTransitionend": this.onDestroyTransitionEnd
      }, [this.renderHeader(prefixCls), Object(external_Vue_["createVNode"])("div", {
        "key": "body",
        "class": "".concat(prefixCls, "-body"),
        "style": bodyStyle
      }, [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)])]);
    }
  },
  render: function render() {
    var _slot;

    var _classnames;

    var props = props_util_getOptionProps(this);

    var customizePrefixCls = props.prefixCls,
        width = props.width,
        height = props.height,
        visible = props.visible,
        placement = props.placement,
        wrapClassName = props.wrapClassName,
        mask = props.mask,
        rest = drawer_rest(props, ["prefixCls", "width", "height", "visible", "placement", "wrapClassName", "mask"]);

    var haveMask = mask ? '' : 'no-mask';
    var offsetStyle = {};

    if (placement === 'left' || placement === 'right') {
      offsetStyle.width = typeof width === 'number' ? "".concat(width, "px") : width;
    } else {
      offsetStyle.height = typeof height === 'number' ? "".concat(height, "px") : height;
    }

    var handler = props_util_getComponent(this, 'handle') || false;
    var getPrefixCls = this.configProvider.getPrefixCls;
    var prefixCls = getPrefixCls('drawer', customizePrefixCls);
    var className = this.$attrs.class;

    var vcDrawerProps = drawer_extends(drawer_extends(drawer_extends(drawer_extends(drawer_extends({}, this.$attrs), es(rest, ['closable', 'destroyOnClose', 'drawerStyle', 'headerStyle', 'bodyStyle', 'title', 'push', 'visible', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'pageHeader', 'autoInsertSpaceInButton'])), {
      onClose: this.close,
      handler: handler
    }), offsetStyle), {
      prefixCls: prefixCls,
      open: visible,
      showMask: mask,
      placement: placement,
      class: _util_classNames((_classnames = {}, drawer_defineProperty(_classnames, className, !!className), drawer_defineProperty(_classnames, wrapClassName, !!wrapClassName), drawer_defineProperty(_classnames, haveMask, !!haveMask), _classnames)),
      wrapStyle: this.getRcDrawerStyle(),
      ref: 'vcDrawer'
    });

    return Object(external_Vue_["createVNode"])(vc_drawer_src, vcDrawerProps, drawer_isSlot(_slot = this.renderBody(prefixCls)) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var drawer = (withInstall(drawer_Drawer));
// CONCATENATED MODULE: ./src/packages/mixins/simple-form-component.tsx

var simpleFormComponentProps = {
  size: {
    type: String
  },
  required: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean
  },
  readOnly: {
    type: Boolean
  },
  error: {
    type: Boolean,
    default: false
  },
  errorMessage: {
    type: String
  },
  errorDisplayType: {
    type: String
  }
};
var simple_form_component_useSimpleFormComponent = function useSimpleFormComponent(props) {
  var form = Object(external_Vue_["inject"])('list');
  var isDisabled = Object(external_Vue_["computed"])(function () {
    var disabled = props.disabled;

    if (form && !disabled) {
      disabled = form.disabled;
    }

    return disabled;
  });
  var componentSize = Object(external_Vue_["computed"])(function () {
    var size = props.size;

    if (form && (size === undefined || size === null)) {
      size = form.size;
    }

    return size;
  });
  var isReadonly = Object(external_Vue_["computed"])(function () {
    var readOnly = props.readOnly;

    if (form && !readOnly) {
      readOnly = !form.editable;
    }

    return readOnly;
  });
  return {
    isDisabled: isDisabled,
    componentSize: componentSize,
    isReadonly: isReadonly
  };
};
// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function tslib_es6_rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/isFunction.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction_isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/config.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config_config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/hostReportError.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; });
}
//# sourceMappingURL=hostReportError.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/Observer.js
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var Observer_empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (config_config.useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            hostReportError(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/isArray.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray_isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArray.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/isObject.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject_isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function UnsubscriptionErrorImpl(errors) {
    Error.call(this);
    this.message = errors ?
        errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
    this.name = 'UnsubscriptionError';
    this.errors = errors;
    return this;
}
UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/Subscription.js
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription_Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parent = null;
        this._parents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parent = null;
        this._parents = null;
        this._subscriptions = null;
        var index = -1;
        var len = _parents ? _parents.length : 0;
        while (_parent) {
            _parent.remove(this);
            _parent = ++index < len && _parents[index] || null;
        }
        if (isFunction_isFunction(_unsubscribe)) {
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                hasErrors = true;
                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (isArray_isArray(_subscriptions)) {
            index = -1;
            len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_isObject(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        hasErrors = true;
                        errors = errors || [];
                        if (e instanceof UnsubscriptionError) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError(errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                if (!teardown) {
                    return Subscription.EMPTY;
                }
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        if (subscription._addParent(this)) {
            var subscriptions = this._subscriptions;
            if (subscriptions) {
                subscriptions.push(subscription);
            }
            else {
                this._subscriptions = [subscription];
            }
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.prototype._addParent = function (parent) {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        if (_parent === parent) {
            return false;
        }
        else if (!_parent) {
            this._parent = parent;
            return true;
        }
        else if (!_parents) {
            this._parents = [parent];
            return true;
        }
        else if (_parents.indexOf(parent) === -1) {
            _parents.push(parent);
            return true;
        }
        return false;
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = typeof Symbol === 'function'
    ? /*@__PURE__*/ Symbol('rxSubscriber')
    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/Subscriber.js
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber_Subscriber = /*@__PURE__*/ (function (_super) {
    __extends(Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = Observer_empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = Observer_empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new Subscriber_SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new Subscriber_SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[rxSubscriber] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        this._parent = null;
        this._parents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parent = _parent;
        this._parents = _parents;
        return this;
    };
    return Subscriber;
}(Subscription_Subscription));

var Subscriber_SafeSubscriber = /*@__PURE__*/ (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (isFunction_isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== Observer_empty) {
                context = Object.create(observerOrNext);
                if (isFunction_isFunction(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!config_config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = config_config.useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                hostReportError(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    hostReportError(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!config_config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (config_config.useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                hostReportError(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!config_config.useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (config_config.useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                hostReportError(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber_Subscriber));

//# sourceMappingURL=Subscriber.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/canReportError.js
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof Subscriber_Subscriber) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/toSubscriber.js
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_Subscriber) {
            return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber]) {
            return nextOrObserver[rxSubscriber]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new Subscriber_Subscriber(Observer_empty);
    }
    return new Subscriber_Subscriber(nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/symbol/observable.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable_observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';
//# sourceMappingURL=observable.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/noop.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop_noop() { }
//# sourceMappingURL=noop.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/pipe.js
/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (!fns) {
        return noop_noop;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/Observable.js
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable_Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (config_config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (config_config.useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (config_config.useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (canReportError(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[observable_observable] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return pipeFromArray(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = config_config.Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function ObjectUnsubscribedErrorImpl() {
    Error.call(this);
    this.message = 'object unsubscribed';
    this.name = 'ObjectUnsubscribedError';
    return this;
}
ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/SubjectSubscription.js
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription_SubjectSubscription = /*@__PURE__*/ (function (_super) {
    __extends(SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(Subscription_Subscription));

//# sourceMappingURL=SubjectSubscription.js.map

// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/internal/Subject.js
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var Subject_SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    __extends(SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(Subscriber_Subscriber));

var Subject_Subject = /*@__PURE__*/ (function (_super) {
    __extends(Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[rxSubscriber] = function () {
        return new Subject_SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new Subject_AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new ObjectUnsubscribedError();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new ObjectUnsubscribedError();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new ObjectUnsubscribedError();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return Subscription_Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new SubjectSubscription_SubjectSubscription(this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new Observable_Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new Subject_AnonymousSubject(destination, source);
    };
    return Subject;
}(Observable_Observable));

var Subject_AnonymousSubject = /*@__PURE__*/ (function (_super) {
    __extends(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return Subscription_Subscription.EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject_Subject));

//# sourceMappingURL=Subject.js.map

// CONCATENATED MODULE: ./src/packages/mixins/emitter.ts
function emitter_toConsumableArray(arr) { return emitter_arrayWithoutHoles(arr) || emitter_iterableToArray(arr) || emitter_unsupportedIterableToArray(arr) || emitter_nonIterableSpread(); }

function emitter_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function emitter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return emitter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return emitter_arrayLikeToArray(o, minLen); }

function emitter_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function emitter_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return emitter_arrayLikeToArray(arr); }

function emitter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var emitter_useEmitter = function useEmitter(instance) {
  var emitter = Object(external_Vue_["inject"])('emitter', null);

  if (emitter) {
    return emitter;
  } else {
    var subscribes = {};
    var _emitter = {
      subscribe: function subscribe(event, callback) {
        if (!subscribes[event]) {
          subscribes[event] = new Subject_Subject();
        }

        subscribes[event].subscribe({
          next: function next(value) {
            var parent = value.instance;

            while (parent !== undefined && parent !== null && parent.uid !== instance.uid) {
              parent = parent.parent;
            }

            callback.apply(void 0, emitter_toConsumableArray(value.params));
          }
        });
      },
      dispatch: function dispatch(component, eventName, params) {
        if (subscribes[eventName]) {
          subscribes[eventName].next({
            component: component,
            params: params,
            instance: instance
          });
        }
      }
    };
    Object(external_Vue_["provide"])('emitter', _emitter);
    return _emitter;
  }
};
// CONCATENATED MODULE: ./src/packages/mixins/pure-input-component.tsx
var pure_input_component_this = undefined;

function pure_input_component_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { pure_input_component_typeof = function _typeof(obj) { return typeof obj; }; } else { pure_input_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return pure_input_component_typeof(obj); }



var pure_input_component_usePureInputComponent = function usePureInputComponent(props, _ref) {
  var emit = _ref.emit,
      attrs = _ref.attrs;
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    defaultValue: undefined,
    propName: 'value'
  };
  var convertValue = Object(external_Vue_["ref"])(function (value) {
    return value;
  });
  var defaultValue = Object(external_Vue_["computed"])(function () {
    var convertedValue = convertValue.value(props[options.propName]);

    if (convertedValue !== null && convertedValue !== undefined) {
      return convertedValue;
    } else {
      return options === null || options === void 0 ? void 0 : options.defaultValue;
    }
  });
  var stateValue = Object(external_Vue_["ref"])(defaultValue.value);
  var instance = Object(external_Vue_["getCurrentInstance"])();

  var _useEmitter = emitter_useEmitter(instance),
      dispatch = _useEmitter.dispatch;

  Object(external_Vue_["watch"])(function () {
    return stateValue.value;
  }, function (value) {
    if (Array.isArray(value) && pure_input_component_typeof(value[0]) === 'object') {
      console.log('invalid');
    }

    var val = convertValueBack(value);

    if (props[options.propName] !== undefined) {
      emit("update:".concat(options.propName), val);
    }

    emit('change', val);
    dispatch('DFormItem', 'd.form.change', [val]);
  });
  Object(external_Vue_["watch"])(function () {
    return props[options.propName];
  }, function (value) {
    var convertedValue = convertValue.value(value);

    if (stateValue.value !== convertedValue) {
      stateValue.value = convertedValue;
    }
  });
  var cssStyle = Object(external_Vue_["computed"])(function () {
    var style = {};

    if (props.block) {
      style.display = 'block';
    }

    if (props.width) {
      if (typeof props.width === 'number') {
        style.width = "".concat(props.width, "px");
      } else {
        style.width = props.width;
      }
    }

    return style;
  });
  var listeners = Object(external_Vue_["computed"])(function () {
    var listeners = {
      onInput: onInput,
      onBlur: handleBlur,
      onChange: handleChange,
      onKeydown: handleKeydown,
      onKeyup: handleKeyup
    };
    Object.keys(attrs).forEach(function (key) {
      if (key in listeners) {
        listeners[key] = attrs[key];
      }
    });
    return listeners;
  });
  var slots = Object(external_Vue_["computed"])(function () {
    return Object.assign({}, slots, getSlots());
  });

  var getSlots = function getSlots() {
    return {};
  };

  var convertValueBack = function convertValueBack(value) {
    return value;
  };

  var getInputComponent = function getInputComponent() {
    return {};
  };

  var getProps = function getProps() {
    return {};
  };

  var getSlotProps = function getSlotProps() {
    var props = {};
    Object.keys(slots).forEach(function (slotKey) {
      if (slotKey !== 'default') {
        props[slotKey] = slots[slotKey];
      }
    });
    return props;
  };

  var handleBlur = function handleBlur() {
    dispatch('DFormItem', 'd.form.blur', [stateValue.value]);
  };

  var handleChange = function handleChange(value) {
    if (value !== null && value !== undefined && value.toString() === '[object InputEvent]') {
      return;
    }

    var comp = getInputComponent();

    if (comp.model && comp.model.prop === 'value' && comp.model.event === 'change') {
      stateValue.value = value;
    }
  };

  var handleKeydown = function handleKeydown() {
    emit('keydown');
  };

  var handleKeyup = function handleKeyup() {
    emit('keyup');
  };

  var onInput = function onInput(value) {
    var val = value;

    if (value && value.toString() === '[object InputEvent]') {
      val = value.target.value;
    }

    emit("update:".concat(options.propName), val);

    if (props[options.propName] === undefined) {
      stateValue.value = val;
    }
  };

  var getDefaultSlot = function getDefaultSlot() {
    var _a;

    return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
  };

  Object(external_Vue_["onMounted"])(function () {
    dispatch('DFormItem', 'd.form-item.setControl', [pure_input_component_this]);
  });
  Object(external_Vue_["onBeforeUnmount"])(function () {
    dispatch('DFormItem', 'd.form-item.setControl', [null]);
  });
  return {
    getInputComponent: getInputComponent,
    listeners: listeners,
    cssStyle: cssStyle,
    stateValue: stateValue,
    getDefaultSlot: getDefaultSlot,
    props: Object(external_Vue_["computed"])(function () {
      return Object.assign(Object.assign(Object.assign(Object.assign({}, getSlotProps()), attrs), props), getProps());
    }),
    slots: slots,
    getSlotProps: getSlotProps,
    getProps: getProps
  };
};
var pureInputComponentProps = {
  block: Boolean,
  value: {},
  width: [String, Number]
};
// CONCATENATED MODULE: ./src/packages/mixins/base-input-component.tsx



var base_input_component_useBaseInputComponent = function useBaseInputComponent(props, _ref) {
  var emit = _ref.emit,
      attrs = _ref.attrs,
      slots = _ref.slots;
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    defaultValue: undefined,
    propName: 'value'
  };

  var _useSimpleFormCompone = simple_form_component_useSimpleFormComponent(props),
      isReadonly = _useSimpleFormCompone.isReadonly,
      componentSize = _useSimpleFormCompone.componentSize,
      isDisabled = _useSimpleFormCompone.isDisabled;

  var _usePureInputComponen = pure_input_component_usePureInputComponent(props, {
    emit: emit,
    attrs: attrs
  }, options),
      getSlotProps = _usePureInputComponen.getSlotProps,
      cssStyle = _usePureInputComponen.cssStyle,
      listeners = _usePureInputComponen.listeners,
      getDefaultSlot = _usePureInputComponen.getDefaultSlot,
      getProps = _usePureInputComponen.getProps,
      stateValue = _usePureInputComponen.stateValue;

  return {
    isReadonly: isReadonly,
    componentSize: componentSize,
    isDisabled: isDisabled,
    getDefaultSlot: getDefaultSlot,
    slots: slots,
    stateValue: stateValue,
    listeners: listeners,
    cssStyle: cssStyle,
    props: Object(external_Vue_["computed"])(function () {
      return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, getSlotProps()), attrs), props), getProps()), {
        disabled: isDisabled,
        readOnly: isReadonly,
        visible: stateValue
      });
    })
  };
};
// CONCATENATED MODULE: ./src/packages/vmc-feedback/feedback.tsx

/* harmony default export */ var feedback = (Object(external_Vue_["defineComponent"])({
  name: 'TouchFeedback',
  props: {
    disabled: {
      type: Boolean,
      default: false
    },
    activeClassName: {
      type: String
    },
    activeStyle: {
      type: Object
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var active = Object(external_Vue_["ref"])(false);

    var triggerEvent = function triggerEvent(type, isActive, ev) {
      var eventType = "on".concat(type);
      var children = slots.default && slots.default()[0];

      if (children[eventType]) {
        children[eventType](ev);
      }

      if (isActive !== active.value) {
        active.value = isActive;
      }

      if (['onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel', 'onMouseDown', 'onMouseUp', 'onMouseLeave'].includes(eventType)) {
        emit(type.toLowerCase(), ev);
      }
    };

    var onTouchStart = function onTouchStart(e) {
      triggerEvent('TouchStart', true, e);
    };

    var onTouchMove = function onTouchMove(e) {
      triggerEvent('TouchMove', false, e);
    };

    var onTouchEnd = function onTouchEnd(e) {
      triggerEvent('TouchEnd', false, e);
    };

    var onTouchCancel = function onTouchCancel(e) {
      triggerEvent('TouchCancel', false, e);
    };

    var onMouseDown = function onMouseDown(e) {
      // pc simulate mobile
      triggerEvent('MouseDown', true, e);
    };

    var onMouseUp = function onMouseUp(e) {
      triggerEvent('MouseUp', false, e);
    };

    var onMouseLeave = function onMouseLeave(e) {
      triggerEvent('MouseLeave', false, e);
    };

    Object(external_Vue_["onUpdated"])(function () {
      if (props.disabled && active.value) {
        active.value = false;
      }
    });
    return {
      active: active,
      triggerEvent: triggerEvent,
      onTouchStart: onTouchStart,
      onTouchMove: onTouchMove,
      onTouchEnd: onTouchEnd,
      onTouchCancel: onTouchCancel,
      onMouseDown: onMouseDown,
      onMouseUp: onMouseUp,
      onMouseLeave: onMouseLeave
    };
  },
  render: function render() {
    var disabled = this.disabled,
        activeClassName = this.activeClassName,
        activeStyle = this.activeStyle;
    var events = disabled ? undefined : {
      onTouchstart: this.onTouchStart,
      onTouchmove: this.onTouchMove,
      onTouchend: this.onTouchEnd,
      onTouchcancel: this.onTouchCancel,
      onMousedown: this.onMouseDown,
      onMouseup: this.onMouseUp,
      onMouseleave: this.onMouseLeave
    };
    var child = this.$slots.default()[0];

    if (!disabled && this.active) {
      var cls = child.props.class;

      if (cls) {
        var classArray = cls.split(/\s+/);

        if (!classArray.includes(activeClassName)) {
          classArray.push(activeClassName);
        }

        child.props.class = classArray.join(' ');
      } else {
        child.props.class = activeClassName;
      }

      var style = child.props.style;

      if (style) {
        child.props.class = Object.assign(style, activeStyle);
      } else {
        child.props.style = activeStyle;
      }
    } else {
      var _cls = child.props.class;

      if (_cls) {
        var _classArray = _cls.split(/\s+/);

        if (_classArray.includes(activeClassName)) {
          _classArray.splice(_classArray.indexOf(activeClassName), 1);
        }

        child.props.class = _classArray.join(' ');
      }
    }

    var on = child.props;
    child.props = on ? Object.assign(on, events) : events;
    return child;
  }
}));
// CONCATENATED MODULE: ./src/packages/popup/src/index.tsx




function src_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function src_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { src_ownKeys(Object(source), true).forEach(function (key) { src_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { src_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var popup_src = (Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'MPopup',
  props: Object.assign(Object.assign({}, pureInputComponentProps), {
    onCancel: {},
    onOk: {},
    visible: {
      type: Boolean,
      default: false
    },
    cancelText: {
      type: String,
      default: '取消'
    },
    showCancel: {
      type: Boolean,
      default: false
    },
    cancelButton: {
      type: Object
    },
    showOk: {
      type: Boolean,
      default: true
    },
    title: {
      type: [String, Object],
      default: ''
    },
    prefixCls: {
      type: String,
      default: 'am-popup'
    },
    height: {
      type: String
    },
    width: {
      type: String
    },
    placement: {
      type: String,
      default: 'bottom'
    },
    showTitle: {
      type: Boolean,
      default: true
    },
    closable: {
      type: Boolean,
      default: true
    }
  }),
  install: null,
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        attrs = _ref.attrs,
        slots = _ref.slots;

    var _useBaseInputComponen = base_input_component_useBaseInputComponent(props, {
      emit: emit,
      attrs: attrs,
      slots: slots
    }, {
      propName: 'visible',
      defaultValue: props.visible
    }),
        stateValue = _useBaseInputComponen.stateValue,
        cssStyle = _useBaseInputComponen.cssStyle,
        getDefaultSlot = _useBaseInputComponen.getDefaultSlot,
        isDisabled = _useBaseInputComponen.isDisabled,
        isReadonly = _useBaseInputComponen.isReadonly;

    var onCancel = function onCancel() {
      stateValue.value = false;
      emit('cancel');
    };

    var onOk = function onOk() {
      stateValue.value = false;
      emit('ok');
    };

    var getProps = function getProps() {
      return Object.assign(Object.assign({}, props), {
        title: renderHeader(),
        height: props.height || 'auto',
        width: props.width || 'auto',
        disabled: isDisabled.value,
        position: props.placement,
        open: isDisabled.value ? false : stateValue.value
      });
    };

    var getListeners = function getListeners() {
      return {
        onClose: function onClose() {
          stateValue.value = false;
          emit('cancel');
        }
      };
    };

    var renderHeader = function renderHeader() {
      return props.showTitle ? Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(props.prefixCls, "-title-wrap")
      }, [renderCancel(), Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(props.prefixCls, "-item ").concat(props.prefixCls, "-title")
      }, [props.title]), renderOk()]) : null;
    };

    var renderCancel = function renderCancel() {
      var cancelButton = props.cancelButton ? props.cancelButton : Object(external_Vue_["createVNode"])("div", {
        "onClick": onCancel,
        "class": "".concat(props.prefixCls, "-item ").concat(props.prefixCls, "-header-left")
      }, [props.cancelText]);
      return props.showCancel ? Object(external_Vue_["createVNode"])(feedback, {
        "activeClassName": "".concat(props.prefixCls, "-item-active")
      }, src_isSlot(cancelButton) ? cancelButton : {
        default: function _default() {
          return [cancelButton];
        }
      }) : null;
    };

    var renderOk = function renderOk() {
      return props.showOk ? Object(external_Vue_["createVNode"])(feedback, {
        "activeClassName": "".concat(props.prefixCls, "-item-active")
      }, {
        default: function _default() {
          return [Object(external_Vue_["createVNode"])("div", {
            "onClick": onOk,
            "class": "".concat(props.prefixCls, "-item ").concat(props.prefixCls, "-header-right")
          }, [Object(external_Vue_["createTextVNode"])("\u786E\u5B9A")])];
        }
      }) : null;
    };

    return {
      getProps: getProps,
      slots: slots,
      getDefaultSlot: getDefaultSlot,
      cssStyle: cssStyle,
      stateValue: stateValue,
      getListeners: getListeners,
      isReadonly: isReadonly,
      isDisabled: isDisabled
    };
  },
  render: function render() {
    var _this = this;

    var props = Object.assign(Object.assign(Object.assign({}, this.getListeners()), this.getProps()), {
      style: this.cssStyle,
      visible: this.stateValue
    }); // @ts-ignore

    return Object(external_Vue_["createVNode"])(drawer, props, src_objectSpread({
      default: function _default() {
        return [_this.getDefaultSlot()];
      }
    }, this.slots));
  }
}));
// CONCATENATED MODULE: ./src/packages/popup/index.ts



popup_src.install = function (Vue) {
  Vue.component('MPopup', popup_src);
};

/* harmony default export */ var packages_popup = (popup_src);
// CONCATENATED MODULE: ./src/packages/vmc-feedback/index.ts

// CONCATENATED MODULE: ./src/packages/action-sheet/src/index.tsx


function action_sheet_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function src_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { src_typeof = function _typeof(obj) { return typeof obj; }; } else { src_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return src_typeof(obj); }





var ActionSheet = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'ActionSheet',
  props: {
    prefixCls: {
      type: String,
      default: 'am-action-sheet'
    },

    /**
     * 取消按钮文本
     */
    cancelText: {
      type: String,
      default: '取消'
    },

    /**
     * 是否在点击遮罩层时关闭
     */
    closeOnClickingMask: {
      type: Boolean,
      default: true
    },

    /**
     * 是否在点击按钮后关闭
     */
    closeOnClickingMenu: {
      type: Boolean,
      default: true
    },
    menus: {
      type: [Object, Array],
      default: function _default() {
        return [];
      }
    },

    /**
     * 是否显示取消按钮
     */
    showCancel: {
      type: Boolean,
      default: true
    },
    theme: {
      type: String,
      default: 'ios'
    },
    value: {
      type: Boolean
    },
    type: {
      type: String,
      default: 'normal'
    },
    title: {
      type: String
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var $tabbar = Object(external_Vue_["ref"])(null);
    var hasHeaderSlot = Object(external_Vue_["ref"])(false);
    var show = Object(external_Vue_["ref"])(props.value || false);
    var iOSMenuRef = Object(external_Vue_["ref"])(null);
    Object(external_Vue_["watch"])(function () {
      return show.value;
    }, function (val) {
      emit('input', val);

      if (val) {
        fixIos(-1);
      } else {
        setTimeout(function () {
          fixIos(100);
        }, 200);
      }
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (val) {
      show.value = val;
    }, {
      immediate: true
    });
    Object(external_Vue_["watch"])(function () {
      return show.value;
    }, function (value) {
      emit('update:value', value);
    });
    var showStyle = Object(external_Vue_["computed"])(function () {
      var style = {};

      if (!show.value) {
        style.display = 'none';
      }

      return style;
    });
    var listClassPrefix = Object(external_Vue_["computed"])(function () {
      return "".concat(props.prefixCls, "-button-list");
    });

    var cancelClick = function cancelClick() {
      emit('input', false);
      show.value = false;
    };

    var emitEvent = function emitEvent(event, menu, item) {
      if (event === 'click-menu' && !/.noop/.test(menu)) {
        var _item = item;

        if (src_typeof(_item) === 'object') {
          _item = JSON.parse(JSON.stringify(_item));
        }

        emit(event, menu, _item);
        emit("".concat(event, "-").concat(menu));
        props.closeOnClickingMenu && (show.value = false);
      }
    };

    var instance = Object(external_Vue_["getCurrentInstance"])();

    var fixIos = function fixIos(zIndex) {
      if (instance.vnode.el.parentNode && instance.vnode.el.parentNode.className.indexOf('v-transfer-dom') !== -1) {
        return;
      }

      if ($tabbar.value && /iphone/i.test(navigator.userAgent)) {
        $tabbar.value.style.zIndex = zIndex;
      }
    };

    var onClickingMask = function onClickingMask() {
      emit('click-mask');
      props.closeOnClickingMask && (show.value = false);
    };

    var onMenuClick = function onMenuClick(text, index) {
      if (typeof text === 'string') {
        emitEvent('click-menu', index, text);
      } else {
        if (text.type !== 'disabled' && text.type !== 'info') {
          if (text.value || text.value === 0) {
            emitEvent('click-menu', text.value, text);
          } else {
            emitEvent('click-menu', '', text);
            show.value = false;
          }
        }
      }
    };

    var onTransitionEnd = function onTransitionEnd() {
      emit(show.value ? 'on-after-show' : 'on-after-hide');
    };

    var renderSheet = function renderSheet() {
      if (props.type === 'share') {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-content\"")
        }, [Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-body")
        }, [Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-share")
        }, [Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-share-list")
        }, [props.menus.map(function (item, index) {
          return Object(external_Vue_["createVNode"])("div", {
            "class": "".concat(props.prefixCls, "-share-list-item"),
            "role": "button",
            "onClick": function onClick() {
              return onMenuClick(item, index);
            }
          }, [Object(external_Vue_["createVNode"])("div", {
            "class": "".concat(props.prefixCls, "-share-list-item-icon")
          }, [item.icon]), Object(external_Vue_["createVNode"])("div", {
            "class": "".concat(props.prefixCls, "-share-list-item-title")
          }, [item.title])]);
        })])])]), renderButtons()]);
      } else {
        return Object(external_Vue_["createVNode"])("div", {
          "ref": function ref(el) {
            iOSMenuRef.value = el;
          }
        }, [Object(external_Vue_["createVNode"])("div", {
          "class": "am-action-sheet-content"
        }, [Object(external_Vue_["createVNode"])("div", {
          "class": "am-action-sheet-body"
        }, [Object(external_Vue_["createVNode"])("div", null, [renderTitle(), renderButtons()])])])]);
      }
    };

    var renderButtons = function renderButtons() {
      return Object(external_Vue_["createVNode"])("div", {
        "class": listClassPrefix.value,
        "role": "group"
      }, [props.type === 'normal' ? props.menus.map(function (it, index) {
        return renderMenu(it, index);
      }) : null, props.showCancel ? renderCancelButton() : null]);
    };

    var renderTitle = function renderTitle() {
      return props.title ? Object(external_Vue_["createVNode"])("div", {
        "class": props.prefixCls + '-message'
      }, [props.title]) : null;
    };

    var renderMenu = function renderMenu(menu, index) {
      var _classes;

      var MTouchFeedback = feedback;
      var itemClassPrefix = listClassPrefix.value + '-item';
      var classes = (_classes = {}, action_sheet_src_defineProperty(_classes, itemClassPrefix, true), action_sheet_src_defineProperty(_classes, listClassPrefix.value + '-badge', typeof menu === 'string' ? false : menu.badge), _classes);
      return Object(external_Vue_["createVNode"])(MTouchFeedback, {
        "onClick": function onClick() {
          onMenuClick(typeof menu === 'string' ? menu : menu.value, index);
        },
        "activeClassName": itemClassPrefix + '-active'
      }, {
        default: function _default() {
          return [Object(external_Vue_["createVNode"])("div", {
            "class": classes,
            "role": "button"
          }, [Object(external_Vue_["createVNode"])("span", {
            "class": itemClassPrefix + '-content'
          }, [typeof menu === 'string' ? menu : menu.label]), typeof menu !== 'string' ? renderBadge(menu.badge) : null])];
        }
      });
    };

    var renderBadge = function renderBadge(badge) {
      if (badge) {
        var _props = src_typeof(badge) === 'object' ? badge : {};

        return badge ? Object(external_Vue_["createVNode"])(packages_badge, Object(external_Vue_["mergeProps"])({
          "class": "am-badge-not-a-wrapper"
        }, _props), null) : null;
      }
    };

    var renderCancelButton = function renderCancelButton() {
      var MTouchFeedback = feedback;
      var itemClassPrefix = listClassPrefix.value + '-item';
      var classes = itemClassPrefix + " ".concat(props.prefixCls, "-cancel-button");
      return Object(external_Vue_["createVNode"])(MTouchFeedback, {
        "activeClassName": itemClassPrefix + '-active'
      }, {
        default: function _default() {
          return [Object(external_Vue_["createVNode"])("div", {
            "class": classes,
            "role": "button",
            "onClick": cancelClick
          }, [Object(external_Vue_["createVNode"])("span", {
            "class": itemClassPrefix + '-content'
          }, [Object(external_Vue_["createTextVNode"])("\u53D6\u6D88")]), Object(external_Vue_["createVNode"])("span", {
            "class": props.prefixCls + '-cancel-button-mask'
          }, null)])];
        }
      });
    };

    Object(external_Vue_["onMounted"])(function () {
      var _a;

      hasHeaderSlot.value = !!((_a = slots.header) === null || _a === void 0 ? void 0 : _a.call(slots));
      Object(external_Vue_["nextTick"])(function () {
        $tabbar.value = document.querySelector('.weui-tabbar');
        iOSMenuRef.value && iOSMenuRef.value.addEventListener('transitionend', onTransitionEnd);
      });
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      fixIos(100);
      iOSMenuRef.value && iOSMenuRef.value.removeEventListener('transitionend', onTransitionEnd);
    });
    return {
      cancelClick: cancelClick,
      renderSheet: renderSheet,
      show: show
    };
  },
  render: function render() {
    var _this = this;

    var classes = "".concat(this.prefixCls, " ").concat(this.prefixCls, "-").concat(this.type);
    return Object(external_Vue_["createVNode"])(packages_popup, {
      "visible": this.show,
      "showTitle": false,
      "onCancel": this.cancelClick
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("div", {
          "class": classes
        }, [_this.renderSheet()])];
      }
    });
  }
});
/* harmony default export */ var action_sheet_src = (ActionSheet);
// EXTERNAL MODULE: ./src/packages/action-sheet/style/index.less
var action_sheet_style = __webpack_require__("9372");

// CONCATENATED MODULE: ./src/packages/action-sheet/style/index.tsx



// CONCATENATED MODULE: ./src/packages/action-sheet/index.ts



action_sheet_src.install = function (Vue) {
  Vue.component('MActionSheet', action_sheet_src);
};

/* harmony default export */ var action_sheet = (action_sheet_src);
// CONCATENATED MODULE: ./src/packages/activity-indicator/src/index.tsx


function activity_indicator_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/* harmony default export */ var activity_indicator_src = (Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'ActivityIndicator',
  props: {
    prefixCls: {
      type: String,
      default: 'am-activity-indicator'
    },
    className: {
      type: String
    },
    animating: {
      type: Boolean,
      default: true
    },
    toast: {
      type: Boolean,
      default: false
    },
    size: {
      default: 'small'
    },
    text: {
      type: String
    }
  },
  render: function render() {
    var _classnames;

    var prefixCls = this.prefixCls,
        className = this.className,
        animating = this.animating,
        toast = this.toast,
        size = this.size,
        text = this.text;
    var wrapClass = classnames_default()(prefixCls, className, (_classnames = {}, activity_indicator_src_defineProperty(_classnames, "".concat(prefixCls, "-lg"), size === 'large'), activity_indicator_src_defineProperty(_classnames, "".concat(prefixCls, "-sm"), size === 'small'), activity_indicator_src_defineProperty(_classnames, "".concat(prefixCls, "-toast"), toast), _classnames));
    var spinnerClass = classnames_default()("".concat(prefixCls, "-spinner"), activity_indicator_src_defineProperty({}, "".concat(prefixCls, "-spinner-lg"), toast || size === 'large'));

    if (animating) {
      if (toast) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": wrapClass
        }, [text ? Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-content")
        }, [Object(external_Vue_["createVNode"])("span", {
          "class": spinnerClass,
          "aria-hidden": "true"
        }, null), Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-toast")
        }, [text])]) : Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-content")
        }, [Object(external_Vue_["createVNode"])("span", {
          "class": spinnerClass,
          "aria-label": "Loading"
        }, null)])]);
      } else {
        return text ? Object(external_Vue_["createVNode"])("div", {
          "class": wrapClass
        }, [Object(external_Vue_["createVNode"])("span", {
          "class": spinnerClass,
          "aria-hidden": "true"
        }, null), Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-tip")
        }, [text])]) : Object(external_Vue_["createVNode"])("div", {
          "class": wrapClass
        }, [Object(external_Vue_["createVNode"])("span", {
          "class": spinnerClass,
          "aria-label": "loading"
        }, null)]);
      }
    } else {
      return null;
    }
  }
}));
// EXTERNAL MODULE: ./src/packages/activity-indicator/style/index.less
var activity_indicator_style = __webpack_require__("f66e");

// CONCATENATED MODULE: ./src/packages/activity-indicator/style/index.ts


// CONCATENATED MODULE: ./src/packages/activity-indicator/index.ts



activity_indicator_src.install = function (Vue) {
  Vue.component('MActivityIndicator', activity_indicator_src);
};

/* harmony default export */ var activity_indicator = (activity_indicator_src);
// CONCATENATED MODULE: ./src/packages/icon/src/load-sprite.tsx
/* tslint:disable:max-line-length */
// inspried by https://github.com/kisenka/svg-sprite-loader/blob/master/runtime/browser-sprite.js
// Much simplified, do make sure run this after document ready
var svgSprite = function svgSprite(contents) {
  return "\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    id=\"__ANTD_MOBILE_SVG_SPRITE_NODE__\"\n    style=\"position:absolute;width:0;height:0\"\n  >\n    <defs>\n      ".concat(contents, "\n    </defs>\n  </svg>\n");
}; // both minified by https://github.com/svg/svgo


var icons = {
  check: '<svg viewBox="0 0 44 44"><path fill-rule="evenodd" d="M34.538 8L38 11.518 17.808 32 8 22.033l3.462-3.518 6.346 6.45z"/></svg>',
  'check-circle': '<svg viewBox="0 0 48 48"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zM13.1 23.2l-2.2 2.1 10 9.9L38.1 15l-2.2-2-15.2 17.8-7.6-7.6z" fill-rule="evenodd"/></svg>',
  'check-circle-o': '<svg viewBox="0 0 48 48"><g fill-rule="evenodd"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zm0-3c11.598 0 21-9.402 21-21S35.598 3 24 3 3 12.402 3 24s9.402 21 21 21z"/><path d="M12.2 23.2L10 25.3l10 9.9L37.2 15 35 13 19.8 30.8z"/></g></svg>',
  cross: '<svg viewBox="0 0 44 44"><path fill-rule="evenodd" d="M24.008 21.852l8.97-8.968L31.092 11l-8.97 8.968L13.157 11l-1.884 1.884 8.968 8.968-9.24 9.24 1.884 1.885 9.24-9.24 9.24 9.24 1.885-1.884-9.24-9.24z"/></svg>',
  'cross-circle': '<svg viewBox="0 0 48 48"><g fill-rule="evenodd"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zm0-3c11.598 0 21-9.402 21-21S35.598 3 24 3 3 12.402 3 24s9.402 21 21 21z"/><path d="M24.34 22.22l-7.775-7.775a1.5 1.5 0 1 0-2.12 2.12l7.773 7.775-7.774 7.775a1.5 1.5 0 1 0 2.12 2.12l7.775-7.773 7.774 7.774a1.5 1.5 0 1 0 2.12-2.12L26.46 24.34l7.774-7.774a1.5 1.5 0 1 0-2.12-2.12l-7.776 7.773z"/></g></svg>',
  'cross-circle-o': '<svg viewBox="0 0 48 48"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zm.353-25.77l-7.593-7.593c-.797-.8-1.538-.822-2.263-.207-.724.614-.56 1.617-.124 2.067l7.852 7.847-7.72 7.723c-.727.728-.56 1.646-.066 2.177.493.532 1.553.683 2.31-.174l7.588-7.584 7.644 7.623c.796.798 1.608.724 2.21.145.605-.58.72-1.442-.074-2.24l-7.657-7.67 7.545-7.52c.81-.697.9-1.76.297-2.34-.92-.885-1.85-.338-2.264.078l-7.685 7.667z" fill-rule="evenodd"/></svg>',
  // Todo: simplify direction to 2, use css transform
  left: '<svg viewBox="0 0 44 44"><defs><path id="a" d="M-129-845h24v24h-24z"/></defs><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><g clip-path="url(#b)"><defs><path id="c" d="M-903-949H947V996H-903z"/></defs></g><path d="M16.247 21.4L28.48 9.165l2.12 2.12-10.117 10.12L30.6 31.524l-2.12 2.12-12.233-12.232.007-.006z"/></svg>',
  right: '<svg viewBox="0 0 44 44"><defs><path id="a" d="M-129-845h24v24h-24z"/></defs><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><g clip-path="url(#b)"><defs><path id="c" d="M-903-949H947V996H-903z"/></defs></g><path d="M30.6 21.4L18.37 9.165l-2.12 2.12 10.117 10.12-10.118 10.118 2.12 2.12 12.234-12.232-.005-.006z"/></svg>',
  down: '<svg viewBox="0 0 44 44"><path d="M22.355 28.237l-11.483-10.9c-.607-.576-1.714-.396-2.48.41l.674-.71c-.763.802-.73 2.07-.282 2.496l11.37 10.793-.04.04 2.088 2.195L23.3 31.52l12.308-11.682c.447-.425.48-1.694-.282-2.496l.674.71c-.766-.806-1.873-.986-2.48-.41L22.355 28.237z" fill-rule="evenodd"/></svg>',
  up: '<svg viewBox="0 0 44 44"><path fill="none" d="M-1-1h46v46H-1z"/><defs><path id="a" d="M-129-845h24v24h-24z"/></defs><clipPath id="b"><use xlink:href="#a"/></clipPath><g clip-path="url(#b)"><defs><path id="c" d="M-903-949H947V996H-903z"/></defs></g><path d="M23.417 14.23L11.184 26.46l2.12 2.12 10.12-10.117 10.118 10.118 2.12-2.12L23.43 14.228l-.006.005z"/></svg>',
  loading: '<svg viewBox="0 -2 59.75 60.25"><path fill="#ccc" d="M29.69-.527C14.044-.527 1.36 12.158 1.36 27.806S14.043 56.14 29.69 56.14c15.65 0 28.334-12.686 28.334-28.334S45.34-.527 29.69-.527zm.185 53.75c-14.037 0-25.417-11.38-25.417-25.417S15.838 2.39 29.875 2.39s25.417 11.38 25.417 25.417-11.38 25.416-25.417 25.416z"/><path fill="none" stroke="#108ee9" stroke-width="3" stroke-linecap="round" stroke-miterlimit="10" d="M56.587 29.766c.37-7.438-1.658-14.7-6.393-19.552"/></svg>',
  search: '<svg viewBox="0 0 44 44"><path d="M32.98 29.255l8.915 8.293L39.603 40l-8.86-8.242a15.952 15.952 0 0 1-10.753 4.147C11.16 35.905 4 28.763 4 19.952 4 11.142 11.16 4 19.99 4s15.99 7.142 15.99 15.952c0 3.472-1.112 6.685-3 9.303zm.05-9.21c0 7.123-5.7 12.918-12.88 12.918-7.176 0-13.015-5.795-13.015-12.918 0-7.12 5.84-12.917 13.017-12.917 7.178 0 12.88 5.797 12.88 12.917z" fill-rule="evenodd"/></svg>',
  ellipsis: '<svg viewBox="0 0 44 44"><circle cx="21.888" cy="22" r="4.045"/><circle cx="5.913" cy="22" r="4.045"/><circle cx="37.863" cy="22" r="4.045"/></svg>',
  'ellipsis-circle': '<svg viewBox="0 0 44 44"><g fill-rule="evenodd"><path d="M22.13.11C10.05.11.255 9.902.255 21.983S10.05 43.86 22.13 43.86s21.875-9.795 21.875-21.876S34.21.11 22.13.11zm0 40.7c-10.396 0-18.825-8.43-18.825-18.826S11.735 3.16 22.13 3.16c10.396 0 18.825 8.428 18.825 18.824S32.525 40.81 22.13 40.81z"/><circle cx="21.888" cy="22.701" r="2.445"/><circle cx="12.23" cy="22.701" r="2.445"/><circle cx="31.546" cy="22.701" r="2.445"/></g></svg>',
  'exclamation-circle': '<svg viewBox="0 0 64 64"><path d="M59.58 40.89L41.193 9.11C39.135 5.382 35.723 3 31.387 3c-3.11 0-6.52 2.382-8.58 6.11L4.42 40.89c-2.788 4.635-3.126 8.81-1.225 12.22C5.015 56.208 7.572 58 13 58h36.773c5.428 0 9.21-1.792 11.03-4.89 1.9-3.41 1.565-7.583-1.224-12.22zm-2.452 11c-.635 1.694-3.802 2.443-7.354 2.443H13c-3.59 0-5.493-.75-6.13-2.444-1.71-2.41-1.374-5.263 0-8.557l18.387-31.777c2.116-3.168 4.394-4.89 6.13-4.89 2.96 0 5.238 1.722 7.354 4.89l18.387 31.777c1.374 3.294 1.713 6.146 0 8.556zm-25.74-33c-.405 0-1.227.835-1.227 2.443v15.89c0 1.608.823 2.444 1.227 2.444 1.628 0 2.452-.836 2.452-2.445v-15.89c0-1.607-.825-2.443-2.453-2.443zm0 23.22c-.405 0-1.227.79-1.227 1.223v2.445c0 .434.823 1.222 1.227 1.222 1.628 0 2.452-.788 2.452-1.222v-2.445c0-.434-.825-1.222-2.453-1.222z" fill-rule="evenodd"/></svg>',
  'info-circle': '<svg viewBox="0 0 44 44"><circle cx="13.828" cy="19.63" r="1.938"/><circle cx="21.767" cy="19.63" r="1.938"/><circle cx="29.767" cy="19.63" r="1.938"/><path d="M22.102 4.16c-9.918 0-17.958 7.147-17.958 15.962 0 4.935 2.522 9.345 6.48 12.273v5.667l.04.012a2.627 2.627 0 1 0 4.5 1.455h.002l5.026-3.54c.628.06 1.265.094 1.91.094 9.92 0 17.96-7.146 17.96-15.96C40.06 11.306 32.02 4.16 22.1 4.16zm-.04 29.902c-.902 0-1.78-.08-2.642-.207l-5.882 4.234c-.024.024-.055.04-.083.06l-.008.005a.51.51 0 0 1-.284.095.525.525 0 0 1-.525-.525l.005-6.375c-3.91-2.516-6.456-6.544-6.456-11.1 0-7.628 7.107-13.812 15.875-13.812s15.875 6.184 15.875 13.812-7.107 13.812-15.875 13.812z"/></svg>',
  'question-circle': '<svg viewBox="0 0 44 44"><g fill-rule="evenodd"><path d="M21.186 3c-10.853 0-19.36 8.506-19.36 19.358C1.827 32.494 10.334 41 21.187 41c10.133 0 18.64-8.506 18.64-18.642C39.827 11.506 31.32 3 21.187 3m15.64 19c0 8.823-7.178 16-16 16s-16-7.177-16-16 7.178-16 16-16 16 7.177 16 16z"/><path d="M22.827 31.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m4-15.48c0 .957-.203 1.822-.61 2.593-.427.792-1.117 1.612-2.073 2.457-.867.734-1.453 1.435-1.754 2.096-.302.7-.453 1.693-.453 2.98a.828.828 0 0 1-.823.854.828.828 0 0 1-.584-.22.877.877 0 0 1-.24-.635c0-1.305.168-2.38.506-3.227.336-.883.93-1.682 1.78-2.4 1.01-.883 1.71-1.692 2.1-2.428.336-.645.503-1.38.503-2.21-.02-.935-.3-1.7-.85-2.288-.655-.717-1.62-1.075-2.897-1.075-1.506 0-2.596.535-3.27 1.6-.46.754-.688 1.645-.688 2.677a.92.92 0 0 1-.266.66.747.747 0 0 1-.56.25.73.73 0 0 1-.584-.194c-.16-.164-.24-.393-.24-.69 0-1.82.585-3.272 1.755-4.357C18.645 11.486 19.928 11 21.434 11h.293c1.452 0 2.638.414 3.56 1.24 1.028.903 1.54 2.163 1.54 3.78z"/></g></svg>',
  voice: '<svg viewBox="0 0 38 33"><g fill-rule="evenodd"><path d="M17.838 28.8c-.564-.468-1.192-.983-1.836-1.496-4.244-3.385-5.294-3.67-6.006-3.67-.014 0-.027.005-.04.005-.015 0-.028-.006-.042-.006H3.562c-.734 0-.903-.203-.903-.928v-12.62c0-.49.057-.8.66-.8H9.1c.694 0 1.76-.28 6.4-3.63.83-.596 1.638-1.196 2.337-1.722V28.8zM19.682.19c-.463-.22-1.014-.158-1.417.157-.02.016-1.983 1.552-4.152 3.125C10.34 6.21 9.243 6.664 9.02 6.737H3.676c-.027 0-.053.003-.08.004H1.183c-.608 0-1.1.487-1.1 1.086V25.14c0 .598.492 1.084 1.1 1.084h8.71c.22.08 1.257.55 4.605 3.24 1.947 1.562 3.694 3.088 3.712 3.103.25.22.568.333.89.333.186 0 .373-.038.55-.116.48-.213.79-.684.79-1.204V1.38c0-.506-.294-.968-.758-1.19z" mask="url(#mask-2)"/><path d="M31.42 16.475c0-3.363-1.854-6.297-4.606-7.876-.125-.067-.42-.193-.625-.193-.613 0-1.11.488-1.11 1.09 0 .404.22.764.55.952 2.13 1.19 3.566 3.44 3.566 6.024 0 2.627-1.486 4.913-3.677 6.087-.32.19-.53.54-.53.935 0 .602.495 1.09 1.106 1.09.26.002.568-.15.568-.15 2.835-1.556 4.754-4.538 4.754-7.96" mask="url(#mask-4)"/><path d="M30.14 3.057c-.205-.122-.41-.22-.658-.22-.608 0-1.1.485-1.1 1.084 0 .434.26.78.627.978 4.042 2.323 6.76 6.636 6.76 11.578 0 4.938-2.715 9.248-6.754 11.572-.354.19-.66.55-.66.993 0 .6.494 1.085 1.102 1.085.243 0 .438-.092.65-.213 4.692-2.695 7.848-7.7 7.848-13.435 0-5.723-3.142-10.718-7.817-13.418" mask="url(#mask-6)"/></g></svg>',
  plus: '<svg viewBox="0 0 30 30"><path d="M14 14H0v2h14v14h2V16h14v-2H16V0h-2v14z" fill-rule="evenodd"/></svg>',
  minus: '<svg viewBox="0 0 30 2"><path d="M0 0h30v2H0z" fill-rule="evenodd"/></svg>',
  dislike: '<svg viewBox="0 0 72 72"><g fill="none" fill-rule="evenodd"><path d="M36 72c19.882 0 36-16.118 36-36S55.882 0 36 0 0 16.118 0 36s16.118 36 36 36zm0-2c18.778 0 34-15.222 34-34S54.778 2 36 2 2 17.222 2 36s15.222 34 34 34z" fill="#FFF"/><path fill="#FFF" d="M47 22h2v6h-2zm-24 0h2v6h-2z"/><path d="M21 51s4.6-7 15-7 15 7 15 7" stroke="#FFF" stroke-width="2"/></g></svg>',
  fail: '<svg viewBox="0 0 72 72"><g fill="none" fill-rule="evenodd"><path d="M36 72c19.882 0 36-16.118 36-36S55.882 0 36 0 0 16.118 0 36s16.118 36 36 36zm0-2c18.778 0 34-15.222 34-34S54.778 2 36 2 2 17.222 2 36s15.222 34 34 34z" fill="#FFF"/><path d="M22 22l28.304 28.304m-28.304 0L50.304 22" stroke="#FFF" stroke-width="2"/></g></svg>',
  success: '<svg viewBox="0 0 72 72"><g fill="none" fill-rule="evenodd"><path d="M36 72c19.882 0 36-16.118 36-36S55.882 0 36 0 0 16.118 0 36s16.118 36 36 36zm0-2c18.778 0 34-15.222 34-34S54.778 2 36 2 2 17.222 2 36s15.222 34 34 34z" fill="#FFF"/><path stroke="#FFF" stroke-width="2" d="M19 34.54l11.545 11.923L52.815 24"/></g></svg>'
};

var renderSvgSprite = function renderSvgSprite() {
  var symbols = Object.keys(icons).map(function (iconName) {
    var svgContent = icons[iconName].split('svg')[1];
    return "<symbol id=".concat(iconName).concat(svgContent, "symbol>");
  }).join('');
  return svgSprite(symbols);
};

var loadSprite = function loadSprite() {
  if (!document) {
    return;
  }

  var existing = document.getElementById('__ANTD_MOBILE_SVG_SPRITE_NODE__');
  var mountNode = document.body;

  if (!existing) {
    mountNode.insertAdjacentHTML('afterbegin', renderSvgSprite());
  }
};

/* harmony default export */ var load_sprite = (loadSprite);
// CONCATENATED MODULE: ./src/packages/icon/src/index.tsx





var src_Icon = Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'MIcon',
  props: {
    size: {
      type: [String, Number],
      default: 'md'
    },
    type: {
      type: String,
      required: true
    },
    color: String
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        attrs = _ref.attrs;
    Object(external_Vue_["onMounted"])(function () {
      load_sprite();
    });
    return {};
  },
  render: function render() {
    var _a = this,
        type = _a.type,
        size = _a.size,
        restProps = tslib_es6_rest(_a, ["type", "size"]);

    var cls = classnames_default()('am-icon', "am-icon-".concat(type), "am-icon-".concat(size));
    var style = {};

    if (this.color) {
      style.color = this.color;
    }

    if (typeof this.size === 'number') {
      style.width = this.size + 'px';
      style.height = this.size + 'px';
    }

    return Object(external_Vue_["createVNode"])("svg", Object(external_Vue_["mergeProps"])({
      "class": cls,
      "style": style
    }, {
      props: restProps
    }), [Object(external_Vue_["createVNode"])("use", {
      "xlink:href": "#".concat(type)
    }, null)]);
  }
});
/* harmony default export */ var icon_src = (src_Icon);
// EXTERNAL MODULE: ./src/packages/icon/style/index.less
var icon_style = __webpack_require__("47fc");

// CONCATENATED MODULE: ./src/packages/icon/style/index.tsx

// CONCATENATED MODULE: ./src/packages/icon/index.ts


var icon_Plugin = icon_src;

icon_Plugin.install = function (app) {
  app.component('MIcon', icon_src);
};

/* harmony default export */ var packages_icon = (icon_Plugin);
// CONCATENATED MODULE: ./src/packages/mixins/icon-res.tsx


function icon_res_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { icon_res_typeof = function _typeof(obj) { return typeof obj; }; } else { icon_res_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return icon_res_typeof(obj); }



var httpReg = /^http(s)?:\/\//;
/* harmony default export */ var icon_res = (Object(external_Vue_["defineComponent"])({
  name: 'IconRes',
  props: {
    type: [String, Object]
  },
  render: function render() {
    var icon = this.type;

    if (typeof icon === 'string') {
      if (httpReg.test(icon)) {
        return Object(external_Vue_["createVNode"])("img", {
          "src": icon,
          "alt": ''
        }, null);
      } else {
        return Object(external_Vue_["createVNode"])(packages_icon, {
          "type": icon,
          "size": 'md'
        }, null);
      }
    } else if (icon_res_typeof(icon) === 'object') {
      if (icon.context) {
        return icon;
      } else if (['icon', 'img'].includes(icon.iconType)) {
        return Object(external_Vue_["createVNode"])(packages_icon, icon, null);
      }
    }
  }
}));
// CONCATENATED MODULE: ./src/packages/button/src/index.tsx


function button_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var src_httpReg = /^http(s)?:\/\//;
var rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);

function src_isString(str) {
  return typeof str === 'string';
}

/* harmony default export */ var button_src = (Object(external_Vue_["defineComponent"])({
  install: null,
  inheritAttrs: false,
  name: 'MButton',
  props: {
    onClick: {},
    prefixCls: {
      type: String,
      default: 'am-button'
    },
    role: {
      type: String
    },
    inline: {
      type: Boolean,
      default: false
    },
    icon: {
      type: [String, Object]
    },
    activeClassName: {
      type: String
    },
    activeStyle: {
      type: [Boolean, Object],
      default: function _default() {
        return {};
      }
    },
    type: {
      type: String
    },
    size: {
      type: String,
      default: 'large'
    },
    disabled: {
      type: Boolean,
      default: false
    },
    loading: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;

    var insertSpace = function insertSpace(child) {
      if (src_isString(child.text) && isTwoCNChar(child.text)) {
        return Object(external_Vue_["createVNode"])("span", null, [child.text.split('').join(' ')]);
      }

      return child;
    };

    return {
      insertSpace: insertSpace
    };
  },
  render: function render() {
    var _classnames,
        _this = this;

    var prefixCls = this.prefixCls,
        type = this.type,
        size = this.size,
        inline = this.inline,
        disabled = this.disabled,
        icon = this.icon,
        loading = this.loading,
        activeStyle = this.activeStyle,
        activeClassName = this.activeClassName;
    var iconType = loading ? 'loading' : icon;
    var wrapCls = classnames_default()(prefixCls, (_classnames = {}, button_src_defineProperty(_classnames, "".concat(prefixCls, "-primary"), type === 'primary'), button_src_defineProperty(_classnames, "".concat(prefixCls, "-ghost"), type === 'ghost'), button_src_defineProperty(_classnames, "".concat(prefixCls, "-warning"), type === 'warning'), button_src_defineProperty(_classnames, "".concat(prefixCls, "-small"), size === 'small'), button_src_defineProperty(_classnames, "".concat(prefixCls, "-inline"), inline), button_src_defineProperty(_classnames, "".concat(prefixCls, "-disabled"), disabled), button_src_defineProperty(_classnames, "".concat(prefixCls, "-loading"), loading), button_src_defineProperty(_classnames, "".concat(prefixCls, "-icon"), !!iconType), _classnames), this.$attrs.class);
    var kids = this.$slots.default ? this.$slots.default().map(this.insertSpace) : '';
    var iconEl;

    if (typeof iconType === 'string') {
      iconEl = Object(external_Vue_["createVNode"])(icon_res, Object(external_Vue_["mergeProps"])({
        "class": "".concat(prefixCls, "-icon")
      }, {
        type: src_httpReg.test(iconType) ? iconType : {
          mobile: true,
          iconType: 'icon',
          type: iconType,
          size: size === 'small' ? 'xxs' : 'md'
        }
      }), null);
    } else if (iconType) {
      var cls = classnames_default()('am-icon', "".concat(prefixCls, "-icon"), size === 'small' ? 'am-icon-xxs' : 'am-icon-md');
      iconEl = // @ts-ignore
      Object(external_Vue_["createVNode"])(icon_res, {
        "class": cls,
        "props": {
          type: iconType
        }
      }, null);
    }

    return Object(external_Vue_["createVNode"])(feedback, {
      "activeClassName": activeClassName || (activeStyle ? "".concat(prefixCls, "-active") : undefined),
      "disabled": disabled,
      "activeStyle": activeStyle
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("a", {
          "role": "button",
          "class": wrapCls,
          "onClick": function onClick(e) {
            if (!_this.disabled) {
              _this.$emit('click', e);
            }
          },
          "aria-disabled": disabled
        }, [iconEl, kids])];
      }
    });
  }
}));
// EXTERNAL MODULE: ./src/packages/button/style/index.less
var button_style = __webpack_require__("938f");

// CONCATENATED MODULE: ./src/packages/button/style/index.tsx


// CONCATENATED MODULE: ./src/packages/button/index.ts



button_src.install = function (Vue) {
  Vue.component('MButton', button_src);
};

/* harmony default export */ var packages_button = (button_src);
// CONCATENATED MODULE: ./src/packages/utils/getLocale.tsx
function getComponentLocale(props, context, componentName, defaultLocale) {
  var locale = {};

  if (context && context.antLocale && context.antLocale[componentName]) {
    locale = context.antLocale[componentName];
  } else {
    // TODO: make default lang of antd be English
    // https://github.com/ant-design/ant-design/issues/6334
    locale = defaultLocale;
  }

  var result = Object.assign({}, locale);

  if (props.locale) {
    result = Object.assign(Object.assign({}, result), props.locale);

    if (props.locale.lang) {
      result.lang = Object.assign(Object.assign({}, locale.lang), props.locale.lang);
    }
  }

  return result;
}
function getLocale_getLocaleCode(context) {
  var localeCode = context.antLocale && context.antLocale.locale; // Had use LocaleProvide but didn't set locale

  if (context.antLocale && context.antLocale.exist && !localeCode) {
    return 'zh-cn';
  }

  return localeCode;
}
// CONCATENATED MODULE: ./src/packages/vmc-calendar/data-types.ts
var SelectType;

(function (SelectType) {
  SelectType[SelectType["None"] = 0] = "None";
  /** 单选 */

  SelectType[SelectType["Single"] = 1] = "Single";
  /** 起/止 */

  SelectType[SelectType["All"] = 2] = "All";
  /** 区间仅选择了 起 */

  SelectType[SelectType["Only"] = 3] = "Only";
  /** 区间起 */

  SelectType[SelectType["Start"] = 4] = "Start";
  /** 区间中 */

  SelectType[SelectType["Middle"] = 5] = "Middle";
  /** 区间止 */

  SelectType[SelectType["End"] = 6] = "End";
})(SelectType || (SelectType = {}));
// CONCATENATED MODULE: ./src/packages/vmc-calendar/util/index.ts
function util_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { util_typeof = function _typeof(obj) { return typeof obj; }; } else { util_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return util_typeof(obj); }


var mergeDateTime = function mergeDateTime(date, time) {
  var copyDate = date || new Date();

  if (!time) {
    return copyDate;
  }

  return new Date(copyDate.getFullYear(), copyDate.getMonth(), copyDate.getDate(), time.getHours(), time.getMinutes(), time.getSeconds());
};
var util_formatDate = function formatDate(date, format, locale) {
  var week = locale && locale.week;
  var o = {
    'M+': date.getMonth() + 1,
    'd+': date.getDate(),
    'h+': date.getHours(),
    'm+': date.getMinutes(),
    's+': date.getSeconds(),
    'q+': Math.floor((date.getMonth() + 3) / 3),
    'w+': week && week[date.getDay()],
    'S': date.getMilliseconds()
  };
  var copyFormat = format;

  if (/(y+)/.test(copyFormat)) {
    copyFormat = copyFormat.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));
  }

  for (var k in o) {
    if (new RegExp('(' + k + ')').test(copyFormat)) {
      copyFormat = copyFormat.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));
    }
  }

  return copyFormat;
};
var vmc_calendar_util_hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (is(objA, objB)) {
    return true;
  }

  if (util_typeof(objA) !== 'object' || objA === null || util_typeof(objB) !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (exclude.indexOf(keysA[i]) >= 0) {
      continue;
    }

    if (!vmc_calendar_util_hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
var getMonthDate = function getMonthDate() {
  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
  var addMonth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var y = date.getFullYear();
  var m = date.getMonth();
  return {
    firstDate: new Date(y, m + addMonth, 1),
    lastDate: new Date(y, m + 1 + addMonth, 0)
  };
};
var getDateWithoutTime = function getDateWithoutTime(date) {
  if (!date) {
    return 0;
  }

  return +new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
var util_genWeekData = function genWeekData(firstDate, minDate, maxDate) {
  var minDateTime = getDateWithoutTime(minDate);
  var maxDateTime = getDateWithoutTime(maxDate) || Number.POSITIVE_INFINITY;
  var weeks = [];
  var nextMonth = getMonthDate(firstDate, 1).firstDate;
  var currentDay = firstDate;
  var currentWeek = [];
  weeks.push(currentWeek);
  var startWeekday = currentDay.getDay();

  if (startWeekday > 0) {
    for (var i = 0; i < startWeekday; i++) {
      currentWeek.push({});
    }
  }

  while (currentDay < nextMonth) {
    if (currentWeek.length === 7) {
      currentWeek = [];
      weeks.push(currentWeek);
    }

    var dayOfMonth = currentDay.getDate();
    var tick = +currentDay;
    currentWeek.push({
      tick: tick,
      dayOfMonth: dayOfMonth,
      selected: SelectType.None,
      isFirstOfMonth: dayOfMonth === 1,
      isLastOfMonth: false,
      outOfDate: tick < minDateTime || tick > maxDateTime
    });
    currentDay = new Date(currentDay.getTime() + 3600 * 24 * 1000);
  }

  currentWeek[currentWeek.length - 1].isLastOfMonth = true;
  return weeks;
};
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar/confirm-panel.tsx



var ConfirmPanel = Object(external_Vue_["defineComponent"])({
  name: 'ConfirmPanel',
  props: {
    type: {
      type: String
    },
    locale: {
      type: Object
    },
    onlyConfirm: {
      type: Boolean
    },
    disableBtn: {
      type: Boolean
    },
    startDateTime: {
      type: Date
    },
    endDateTime: {
      type: Date
    },
    formatStr: {
      type: String
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var onConfirm = function onConfirm() {
      if (!props.disableBtn) {
        emit('confirm');
      }
    };

    var formatDate = function formatDate(date) {
      var _props$formatStr = props.formatStr,
          formatStr = _props$formatStr === void 0 ? '' : _props$formatStr,
          locale = props.locale;
      return util_formatDate(date, formatStr, locale);
    };

    return {
      onConfirm: onConfirm,
      formatDate: formatDate
    };
  },
  render: function render() {
    var type = this.type,
        locale = this.locale,
        disableBtn = this.disableBtn;
    var startDateTime = this.startDateTime,
        endDateTime = this.endDateTime;

    if (startDateTime && endDateTime && +startDateTime > +endDateTime) {
      var tmp = startDateTime;
      startDateTime = endDateTime;
      endDateTime = tmp;
    }

    var startTimeStr = startDateTime ? this.formatDate(startDateTime) : locale.noChoose;
    var endTimeStr = endDateTime ? this.formatDate(endDateTime) : locale.noChoose;
    var btnCls = disableBtn ? 'button button-disable' : 'button';

    if (type === 'one') {
      btnCls += ' button-full';
    }

    return Object(external_Vue_["createVNode"])("div", {
      "class": "confirm-panel"
    }, [type === 'range' && Object(external_Vue_["createVNode"])("div", {
      "class": 'info'
    }, [Object(external_Vue_["createVNode"])("p", null, [locale.start, Object(external_Vue_["createTextVNode"])(": "), Object(external_Vue_["createVNode"])("span", {
      "class": !startDateTime ? 'grey' : ''
    }, [startTimeStr])]), Object(external_Vue_["createVNode"])("p", null, [locale.end, Object(external_Vue_["createTextVNode"])(": "), Object(external_Vue_["createVNode"])("span", {
      "class": !endDateTime ? 'grey' : ''
    }, [endTimeStr])])]), Object(external_Vue_["createVNode"])("div", {
      "class": btnCls,
      "onClick": this.onConfirm
    }, [locale.confirm])]);
  }
});
/* harmony default export */ var confirm_panel = (ConfirmPanel);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar/header.tsx


var header_Header = Object(external_Vue_["defineComponent"])({
  name: 'Header',
  props: {
    title: {
      type: String
    },
    locale: {
      type: Object
    },
    showClear: {
      type: Boolean
    },
    closeIcon: {
      default: 'X'
    },
    clearIcon: {}
  },
  render: function render() {
    var _this = this;

    var title = this.title,
        _this$locale = this.locale,
        locale = _this$locale === void 0 ? {} : _this$locale,
        showClear = this.showClear,
        closeIcon = this.closeIcon,
        clearIcon = this.clearIcon;
    return Object(external_Vue_["createVNode"])("div", {
      "class": "header"
    }, [Object(external_Vue_["createVNode"])("span", {
      "class": "left",
      "onClick": function onClick() {
        return _this.$emit('cancel');
      }
    }, [closeIcon]), Object(external_Vue_["createVNode"])("span", {
      "class": "title"
    }, [title || locale.title]), showClear && Object(external_Vue_["createVNode"])("span", {
      "class": "right",
      "onClick": function onClick() {
        return _this.$emit('clear');
      }
    }, [clearIcon || locale.clear])]);
  }
});
/* harmony default export */ var calendar_header = (header_Header);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar/shortcut-panel.tsx


/* harmony default export */ var shortcut_panel = (Object(external_Vue_["defineComponent"])({
  name: 'ShortcutPanel',
  props: {
    locale: {
      type: Object
    },
    onSelect: {}
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var onClick = function onClick(type) {
      var today = new Date();

      switch (type) {
        case 'today':
          emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0), new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12));
          break;

        case 'yesterday':
          emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1, 0), new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1, 12));
          break;

        case 'lastweek':
          emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate() - 6, 0), new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12));
          break;

        case 'lastmonth':
          emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate() - 29, 0), new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12));
          break;
      }
    };

    return {
      onClick: onClick
    };
  },
  render: function render() {
    var _this = this;

    var locale = this.locale;
    return Object(external_Vue_["createVNode"])("div", {
      "class": "shortcut-panel"
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "item",
      "onClick": function onClick() {
        return _this.onClick('today');
      }
    }, [locale.today]), Object(external_Vue_["createVNode"])("div", {
      "class": "item",
      "onClick": function onClick() {
        return _this.onClick('yesterday');
      }
    }, [locale.yesterday]), Object(external_Vue_["createVNode"])("div", {
      "class": "item",
      "onClick": function onClick() {
        return _this.onClick('lastweek');
      }
    }, [locale.lastWeek]), Object(external_Vue_["createVNode"])("div", {
      "class": "item",
      "onClick": function onClick() {
        return _this.onClick('lastmonth');
      }
    }, [locale.lastMonth])]);
  }
}));
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date-picker-base.tsx
function date_picker_base_toConsumableArray(arr) { return date_picker_base_arrayWithoutHoles(arr) || date_picker_base_iterableToArray(arr) || date_picker_base_unsupportedIterableToArray(arr) || date_picker_base_nonIterableSpread(); }

function date_picker_base_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function date_picker_base_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return date_picker_base_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return date_picker_base_arrayLikeToArray(o, minLen); }

function date_picker_base_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function date_picker_base_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return date_picker_base_arrayLikeToArray(arr); }

function date_picker_base_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }





function monthsBetween(minDate, maxDate) {
  return (maxDate.getFullYear() - minDate.getFullYear()) * 12 + maxDate.getMonth() - minDate.getMonth();
}

var date_picker_base_useDatePickerBase = function useDatePickerBase(props, _ref, _ref2) {
  var emit = _ref.emit;
  var genMonthComponent = _ref2.genMonthComponent;
  var currentValue = Object(external_Vue_["inject"])('currentValue');
  var visibleMonth = Object(external_Vue_["ref"])([]);
  var updateFlag = Object(external_Vue_["ref"])(0);
  var state = Object(external_Vue_["reactive"])({
    months: []
  });

  var getBegin = function getBegin() {
    if (props.startDate) {
      return props.startDate;
    } else {
      var min = props.minDate || props.defaultValue;
      var max = props.maxDate || props.defaultValue;

      if (monthsBetween(min, max) < 6) {
        return props.minDate;
      } else {
        var date = new Date(max.getTime());
        date.setMonth(date.getMonth() - 6);
        return date;
      }
    }
  };

  Object(external_Vue_["onBeforeMount"])(function () {
    var _props$initialMonths = props.initialMonths,
        initialMonths = _props$initialMonths === void 0 ? 6 : _props$initialMonths;
    var begin = getBegin();

    for (var i = 0; i < initialMonths; i++) {
      canLoadNext() && genMonthData(begin, i);
    }

    visibleMonth.value = date_picker_base_toConsumableArray(state.months);
  });

  var canLoadPrev = function canLoadPrev() {
    var minDate = props.minDate;
    return !minDate || state.months.length <= 0 || +getMonthDate(minDate).firstDate < +state.months[0].firstDate;
  };

  var canLoadNext = function canLoadNext() {
    var maxDate = props.maxDate;
    return !maxDate || state.months.length <= 0 || +getMonthDate(maxDate).firstDate > +state.months[state.months.length - 1].firstDate;
  };

  var genMonthData = function genMonthData(date) {
    var addMonth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var copyDate = date;

    if (!copyDate) {
      copyDate = addMonth >= 0 ? state.months[state.months.length - 1].firstDate : state.months[0].firstDate;
    }

    if (!copyDate) {
      copyDate = new Date();
    }

    var locale = props.locale;

    var _getMonthDate = getMonthDate(copyDate, addMonth),
        firstDate = _getMonthDate.firstDate,
        lastDate = _getMonthDate.lastDate;

    var weeks = util_genWeekData(firstDate, props.minDate, props.maxDate);
    var title = util_formatDate(firstDate, locale ? locale.monthTitle : 'yyyy/MM', props.locale);
    var data = {
      title: title,
      firstDate: firstDate,
      lastDate: lastDate,
      weeks: weeks
    };
    data.component = genMonthComponent(data);

    if (addMonth >= 0) {
      state.months.push(data);
    } else {
      state.months.unshift(data);
    }

    var startDate = props.startDate,
        endDate = props.endDate;

    if (startDate) {
      selectDateRange(startDate, endDate);
    }

    return data;
  };

  var inDate = function inDate(date, tick) {
    return date <= tick && tick < date + 24 * 3600000;
  };

  var selectDateRange = function selectDateRange(startDate, endDate) {
    var clear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var getDateExtra = props.getDateExtra,
        type = props.type,
        onSelectHasDisableDate = props.onSelectHasDisableDate;
    var copyEndDate = endDate;

    if (type === 'one') {
      copyEndDate = undefined;
    }

    var time1 = getDateWithoutTime(startDate);
    var time2 = getDateWithoutTime(copyEndDate);
    var startDateTick = !time2 || time1 < time2 ? time1 : time2;
    var endDateTick = time2 && time1 > time2 ? time1 : time2;
    var startMonthDate = getMonthDate(new Date(startDateTick)).firstDate;
    var endMonthDate = endDateTick ? new Date(endDateTick) : getMonthDate(new Date(startDateTick)).lastDate;
    var unuseable = [];
    var needUpdate = false;
    state.months.filter(function (m) {
      return m.firstDate >= startMonthDate && m.firstDate <= endMonthDate;
    }).forEach(function (m) {
      m.weeks.forEach(function (w) {
        return w.filter(function (d) {
          if (!endDateTick) {
            return d.tick && inDate(startDateTick, d.tick);
          } else {
            return d.tick && d.tick >= startDateTick && d.tick <= endDateTick;
          }
        }).forEach(function (d) {
          var oldValue = d.selected;

          if (clear) {
            d.selected = SelectType.None;
          } else {
            var info = getDateExtra && getDateExtra(new Date(d.tick), date_picker_base_toConsumableArray(currentValue.value)) || {};

            if (d.outOfDate || info.disable) {
              unuseable.push(d.tick);
            }

            if (inDate(startDateTick, d.tick)) {
              if (type === 'one') {
                d.selected = SelectType.Single;
              } else if (!endDateTick) {
                d.selected = SelectType.Only;
              } else if (startDateTick !== endDateTick) {
                d.selected = SelectType.Start;
              } else {
                d.selected = SelectType.All;
              }
            } else if (inDate(endDateTick, d.tick)) {
              d.selected = SelectType.End;
            } else {
              d.selected = SelectType.Middle;
            }
          }

          needUpdate = needUpdate || d.selected !== oldValue;
        });
      });

      if (needUpdate && m.componentRef) {
        m.componentRef.updateWeeks();
      }
    });

    if (unuseable.length > 0) {
      if (onSelectHasDisableDate) {
        onSelectHasDisableDate(unuseable.map(function (tick) {
          return new Date(tick);
        }));
      } else {
        console.warn('Unusable date. You can handle by onSelectHasDisableDate.', unuseable);
      }
    }
  };

  var computeVisible = function computeVisible(clientHeight, scrollTop) {
    var needUpdate = false;
    var MAX_VIEW_PORT = clientHeight * 2;
    var MIN_VIEW_PORT = clientHeight; // 大缓冲区外过滤规则

    var filterFunc = function filterFunc(vm) {
      return vm.y && vm.height && vm.y + vm.height > scrollTop - MAX_VIEW_PORT && vm.y < scrollTop + clientHeight + MAX_VIEW_PORT;
    };

    if (props.infiniteOpt && visibleMonth.value.length > 12) {
      visibleMonth.value = visibleMonth.value.filter(filterFunc).sort(function (a, b) {
        return +a.firstDate - +b.firstDate;
      });
    } // 当小缓冲区不满时填充


    if (visibleMonth.value.length > 0) {
      var last = visibleMonth.value[visibleMonth.value.length - 1];

      if (last.y !== undefined && last.height && last.y + last.height < scrollTop + clientHeight + MIN_VIEW_PORT) {
        var lastIndex = state.months.indexOf(last);

        for (var i = 1; i <= 2; i++) {
          var index = lastIndex + i;

          if (index < state.months.length && visibleMonth.value.indexOf(state.months[index]) < 0) {
            visibleMonth.value.push(state.months[index]);
          } else {
            canLoadNext() && genMonthData(undefined, 1);
          }
        }

        needUpdate = true;
      }

      var first = visibleMonth.value[0];

      if (first.y !== undefined && first.height && first.y > scrollTop - MIN_VIEW_PORT) {
        var firstIndex = state.months.indexOf(first);

        for (var _i = 1; _i <= 2; _i++) {
          var _index = firstIndex - _i;

          if (_index >= 0 && visibleMonth.value.indexOf(state.months[_index]) < 0) {
            visibleMonth.value.unshift(state.months[_index]);
            needUpdate = true;
          }
        }
      }
    } else if (state.months.length > 0) {
      visibleMonth.value = state.months.filter(filterFunc);
      needUpdate = true;
    }

    return needUpdate;
  };

  var createOnScroll = function createOnScroll() {
    var timer;
    var clientHeight = 0;
    var scrollTop = 0;
    return function (data) {
      var client = data.client,
          top = data.top;
      clientHeight = client;
      scrollTop = top;

      if (timer) {
        return;
      }

      timer = setTimeout(function () {
        timer = undefined;

        if (computeVisible(clientHeight, scrollTop)) {
          updateFlag.value++;
        }
      }, 64);
    };
  };

  var onCellClick = function onCellClick(day) {
    if (!day.tick) {
      return;
    }

    emit('cellClick', new Date(day.tick));
  };

  Object(external_Vue_["watch"])(function () {
    return {
      startDate: props.startDate,
      endDate: props.endDate
    };
  }, function (newValue, oldValue) {
    if (oldValue.startDate) {
      selectDateRange(oldValue.startDate, oldValue.endDate, true);
    }

    if (newValue.startDate) {
      selectDateRange(newValue.startDate, newValue.endDate);
    }
  });
  return {
    onCellClick: onCellClick,
    createOnScroll: createOnScroll,
    visibleMonth: visibleMonth,
    updateFlag: updateFlag,
    genMonthData: genMonthData,
    state: state,
    canLoadPrev: canLoadPrev
  };
};
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date-picker-props.ts
/* harmony default export */ var date_picker_props = ({
  /** 默认日期，default: today */
  defaultValue: {
    type: Date
  },

  /** 选择值 */
  endDate: {
    type: Date
  },

  /** 日期扩展数据 */
  getDateExtra: {
    type: Function
  },

  /** 无限滚动优化（大范围选择），default: false */
  infiniteOpt: {
    type: Boolean
  },

  /** 初始化月个数，default: 6 */
  initialMonths: {
    type: Number
  },

  /** 本地化 */
  locale: {
    type: Object
  },

  /** 最大日期 */
  maxDate: {
    type: Date
  },

  /** 最小日期 */
  minDate: {
    type: Date
  },

  /** 选择区间包含不可用日期 */
  onSelectHasDisableDate: {
    type: Function
  },

  /** (web only) 样式前缀 */
  prefixCls: {
    type: String
  },

  /** 行大小 */
  rowSize: {
    type: String
  },

  /** 选择值 */
  startDate: {
    type: Date
  },

  /** 选择类型，default: range，one: 单日，range: 日期区间 */
  type: {
    type: String
  }
});
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date/single-month.tsx


function single_month_toConsumableArray(arr) { return single_month_arrayWithoutHoles(arr) || single_month_iterableToArray(arr) || single_month_unsupportedIterableToArray(arr) || single_month_nonIterableSpread(); }

function single_month_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function single_month_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return single_month_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return single_month_arrayLikeToArray(o, minLen); }

function single_month_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function single_month_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return single_month_arrayLikeToArray(arr); }

function single_month_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var SingleMonth = Object(external_Vue_["defineComponent"])({
  name: 'SingleMonth',
  props: {
    displayMode: {
      type: Boolean,
      default: false
    },
    locale: {
      type: Object
    },
    monthData: {
      type: Object
    },
    rowSize: {
      type: String,
      default: 'normal'
    },
    getDateExtra: {
      type: Function
    },
    callback: {
      type: Function
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var currentValue = Object(external_Vue_["inject"])('currentValue');
    var state = Object(external_Vue_["reactive"])({
      monthData: props.monthData
    });

    var genWeek = function genWeek(weeksData, index) {
      var getDateExtra = props.getDateExtra,
          displayMode = props.displayMode,
          monthData = props.monthData,
          locale = props.locale,
          rowSize = props.rowSize;
      var rowCls = 'row';

      if (rowSize === 'xl') {
        rowCls += ' row-xl';
      }

      return Object(external_Vue_["createVNode"])("div", {
        "key": index,
        "class": rowCls
      }, [weeksData.map(function (day, dayOfWeek) {
        var extra = getDateExtra && getDateExtra(new Date(day.tick), single_month_toConsumableArray(currentValue.value)) || {};
        var info = extra.info;
        var disable = extra.disable || day.outOfDate;
        var cls = 'date';
        var lCls = 'left';
        var rCls = 'right';
        var infoCls = 'info';

        if (dayOfWeek === 0 || dayOfWeek === 6) {
          cls += ' grey';
        }

        if (disable) {
          cls += ' disable';
        } else if (info) {
          cls += ' important';
        }

        if (displayMode && extra.selected) {
          cls += ' date-selected selected-single';
        }

        if (day.selected) {
          cls += ' date-selected';
          var styleType = day.selected;

          switch (styleType) {
            case SelectType.Only:
              info = locale.begin;
              infoCls += ' date-selected';
              break;

            case SelectType.All:
              info = locale.begin_over;
              infoCls += ' date-selected';
              break;

            case SelectType.Start:
              info = locale.begin;
              infoCls += ' date-selected';

              if (dayOfWeek === 6 || day.isLastOfMonth) {
                styleType = SelectType.All;
              }

              break;

            case SelectType.Middle:
              if (dayOfWeek === 0 || day.isFirstOfMonth) {
                if (day.isLastOfMonth || dayOfWeek === 6) {
                  styleType = SelectType.All;
                } else {
                  styleType = SelectType.Start;
                }
              } else if (dayOfWeek === 6 || day.isLastOfMonth) {
                styleType = SelectType.End;
              }

              break;

            case SelectType.End:
              info = locale.over;
              infoCls += ' date-selected';

              if (dayOfWeek === 0 || day.isFirstOfMonth) {
                styleType = SelectType.All;
              }

              break;
          }

          switch (styleType) {
            case SelectType.Single:
            case SelectType.Only:
            case SelectType.All:
              cls += ' selected-single';
              break;

            case SelectType.Start:
              cls += ' selected-start';
              rCls += ' date-selected';
              break;

            case SelectType.Middle:
              cls += ' selected-middle';
              lCls += ' date-selected';
              rCls += ' date-selected';
              break;

            case SelectType.End:
              cls += ' selected-end';
              lCls += ' date-selected';
              break;
          }
        }

        var defaultContent = [Object(external_Vue_["createVNode"])("div", {
          "key": "wrapper",
          "class": "date-wrapper"
        }, [Object(external_Vue_["createVNode"])("span", {
          "class": lCls
        }, null), Object(external_Vue_["createVNode"])("div", {
          "class": cls
        }, [day.dayOfMonth]), Object(external_Vue_["createVNode"])("span", {
          "class": rCls
        }, null)]), Object(external_Vue_["createVNode"])("div", {
          "key": "info",
          "class": infoCls
        }, [info])];
        return Object(external_Vue_["createVNode"])("div", {
          "key": dayOfWeek,
          "class": "cell ".concat(extra.cellCls || ''),
          "onClick": function onClick() {
            if (!disable) {
              if (!displayMode) {
                emit('cellClick', day, monthData);
              }
            }
          }
        }, [extra.cellRender ? extra.cellRender(new Date(day.tick)) : defaultContent]);
      })]);
    };

    var updateWeeks = function updateWeeks(monthData) {
      state.monthData = monthData !== null && monthData !== void 0 ? monthData : props.monthData;
    };

    Object(external_Vue_["watch"])(function () {
      return props.monthData;
    }, function (data) {
      updateWeeks(data);
    });
    Object(external_Vue_["onMounted"])(function () {
      props.callback({
        updateWeeks: updateWeeks
      });
    });

    var renderWeeks = function renderWeeks() {
      return state.monthData.weeks.map(function (week, index) {
        return genWeek(week, index);
      });
    };

    return {
      state: state,
      renderWeeks: renderWeeks
    };
  },
  render: function render() {
    var title = this.monthData.title;
    var renderWeeks = this.renderWeeks;
    return Object(external_Vue_["createVNode"])("div", {
      "class": "single-month"
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "month-title"
    }, [title]), Object(external_Vue_["createVNode"])("div", {
      "class": "date"
    }, [renderWeeks()])]);
  }
});
/* harmony default export */ var single_month = (SingleMonth);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date/week-panel.tsx


/* harmony default export */ var week_panel = (Object(external_Vue_["defineComponent"])({
  name: 'WeekPanel',
  props: {
    locale: {
      type: Object
    }
  },
  setup: function setup(props) {
    return {};
  },
  render: function render() {
    var locale = this.locale;
    var week = locale.week;
    return Object(external_Vue_["createVNode"])("div", {
      "class": "week-panel"
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "cell cell-grey"
    }, [week[0]]), Object(external_Vue_["createVNode"])("div", {
      "class": "cell"
    }, [week[1]]), Object(external_Vue_["createVNode"])("div", {
      "class": "cell"
    }, [week[2]]), Object(external_Vue_["createVNode"])("div", {
      "class": "cell"
    }, [week[3]]), Object(external_Vue_["createVNode"])("div", {
      "class": "cell"
    }, [week[4]]), Object(external_Vue_["createVNode"])("div", {
      "class": "cell"
    }, [week[5]]), Object(external_Vue_["createVNode"])("div", {
      "class": "cell cell-grey"
    }, [week[6]])]);
  }
}));
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date-picker.tsx






var DatePicker = Object(external_Vue_["defineComponent"])({
  name: 'DatePicker',
  props: Object.assign(Object.assign({}, date_picker_props), {
    displayMode: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var genMonthComponent = function genMonthComponent(data) {
      if (!data) {
        return;
      } // @ts-ignore


      return Object(external_Vue_["createVNode"])(single_month, {
        "key": data.title,
        "locale": props.locale || {},
        "monthData": data,
        "displayMode": props.displayMode,
        "rowSize": props.rowSize,
        "onCellClick": function onCellClick(day) {
          _onCellClick(day);
        },
        "getDateExtra": props.getDateExtra,
        "callback": function callback(dom) {
          data.componentRef = dom || data.componentRef || undefined;

          data.updateLayout = function () {
            computeHeight(data, dom);
          };

          data.updateLayout();
        }
      }, null);
    };

    var _useDatePickerBase = date_picker_base_useDatePickerBase(props, {
      emit: emit
    }, {
      genMonthComponent: genMonthComponent
    }),
        genMonthData = _useDatePickerBase.genMonthData,
        updateFlag = _useDatePickerBase.updateFlag,
        visibleMonth = _useDatePickerBase.visibleMonth,
        createOnScroll = _useDatePickerBase.createOnScroll,
        _onCellClick = _useDatePickerBase.onCellClick,
        canLoadPrev = _useDatePickerBase.canLoadPrev,
        state = _useDatePickerBase.state;

    var transform = Object(external_Vue_["ref"])('');
    var wrapper = Object(external_Vue_["ref"])(null);
    var panel = Object(external_Vue_["ref"])(null);
    var touchHandler = Object(external_Vue_["computed"])(function () {
      var initDelta = 0;
      var lastY = 0;
      var delta = initDelta;

      var onFinish = function onFinish() {
        if (delta > 40 && canLoadPrev()) {
          genMonthData(state.months[0].firstDate, -1);
          visibleMonth.value = state.months.slice(0, props.initialMonths);
          state.months.forEach(function (m) {
            m.updateLayout && m.updateLayout();
          });
          updateFlag.value++;
        }

        setTransform(panel.value.style, "translate3d(0,0,0)");
        setTransition(panel.value.style, '.3s');
        setTimeout(function () {
          panel.value && setTransition(panel.value.style, '');
        }, 300);
      };

      return {
        onTouchStart: function onTouchStart(evt) {
          lastY = evt.touches[0].screenY;
          delta = initDelta;
        },
        onTouchMove: function onTouchMove(evt) {
          var ele = evt.currentTarget;
          var isReachTop = ele.scrollTop === 0;

          if (isReachTop) {
            delta = evt.touches[0].screenY - lastY;

            if (delta > 0) {
              evt.preventDefault();

              if (delta > 80) {
                delta = 80;
              }
            } else {
              delta = 0;
            }

            setTransform(panel.value.style, "translate3d(0,".concat(delta, "px,0)"));
          }
        },
        onTouchEnd: function onTouchEnd() {
          onFinish();
        },
        onTouchCancel: function onTouchCancel() {
          onFinish();
        },
        onFinish: onFinish
      };
    });

    var computeHeight = function computeHeight(data, singleMonth) {
      if (singleMonth && singleMonth.wrapperDivDOM) {
        // preact, ref时dom有可能无height, offsetTop数据。
        if (!data.height && !singleMonth.wrapperDivDOM.clientHeight) {
          setTimeout(function () {
            return computeHeight(data, singleMonth);
          }, 500);
          return;
        }

        data.height = singleMonth.wrapperDivDOM.clientHeight || data.height || 0;
        data.y = singleMonth.wrapperDivDOM.offsetTop || data.y || 0;
      }
    };

    Object(external_Vue_["onMounted"])(function () {
      if (wrapper.value) {
        emit('layout', wrapper.value.clientHeight);
        var scrollHandler = createOnScroll();

        wrapper.value.onscroll = function (evt) {
          scrollHandler({
            client: wrapper.value.clientHeight,
            full: evt.currentTarget.clientHeight,
            top: evt.currentTarget.scrollTop
          });
        };
      }
    });

    var setTransform = function setTransform(nodeStyle, value) {
      transform.value = value;
      nodeStyle.transform = value;
      nodeStyle.webkitTransform = value;
    };

    var setTransition = function setTransition(nodeStyle, value) {
      nodeStyle.transition = value;
      nodeStyle.webkitTransition = value;
    };

    return {
      canLoadPrev: canLoadPrev,
      state: state,
      visibleMonth: visibleMonth,
      setPanel: function setPanel(el) {
        panel.value = el;
      },
      setWrapper: function setWrapper(el) {
        wrapper.value = el;
      },
      transform: transform,
      touchHandler: touchHandler,
      genMonthComponent: genMonthComponent
    };
  },
  render: function render() {
    var _this = this;

    var _this$prefixCls = this.prefixCls,
        prefixCls = _this$prefixCls === void 0 ? '' : _this$prefixCls,
        _this$locale = this.locale,
        locale = _this$locale === void 0 ? {} : _this$locale;
    var style = {
      transform: this.transform
    };
    var wrapperEvents = {
      onTouchstart: this.touchHandler.onTouchStart,
      onTouchmove: this.touchHandler.onTouchMove,
      onTouchend: this.touchHandler.onTouchEnd,
      onTouchcancel: this.touchHandler.onTouchCancel
    };
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, " date-picker")
    }, [Object(external_Vue_["createVNode"])(week_panel, {
      "locale": locale
    }, null), Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": "wrapper",
      "style": {
        overflowX: 'hidden',
        overflowY: 'visible'
      },
      "ref": this.setWrapper
    }, wrapperEvents), [Object(external_Vue_["createVNode"])("div", {
      "style": style,
      "ref": this.setPanel
    }, [this.canLoadPrev() && Object(external_Vue_["createVNode"])("div", {
      "class": "load-tip"
    }, [locale.loadPrevMonth]), Object(external_Vue_["createVNode"])("div", {
      "class": "months"
    }, [this.state.months.map(function (m) {
      var hidden = m.height && _this.visibleMonth.indexOf(m) < 0;

      if (hidden) {
        return Object(external_Vue_["createVNode"])("div", {
          "key": m.title + '_shallow',
          "style": {
            height: m.height
          }
        }, null);
      }

      return m.component;
    })])])])]);
  }
});
/* harmony default export */ var date_picker = (DatePicker);
// CONCATENATED MODULE: ./src/packages/utils/vue.ts
var ShapFlags;

(function (ShapFlags) {
  ShapFlags[ShapFlags["Comment"] = 0] = "Comment";
  ShapFlags[ShapFlags["Fragment"] = 16] = "Fragment";
})(ShapFlags || (ShapFlags = {}));

function vue_isFragment(nodeElement) {
  return nodeElement.shapeFlag === ShapFlags.Fragment;
}
var unwrapFragment = function unwrapFragment(node) {
  if (node.length === 1 && vue_isFragment(node[0])) {
    return unwrapFragment(node[0].children);
  }

  return node;
};
// CONCATENATED MODULE: ./src/packages/utils/vnode.ts
function utils_vnode_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { utils_vnode_typeof = function _typeof(obj) { return typeof obj; }; } else { utils_vnode_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return utils_vnode_typeof(obj); }


var vnode_camelizeRE = /-(\w)/g;

var vnode_camelize = function camelize(str) {
  return str.replace(vnode_camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
};

var vnode_parseStyleText = function parseStyleText() {
  var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var camel = arguments.length > 1 ? arguments[1] : undefined;
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);

      if (tmp.length > 1) {
        var k = camel ? vnode_camelize(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};

function vnode_isEmptyElement(node) {
  return node.shapeFlag === 0;
}
function vnode_filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return children.filter(function (c) {
    return !vnode_isEmptyElement(c);
  });
}
function isEmptySlot(slot) {
  if (!slot) {
    return true;
  }

  return slot().filter(function (it) {
    return !vnode_isEmptyElement(it);
  }).length === 0;
}
function vnode_cloneVNodes(vnodes, deep) {
  var len = vnodes.length;
  var res = new Array(len);

  for (var i = 0; i < len; i++) {
    res[i] = Object(external_Vue_["cloneVNode"])(vnodes[i]);
  }

  return res;
}
function setListeners(vnode) {
  var listeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!vnode.props) {
    vnode.props = {};
  }

  Object.keys(listeners).forEach(function (key) {
    var orgListener = vnode.props[key];
    var newListener = listeners[key];

    vnode.props[key] = function () {
      if (newListener) {
        newListener.apply(void 0, arguments);
      }

      if (orgListener) {
        orgListener.apply(void 0, arguments);
      }
    };
  });
}
function vnode_setProps(vnode) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!vnode) {
    return;
  }

  if (vnode.props) {
    Object.keys(nodeProps).forEach(function (key) {
      vnode.props[key] = nodeProps[key];
    });
  } else {
    vnode.props = nodeProps;
  }
}
function getNodeText(node) {
  if (node) {
    if (typeof node.children === 'string') {
      return node.children;
    } else if (Array.isArray(node.children)) {
      return node.children.map(function (it) {
        return getNodeText(it);
      }).join('');
    } else if (utils_vnode_typeof(node.children) === 'object') {
      var defaultSlot = node.children.default;

      if (node.children.default) {
        return defaultSlot().map(function (it) {
          return getNodeText(it);
        }).join('');
      } else {
        return '';
      }
    }
  }

  return undefined;
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/multi-picker.tsx





/* harmony default export */ var multi_picker = (Object(external_Vue_["defineComponent"])({
  name: 'MultiPickerMixin',
  props: {
    onValueChange: {},
    onScrollChange: {},
    prefixCls: {
      type: String
    },
    value: {
      type: Array
    }
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots,
        emit = _ref.emit;
    var stateValue = Object(external_Vue_["ref"])(props.value);

    var onChange = function onChange(i, v, cb) {
      var value = stateValue.value.concat();
      value[i] = v;

      if (cb) {
        cb(value, i);
      }
    };

    var onValueChange = function onValueChange(i, v) {
      var value = stateValue.value;
      value[i] = v;
      emit('update:value', value, i);
    };

    var onScrollChange = function onScrollChange(i, v) {
      onChange(i, v, function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        emit.apply(void 0, ['scroll-change'].concat(args));
      });
    };

    return {
      onValueChange: onValueChange,
      stateValue: stateValue,
      onScrollChange: onScrollChange
    };
  },
  render: function render() {
    var _this = this;

    var prefixCls = this.prefixCls,
        value = this.value;
    var colElements = this.$slots.default();
    unwrapFragment(colElements).forEach(function (col, i) {
      vnode_setProps(col, {
        value: value[i]
      });
      setListeners(col, {
        'onUpdate:value': function onUpdateValue(value) {
          _this.onValueChange(i, value);
        },
        scrollChange: function scrollChange(value) {
          _this.onScrollChange(i, value);
        }
      });
    });
    return Object(external_Vue_["createVNode"])("div", {
      "class": classnames_default()(prefixCls)
    }, [colElements]);
  }
}));
// CONCATENATED MODULE: ./src/packages/vmc-picker/picker-mixin.tsx


var PickerItem = Object(external_Vue_["defineComponent"])({
  name: 'PickerItem',
  props: {
    value: {},
    label: {}
  }
});
function picker_mixin_PickerMixin(ComposedComponent) {
  return Object(external_Vue_["defineComponent"])({
    name: 'PickerMixin',
    props: {
      data: {
        type: Array,
        required: true
      },
      value: {},
      disabled: {
        type: Boolean,
        default: false
      },
      itemStyle: {},
      prefixCls: {},
      indicatorStyle: {},
      indicatorClassName: {},
      defaultValue: {},
      noAnimate: {}
    },
    setup: function setup(props, _ref) {
      var slots = _ref.slots;

      var select = function select(value, itemHeight, scrollTo) {
        for (var i = 0, len = props.data.length; i < len; i++) {
          if (props.data[i].value === value) {
            selectByIndex(i, itemHeight, scrollTo);
            return;
          }
        }

        selectByIndex(0, itemHeight, scrollTo);
      };

      var selectByIndex = function selectByIndex(index, itemHeight, zscrollTo) {
        if (index < 0 || index >= props.data.length || !itemHeight) {
          return;
        }

        zscrollTo(index * itemHeight);
      };

      var computeChildIndex = function computeChildIndex(top, itemHeight, childrenLength) {
        var index = Math.round(top / itemHeight);
        return Math.min(index, childrenLength - 1);
      };

      var doScrollingComplete = function doScrollingComplete(top, itemHeight, fireValueChange) {
        var index = computeChildIndex(top, itemHeight, props.data.length);
        var child = props.data[index];

        if (child) {
          fireValueChange(child.value);
        } else if (console.warn) {
          console.warn('child not found', props.data, index);
        }
      };

      return {
        doScrollingComplete: doScrollingComplete,
        computeChildIndex: computeChildIndex,
        select: select
      };
    },
    render: function render() {
      var _this = this;

      var _a, _b;

      return Object(external_Vue_["createVNode"])(ComposedComponent, Object.assign(Object.assign(Object.assign({}, this.$props), this.$attrs), {
        doScrollingComplete: this.doScrollingComplete,
        computeChildIndex: this.computeChildIndex,
        select: this.select
      }), {
        default: function _default() {
          return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
        }
      });
    }
  });
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/picker-types.tsx
/* harmony default export */ var picker_types = ({
  disabled: {
    type: Boolean,
    default: false
  },
  value: {},
  itemStyle: {
    type: Object
  },

  /** web only */
  prefixCls: {
    type: String
  },
  indicatorStyle: {},
  indicatorClassName: {
    type: String
  },
  defaultValue: {}
});
// CONCATENATED MODULE: ./src/packages/vmc-picker/picker.tsx


function picker_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var Picker = Object(external_Vue_["defineComponent"])({
  name: 'Picker',
  props: Object.assign(Object.assign({}, picker_types), {
    data: {
      type: Array,
      required: true
    },
    computeChildIndex: {
      type: Function
    },
    select: {
      type: Function
    },
    doScrollingComplete: {
      type: Function
    },
    noAnimate: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var itemHeight = Object(external_Vue_["ref"])(null);
    var scrollValue = Object(external_Vue_["ref"])(null);
    var state = Object(external_Vue_["reactive"])({});
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      if (state.value !== value) {
        state.value = value;
        props.select(state.value, itemHeight.value, props.noAnimate ? scrollToWithoutAnimation : scrollTo);
      }
    });
    var rootRef = Object(external_Vue_["ref"])(null);
    var maskRef = Object(external_Vue_["ref"])(null);
    var contentRef = Object(external_Vue_["ref"])(null);
    var indicatorRef = Object(external_Vue_["ref"])(null);
    var scrollHandlers = Object(external_Vue_["computed"])(function () {
      var scrollY = -1;
      var lastY = 0;
      var startY = 0;
      var scrollDisabled = false;
      var isMoving = false;

      var setTransform = function setTransform(nodeStyle, value) {
        nodeStyle.transform = value;
        nodeStyle.webkitTransform = value;
      };

      var setTransition = function setTransition(nodeStyle, value) {
        nodeStyle.transition = value;
        nodeStyle.webkitTransition = value;
      };

      var scrollTo = function scrollTo(_x, y) {
        var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : .3;

        if (scrollY !== y) {
          scrollY = y;

          if (time && !props.noAnimate) {
            setTransition(contentRef.value.style, "cubic-bezier(0,0,0.2,1.15) ".concat(time, "s"));
          }

          setTransform(contentRef.value.style, "translate3d(0,".concat(-y, "px,0)"));
          setTimeout(function () {
            scrollingComplete();

            if (contentRef.value) {
              setTransition(contentRef.value.style, '');
            }
          }, +time * 1000);
        }
      };

      var Velocity = function () {
        var minInterval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;
        var maxInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
        var _time = 0;
        var _y = 0;
        var _velocity = 0;
        var recorder = {
          record: function record(y) {
            var now = +new Date();
            _velocity = (y - _y) / (now - _time);

            if (now - _time >= minInterval) {
              _velocity = now - _time <= maxInterval ? _velocity : 0;
              _y = y;
              _time = now;
            }
          },
          getVelocity: function getVelocity(y) {
            if (y !== _y) {
              recorder.record(y);
            }

            return _velocity;
          }
        };
        return recorder;
      }();

      var onFinish = function onFinish() {
        isMoving = false;
        var targetY = scrollY;
        var height = (props.data.length - 1) * itemHeight.value;
        var time = .3;
        var velocity = Velocity.getVelocity(targetY) * 4;

        if (velocity) {
          targetY = velocity * 40 + targetY;
          time = Math.abs(velocity) * .1;
        }

        if (targetY % itemHeight.value !== 0) {
          targetY = Math.round(targetY / itemHeight.value) * itemHeight.value;
        }

        if (targetY < 0) {
          targetY = 0;
        } else if (targetY > height) {
          targetY = height;
        }

        scrollTo(0, targetY, time < .3 ? .3 : time);
        onScrollChange();
      };

      var onStart = function onStart(y) {
        if (scrollDisabled) {
          return;
        }

        isMoving = true;
        startY = y;
        lastY = scrollY;
      };

      var onMove = function onMove(y) {
        if (scrollDisabled || !isMoving) {
          return;
        }

        scrollY = lastY - y + startY;
        Velocity.record(scrollY);
        onScrollChange();
        setTransform(contentRef.value.style, "translate3d(0,".concat(-scrollY, "px,0)"));
      };

      return {
        touchstart: function touchstart(evt) {
          return onStart(evt.touches[0].pageY);
        },
        mousedown: function mousedown(evt) {
          return onStart(evt.pageY);
        },
        touchmove: function touchmove(evt) {
          evt.preventDefault();
          onMove(evt.touches[0].pageY);
        },
        mousemove: function mousemove(evt) {
          evt.preventDefault();
          onMove(evt.pageY);
        },
        touchend: function touchend() {
          return onFinish();
        },
        touchcancel: function touchcancel() {
          return onFinish();
        },
        mouseup: function mouseup() {
          return onFinish();
        },
        getValue: function getValue() {
          return scrollY;
        },
        scrollTo: scrollTo,
        setDisabled: function setDisabled() {
          var disabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
          scrollDisabled = disabled;
        }
      };
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      Object.keys(scrollHandlers.value).forEach(function (key) {
        if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {
          rootRef.value.removeEventListener(key, scrollHandlers.value[key]);
        }
      });
    });

    var scrollTo = function scrollTo(top) {
      scrollHandlers.value.scrollTo(0, top);
    };

    var scrollToWithoutAnimation = function scrollToWithoutAnimation(top) {
      scrollHandlers.value.scrollTo(0, top, 0);
    };

    var fireValueChange = function fireValueChange(value) {
      if (value !== state.value) {
        if (props.value === undefined) {
          state.value = value;
        }

        emit('update:value', value);
      }
    };

    var onScrollChange = function onScrollChange() {
      var top = scrollHandlers.value.getValue();

      if (top >= 0) {
        var index = props.computeChildIndex(top, itemHeight.value, props.data.length);

        if (scrollValue.value !== index) {
          scrollValue.value = index;
          var child = props.data[index];
          emit('scroll-change', child.value);
        }
      }
    };

    var scrollingComplete = function scrollingComplete() {
      var top = scrollHandlers.value.getValue();

      if (top >= 0) {
        props.doScrollingComplete(top, itemHeight.value, fireValueChange);
      }
    };

    {
      var valueState;
      var value = props.value,
          defaultValue = props.defaultValue;

      if (value !== undefined) {
        valueState = value;
      } else if (defaultValue !== undefined) {
        valueState = defaultValue;
      } else {
        valueState = props.data[0] && props.data[0].value;
      }

      state.value = valueState;
    }
    Object(external_Vue_["onMounted"])(function () {
      var rootHeight = rootRef.value.clientHeight; // https://github.com/react-component/m-picker/issues/18

      var itemHeightValue = itemHeight.value = indicatorRef.value.clientHeight;
      var num = Math.floor(rootHeight / itemHeightValue);

      if (num % 2 === 0) {
        num--;
      }

      num--;
      num /= 2;
      contentRef.value.style.padding = "".concat(itemHeightValue * num, "px 0");
      indicatorRef.value.style.top = "".concat(itemHeightValue * num, "px");
      maskRef.value.style.backgroundSize = "100% ".concat(itemHeightValue * num, "px");
      scrollHandlers.value.setDisabled(props.disabled);
      props.select(state.value, itemHeight.value, scrollTo);
      var passiveSupported = false;

      try {
        var options = Object.defineProperty({}, 'passive', {
          get: function get() {
            passiveSupported = true;
          }
        });
        window.addEventListener('test', null, options);
      } catch (err) {}

      var willPreventDefault = passiveSupported ? {
        passive: false
      } : false;
      var willNotPreventDefault = passiveSupported ? {
        passive: true
      } : false;
      Object.keys(scrollHandlers.value).forEach(function (key) {
        if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {
          var pd = key.indexOf('move') >= 0 ? willPreventDefault : willNotPreventDefault;
          rootRef.value.addEventListener(key, scrollHandlers.value[key], pd);
        }
      });
    });
    Object(external_Vue_["onUpdated"])(function () {
      props.select(state.value, itemHeight.value, scrollToWithoutAnimation);
      scrollHandlers.value.setDisabled(props.disabled);
    });
    return {
      setRootRef: function setRootRef(el) {
        rootRef.value = el;
      },
      setMaskRef: function setMaskRef(el) {
        maskRef.value = el;
      },
      setContentRef: function setContentRef(el) {
        contentRef.value = el;
      },
      setIndicatorRef: function setIndicatorRef(el) {
        indicatorRef.value = el;
      },
      state: state
    };
  },
  render: function render() {
    var _this$$props = this.$props,
        prefixCls = _this$$props.prefixCls,
        itemStyle = _this$$props.itemStyle,
        indicatorStyle = _this$$props.indicatorStyle,
        _this$$props$indicato = _this$$props.indicatorClassName,
        indicatorClassName = _this$$props$indicato === void 0 ? '' : _this$$props$indicato;
    var stateValue = this.state.value;
    var itemClassName = "".concat(prefixCls, "-item");
    var selectedItemClassName = "".concat(itemClassName, " ").concat(prefixCls, "-item-selected");

    var map = function map(item) {
      var style = item.style,
          value = item.value,
          label = item.label,
          _item$class = item.class,
          className = _item$class === void 0 ? '' : _item$class;
      return Object(external_Vue_["createVNode"])("div", {
        "style": Object.assign(Object.assign({}, itemStyle), style),
        "class": "".concat(stateValue === value ? selectedItemClassName : itemClassName, " ").concat(className),
        "key": value
      }, [label]);
    };

    var items = this.data.map(map);

    var pickerCls = picker_defineProperty({}, prefixCls, true);

    return Object(external_Vue_["createVNode"])("div", {
      "class": classnames_default()(pickerCls),
      "ref": this.setRootRef
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-mask"),
      "ref": this.setMaskRef
    }, null), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-indicator ").concat(indicatorClassName),
      "ref": this.setIndicatorRef,
      "style": indicatorStyle
    }, null), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-content"),
      "ref": this.setContentRef
    }, [items])]);
  }
});
/* harmony default export */ var vmc_picker_picker = (picker_mixin_PickerMixin(Picker));
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/locale/zh_CN.tsx
/* harmony default export */ var zh_CN = ({
  year: '年',
  month: '月',
  day: '日',
  hour: '时',
  minute: '分',
  am: '上午',
  pm: '下午'
});
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/date-picker-props.tsx

var DATE = 'date';
/* harmony default export */ var vmc_date_picker_date_picker_props = ({
  onChange: {},
  value: {
    type: Date
  },
  defaultDate: {
    type: Date,
    default: function _default() {
      return new Date();
    }
  },
  minDate: {
    type: Date
  },
  maxDate: {
    type: Date
  },
  minHour: {
    type: Number
  },
  maxHour: {
    type: Number
  },
  minMinute: {
    type: Number
  },
  maxMinute: {
    type: Number
  },
  mode: {
    type: String,
    default: DATE
  },
  disabled: {
    type: Boolean,
    default: false
  },
  locale: {
    type: Object,
    default: zh_CN
  },
  minuteStep: {
    type: Number,
    default: 1
  },
  formatMonth: {
    type: Function
  },
  formatDay: {
    type: Function
  },
  itemStyle: {
    type: Function
  },
  prefixCls: {
    type: String,
    default: 'rmc-date-picker'
  },
  rootNativeProps: {},
  pickerPrefixCls: {
    type: String,
    default: 'rmc-picker'
  },
  use12Hours: {
    type: Boolean,
    default: false
  }
});
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/date-picker.tsx


function date_picker_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function date_picker_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var HOURS_OF_DAY = 24;
var HOURS_HALF_DAY = 12;

function getDaysInMonth(date) {
  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
}

function pad(n) {
  return n < 10 ? "0".concat(n) : n;
}

function cloneDate(date) {
  return new Date(+date);
}

function setMonth(date, month) {
  date.setDate(Math.min(date.getDate(), getDaysInMonth(new Date(date.getFullYear(), month))));
  date.setMonth(month);
}

var DATETIME = 'datetime';
var date_picker_DATE = 'date';
var TIME = 'time';
var MONTH = 'month';
var YEAR = 'year';
var ONE_DAY = HOURS_OF_DAY * 60 * 60 * 1000;
/* harmony default export */ var vmc_date_picker_date_picker = (Object(external_Vue_["defineComponent"])({
  name: 'DatePicker',
  props: Object.assign({}, vmc_date_picker_date_picker_props),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var state = Object(external_Vue_["reactive"])({
      value: props.value || props.defaultDate,
      values: null
    });

    var getMinDate = function getMinDate() {
      return props.minDate || getDefaultMinDate();
    };

    var getMaxDate = function getMaxDate() {
      return props.maxDate || getDefaultMaxDate();
    };

    var clipDate = function clipDate(date) {
      var mode = props.mode;
      var minDate = getMinDate();
      var maxDate = getMaxDate();

      if (mode === DATETIME) {
        if (date < minDate) {
          return cloneDate(minDate);
        }

        if (date > maxDate) {
          return cloneDate(maxDate);
        }
      } else if (mode === date_picker_DATE || mode === YEAR || mode === MONTH) {
        if (minDate.getTime() >= date.getTime() + ONE_DAY) {
          return cloneDate(minDate);
        }

        if (date.getTime() >= maxDate.getTime() + ONE_DAY) {
          return cloneDate(maxDate);
        }
      } else if (mode === TIME) {
        var maxHour = maxDate.getHours();
        var maxMinutes = maxDate.getMinutes();
        var minHour = minDate.getHours();
        var minMinutes = minDate.getMinutes();
        var hour = date.getHours();
        var minutes = date.getMinutes();

        if (hour < minHour || hour === minHour && minutes < minMinutes) {
          return cloneDate(minDate);
        }

        if (hour > maxHour || hour === maxHour && minutes > maxMinutes) {
          return cloneDate(maxDate);
        }
      }

      return date;
    };

    var getDate = function getDate() {
      return clipDate(state.value || getDefaultMinDate());
    };

    var getDateData = function getDateData() {
      var locale = props.locale,
          formatMonth = props.formatMonth,
          formatDay = props.formatDay,
          mode = props.mode;
      var date = getDate();
      var selYear = date.getFullYear();
      var selMonth = date.getMonth();
      var minDateYear = getMinYear();
      var maxDateYear = getMaxYear();
      var minDateMonth = getMinMonth();
      var maxDateMonth = getMaxMonth();
      var minDateDay = getMinDay();
      var maxDateDay = getMaxDay();
      var years = [];

      for (var i = minDateYear; i <= maxDateYear; i++) {
        years.push({
          value: i,
          label: "".concat(i).concat(locale.year)
        });
      }

      var yearCol = {
        key: 'year',
        props: {
          children: years
        }
      };

      if (mode === YEAR) {
        return [yearCol];
      }

      var months = [];
      var minMonth = 0;
      var maxMonth = 11;

      if (minDateYear === selYear) {
        minMonth = minDateMonth;
      }

      if (maxDateYear === selYear) {
        maxMonth = maxDateMonth;
      }

      for (var _i = minMonth; _i <= maxMonth; _i++) {
        var label = formatMonth ? formatMonth(_i, date) : "".concat(_i + 1 + locale.month);
        months.push({
          value: _i,
          label: label
        });
      }

      var monthCol = {
        key: 'month',
        props: {
          children: months
        }
      };

      if (mode === MONTH) {
        return [yearCol, monthCol];
      }

      var days = [];
      var minDay = 1;
      var maxDay = getDaysInMonth(date);

      if (minDateYear === selYear && minDateMonth === selMonth) {
        minDay = minDateDay;
      }

      if (maxDateYear === selYear && maxDateMonth === selMonth) {
        maxDay = maxDateDay;
      }

      for (var _i2 = minDay; _i2 <= maxDay; _i2++) {
        var _label = formatDay ? formatDay(_i2, date) : _i2 + locale.day;

        days.push({
          value: _i2,
          label: _label
        });
      }

      return [yearCol, monthCol, {
        key: 'day',
        props: {
          children: days
        }
      }];
    };

    var getValueCols = function getValueCols() {
      var minDate = getMinDate();
      var maxDate = getMaxDate();

      if (minDate > maxDate) {
        throw new Error('最大日期不能小于最小日期');
      }

      var mode = props.mode,
          use12Hours = props.use12Hours;
      var date = getDate();
      var cols = [];
      var value = [];

      if (mode === YEAR) {
        return {
          cols: getDateData(),
          value: [date.getFullYear()]
        };
      }

      if (mode === MONTH) {
        return {
          cols: getDateData(),
          value: [date.getFullYear(), date.getMonth()]
        };
      }

      if (mode === DATETIME || mode === date_picker_DATE) {
        cols = getDateData();
        value = [date.getFullYear(), date.getMonth(), date.getDate()];
      }

      if (mode === DATETIME || mode === TIME) {
        var time = getTimeData(date);
        cols = cols.concat(time.cols);
        var hour = date.getHours();
        var dtValue = [hour, time.selMinute];
        var nhour = hour;

        if (use12Hours) {
          nhour = hour === 0 ? HOURS_HALF_DAY : hour > HOURS_HALF_DAY ? hour - HOURS_HALF_DAY : hour;
          dtValue = [nhour, time.selMinute, hour >= HOURS_HALF_DAY ? 1 : 0];
        }

        value = value.concat(dtValue);
      }

      return {
        value: value,
        cols: cols
      };
    };

    var defaultMinDate = Object(external_Vue_["ref"])(null);
    var defaultMaxDate = Object(external_Vue_["ref"])(null);
    var store = Object(external_Vue_["inject"])('store');

    var getDefaultMinDate = function getDefaultMinDate() {
      if (!defaultMinDate.value) {
        defaultMinDate.value = new Date(2000, 1, 1, 0, 0, 0);
      }

      return defaultMinDate.value;
    };

    var getDefaultMaxDate = function getDefaultMaxDate() {
      if (!defaultMaxDate.value) {
        defaultMaxDate.value = new Date(2099, 1, 1, 23, 59, 59);
      }

      return defaultMaxDate.value;
    };

    var getMinYear = function getMinYear() {
      return getMinDate().getFullYear();
    };

    var getMaxYear = function getMaxYear() {
      return getMaxDate().getFullYear();
    };

    var getMinMonth = function getMinMonth() {
      return getMinDate().getMonth();
    };

    var getMaxMonth = function getMaxMonth() {
      return getMaxDate().getMonth();
    };

    var getMinDay = function getMinDay() {
      return getMinDate().getDate();
    };

    var getMaxDay = function getMaxDay() {
      return getMaxDate().getDate();
    };

    var getMinHour = function getMinHour() {
      return getMinDate().getHours();
    };

    var getMaxHour = function getMaxHour() {
      return getMaxDate().getHours();
    };

    var getMinMinute = function getMinMinute() {
      return getMinDate().getMinutes();
    };

    var getMaxMinute = function getMaxMinute() {
      return getMaxDate().getMinutes();
    };

    var getDisplayHour = function getDisplayHour(rawHour) {
      // 12 hour am (midnight 00:00) -> 12 hour pm (noon 12:00) -> 12 hour am (midnight 00:00)
      if (props.use12Hours) {
        if (rawHour === 0) {
          return HOURS_HALF_DAY;
        }

        if (rawHour > HOURS_HALF_DAY) {
          return rawHour - HOURS_HALF_DAY;
        }
      }

      return rawHour;
    };

    var getTimeData = function getTimeData(date) {
      var _props$minHour = props.minHour,
          minHour = _props$minHour === void 0 ? 0 : _props$minHour,
          _props$maxHour = props.maxHour,
          maxHour = _props$maxHour === void 0 ? HOURS_OF_DAY - 1 : _props$maxHour,
          _props$minMinute = props.minMinute,
          minMinute = _props$minMinute === void 0 ? 0 : _props$minMinute,
          _props$maxMinute = props.maxMinute,
          maxMinute = _props$maxMinute === void 0 ? 59 : _props$maxMinute;
      var mode = props.mode,
          locale = props.locale,
          minuteStep = props.minuteStep,
          use12Hours = props.use12Hours;
      var minDateMinute = getMinMinute();
      var maxDateMinute = getMaxMinute();
      var minDateHour = getMinHour();
      var maxDateHour = getMaxHour();
      var hour = date.getHours();

      if (mode === DATETIME) {
        var year = date.getFullYear();
        var month = date.getMonth();
        var day = date.getDate();
        var minDateYear = getMinYear();
        var maxDateYear = getMaxYear();
        var minDateMonth = getMinMonth();
        var maxDateMonth = getMaxMonth();
        var minDateDay = getMinDay();
        var maxDateDay = getMaxDay();

        if (minDateYear === year && minDateMonth === month && minDateDay === day) {
          minHour = minDateHour;

          if (minDateHour === hour) {
            minMinute = minDateMinute;
          }
        }

        if (maxDateYear === year && maxDateMonth === month && maxDateDay === day) {
          maxHour = maxDateHour;

          if (maxDateHour === hour) {
            maxMinute = maxDateMinute;
          }
        }
      } else {
        minHour = minDateHour;

        if (minDateHour === hour) {
          minMinute = minDateMinute;
        }

        maxHour = maxDateHour;

        if (maxDateHour === hour) {
          maxMinute = maxDateMinute;
        }
      }

      var hours = [];

      if (minHour === 0 && maxHour === 0 || minHour !== 0 && maxHour !== 0) {
        minHour = getDisplayHour(minHour);
      } else if (minHour === 0 && use12Hours) {
        minHour = 1;
        hours.push({
          value: '0',
          label: locale.hour ? '12' + locale.hour : '12'
        });
      }

      maxHour = getDisplayHour(maxHour);

      for (var i = minHour; i <= maxHour; i++) {
        hours.push({
          value: i,
          label: locale.hour ? i + locale.hour : pad(i)
        });
      }

      var minutes = [];
      var selMinute = date.getMinutes();

      for (var _i3 = minMinute; _i3 <= maxMinute; _i3 += minuteStep) {
        minutes.push({
          value: _i3,
          label: locale.minute ? _i3 + locale.minute : pad(_i3)
        });

        if (selMinute > _i3 && selMinute < _i3 + minuteStep) {
          minutes.push({
            value: selMinute,
            label: locale.minute ? selMinute + locale.minute : pad(selMinute)
          });
        }
      }

      var cols = [{
        key: 'hours',
        props: {
          children: hours
        }
      }, {
        key: 'minutes',
        props: {
          children: minutes
        }
      }].concat(use12Hours ? [{
        key: 'ampm',
        props: {
          children: [{
            value: 0,
            label: locale.am
          }, {
            value: 1,
            label: locale.pm
          }]
        }
      }] : []);
      return {
        cols: cols,
        selMinute: selMinute
      };
    };

    Object(external_Vue_["watch"])(function () {
      return state.value;
    }, function () {
      var _getValueCols = getValueCols(),
          value = _getValueCols.value;

      state.values = value;
    }, {
      immediate: true
    });
    Object(external_Vue_["onBeforeUpdate"])(function () {
      if (props.value !== undefined) {
        state.value = props.value || props.defaultDate;
      }
    });

    var getNewDate = function getNewDate(values, index) {
      var value = parseInt(values[index], 10);
      var mode = props.mode;
      var newValue = cloneDate(getDate());

      if (mode === DATETIME || mode === date_picker_DATE || mode === YEAR || mode === MONTH) {
        switch (index) {
          case 0:
            newValue.setFullYear(value);
            break;

          case 1:
            // Note: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth
            // e.g. from 2017-03-31 to 2017-02-28
            setMonth(newValue, value);
            break;

          case 2:
            newValue.setDate(value);
            break;

          case 3:
            setHours(newValue, value);
            break;

          case 4:
            newValue.setMinutes(value);
            break;

          case 5:
            setAmPm(newValue, value);
            break;

          default:
            break;
        }
      } else if (mode === TIME) {
        switch (index) {
          case 0:
            setHours(newValue, value);
            break;

          case 1:
            newValue.setMinutes(value);
            break;

          case 2:
            setAmPm(newValue, value);
            break;

          default:
            break;
        }
      }

      return clipDate(newValue);
    };

    var onOk = function onOk() {
      var newValue = cloneDate(getDate());
      newValue.setSeconds(0);
      var values = state.values;

      switch (props.mode) {
        case 'date':
          newValue.setFullYear(parseInt(values[0]));
          setMonth(newValue, values[1]);
          newValue.setDate(values[2]);
          setHours(newValue, 0);
          newValue.setMinutes(0);
          break;

        case 'year':
          newValue.setFullYear(parseInt(values[0]));
          break;

        case 'month':
          newValue.setFullYear(parseInt(values[0]));
          setMonth(newValue, values[1]);
          break;

        case 'time':
          setHours(newValue, values[0]);
          newValue.setMinutes(values[1]);

          if (props.use12Hours) {
            setAmPm(newValue, values[2]);
          }

          break;

        case 'datetime':
          newValue.setFullYear(parseInt(values[0]));
          setMonth(newValue, values[1]);
          newValue.setDate(values[2]);
          setHours(newValue, values[3]);
          newValue.setMinutes(values[4]);

          if (props.use12Hours) {
            setAmPm(newValue, values[5]);
          }

          break;
      }

      emit('update:value', newValue);
    };

    var onCancel = function onCancel() {
      var _getValueCols2 = getValueCols(),
          value = _getValueCols2.value;

      state.values = value;
      emit('cancel', value);
    };

    var onValueChange = function onValueChange(values, index) {
      if (!Array.isArray(values)) {
        throw new Error('MultiPicker返回了非法数值：' + JSON.stringify(values));
      }

      state.values = values;
      emit('change', getNewDate(values, index));
    };

    var setHours = function setHours(date, hour) {
      if (props.use12Hours) {
        var dh = date.getHours();
        var nhour;
        nhour = dh >= HOURS_HALF_DAY ? hour + HOURS_HALF_DAY : hour;
        nhour = nhour >= HOURS_OF_DAY ? 0 : nhour; // Make sure no more than one day

        date.setHours(nhour);
      } else {
        date.setHours(hour);
      }
    };

    var setAmPm = function setAmPm(date, index) {
      if (index === 0) {
        date.setTime(+date - ONE_DAY / 2);
      } else {
        date.setTime(+date + ONE_DAY / 2);
      }
    };

    if (store) {
      store.onOk = onOk;
      store.onCancel = onCancel;
    }

    return {
      getValueCols: getValueCols,
      state: state,
      onValueChange: onValueChange
    };
  },
  render: function render() {
    var _slot;

    var _this$getValueCols = this.getValueCols(),
        cols = _this$getValueCols.cols;

    var value = this.state.values;
    var disabled = this.disabled,
        pickerPrefixCls = this.pickerPrefixCls,
        prefixCls = this.prefixCls,
        itemStyle = this.itemStyle;

    var pickerProps = date_picker_defineProperty({
      style: {
        flexDirection: 'row',
        alignItems: 'center'
      },
      prefixCls: prefixCls,
      value: value
    }, 'onUpdate:value', this.onValueChange);

    return Object(external_Vue_["createVNode"])(multi_picker, pickerProps, date_picker_isSlot(_slot = cols.map(function (p) {
      return Object(external_Vue_["createVNode"])(vmc_picker_picker, {
        "disabled": disabled,
        "prefixCls": pickerPrefixCls,
        "itemStyle": itemStyle,
        "data": p.props.children,
        "style": {
          flex: 1
        },
        "key": p.key
      }, null);
    })) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
}));
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/index.tsx

// CONCATENATED MODULE: ./src/packages/vmc-calendar/time-picker.tsx



var MIN_DATE = new Date(0, 0, 0, 0, 0);
var MAX_DATE = new Date(9999, 11, 31, 23, 59, 59);
var TimePicker = Object(external_Vue_["defineComponent"])({
  name: 'TimePicker',
  props: {
    locale: {
      type: Object
    },
    prefixCls: String,
    pickerPrefixCls: String,
    title: String,
    defaultValue: Date,
    value: Date,
    minDate: {
      type: Date,
      default: function _default() {
        return MIN_DATE;
      }
    },
    maxDate: {
      type: Date,
      default: function _default() {
        return MAX_DATE;
      }
    },
    clientHeight: {
      type: Number
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var onDateChange = function onDateChange(date) {
      emit('change', date);
    };

    var getMinTime = function getMinTime(date) {
      var minDate = props.minDate;

      if (!date || date.getFullYear() > minDate.getFullYear() || date.getMonth() > minDate.getMonth() || date.getDate() > minDate.getDate()) {
        return MIN_DATE;
      }

      return minDate;
    };

    var getMaxTime = function getMaxTime(date) {
      var maxDate = props.maxDate;

      if (!date || date.getFullYear() < maxDate.getFullYear() || date.getMonth() < maxDate.getMonth() || date.getDate() < maxDate.getDate()) {
        return MAX_DATE;
      }

      return maxDate;
    };

    return {
      getMinTime: getMinTime,
      getMaxTime: getMaxTime,
      onDateChange: onDateChange
    };
  },
  render: function render() {
    var locale = this.locale,
        title = this.title,
        value = this.value,
        defaultValue = this.defaultValue,
        prefixCls = this.prefixCls,
        pickerPrefixCls = this.pickerPrefixCls,
        clientHeight = this.clientHeight;
    var date = value || defaultValue || undefined;
    var height = clientHeight && clientHeight * 3 / 8 - 52 || Number.POSITIVE_INFINITY;
    return Object(external_Vue_["createVNode"])("div", {
      "class": "time-picker"
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "title"
    }, [title]), Object(external_Vue_["createVNode"])(vmc_date_picker_date_picker, {
      "prefixCls": prefixCls,
      "pickerPrefixCls": pickerPrefixCls,
      "style": {
        height: height > 164 || height < 0 ? 164 : height,
        overflow: 'hidden'
      },
      "mode": "time",
      "value": date,
      "locale": locale,
      "minDate": this.getMinTime(date),
      "maxDate": this.getMaxTime(date),
      "onChange": this.onDateChange,
      "use12Hours": true
    }, null)]);
  }
});
/* harmony default export */ var time_picker = (TimePicker);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar-base.tsx


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }








var StateType = function StateType() {
  _classCallCheck(this, StateType);

  this.showTimePicker = false;
  this.startDate = undefined;
  this.endDate = undefined;
  this.disConfirmBtn = true;
  this.clientHight = 0;
  this.visible = false;
};
var calendar_base_useBaseCalendar = function useBaseCalendar(props, _ref) {
  var emit = _ref.emit;

  var _a;

  var currentValue = Object(external_Vue_["ref"])((_a = props.value) !== null && _a !== void 0 ? _a : []);
  Object(external_Vue_["provide"])('currentValue', currentValue);
  var state = Object(external_Vue_["reactive"])({
    showTimePicker: false,
    timePickerTitle: '',
    startDate: undefined,
    endDate: undefined,
    disConfirmBtn: true,
    clientHeight: 0,
    contentStyle: {},
    visible: props.visible
  });

  var onSelectedDate = function onSelectedDate(date) {
    var startDate = state.startDate,
        endDate = state.endDate;
    var onSelect = props.onSelect;

    if (onSelect) {
      var value = onSelect(date, [startDate, endDate]);

      if (value) {
        shortcutSelect(value[0], value[1]);
        return;
      }
    }

    setState(selectDate(date, false, {
      startDate: startDate,
      endDate: endDate
    }));
  };
  /** 选择区间包含不可用日期 */


  var onSelectHasDisableDate = function onSelectHasDisableDate(date) {
    onClear();
    emit('select-has-disable-date', date);
  };

  var onClose = function onClose() {
    setState(new StateType());
    emit('close');
    emit('update:visible', false);
  };
  /** 关闭时回调 */


  var onCancel = function onCancel() {
    emit('cancel');
    onClose();
  };
  /** 确认时回调 */


  var onConfirm = function onConfirm() {
    var startDate = state.startDate,
        endDate = state.endDate;

    if (startDate && endDate && +startDate > +endDate) {
      return emit('confirm', endDate, startDate);
    }

    emit('confirm', startDate, endDate);
    onClose();
  };

  var onTimeChange = function onTimeChange(timeValue) {
    var startDate = state.startDate,
        endDate = state.endDate;
    var date = null;

    if (endDate) {
      date = endDate;
    } else if (startDate) {
      date = startDate;
    }

    if (date) {
      var hours = timeValue[0];

      if (timeValue[2] === 1) {
        hours += 12;
        date.setUTCHours(timeValue[0]);
      }

      date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), timeValue[0], timeValue[1], 0);
    }

    if (endDate) {
      state.endDate = date;
    } else if (startDate) {
      state.startDate = date;
    }
  };
  /** 清除时回调 */


  var onClear = function onClear() {
    state.startDate = undefined;
    state.endDate = undefined;
    state.showTimePicker = false;
    emit('clear');
  };

  var setClientHeight = function setClientHeight(height) {
    state.clientHeight = height;
  };

  var renderCalendar = function renderCalendar() {
    var type = props.type,
        _props$locale = props.locale,
        locale = _props$locale === void 0 ? {} : _props$locale,
        prefixCls = props.prefixCls,
        pickTime = props.pickTime,
        showShortcut = props.showShortcut,
        renderHeader = props.renderHeader,
        infiniteOpt = props.infiniteOpt,
        initialMonths = props.initialMonths,
        defaultValue = props.defaultValue,
        minDate = props.minDate,
        maxDate = props.maxDate,
        getDateExtra = props.getDateExtra,
        rowSize = props.rowSize,
        defaultTimeValue = props.defaultTimeValue,
        renderShortcut = props.renderShortcut,
        timePickerPrefixCls = props.timePickerPrefixCls,
        timePickerPickerPrefixCls = props.timePickerPickerPrefixCls;
    var showTimePicker = state.showTimePicker,
        timePickerTitle = state.timePickerTitle,
        startDate = state.startDate,
        endDate = state.endDate,
        disConfirmBtn = state.disConfirmBtn,
        clientHeight = state.clientHeight;
    var headerProps = {
      locale: locale,
      showClear: !!startDate,
      onClear: onCancel,
      onCancel: onCancel
    };
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls)
    }, [Object(external_Vue_["createVNode"])("div", {
      "style": state.contentStyle,
      "class": "content"
    }, [renderHeader ? renderHeader(headerProps) : Object(external_Vue_["createVNode"])(calendar_header, Object(external_Vue_["mergeProps"])(headerProps, {
      "onClear": onCancel,
      "onCancel": onCancel
    }), null), Object(external_Vue_["createVNode"])(date_picker, {
      "locale": locale,
      "type": type,
      "value": endDate ? endDate : startDate,
      "displayMode": props.displayMode,
      "prefixCls": prefixCls,
      "infiniteOpt": infiniteOpt,
      "initialMonths": initialMonths,
      "currentStartDate": state.startDate,
      "currentEndDate": state.endDate,
      "defaultValue": defaultValue,
      "minDate": minDate,
      "maxDate": maxDate,
      "getDateExtra": getDateExtra,
      "onCellClick": onSelectedDate,
      "onSelectHasDisableDate": onSelectHasDisableDate,
      "onLayout": setClientHeight,
      "startDate": startDate,
      "endDate": endDate,
      "rowSize": rowSize
    }, null), !props.displayMode && showTimePicker && Object(external_Vue_["createVNode"])(time_picker, {
      "prefixCls": timePickerPrefixCls,
      "pickerPrefixCls": timePickerPickerPrefixCls,
      "locale": locale,
      "title": timePickerTitle,
      "defaultValue": defaultTimeValue,
      "value": endDate ? endDate : startDate,
      "onChange": onTimeChange,
      "minDate": minDate,
      "maxDate": maxDate,
      "clientHeight": clientHeight
    }, null), !props.displayMode && showShortcut && !showTimePicker && (renderShortcut ? renderShortcut(shortcutSelect) : Object(external_Vue_["createVNode"])(shortcut_panel, {
      "locale": locale,
      "onSelect": shortcutSelect
    }, null)), startDate && !props.displayMode && Object(external_Vue_["createVNode"])(confirm_panel, {
      "type": type,
      "locale": locale,
      "startDateTime": startDate,
      "endDateTime": endDate,
      "onConfirm": onConfirm,
      "disableBtn": disConfirmBtn,
      "formatStr": pickTime ? locale.dateTimeFormat : locale.dateFormat
    }, null)])]);
  };

  var selectDate = function selectDate(date) {
    var useDateTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var oldState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (!date) {
      return {};
    }

    var newState = {};
    var type = props.type,
        pickTime = props.pickTime,
        defaultTimeValue = props.defaultTimeValue,
        _props$locale2 = props.locale,
        locale = _props$locale2 === void 0 ? {} : _props$locale2;
    var newDate = pickTime && !useDateTime ? mergeDateTime(date, defaultTimeValue) : date;
    var startDate = oldState.startDate,
        endDate = oldState.endDate;

    switch (type) {
      case 'one':
        newState = Object.assign(Object.assign({}, newState), {
          startDate: newDate,
          disConfirmBtn: false
        });

        if (pickTime) {
          newState = Object.assign(Object.assign({}, newState), {
            timePickerTitle: locale.selectTime,
            showTimePicker: true
          });
        }

        break;

      case 'range':
        if (!startDate || endDate) {
          newState = Object.assign(Object.assign({}, newState), {
            startDate: newDate,
            endDate: undefined,
            disConfirmBtn: true
          });

          if (pickTime) {
            newState = Object.assign(Object.assign({}, newState), {
              timePickerTitle: locale.selectStartTime,
              showTimePicker: true
            });
          }
        } else {
          newState = Object.assign(Object.assign({}, newState), {
            timePickerTitle: +newDate >= +startDate ? locale.selectEndTime : locale.selectStartTime,
            disConfirmBtn: false,
            endDate: pickTime && !useDateTime && +newDate >= +startDate ? new Date(+mergeDateTime(newDate, startDate) + 3600000) : newDate
          });
        }

        break;
    }

    return newState;
  };

  var setState = function setState(newState) {
    Object.keys(newState).forEach(function (key) {
      state[key] = newState[key];
    });
  };

  var shortcutSelect = function shortcutSelect(startDate, endDate) {
    var newState = Object.assign(Object.assign({
      startDate: startDate
    }, selectDate(endDate, true, {
      startDate: startDate
    })), {
      showTimePicker: false
    });
    setState(newState);
  };

  Object(external_Vue_["watch"])(function () {
    return state;
  }, function (value) {
    currentValue.value[0] = value.startDate;
    currentValue.value[1] = value.endDate;
  }, {
    deep: true
  });
  Object(external_Vue_["watch"])(function () {
    return props.defaultValue;
  }, function () {
    if (props.visible && props.defaultValue) {
      shortcutSelect(props.defaultValue[0], props.defaultValue[1]);
    }
  });

  if (props.defaultValue) {
    var defaultValue = props.defaultValue;
    var newState = Object.assign(Object.assign({}, state), selectDate(defaultValue[1], true, {
      startDate: defaultValue[0]
    }));
    setState(newState);
  }

  return {
    state: state,
    shortcutSelect: shortcutSelect,
    onClose: onClose,
    renderCalendar: renderCalendar
  };
};
// CONCATENATED MODULE: ./src/packages/vmc-calendar/locale/zh_CN.ts
var zh_CN_locale = {
  title: '日期选择',
  today: '今天',
  month: '月',
  year: '年',
  am: '上午',
  pm: '下午',
  dateTimeFormat: 'yyyy年MM月dd日 星期w hh:mm',
  dateFormat: 'yyyy年MM月dd日 星期w',
  noChoose: '未选择',
  week: ['日', '一', '二', '三', '四', '五', '六'],
  clear: '清除',
  selectTime: '选择时间',
  selectStartTime: '选择开始时间',
  selectEndTime: '选择结束时间',
  start: '开始',
  end: '结束',
  begin: '起',
  over: '止',
  begin_over: '起/止',
  confirm: '确认',
  monthTitle: 'yyyy年MM月',
  loadPrevMonth: '加载上一个月',
  yesterday: '昨天',
  lastWeek: '近一周',
  lastMonth: '近一个月'
};
/* harmony default export */ var locale_zh_CN = (zh_CN_locale);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar-props.ts

/* harmony default export */ var calendar_props = ({
  defaultTimeValue: {
    type: Date,
    default: function _default() {
      return new Date(2000, 0, 1, 8);
    }
  },
  value: {
    type: Array
  },
  defaultValue: {
    type: Array
  },
  displayMode: {
    type: Boolean,
    default: false
  },
  enterDirection: {
    type: String,
    default: 'vertical'
  },
  getDateExtra: {
    type: Function
  },
  infiniteOpt: {
    type: Boolean,
    default: false
  },
  initialMonths: {
    type: Number
  },
  locale: {
    type: Object,
    default: function _default() {
      return locale_zh_CN;
    }
  },
  maxDate: {
    type: Date
  },
  minDate: {
    type: Date
  },
  onSelect: {
    type: Function
  },
  pickTime: {
    type: Boolean,
    default: false
  },
  prefixCls: {
    type: String,
    default: 'rmc-calendar'
  },
  renderHeader: {
    type: Function
  },
  renderShortcut: {
    type: Function
  },
  rowSize: {},
  showHeader: {
    type: Boolean,
    default: true
  },
  showShortcut: {
    type: Boolean,
    default: false
  },
  timePickerPickerPrefixCls: {
    type: String
  },
  timePickerPrefixCls: {
    type: String
  },
  title: {
    type: String
  },
  type: {
    type: String,
    default: 'range'
  },
  visible: {
    type: Boolean,
    default: false
  }
});
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar.tsx








function calendar_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var Calendar = Object(external_Vue_["defineComponent"])({
  DefaultHeader: calendar_header,
  DefaultShortcut: shortcut_panel,
  name: 'Calendar',
  props: Object.assign({}, calendar_props),
  setup: function setup(props, ctx) {
    var _useBaseCalendar = calendar_base_useBaseCalendar(props, ctx),
        state = _useBaseCalendar.state,
        shortcutSelect = _useBaseCalendar.shortcutSelect,
        onClose = _useBaseCalendar.onClose,
        renderCalendar = _useBaseCalendar.renderCalendar;

    Object(external_Vue_["watch"])(function () {
      return props.visible;
    }, function () {
      state.visible = props.visible;
      var defaultValue = props.defaultValue;

      if (props.visible && defaultValue) {
        shortcutSelect(defaultValue[0], defaultValue[1]);
      }
    });
    return {
      onClose: onClose,
      state: state,
      renderCalendar: renderCalendar
    };
  },
  render: function render() {
    var _slot;

    var height = document.body.clientHeight;
    var popupProps = {
      onClose: this.onClose,
      visible: this.visible,
      height: "".concat(height, "px"),
      width: "".concat(height, "px"),
      value: this.state.visible,
      placement: this.enterDirection === 'vertical' ? 'bottom' : 'right'
    };
    return Object(external_Vue_["createVNode"])(packages_popup, popupProps, calendar_isSlot(_slot = this.renderCalendar()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var calendar = (Calendar);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar-view.tsx



var CalendarView = Object(external_Vue_["defineComponent"])({
  name: 'CalendarView',
  props: Object.assign({}, calendar_props),
  setup: function setup(props, ctx) {
    var _useBaseCalendar = calendar_base_useBaseCalendar(props, ctx),
        renderCalendar = _useBaseCalendar.renderCalendar;

    return {
      renderCalendar: renderCalendar
    };
  },
  render: function render() {
    return this.renderCalendar();
  }
});
/* harmony default export */ var calendar_view = (CalendarView);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/index.ts



// CONCATENATED MODULE: ./src/packages/calendar/src/locale/zh_CN.tsx

/* harmony default export */ var src_locale_zh_CN = (locale_zh_CN);
// CONCATENATED MODULE: ./src/packages/calendar/src/index.tsx







/* harmony default export */ var calendar_src = (Object(external_Vue_["defineComponent"])({
  install: null,
  Item: null,
  name: 'Calendar',
  props: Object.assign(Object.assign({}, calendar_props), {
    prefixCls: {
      type: String,
      default: 'am-calendar'
    },
    timePickerPrefixCls: {
      type: String,
      default: 'am-picker'
    },
    timePickerPickerPrefixCls: {
      type: String,
      default: 'am-picker-col'
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var state = Object(external_Vue_["reactive"])({
      visible: props.visible,
      value: props.value
    });
    Object(external_Vue_["watch"])(function () {
      return props.visible;
    }, function (value) {
      state.visible = value;
    });

    var onConfirm = function onConfirm() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      emit.apply(void 0, ['confirm'].concat(args));
      emit('update:value', state.value);
      onClose();
    };

    var onClear = function onClear(e) {
      emit('clear', e);
    };

    var onClose = function onClose() {
      state.visible = false;
      state.value = props.value;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      emit.apply(void 0, ['close'].concat(args));
      emit('update:visible', false);
    };

    return {
      onClose: onClose,
      onConfirm: onConfirm,
      onClear: onClear,
      state: state
    };
  },
  render: function render() {
    var _this = this;

    var locale = getComponentLocale(this.$props, {}, 'Calendar', function () {
      return src_locale_zh_CN;
    });
    var Header = calendar.DefaultHeader;
    return Object(external_Vue_["createVNode"])(calendar, Object(external_Vue_["mergeProps"])(this.$props, {
      'value': _this.state.value,
      "onUpdate:value": function onUpdateValue($event) {
        return _this.state.value = $event;
      },
      "locale": locale,
      "renderHeader": function renderHeader(headerProps) {
        return Object(external_Vue_["createVNode"])(Header, Object(external_Vue_["mergeProps"])(headerProps, {
          "closeIcon": Object(external_Vue_["createVNode"])(packages_icon, {
            "type": "cross"
          }, null)
        }), null);
      },
      "onCancel": function onCancel() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        _this.$emit.apply(_this, ['cancel'].concat(args));
      },
      "onClose": this.onClose,
      "onConfirm": this.onConfirm,
      "onClear": this.onClear,
      "onSelectHasDisableDate": function onSelectHasDisableDate() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        _this.$emit.apply(_this, ['select-has-disable-date'].concat(args));
      },
      "visible": this.state.visible
    }), null);
  }
}));
// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/popover/style/index.css
var popover_style = __webpack_require__("03ca");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/popover/style/css.js

 // style dependencies
// deps-lint-skip: tooltip
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-util/Dom/contains.js
function contains(root, n) {
  if (!root) {
    return false;
  }

  return root.contains(n);
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/getRequestAnimationFrame.js
var availablePrefixs = ['moz', 'ms', 'webkit'];

function requestAnimationFramePolyfill() {
  var lastTime = 0;
  return function (callback) {
    var currTime = new Date().getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id = window.setTimeout(function () {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id;
  };
}

function getRequestAnimationFrame() {
  if (typeof window === 'undefined') {
    return function () {};
  }

  if (window.requestAnimationFrame) {
    // https://github.com/vuejs/vue/issues/4465
    return window.requestAnimationFrame.bind(window);
  }

  var prefix = availablePrefixs.filter(function (key) {
    return "".concat(key, "RequestAnimationFrame") in window;
  })[0];
  return prefix ? window["".concat(prefix, "RequestAnimationFrame")] : requestAnimationFramePolyfill();
}
function cancelRequestAnimationFrame(id) {
  if (typeof window === 'undefined') {
    return null;
  }

  if (window.cancelAnimationFrame) {
    return window.cancelAnimationFrame(id);
  }

  var prefix = availablePrefixs.filter(function (key) {
    return "".concat(key, "CancelAnimationFrame") in window || "".concat(key, "CancelRequestAnimationFrame") in window;
  })[0];
  return prefix ? (window["".concat(prefix, "CancelAnimationFrame")] || window["".concat(prefix, "CancelRequestAnimationFrame")]).call(this, id) : clearTimeout(id);
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/requestAnimationTimeout.js

var raf = getRequestAnimationFrame();
var requestAnimationTimeout_cancelAnimationTimeout = function cancelAnimationTimeout(frame) {
  return cancelRequestAnimationFrame(frame.id);
};
var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {
  var start = Date.now();

  function timeout() {
    if (Date.now() - start >= delay) {
      callback.call();
    } else {
      frame.id = raf(timeout);
    }
  }

  var frame = {
    id: raf(timeout)
  };
  return frame;
};
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-util/Dom/addEventListener.js

function addEventListenerWrap(target, eventType, cb, option) {
  if (target.addEventListener) {
    var opt = option;

    if (opt === undefined && _util_supportsPassive && (eventType === 'touchstart' || eventType === 'touchmove' || eventType === 'wheel')) {
      opt = {
        passive: false
      };
    }

    target.addEventListener(eventType, cb, opt);
  }

  return {
    remove: function remove() {
      if (target.removeEventListener) {
        target.removeEventListener(eventType, cb);
      }
    }
  };
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/node_modules/dom-align/dist-web/index.js
function dist_web_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    dist_web_typeof = function (obj) {
      return typeof obj;
    };
  } else {
    dist_web_typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return dist_web_typeof(obj);
}

function dist_web_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function dist_web_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      dist_web_ownKeys(source, true).forEach(function (key) {
        dist_web_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      dist_web_ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var vendorPrefix;
var jsCssMap = {
  Webkit: '-webkit-',
  Moz: '-moz-',
  // IE did it wrong again ...
  ms: '-ms-',
  O: '-o-'
};

function getVendorPrefix() {
  if (vendorPrefix !== undefined) {
    return vendorPrefix;
  }

  vendorPrefix = '';
  var style = document.createElement('p').style;
  var testProp = 'Transform';

  for (var key in jsCssMap) {
    if (key + testProp in style) {
      vendorPrefix = key;
    }
  }

  return vendorPrefix;
}

function dist_web_getTransitionName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "TransitionProperty") : 'transitionProperty';
}

function getTransformName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "Transform") : 'transform';
}
function setTransitionProperty(node, value) {
  var name = dist_web_getTransitionName();

  if (name) {
    node.style[name] = value;

    if (name !== 'transitionProperty') {
      node.style.transitionProperty = value;
    }
  }
}

function dist_web_setTransform(node, value) {
  var name = getTransformName();

  if (name) {
    node.style[name] = value;

    if (name !== 'transform') {
      node.style.transform = value;
    }
  }
}

function getTransitionProperty(node) {
  return node.style.transitionProperty || node.style[dist_web_getTransitionName()];
}
function getTransformXY(node) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());

  if (transform && transform !== 'none') {
    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
    return {
      x: parseFloat(matrix[12] || matrix[4], 0),
      y: parseFloat(matrix[13] || matrix[5], 0)
    };
  }

  return {
    x: 0,
    y: 0
  };
}
var matrix2d = /matrix\((.*)\)/;
var matrix3d = /matrix3d\((.*)\)/;
function setTransformXY(node, xy) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());

  if (transform && transform !== 'none') {
    var arr;
    var match2d = transform.match(matrix2d);

    if (match2d) {
      match2d = match2d[1];
      arr = match2d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[4] = xy.x;
      arr[5] = xy.y;
      dist_web_setTransform(node, "matrix(".concat(arr.join(','), ")"));
    } else {
      var match3d = transform.match(matrix3d)[1];
      arr = match3d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[12] = xy.x;
      arr[13] = xy.y;
      dist_web_setTransform(node, "matrix3d(".concat(arr.join(','), ")"));
    }
  } else {
    dist_web_setTransform(node, "translateX(".concat(xy.x, "px) translateY(").concat(xy.y, "px) translateZ(0)"));
  }
}

var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
var getComputedStyleX; // https://stackoverflow.com/a/3485654/3040605

function forceRelayout(elem) {
  var originalStyle = elem.style.display;
  elem.style.display = 'none';
  elem.offsetHeight; // eslint-disable-line

  elem.style.display = originalStyle;
}

function css(el, name, v) {
  var value = v;

  if (dist_web_typeof(name) === 'object') {
    for (var i in name) {
      if (name.hasOwnProperty(i)) {
        css(el, i, name[i]);
      }
    }

    return undefined;
  }

  if (typeof value !== 'undefined') {
    if (typeof value === 'number') {
      value = "".concat(value, "px");
    }

    el.style[name] = value;
    return undefined;
  }

  return getComputedStyleX(el, name);
}

function getClientPosition(elem) {
  var box;
  var x;
  var y;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement; // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式

  box = elem.getBoundingClientRect(); // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

  x = box.left;
  y = box.top; // In IE, most of the time, 2 extra pixels are added to the top and left
  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
  // IE6 standards mode, this border can be overridden by setting the
  // document element's border to zero -- thus, we cannot rely on the
  // offset always being 2 pixels.
  // In quirks mode, the offset can be determined by querying the body's
  // clientLeft/clientTop, but in standards mode, it is found by querying
  // the document element's clientLeft/clientTop.  Since we already called
  // getClientBoundingRect we have already forced a reflow, so it is not
  // too expensive just to query them all.
  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
  // 窗口边框标准是设 documentElement ,quirks 时设置 body
  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
  // 标准 ie 下 docElem.clientTop 就是 border-top
  // ie7 html 即窗口边框改变不了。永远为 2
  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x,
    top: y
  };
}

function getScroll(w, top) {
  var ret = w["page".concat(top ? 'Y' : 'X', "Offset")];
  var method = "scroll".concat(top ? 'Top' : 'Left');

  if (typeof ret !== 'number') {
    var d = w.document; // ie6,7,8 standard mode

    ret = d.documentElement[method];

    if (typeof ret !== 'number') {
      // quirks mode
      ret = d.body[method];
    }
  }

  return ret;
}

function getScrollLeft(w) {
  return getScroll(w);
}

function getScrollTop(w) {
  return getScroll(w, true);
}

function getOffset(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w);
  pos.top += getScrollTop(w);
  return pos;
}
/**
 * A crude way of determining if an object is a window
 * @member util
 */


function isWindow(obj) {
  // must use == for ie8

  /* eslint eqeqeq:0 */
  return obj !== null && obj !== undefined && obj == obj.window;
}

function getDocument(node) {
  if (isWindow(node)) {
    return node.document;
  }

  if (node.nodeType === 9) {
    return node;
  }

  return node.ownerDocument;
}

function _getComputedStyle(elem, name, cs) {
  var computedStyle = cs;
  var val = '';
  var d = getDocument(elem);
  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null); // https://github.com/kissyteam/kissy/issues/61

  if (computedStyle) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }

  return val;
}

var _RE_NUM_NO_PX = new RegExp("^(".concat(RE_NUM, ")(?!px)[a-z%]+$"), 'i');

var RE_POS = /^(top|right|bottom|left)$/;
var CURRENT_STYLE = 'currentStyle';
var RUNTIME_STYLE = 'runtimeStyle';
var LEFT = 'left';
var PX = 'px';

function _getComputedStyleIE(elem, name) {
  // currentStyle maybe null
  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]; // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
  // 在 ie 下不对，需要直接用 offset 方式
  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
  // From the awesome hack by Dean Edwards
  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
  // If we're not dealing with a regular pixel number
  // but a number that has a weird ending, we need to convert it to pixels
  // exclude left right for relativity

  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    // Remember the original values
    var style = elem.style;
    var left = style[LEFT];
    var rsLeft = elem[RUNTIME_STYLE][LEFT]; // prevent flashing of content

    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]; // Put in the new values to get a computed value out

    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
    ret = style.pixelLeft + PX; // Revert the changed values

    style[LEFT] = left;
    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }

  return ret === '' ? 'auto' : ret;
}

if (typeof window !== 'undefined') {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}

function getOffsetDirection(dir, option) {
  if (dir === 'left') {
    return option.useCssRight ? 'right' : dir;
  }

  return option.useCssBottom ? 'bottom' : dir;
}

function oppositeOffsetDirection(dir) {
  if (dir === 'left') {
    return 'right';
  } else if (dir === 'right') {
    return 'left';
  } else if (dir === 'top') {
    return 'bottom';
  } else if (dir === 'bottom') {
    return 'top';
  }
} // 设置 elem 相对 elem.ownerDocument 的坐标


function setLeftTop(elem, offset, option) {
  // set position first, in-case top/left are set even on static elem
  if (css(elem, 'position') === 'static') {
    elem.style.position = 'relative';
  }

  var presetH = -999;
  var presetV = -999;
  var horizontalProperty = getOffsetDirection('left', option);
  var verticalProperty = getOffsetDirection('top', option);
  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);

  if (horizontalProperty !== 'left') {
    presetH = 999;
  }

  if (verticalProperty !== 'top') {
    presetV = 999;
  }

  var originalTransition = '';
  var originalOffset = getOffset(elem);

  if ('left' in offset || 'top' in offset) {
    originalTransition = getTransitionProperty(elem) || '';
    setTransitionProperty(elem, 'none');
  }

  if ('left' in offset) {
    elem.style[oppositeHorizontalProperty] = '';
    elem.style[horizontalProperty] = "".concat(presetH, "px");
  }

  if ('top' in offset) {
    elem.style[oppositeVerticalProperty] = '';
    elem.style[verticalProperty] = "".concat(presetV, "px");
  } // force relayout


  forceRelayout(elem);
  var old = getOffset(elem);
  var originalStyle = {};

  for (var key in offset) {
    if (offset.hasOwnProperty(key)) {
      var dir = getOffsetDirection(key, option);
      var preset = key === 'left' ? presetH : presetV;
      var off = originalOffset[key] - old[key];

      if (dir === key) {
        originalStyle[dir] = preset + off;
      } else {
        originalStyle[dir] = preset - off;
      }
    }
  }

  css(elem, originalStyle); // force relayout

  forceRelayout(elem);

  if ('left' in offset || 'top' in offset) {
    setTransitionProperty(elem, originalTransition);
  }

  var ret = {};

  for (var _key in offset) {
    if (offset.hasOwnProperty(_key)) {
      var _dir = getOffsetDirection(_key, option);

      var _off = offset[_key] - originalOffset[_key];

      if (_key === _dir) {
        ret[_dir] = originalStyle[_dir] + _off;
      } else {
        ret[_dir] = originalStyle[_dir] - _off;
      }
    }
  }

  css(elem, ret);
}

function setTransform$1(elem, offset) {
  var originalOffset = getOffset(elem);
  var originalXY = getTransformXY(elem);
  var resultXY = {
    x: originalXY.x,
    y: originalXY.y
  };

  if ('left' in offset) {
    resultXY.x = originalXY.x + offset.left - originalOffset.left;
  }

  if ('top' in offset) {
    resultXY.y = originalXY.y + offset.top - originalOffset.top;
  }

  setTransformXY(elem, resultXY);
}

function setOffset(elem, offset, option) {
  if (option.ignoreShake) {
    var oriOffset = getOffset(elem);
    var oLeft = oriOffset.left.toFixed(0);
    var oTop = oriOffset.top.toFixed(0);
    var tLeft = offset.left.toFixed(0);
    var tTop = offset.top.toFixed(0);

    if (oLeft === tLeft && oTop === tTop) {
      return;
    }
  }

  if (option.useCssRight || option.useCssBottom) {
    setLeftTop(elem, offset, option);
  } else if (option.useCssTransform && getTransformName() in document.body.style) {
    setTransform$1(elem, offset);
  } else {
    setLeftTop(elem, offset, option);
  }
}

function each(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}

function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
}

var BOX_MODELS = ['margin', 'border', 'padding'];
var CONTENT_INDEX = -1;
var PADDING_INDEX = 2;
var BORDER_INDEX = 1;
var MARGIN_INDEX = 0;

function swap(elem, options, callback) {
  var old = {};
  var style = elem.style;
  var name; // Remember the old values, and insert the new ones

  for (name in options) {
    if (options.hasOwnProperty(name)) {
      old[name] = style[name];
      style[name] = options[name];
    }
  }

  callback.call(elem); // Revert the old values

  for (name in options) {
    if (options.hasOwnProperty(name)) {
      style[name] = old[name];
    }
  }
}

function getPBMWidth(elem, props, which) {
  var value = 0;
  var prop;
  var j;
  var i;

  for (j = 0; j < props.length; j++) {
    prop = props[j];

    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp = void 0;

        if (prop === 'border') {
          cssProp = "".concat(prop).concat(which[i], "Width");
        } else {
          cssProp = prop + which[i];
        }

        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }

  return value;
}

var domUtils = {
  getParent: function getParent(element) {
    var parent = element;

    do {
      if (parent.nodeType === 11 && parent.host) {
        parent = parent.host;
      } else {
        parent = parent.parentNode;
      }
    } while (parent && parent.nodeType !== 1 && parent.nodeType !== 9);

    return parent;
  }
};
each(['Width', 'Height'], function (name) {
  domUtils["doc".concat(name)] = function (refWin) {
    var d = refWin.document;
    return Math.max( // firefox chrome documentElement.scrollHeight< body.scrollHeight
    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
    d.documentElement["scroll".concat(name)], // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
    d.body["scroll".concat(name)], domUtils["viewport".concat(name)](d));
  };

  domUtils["viewport".concat(name)] = function (win) {
    // pc browser includes scrollbar in window.innerWidth
    var prop = "client".concat(name);
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop]; // 标准模式取 documentElement
    // backcompat 取 body

    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
  };
});
/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */

function getWH(elem, name, ex) {
  var extra = ex;

  if (isWindow(elem)) {
    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }

  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;
  var computedStyle = getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem);
  var cssBoxValue = 0;

  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
    borderBoxValue = undefined; // Fall back to computed then un computed css if necessary

    cssBoxValue = getComputedStyleX(elem, name);

    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    } // Normalize '', auto, and prepare for extra


    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }

  if (extra === undefined) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }

  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
  var val = borderBoxValue || cssBoxValue;

  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ['border', 'padding'], which);
    }

    return cssBoxValue;
  } else if (borderBoxValueOrIsBorderBox) {
    if (extra === BORDER_INDEX) {
      return val;
    }

    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which) : getPBMWidth(elem, ['margin'], which));
  }

  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);
}

var cssShow = {
  position: 'absolute',
  visibility: 'hidden',
  display: 'block'
}; // fix #119 : https://github.com/kissyteam/kissy/issues/119

function getWHIgnoreDisplay() {
  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
    args[_key2] = arguments[_key2];
  }

  var val;
  var elem = args[0]; // in case elem is window
  // elem.offsetWidth === undefined

  if (elem.offsetWidth !== 0) {
    val = getWH.apply(undefined, args);
  } else {
    swap(elem, cssShow, function () {
      val = getWH.apply(undefined, args);
    });
  }

  return val;
}

each(['width', 'height'], function (name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);

  domUtils["outer".concat(first)] = function (el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };

  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];

  domUtils[name] = function (elem, v) {
    var val = v;

    if (val !== undefined) {
      if (elem) {
        var computedStyle = getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);

        if (isBorderBox) {
          val += getPBMWidth(elem, ['padding', 'border'], which);
        }

        return css(elem, name, val);
      }

      return undefined;
    }

    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});

function mix(to, from) {
  for (var i in from) {
    if (from.hasOwnProperty(i)) {
      to[i] = from[i];
    }
  }

  return to;
}

var utils = {
  getWindow: function getWindow(node) {
    if (node && node.document && node.setTimeout) {
      return node;
    }

    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  getDocument: getDocument,
  offset: function offset(el, value, option) {
    if (typeof value !== 'undefined') {
      setOffset(el, value, option || {});
    } else {
      return getOffset(el);
    }
  },
  isWindow: isWindow,
  each: each,
  css: css,
  clone: function clone(obj) {
    var i;
    var ret = {};

    for (i in obj) {
      if (obj.hasOwnProperty(i)) {
        ret[i] = obj[i];
      }
    }

    var overflow = obj.overflow;

    if (overflow) {
      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          ret.overflow[i] = obj.overflow[i];
        }
      }
    }

    return ret;
  },
  mix: mix,
  getWindowScrollLeft: function getWindowScrollLeft(w) {
    return getScrollLeft(w);
  },
  getWindowScrollTop: function getWindowScrollTop(w) {
    return getScrollTop(w);
  },
  merge: function merge() {
    var ret = {};

    for (var i = 0; i < arguments.length; i++) {
      utils.mix(ret, i < 0 || arguments.length <= i ? undefined : arguments[i]);
    }

    return ret;
  },
  viewportWidth: 0,
  viewportHeight: 0
};
mix(utils, domUtils);

/**
 * 得到会导致元素显示不全的祖先元素
 */

var getParent = utils.getParent;

function getOffsetParent(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return null;
  } // ie 这个也不是完全可行

  /*
   <div style="width: 50px;height: 100px;overflow: hidden">
   <div style="width: 50px;height: 100px;position: relative;" id="d6">
   元素 6 高 100px 宽 50px<br/>
   </div>
   </div>
   */
  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
  //  In other browsers it only includes elements with position absolute, relative or
  // fixed, not elements with overflow set to auto or scroll.
  //        if (UA.ie && ieMode < 8) {
  //            return element.offsetParent;
  //        }
  // 统一的 offsetParent 方法


  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent;
  var positionStyle = utils.css(element, 'position');
  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';

  if (!skipStatic) {
    return element.nodeName.toLowerCase() === 'html' ? null : getParent(element);
  }

  for (parent = getParent(element); parent && parent !== body && parent.nodeType !== 9; parent = getParent(parent)) {
    positionStyle = utils.css(parent, 'position');

    if (positionStyle !== 'static') {
      return parent;
    }
  }

  return null;
}

var getParent$1 = utils.getParent;
function isAncestorFixed(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return false;
  }

  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent = null;

  for (parent = getParent$1(element); parent && parent !== body; parent = getParent$1(parent)) {
    var positionStyle = utils.css(parent, 'position');

    if (positionStyle === 'fixed') {
      return true;
    }
  }

  return false;
}

/**
 * 获得元素的显示部分的区域
 */

function getVisibleRectForElement(element, alwaysByViewport) {
  var visibleRect = {
    left: 0,
    right: Infinity,
    top: 0,
    bottom: Infinity
  };
  var el = getOffsetParent(element);
  var doc = utils.getDocument(element);
  var win = doc.defaultView || doc.parentWindow;
  var body = doc.body;
  var documentElement = doc.documentElement; // Determine the size of the visible rect by climbing the dom accounting for
  // all scrollable containers.

  while (el) {
    // clientWidth is zero for inline block elements in ie.
    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) && // body may have overflow set on it, yet we still get the entire
    // viewport. In some browsers, el.offsetParent may be
    // document.documentElement, so check for that too.
    el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {
      var pos = utils.offset(el); // add border

      pos.left += el.clientLeft;
      pos.top += el.clientTop;
      visibleRect.top = Math.max(visibleRect.top, pos.top);
      visibleRect.right = Math.min(visibleRect.right, // consider area without scrollBar
      pos.left + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.left);
    } else if (el === body || el === documentElement) {
      break;
    }

    el = getOffsetParent(el);
  } // Set element position to fixed
  // make sure absolute element itself don't affect it's visible area
  // https://github.com/ant-design/ant-design/issues/7601


  var originalPosition = null;

  if (!utils.isWindow(element) && element.nodeType !== 9) {
    originalPosition = element.style.position;
    var position = utils.css(element, 'position');

    if (position === 'absolute') {
      element.style.position = 'fixed';
    }
  }

  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);
  var documentWidth = documentElement.scrollWidth;
  var documentHeight = documentElement.scrollHeight; // scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.
  // We should cut this ourself.

  var bodyStyle = window.getComputedStyle(body);

  if (bodyStyle.overflowX === 'hidden') {
    documentWidth = win.innerWidth;
  }

  if (bodyStyle.overflowY === 'hidden') {
    documentHeight = win.innerHeight;
  } // Reset element position after calculate the visible area


  if (element.style) {
    element.style.position = originalPosition;
  }

  if (alwaysByViewport || isAncestorFixed(element)) {
    // Clip by viewport's size.
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY);
    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);
    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);
  } else {
    // Clip by document's size.
    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);
    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);
    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);
    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);
  }

  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
}

function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
  var pos = utils.clone(elFuturePos);
  var size = {
    width: elRegion.width,
    height: elRegion.height
  };

  if (overflow.adjustX && pos.left < visibleRect.left) {
    pos.left = visibleRect.left;
  } // Left edge inside and right edge outside viewport, try to resize it.


  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
    size.width -= pos.left + size.width - visibleRect.right;
  } // Right edge outside viewport, try to move it.


  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
    // 保证左边界和可视区域左边界对齐
    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
  } // Top edge outside viewport, try to move it.


  if (overflow.adjustY && pos.top < visibleRect.top) {
    pos.top = visibleRect.top;
  } // Top edge inside and bottom edge outside viewport, try to resize it.


  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
    size.height -= pos.top + size.height - visibleRect.bottom;
  } // Bottom edge outside viewport, try to move it.


  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
    // 保证上边界和可视区域上边界对齐
    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
  }

  return utils.mix(pos, size);
}

function getRegion(node) {
  var offset;
  var w;
  var h;

  if (!utils.isWindow(node) && node.nodeType !== 9) {
    offset = utils.offset(node);
    w = utils.outerWidth(node);
    h = utils.outerHeight(node);
  } else {
    var win = utils.getWindow(node);
    offset = {
      left: utils.getWindowScrollLeft(win),
      top: utils.getWindowScrollTop(win)
    };
    w = utils.viewportWidth(win);
    h = utils.viewportHeight(win);
  }

  offset.width = w;
  offset.height = h;
  return offset;
}

/**
 * 获取 node 上的 align 对齐点 相对于页面的坐标
 */
function getAlignOffset(region, align) {
  var V = align.charAt(0);
  var H = align.charAt(1);
  var w = region.width;
  var h = region.height;
  var x = region.left;
  var y = region.top;

  if (V === 'c') {
    y += h / 2;
  } else if (V === 'b') {
    y += h;
  }

  if (H === 'c') {
    x += w / 2;
  } else if (H === 'r') {
    x += w;
  }

  return {
    left: x,
    top: y
  };
}

function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
  var p1 = getAlignOffset(refNodeRegion, points[1]);
  var p2 = getAlignOffset(elRegion, points[0]);
  var diff = [p2.left - p1.left, p2.top - p1.top];
  return {
    left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),
    top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1])
  };
}

/**
 * align dom node flexibly
 * @author yiminghe@gmail.com
 */

function isFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
}

function isFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
}

function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
}

function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
}

function flip(points, reg, map) {
  var ret = [];
  utils.each(points, function (p) {
    ret.push(p.replace(reg, function (m) {
      return map[m];
    }));
  });
  return ret;
}

function flipOffset(offset, index) {
  offset[index] = -offset[index];
  return offset;
}

function convertOffset(str, offsetLen) {
  var n;

  if (/%$/.test(str)) {
    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
  } else {
    n = parseInt(str, 10);
  }

  return n || 0;
}

function normalizeOffset(offset, el) {
  offset[0] = convertOffset(offset[0], el.width);
  offset[1] = convertOffset(offset[1], el.height);
}
/**
 * @param el
 * @param tgtRegion 参照节点所占的区域: { left, top, width, height }
 * @param align
 */


function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
  var points = align.points;
  var offset = align.offset || [0, 0];
  var targetOffset = align.targetOffset || [0, 0];
  var overflow = align.overflow;
  var source = align.source || el;
  offset = [].concat(offset);
  targetOffset = [].concat(targetOffset);
  overflow = overflow || {};
  var newOverflowCfg = {};
  var fail = 0;
  var alwaysByViewport = !!(overflow && overflow.alwaysByViewport); // 当前节点可以被放置的显示区域

  var visibleRect = getVisibleRectForElement(source, alwaysByViewport); // 当前节点所占的区域, left/top/width/height

  var elRegion = getRegion(source); // 将 offset 转换成数值，支持百分比

  normalizeOffset(offset, elRegion);
  normalizeOffset(targetOffset, tgtRegion); // 当前节点将要被放置的位置

  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset); // 当前节点将要所处的区域

  var newElRegion = utils.merge(elRegion, elFuturePos); // 如果可视区域不能完全放置当前节点时允许调整

  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {
    if (overflow.adjustX) {
      // 如果横向不能放下
      if (isFailX(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var newPoints = flip(points, /[lr]/gi, {
          l: 'r',
          r: 'l'
        }); // 偏移量也反下

        var newOffset = flipOffset(offset, 0);
        var newTargetOffset = flipOffset(targetOffset, 0);
        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);

        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = newPoints;
          offset = newOffset;
          targetOffset = newTargetOffset;
        }
      }
    }

    if (overflow.adjustY) {
      // 如果纵向不能放下
      if (isFailY(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var _newPoints = flip(points, /[tb]/gi, {
          t: 'b',
          b: 't'
        }); // 偏移量也反下


        var _newOffset = flipOffset(offset, 1);

        var _newTargetOffset = flipOffset(targetOffset, 1);

        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);

        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = _newPoints;
          offset = _newOffset;
          targetOffset = _newTargetOffset;
        }
      }
    } // 如果失败，重新计算当前节点将要被放置的位置


    if (fail) {
      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);
      utils.mix(newElRegion, elFuturePos);
    }

    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);
    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect); // 检查反下后的位置是否可以放下了，如果仍然放不下：
    // 1. 复原修改过的定位参数

    if (isStillFailX || isStillFailY) {
      var _newPoints2 = points; // 重置对应部分的翻转逻辑

      if (isStillFailX) {
        _newPoints2 = flip(points, /[lr]/gi, {
          l: 'r',
          r: 'l'
        });
      }

      if (isStillFailY) {
        _newPoints2 = flip(points, /[tb]/gi, {
          t: 'b',
          b: 't'
        });
      }

      points = _newPoints2;
      offset = align.offset || [0, 0];
      targetOffset = align.targetOffset || [0, 0];
    } // 2. 只有指定了可以调整当前方向才调整


    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;
    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY; // 确实要调整，甚至可能会调整高度宽度

    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);
    }
  } // need judge to in case set fixed with in css on height auto element


  if (newElRegion.width !== elRegion.width) {
    utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);
  }

  if (newElRegion.height !== elRegion.height) {
    utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);
  } // https://github.com/kissyteam/kissy/issues/190
  // 相对于屏幕位置没变，而 left/top 变了
  // 例如 <div 'relative'><el absolute></div>


  utils.offset(source, {
    left: newElRegion.left,
    top: newElRegion.top
  }, {
    useCssRight: align.useCssRight,
    useCssBottom: align.useCssBottom,
    useCssTransform: align.useCssTransform,
    ignoreShake: align.ignoreShake
  });
  return {
    points: points,
    offset: offset,
    targetOffset: targetOffset,
    overflow: newOverflowCfg
  };
}
/**
 *  2012-04-26 yiminghe@gmail.com
 *   - 优化智能对齐算法
 *   - 慎用 resizeXX
 *
 *  2011-07-13 yiminghe@gmail.com note:
 *   - 增加智能对齐，以及大小调整选项
 **/

function isOutOfVisibleRect(target, alwaysByViewport) {
  var visibleRect = getVisibleRectForElement(target, alwaysByViewport);
  var targetRegion = getRegion(target);
  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
}

function alignElement(el, refNode, align) {
  var target = align.target || refNode;
  var refNodeRegion = getRegion(target);
  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target, align.overflow && align.overflow.alwaysByViewport);
  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);
}

alignElement.__getOffsetParent = getOffsetParent;
alignElement.__getVisibleRectForElement = getVisibleRectForElement;

/**
 * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.
 * If client position provided, will internal convert to page position.
 */

function dist_web_alignPoint(el, tgtPoint, align) {
  var pageX;
  var pageY;
  var doc = utils.getDocument(el);
  var win = doc.defaultView || doc.parentWindow;
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);

  if ('pageX' in tgtPoint) {
    pageX = tgtPoint.pageX;
  } else {
    pageX = scrollX + tgtPoint.clientX;
  }

  if ('pageY' in tgtPoint) {
    pageY = tgtPoint.pageY;
  } else {
    pageY = scrollY + tgtPoint.clientY;
  }

  var tgtRegion = {
    left: pageX,
    top: pageY,
    width: 0,
    height: 0
  };
  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight; // Provide default target point

  var points = [align.points[0], 'cc'];
  return doAlign(el, tgtRegion, _objectSpread2({}, align, {
    points: points
  }), pointInView);
}

/* harmony default export */ var dist_web = (alignElement);

//# sourceMappingURL=index.js.map

// EXTERNAL MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es = __webpack_require__("6dd8");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/util.js
function util_slicedToArray(arr, i) { return util_arrayWithHoles(arr) || util_iterableToArrayLimit(arr, i) || util_unsupportedIterableToArray(arr, i) || util_nonIterableRest(); }

function util_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function util_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return util_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return util_arrayLikeToArray(o, minLen); }

function util_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function util_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function util_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function vc_align_util_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { vc_align_util_typeof = function _typeof(obj) { return typeof obj; }; } else { vc_align_util_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return vc_align_util_typeof(obj); }



function buffer(fn, ms) {
  var timer;

  function clear() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }

  function bufferFn() {
    clear();
    timer = setTimeout(fn, ms);
  }

  bufferFn.clear = clear;
  return bufferFn;
}
function isSamePoint(prev, next) {
  if (prev === next) return true;
  if (!prev || !next) return false;

  if ('pageX' in next && 'pageY' in next) {
    return prev.pageX === next.pageX && prev.pageY === next.pageY;
  }

  if ('clientX' in next && 'clientY' in next) {
    return prev.clientX === next.clientX && prev.clientY === next.clientY;
  }

  return false;
}
function util_isWindow(obj) {
  return obj && vc_align_util_typeof(obj) === 'object' && obj.window === obj;
}
function isSimilarValue(val1, val2) {
  var int1 = Math.floor(val1);
  var int2 = Math.floor(val2);
  return Math.abs(int1 - int2) <= 1;
}
function restoreFocus(activeElement, container) {
  // Focus back if is in the container
  if (activeElement !== document.activeElement && contains(container, activeElement)) {
    activeElement.focus();
  }
}
function monitorResize(element, callback) {
  var prevWidth = null;
  var prevHeight = null;

  function onResize(_ref) {
    var _ref2 = util_slicedToArray(_ref, 1),
        target = _ref2[0].target;

    if (!document.documentElement.contains(target)) return;

    var _target$getBoundingCl = target.getBoundingClientRect(),
        width = _target$getBoundingCl.width,
        height = _target$getBoundingCl.height;

    var fixedWidth = Math.floor(width);
    var fixedHeight = Math.floor(height);

    if (prevWidth !== fixedWidth || prevHeight !== fixedHeight) {
      // https://webkit.org/blog/9997/resizeobserver-in-webkit/
      Promise.resolve().then(function () {
        callback({
          width: fixedWidth,
          height: fixedHeight
        });
      });
    }

    prevWidth = fixedWidth;
    prevHeight = fixedHeight;
  }

  var resizeObserver = new ResizeObserver_es["a" /* default */](onResize);

  if (element) {
    resizeObserver.observe(element);
  }

  return function () {
    resizeObserver.disconnect();
  };
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/hooks/useBuffer.js
/* harmony default export */ var useBuffer = (function (callback, buffer) {
  var called = false;
  var timeout = null;

  function cancelTrigger() {
    window.clearTimeout(timeout);
  }

  function trigger(force) {
    if (!called || force === true) {
      if (callback() === false) {
        // Not delay since callback cancelled self
        return;
      }

      called = true;
      cancelTrigger();
      timeout = window.setTimeout(function () {
        called = false;
      }, buffer);
    } else {
      cancelTrigger();
      timeout = window.setTimeout(function () {
        called = false;
        trigger();
      }, buffer);
    }
  }

  return [trigger, function () {
    called = false;
    cancelTrigger();
  }];
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-util/Dom/isVisible.js
/* harmony default export */ var isVisible = (function (element) {
  if (!element) {
    return false;
  }

  if (element.offsetParent) {
    return true;
  }

  if (element.getBBox) {
    var box = element.getBBox();

    if (box.width || box.height) {
      return true;
    }
  }

  if (element.getBoundingClientRect) {
    var _box = element.getBoundingClientRect();

    if (_box.width || _box.height) {
      return true;
    }
  }

  return false;
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/Align.js
function Align_slicedToArray(arr, i) { return Align_arrayWithHoles(arr) || Align_iterableToArrayLimit(arr, i) || Align_unsupportedIterableToArray(arr, i) || Align_nonIterableRest(); }

function Align_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function Align_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Align_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Align_arrayLikeToArray(o, minLen); }

function Align_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function Align_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function Align_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function Align_extends() { Align_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Align_extends.apply(this, arguments); }

function Align_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Align_typeof = function _typeof(obj) { return typeof obj; }; } else { Align_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Align_typeof(obj); }











function getElement(func) {
  if (typeof func !== 'function' || !func) return null;
  return func();
}

function getPoint(point) {
  if (Align_typeof(point) !== 'object' || !point) return null;
  return point;
}

/* harmony default export */ var Align = (Object(external_Vue_["defineComponent"])({
  props: {
    childrenProps: vue_types.object,
    align: vue_types.object.isRequired,
    target: vue_types.oneOfType([vue_types.func, vue_types.object]).def(function () {
      return window;
    }),
    monitorBufferTime: vue_types.number.def(50),
    monitorWindowResize: vue_types.looseBool.def(false),
    disabled: vue_types.looseBool.def(false)
  },
  setup: function setup() {
    return {
      aligned: false,
      sourceResizeMonitor: {
        cancel: function cancel() {}
      },
      resizeMonitor: {
        cancel: function cancel() {}
      },
      cacheInfo: {}
    };
  },
  data: function data() {
    this.prevProps = Align_extends({}, this.$props);

    var _useBuffer = useBuffer(this.goAlign, 0),
        _useBuffer2 = Align_slicedToArray(_useBuffer, 2),
        forceAlign = _useBuffer2[0],
        cancelForceAlign = _useBuffer2[1];

    return {
      forceAlign: forceAlign,
      cancelForceAlign: cancelForceAlign
    };
  },
  mounted: function mounted() {
    var _this = this;

    Object(external_Vue_["nextTick"])(function () {
      var props = _this.$props; // if parent ref not attached .... use document.getElementById

      !_this.aligned && _this.forceAlign();

      if (!props.disabled && props.monitorWindowResize) {
        _this.startMonitorWindowResize();
      }

      _this.startMonitorElementResize();

      _this.updateCache();
    });
  },
  updated: function updated() {
    var _this2 = this;

    Object(external_Vue_["nextTick"])(function () {
      var prevProps = _this2.prevProps;
      var props = _this2.$props;
      var reAlign = false;

      if (!props.disabled) {
        if (prevProps.disabled) {
          reAlign = true;
        } else {
          var _this2$cacheInfo = _this2.cacheInfo,
              lastElement = _this2$cacheInfo.element,
              lastPoint = _this2$cacheInfo.point;
          var currentElement = getElement(props.target);
          var currentPoint = getPoint(props.target);

          if (util_isWindow(lastElement) && util_isWindow(currentElement)) {
            // Skip if is window
            reAlign = false;
          } else if (lastElement && !currentElement && currentPoint || // Change from element to point
          lastPoint && currentPoint && currentElement // Change from point to element
          ) {
              reAlign = true;
            }
        }
      }

      if (reAlign) {
        _this2.forceAlign();
      } else {
        _this2.startMonitorElementResize();
      }

      if (props.monitorWindowResize && !props.disabled) {
        _this2.startMonitorWindowResize();
      } else {
        _this2.stopMonitorWindowResize();
      }

      _this2.prevProps = Align_extends({}, _this2.$props);

      _this2.updateCache();
    });
  },
  beforeUnmount: function beforeUnmount() {
    var _a, _b;

    this.stopMonitorWindowResize();
    (_a = this.resizeMonitor) === null || _a === void 0 ? void 0 : _a.cancel();
    (_b = this.sourceResizeMonitor) === null || _b === void 0 ? void 0 : _b.cancel();
    this.cancelForceAlign();
  },
  methods: {
    updateCache: function updateCache() {
      var element = getElement(this.$props.target);
      var point = getPoint(this.$props.target);
      this.cacheInfo = {
        element: element,
        point: point
      };
    },
    startMonitorElementResize: function startMonitorElementResize() {
      var props = this.$props;
      var _this$cacheInfo = this.cacheInfo,
          lastElement = _this$cacheInfo.element,
          lastPoint = _this$cacheInfo.point;
      var currentElement = getElement(props.target);
      var currentPoint = getPoint(props.target);
      var source = findDOMNode(this);
      var sourceResizeMonitor = this.sourceResizeMonitor,
          resizeMonitor = this.resizeMonitor;

      if (source !== sourceResizeMonitor.element) {
        sourceResizeMonitor === null || sourceResizeMonitor === void 0 ? void 0 : sourceResizeMonitor.cancel();
        sourceResizeMonitor.element = source;
        sourceResizeMonitor.cancel = monitorResize(source, this.forceAlign);
      }

      if (lastElement !== currentElement || !isSamePoint(lastPoint, currentPoint)) {
        this.forceAlign(); // Add resize observer

        if (resizeMonitor.element !== currentElement) {
          resizeMonitor === null || resizeMonitor === void 0 ? void 0 : resizeMonitor.cancel();
          resizeMonitor.element = currentElement;
          resizeMonitor.cancel = monitorResize(currentElement, this.forceAlign);
        }
      }
    },
    startMonitorWindowResize: function startMonitorWindowResize() {
      if (!this.resizeHandler) {
        this.bufferMonitor = buffer(this.forceAlign, this.$props.monitorBufferTime);
        this.resizeHandler = addEventListenerWrap(window, 'resize', this.bufferMonitor);
      }
    },
    stopMonitorWindowResize: function stopMonitorWindowResize() {
      if (this.resizeHandler) {
        this.bufferMonitor.clear();
        this.resizeHandler.remove();
        this.resizeHandler = null;
      }
    },
    goAlign: function goAlign() {
      var _this$$props = this.$props,
          disabled = _this$$props.disabled,
          target = _this$$props.target,
          align = _this$$props.align;

      if (!disabled && target) {
        var source = findDOMNode(this);
        var result;
        var element = getElement(target);
        var point = getPoint(target); // IE lose focus after element realign
        // We should record activeElement and restore later

        var activeElement = document.activeElement;

        if (element && isVisible(element)) {
          result = alignElement(source, element, align);
        } else if (point) {
          result = dist_web_alignPoint(source, point, align);
        }

        restoreFocus(activeElement, source);
        this.aligned = true;
        this.$attrs.onAlign && result && this.$attrs.onAlign(source, result);
        return true;
      }

      return false;
    }
  },
  render: function render() {
    var childrenProps = this.$props.childrenProps;
    var child = props_util_getSlot(this);

    if (child && childrenProps) {
      return cloneElement(child[0], childrenProps);
    }

    return child && child[0];
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/index.js
// based on vc-align 2.4.5

/* harmony default export */ var vc_align = (Align);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/LazyRenderBox.js




/* harmony default export */ var LazyRenderBox = ({
  name: 'LazyRenderBox',
  props: {
    visible: vue_types.looseBool,
    hiddenClassName: vue_types.string
  },
  render: function render() {
    var hiddenClassName = this.$props.hiddenClassName;
    var child = props_util_getSlot(this);

    if (hiddenClassName || child && child.length > 1 || child && child[0] && child[0].type === external_Vue_["Text"]) {
      // const cls = '';
      // if (!visible && hiddenClassName) {
      //   // cls += ` ${hiddenClassName}`
      // }
      return Object(external_Vue_["createVNode"])("div", null, [child]);
    }

    return child && child[0];
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/PopupInner.js



/* harmony default export */ var PopupInner = ({
  props: {
    hiddenClassName: vue_types.string.def(''),
    prefixCls: vue_types.string,
    visible: vue_types.looseBool
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var _this$$props = this.$props,
        prefixCls = _this$$props.prefixCls,
        visible = _this$$props.visible,
        hiddenClassName = _this$$props.hiddenClassName;
    return Object(external_Vue_["createVNode"])("div", {
      "class": !visible ? hiddenClassName : ''
    }, [Object(external_Vue_["createVNode"])(LazyRenderBox, {
      "class": "".concat(prefixCls, "-content"),
      "visible": visible
    }, {
      default: function _default() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    })]);
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/utils.js
function utils_extends() { utils_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return utils_extends.apply(this, arguments); }

function isPointsEq(a1, a2, isAlignPoint) {
  if (isAlignPoint) {
    return a1[0] === a2[0];
  }

  return a1[0] === a2[0] && a1[1] === a2[1];
}

function getAlignFromPlacement(builtinPlacements, placementStr, align) {
  var baseAlign = builtinPlacements[placementStr] || {};
  return utils_extends(utils_extends({}, baseAlign), align);
}
function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {
  var points = align.points;

  for (var placement in builtinPlacements) {
    if (builtinPlacements.hasOwnProperty(placement)) {
      if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {
        return "".concat(prefixCls, "-placement-").concat(placement);
      }
    }
  }

  return '';
}
function utils_noop() {}
function utils_saveRef(name, component) {
  this[name] = component;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/transition.js
var transition_this = undefined;



function transition_extends() { transition_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return transition_extends.apply(this, arguments); }

var transition_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};




function transition_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var getTransitionProps = function getTransitionProps(transitionName) {
  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (false) {}

  var transitionProps = transitionName ? transition_extends({
    appear: true,
    appearFromClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-prepare"),
    // appearActiveClass: `antdv-base-transtion`,
    appearToClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-active"),
    enterFromClass: "".concat(transitionName, "-enter ").concat(transitionName, "-enter-prepare"),
    // enterActiveClass: `antdv-base-transtion`,
    enterToClass: "".concat(transitionName, "-enter ").concat(transitionName, "-enter-active"),
    leaveFromClass: " ".concat(transitionName, "-leave"),
    leaveActiveClass: "".concat(transitionName, "-leave ").concat(transitionName, "-leave-active"),
    leaveToClass: "".concat(transitionName, "-leave ").concat(transitionName, "-leave-active")
  }, opt) : transition_extends({
    css: false
  }, opt);
  return transitionProps;
};
var getTransitionGroupProps = function getTransitionGroupProps(transitionName) {
  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var transitionProps = transitionName ? transition_extends({
    appear: true,
    appearFromClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-prepare"),
    appearActiveClass: "".concat(transitionName),
    appearToClass: "".concat(transitionName, "-appear ").concat(transitionName, "-appear-active"),
    enterFromClass: "".concat(transitionName, "-appear ").concat(transitionName, "-enter ").concat(transitionName, "-appear-prepare ").concat(transitionName, "-enter-prepare"),
    enterActiveClass: "".concat(transitionName),
    enterToClass: "".concat(transitionName, "-enter ").concat(transitionName, "-appear ").concat(transitionName, "-appear-active ").concat(transitionName, "-enter-active"),
    leaveActiveClass: "".concat(transitionName, " ").concat(transitionName, "-leave"),
    leaveToClass: "".concat(transitionName, "-leave-active")
  }, opt) : transition_extends({
    css: false
  }, opt);
  return transitionProps;
};
var Transition = external_Vue_["Transition"];
var TransitionGroup = external_Vue_["TransitionGroup"];

if (false) {}


/* harmony default export */ var transition = (Transition);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/Popup.js


function Popup_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Popup_typeof = function _typeof(obj) { return typeof obj; }; } else { Popup_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Popup_typeof(obj); }

function Popup_extends() { Popup_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Popup_extends.apply(this, arguments); }

function Popup_toConsumableArray(arr) { return Popup_arrayWithoutHoles(arr) || Popup_iterableToArray(arr) || Popup_unsupportedIterableToArray(arr) || Popup_nonIterableSpread(); }

function Popup_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function Popup_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Popup_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Popup_arrayLikeToArray(o, minLen); }

function Popup_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function Popup_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Popup_arrayLikeToArray(arr); }

function Popup_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }










function Popup_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var Popup = ({
  name: 'VCTriggerPopup',
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    visible: vue_types.looseBool,
    getClassNameFromAlign: vue_types.func,
    getRootDomNode: vue_types.func,
    align: vue_types.any,
    destroyPopupOnHide: vue_types.looseBool,
    prefixCls: vue_types.string,
    getContainer: vue_types.func,
    transitionName: vue_types.string,
    animation: vue_types.any,
    maskAnimation: vue_types.string,
    maskTransitionName: vue_types.string,
    mask: vue_types.looseBool,
    zIndex: vue_types.number,
    popupClassName: vue_types.any,
    popupStyle: vue_types.object.def(function () {
      return {};
    }),
    stretch: vue_types.string,
    point: vue_types.shape({
      pageX: vue_types.number,
      pageY: vue_types.number
    })
  },
  data: function data() {
    this.domEl = null;
    this.currentAlignClassName = undefined;
    this.transitionProps = {};
    this.savePopupRef = utils_saveRef.bind(this, 'popupInstance');
    this.saveAlignRef = utils_saveRef.bind(this, 'alignInstance');
    return {
      // Used for stretch
      stretchChecked: false,
      targetWidth: undefined,
      targetHeight: undefined
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      _this.rootNode = _this.getPopupDomNode();

      _this.setStretchSize();
    });
  },
  // 如添加会导致动画失效，如放开会导致快速输入时闪动 https://github.com/vueComponent/ant-design-vue/issues/1327，
  // 目前方案是保留动画，闪动问题(动画多次执行)进一步定位
  // beforeUpdate() {
  //   if (this.domEl && this.domEl.rcEndListener) {
  //     this.domEl.rcEndListener();
  //     this.domEl = null;
  //   }
  // },
  updated: function updated() {
    var _this2 = this;

    this.$nextTick(function () {
      _this2.setStretchSize();
    });
  },
  methods: {
    onAlign: function onAlign(popupDomNode, align) {
      var props = this.$props;
      var currentAlignClassName = props.getClassNameFromAlign(align); // FIX: https://github.com/react-component/trigger/issues/56
      // FIX: https://github.com/react-component/tooltip/issues/79

      if (this.currentAlignClassName !== currentAlignClassName) {
        this.currentAlignClassName = currentAlignClassName;
        popupDomNode.className = this.getClassName(currentAlignClassName, popupDomNode.className);
      }

      var onaAlign = this.$attrs.onaAlign;
      onaAlign && onaAlign(popupDomNode, align);
    },
    // Record size if stretch needed
    setStretchSize: function setStretchSize() {
      var _this$$props = this.$props,
          stretch = _this$$props.stretch,
          getRootDomNode = _this$$props.getRootDomNode,
          visible = _this$$props.visible;
      var _this$$data = this.$data,
          stretchChecked = _this$$data.stretchChecked,
          targetHeight = _this$$data.targetHeight,
          targetWidth = _this$$data.targetWidth;

      if (!stretch || !visible) {
        if (stretchChecked) {
          this.setState({
            stretchChecked: false
          });
        }

        return;
      }

      var $ele = getRootDomNode();
      if (!$ele) return;
      var height = $ele.offsetHeight;
      var width = $ele.offsetWidth;

      if (targetHeight !== height || targetWidth !== width || !stretchChecked) {
        this.setState({
          stretchChecked: true,
          targetHeight: height,
          targetWidth: width
        });
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      return findDOMNode(this.popupInstance);
    },
    getTargetElement: function getTargetElement() {
      return this.$props.getRootDomNode();
    },
    // `target` on `rc-align` can accept as a function to get the bind element or a point.
    // ref: https://www.npmjs.com/package/rc-align
    getAlignTarget: function getAlignTarget() {
      var point = this.$props.point;

      if (point) {
        return point;
      }

      return this.getTargetElement;
    },
    getMaskTransitionName: function getMaskTransitionName() {
      var props = this.$props;
      var transitionName = props.maskTransitionName;
      var animation = props.maskAnimation;

      if (!transitionName && animation) {
        transitionName = "".concat(props.prefixCls, "-").concat(animation);
      }

      return transitionName;
    },
    getTransitionName: function getTransitionName() {
      var props = this.$props;
      var transitionName = props.transitionName;
      var animation = props.animation;

      if (!transitionName) {
        if (typeof animation === 'string') {
          transitionName = "".concat(animation);
        } else if (animation && animation.props && animation.props.name) {
          transitionName = animation.props.name;
        }
      }

      return transitionName;
    },
    getClassName: function getClassName(currentAlignClassName) {
      var _this3 = this;

      var originClassName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      // 保留动画 class
      var enterActiveClass = [];

      if (this.transitionProps) {
        Object.keys(this.transitionProps).forEach(function (k) {
          if (typeof _this3.transitionProps[k] === 'string') {
            enterActiveClass.push.apply(enterActiveClass, Popup_toConsumableArray(_this3.transitionProps[k].split(' ')));
          }
        });
      }

      var classNames = originClassName.split(' ').filter(function (c) {
        return enterActiveClass.indexOf(c) !== -1;
      }).join(' ');
      return "".concat(this.$props.prefixCls, " ").concat(this.$attrs.class || '', " ").concat(this.$props.popupClassName, " ").concat(currentAlignClassName, " ").concat(classNames);
    },
    getPopupElement: function getPopupElement() {
      var _this4 = this;

      var _a, _b;

      var savePopupRef = this.savePopupRef;
      var props = this.$props,
          $attrs = this.$attrs,
          $slots = this.$slots,
          getTransitionName = this.getTransitionName;
      var _this$$data2 = this.$data,
          stretchChecked = _this$$data2.stretchChecked,
          targetHeight = _this$$data2.targetHeight,
          targetWidth = _this$$data2.targetWidth;
      var _$attrs$style = $attrs.style,
          style = _$attrs$style === void 0 ? {} : _$attrs$style;
      var onEvents = props_util_splitAttrs($attrs).onEvents;
      var align = props.align,
          visible = props.visible,
          prefixCls = props.prefixCls,
          animation = props.animation,
          popupStyle = props.popupStyle,
          getClassNameFromAlign = props.getClassNameFromAlign,
          destroyPopupOnHide = props.destroyPopupOnHide,
          stretch = props.stretch;
      var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align)); // const hiddenClassName = `${prefixCls}-hidden`

      if (!visible) {
        this.currentAlignClassName = null;
      }

      var sizeStyle = {};

      if (stretch) {
        // Stretch with target
        if (stretch.indexOf('height') !== -1) {
          sizeStyle.height = typeof targetHeight === 'number' ? "".concat(targetHeight, "px") : targetHeight;
        } else if (stretch.indexOf('minHeight') !== -1) {
          sizeStyle.minHeight = typeof targetHeight === 'number' ? "".concat(targetHeight, "px") : targetHeight;
        }

        if (stretch.indexOf('width') !== -1) {
          sizeStyle.width = typeof targetWidth === 'number' ? "".concat(targetWidth, "px") : targetWidth;
        } else if (stretch.indexOf('minWidth') !== -1) {
          sizeStyle.minWidth = typeof targetWidth === 'number' ? "".concat(targetWidth, "px") : targetWidth;
        } // Delay force align to makes ui smooth


        if (!stretchChecked) {
          // sizeStyle.visibility = 'hidden'
          setTimeout(function () {
            if (_this4.alignInstance) {
              _this4.alignInstance.forceAlign();
            }
          }, 0);
        }
      }

      var popupInnerProps = Popup_extends(Popup_extends({
        prefixCls: prefixCls,
        visible: visible,
        // hiddenClassName,
        class: className
      }, onEvents), {
        ref: savePopupRef,
        style: Popup_extends(Popup_extends(Popup_extends(Popup_extends({}, sizeStyle), popupStyle), style), this.getZIndexStyle())
      });

      var transitionName = getTransitionName();
      var useTransition = !!transitionName;
      var transitionProps = getTransitionProps(transitionName);

      if (Popup_typeof(animation) === 'object') {
        useTransition = true;
        transitionProps = Popup_extends(Popup_extends({}, transitionProps), animation);
      }

      if (!useTransition) {
        transitionProps = {};
      }

      this.transitionProps = transitionProps;

      if (destroyPopupOnHide) {
        return Object(external_Vue_["createVNode"])(Transition, transitionProps, {
          default: function _default() {
            return [visible ? Object(external_Vue_["createVNode"])(vc_align, {
              "target": _this4.getAlignTarget(),
              "key": "popup",
              "ref": _this4.saveAlignRef,
              "monitorWindowResize": true,
              "align": align,
              "onAlign": _this4.onAlign
            }, {
              default: function _default() {
                return [Object(external_Vue_["createVNode"])(PopupInner, popupInnerProps, {
                  default: function _default() {
                    return [(_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots)];
                  }
                })];
              }
            }) : null];
          }
        });
      }

      return Object(external_Vue_["createVNode"])(Transition, transitionProps, {
        default: function _default() {
          return [Object(external_Vue_["withDirectives"])(Object(external_Vue_["createVNode"])(vc_align, {
            "target": _this4.getAlignTarget(),
            "key": "popup",
            "ref": _this4.saveAlignRef,
            "monitorWindowResize": true,
            "disabled": !visible,
            "align": align,
            "onAlign": _this4.onAlign
          }, {
            default: function _default() {
              return [Object(external_Vue_["createVNode"])(PopupInner, popupInnerProps, {
                default: function _default() {
                  return [(_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots)];
                }
              })];
            }
          }), [[external_Vue_["vShow"], visible]])];
        }
      });
    },
    getZIndexStyle: function getZIndexStyle() {
      var style = {};
      var props = this.$props;

      if (props.zIndex !== undefined) {
        style.zIndex = props.zIndex;
      }

      return style;
    },
    getMaskElement: function getMaskElement() {
      var props = this.$props;
      var maskElement = null;

      if (props.mask) {
        var maskTransition = this.getMaskTransitionName();
        maskElement = Object(external_Vue_["withDirectives"])(Object(external_Vue_["createVNode"])(LazyRenderBox, {
          "style": this.getZIndexStyle(),
          "key": "mask",
          "class": "".concat(props.prefixCls, "-mask"),
          "visible": props.visible
        }, null), [[external_Vue_["vShow"], props.visible]]);

        if (maskTransition) {
          var _maskElement = function () {
            return maskElement;
          }();

          maskElement = Object(external_Vue_["createVNode"])(Transition, {
            "appear": true,
            "name": maskTransition
          }, Popup_isSlot(maskElement) ? maskElement : {
            default: function _default() {
              return [_maskElement];
            }
          });
        }
      }

      return maskElement;
    }
  },
  render: function render() {
    var getMaskElement = this.getMaskElement,
        getPopupElement = this.getPopupElement;
    return Object(external_Vue_["createVNode"])("div", null, [getMaskElement(), getPopupElement()]);
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/Portal.js



/* harmony default export */ var Portal = (Object(external_Vue_["defineComponent"])({
  name: 'Portal',
  props: {
    getContainer: vue_types.func.isRequired,
    children: vue_types.any.isRequired,
    didUpdate: vue_types.func
  },
  data: function data() {
    this._container = null;
    return {};
  },
  mounted: function mounted() {
    this.createContainer();
  },
  updated: function updated() {
    var _this = this;

    var didUpdate = this.$props.didUpdate;

    if (didUpdate) {
      Object(external_Vue_["nextTick"])(function () {
        didUpdate(_this.$props);
      });
    }
  },
  beforeUnmount: function beforeUnmount() {
    this.removeContainer();
  },
  methods: {
    createContainer: function createContainer() {
      this._container = this.$props.getContainer();
      this.$forceUpdate();
    },
    removeContainer: function removeContainer() {
      if (this._container && this._container.parentNode) {
        this._container.parentNode.removeChild(this._container);
      }
    }
  },
  render: function render() {
    var _this2 = this;

    if (this._container) {
      return Object(external_Vue_["createVNode"])(external_Vue_["Teleport"], {
        "to": this._container
      }, {
        default: function _default() {
          return [_this2.$props.children];
        }
      });
    }

    return null;
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/Trigger.js


function Trigger_extends() { Trigger_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Trigger_extends.apply(this, arguments); }
















function Trigger_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

function returnEmptyString() {
  return '';
}

function returnDocument() {
  return window.document;
}

var ALL_HANDLERS = ['onClick', 'onMousedown', 'onTouchstart', 'onMouseenter', 'onMouseleave', 'onFocus', 'onBlur', 'onContextmenu'];
/* harmony default export */ var Trigger = (Object(external_Vue_["defineComponent"])({
  name: 'Trigger',
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    action: vue_types.oneOfType([vue_types.string, vue_types.arrayOf(vue_types.string)]).def([]),
    showAction: vue_types.any.def([]),
    hideAction: vue_types.any.def([]),
    getPopupClassNameFromAlign: vue_types.any.def(returnEmptyString),
    // onPopupVisibleChange: PropTypes.func.def(noop),
    afterPopupVisibleChange: vue_types.func.def(utils_noop),
    popup: vue_types.any,
    popupStyle: vue_types.object.def(function () {
      return {};
    }),
    prefixCls: vue_types.string.def('rc-trigger-popup'),
    popupClassName: vue_types.string.def(''),
    popupPlacement: vue_types.string,
    builtinPlacements: vue_types.object,
    popupTransitionName: vue_types.oneOfType([vue_types.string, vue_types.object]),
    popupAnimation: vue_types.any,
    mouseEnterDelay: vue_types.number.def(0),
    mouseLeaveDelay: vue_types.number.def(0.1),
    zIndex: vue_types.number,
    focusDelay: vue_types.number.def(0),
    blurDelay: vue_types.number.def(0.15),
    getPopupContainer: vue_types.func,
    getDocument: vue_types.func.def(returnDocument),
    forceRender: vue_types.looseBool,
    destroyPopupOnHide: vue_types.looseBool.def(false),
    mask: vue_types.looseBool.def(false),
    maskClosable: vue_types.looseBool.def(true),
    // onPopupAlign: PropTypes.func.def(noop),
    popupAlign: vue_types.object.def(function () {
      return {};
    }),
    popupVisible: vue_types.looseBool,
    defaultPopupVisible: vue_types.looseBool.def(false),
    maskTransitionName: vue_types.oneOfType([vue_types.string, vue_types.object]),
    maskAnimation: vue_types.string,
    stretch: vue_types.string,
    alignPoint: vue_types.looseBool // Maybe we can support user pass position in the future

  },
  setup: function setup() {
    return {
      vcTriggerContext: Object(external_Vue_["inject"])('vcTriggerContext', {}),
      savePopupRef: Object(external_Vue_["inject"])('savePopupRef', utils_noop),
      dialogContext: Object(external_Vue_["inject"])('dialogContext', null)
    };
  },
  data: function data() {
    var _this = this;

    var props = this.$props;
    var popupVisible;

    if (hasProp(this, 'popupVisible')) {
      popupVisible = !!props.popupVisible;
    } else {
      popupVisible = !!props.defaultPopupVisible;
    }

    ALL_HANDLERS.forEach(function (h) {
      _this["fire".concat(h)] = function (e) {
        _this.fireEvents(h, e);
      };
    });
    this._component = null;
    this.focusTime = null;
    this.clickOutsideHandler = null;
    this.contextmenuOutsideHandler1 = null;
    this.contextmenuOutsideHandler2 = null;
    this.touchOutsideHandler = null;
    return {
      prevPopupVisible: popupVisible,
      sPopupVisible: popupVisible,
      point: null
    };
  },
  watch: {
    popupVisible: function popupVisible(val) {
      if (val !== undefined) {
        this.prevPopupVisible = this.sPopupVisible;
        this.sPopupVisible = val;
      }
    }
  },
  created: function created() {
    Object(external_Vue_["provide"])('vcTriggerContext', this);
  },
  deactivated: function deactivated() {
    this.setPopupVisible(false);
  },
  mounted: function mounted() {
    var _this2 = this;

    this.$nextTick(function () {
      _this2.updatedCal();
    });
  },
  updated: function updated() {
    var _this3 = this;

    this.$nextTick(function () {
      _this3.updatedCal();
    });
  },
  beforeUnmount: function beforeUnmount() {
    this.clearDelayTimer();
    this.clearOutsideHandler();
    clearTimeout(this.mouseDownTimeout);
  },
  methods: {
    updatedCal: function updatedCal() {
      var props = this.$props;
      var state = this.$data; // We must listen to `mousedown` or `touchstart`, edge case:
      // https://github.com/ant-design/ant-design/issues/5804
      // https://github.com/react-component/calendar/issues/250
      // https://github.com/react-component/trigger/issues/50

      if (state.sPopupVisible) {
        var currentDocument;

        if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextmenuToShow())) {
          currentDocument = props.getDocument();
          this.clickOutsideHandler = addEventListenerWrap(currentDocument, 'mousedown', this.onDocumentClick);
        } // always hide on mobile


        if (!this.touchOutsideHandler) {
          currentDocument = currentDocument || props.getDocument();
          this.touchOutsideHandler = addEventListenerWrap(currentDocument, 'touchstart', this.onDocumentClick, _util_supportsPassive ? {
            passive: false
          } : false);
        } // close popup when trigger type contains 'onContextmenu' and document is scrolling.


        if (!this.contextmenuOutsideHandler1 && this.isContextmenuToShow()) {
          currentDocument = currentDocument || props.getDocument();
          this.contextmenuOutsideHandler1 = addEventListenerWrap(currentDocument, 'scroll', this.onContextmenuClose);
        } // close popup when trigger type contains 'onContextmenu' and window is blur.


        if (!this.contextmenuOutsideHandler2 && this.isContextmenuToShow()) {
          this.contextmenuOutsideHandler2 = addEventListenerWrap(window, 'blur', this.onContextmenuClose);
        }
      } else {
        this.clearOutsideHandler();
      }
    },
    onMouseenter: function onMouseenter(e) {
      var mouseEnterDelay = this.$props.mouseEnterDelay;
      this.fireEvents('onMouseenter', e);
      this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);
    },
    onMouseMove: function onMouseMove(e) {
      this.fireEvents('onMousemove', e);
      this.setPoint(e);
    },
    onMouseleave: function onMouseleave(e) {
      this.fireEvents('onMouseleave', e);
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onPopupMouseenter: function onPopupMouseenter() {
      this.clearDelayTimer();
    },
    onPopupMouseleave: function onPopupMouseleave(e) {
      if (e && e.relatedTarget && !e.relatedTarget.setTimeout && this._component && this._component.getPopupDomNode && contains(this._component.getPopupDomNode(), e.relatedTarget)) {
        return;
      }

      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onFocus: function onFocus(e) {
      this.fireEvents('onFocus', e); // incase focusin and focusout

      this.clearDelayTimer();

      if (this.isFocusToShow()) {
        this.focusTime = Date.now();
        this.delaySetPopupVisible(true, this.$props.focusDelay);
      }
    },
    onMousedown: function onMousedown(e) {
      this.fireEvents('onMousedown', e);
      this.preClickTime = Date.now();
    },
    onTouchstart: function onTouchstart(e) {
      this.fireEvents('onTouchstart', e);
      this.preTouchTime = Date.now();
    },
    onBlur: function onBlur(e) {
      if (!contains(e.target, e.relatedTarget || document.activeElement)) {
        this.fireEvents('onBlur', e);
        this.clearDelayTimer();

        if (this.isBlurToHide()) {
          this.delaySetPopupVisible(false, this.$props.blurDelay);
        }
      }
    },
    onContextmenu: function onContextmenu(e) {
      e.preventDefault();
      this.fireEvents('onContextmenu', e);
      this.setPopupVisible(true, e);
    },
    onContextmenuClose: function onContextmenuClose() {
      if (this.isContextmenuToShow()) {
        this.close();
      }
    },
    onClick: function onClick(event) {
      this.fireEvents('onClick', event); // focus will trigger click

      if (this.focusTime) {
        var preTime;

        if (this.preClickTime && this.preTouchTime) {
          preTime = Math.min(this.preClickTime, this.preTouchTime);
        } else if (this.preClickTime) {
          preTime = this.preClickTime;
        } else if (this.preTouchTime) {
          preTime = this.preTouchTime;
        }

        if (Math.abs(preTime - this.focusTime) < 20) {
          return;
        }

        this.focusTime = 0;
      }

      this.preClickTime = 0;
      this.preTouchTime = 0; // Only prevent default when all the action is click.
      // https://github.com/ant-design/ant-design/issues/17043
      // https://github.com/ant-design/ant-design/issues/17291

      if (this.isClickToShow() && (this.isClickToHide() || this.isBlurToHide()) && event && event.preventDefault) {
        event.preventDefault();
      }

      if (event && event.domEvent) {
        event.domEvent.preventDefault();
      }

      var nextVisible = !this.$data.sPopupVisible;

      if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
        this.setPopupVisible(!this.$data.sPopupVisible, event);
      }
    },
    onPopupMouseDown: function onPopupMouseDown() {
      var _this4 = this;

      var _this$vcTriggerContex = this.vcTriggerContext,
          vcTriggerContext = _this$vcTriggerContex === void 0 ? {} : _this$vcTriggerContex;
      this.hasPopupMouseDown = true;
      clearTimeout(this.mouseDownTimeout);
      this.mouseDownTimeout = setTimeout(function () {
        _this4.hasPopupMouseDown = false;
      }, 0);

      if (vcTriggerContext.onPopupMouseDown) {
        vcTriggerContext.onPopupMouseDown.apply(vcTriggerContext, arguments);
      }
    },
    onDocumentClick: function onDocumentClick(event) {
      if (this.$props.mask && !this.$props.maskClosable) {
        return;
      }

      var target = event.target;
      var root = findDOMNode(this);

      if (!contains(root, target) && !this.hasPopupMouseDown) {
        this.close();
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      if (this._component && this._component.getPopupDomNode) {
        return this._component.getPopupDomNode();
      }

      return null;
    },
    getRootDomNode: function getRootDomNode() {
      return findDOMNode(this);
    },
    handleGetPopupClassFromAlign: function handleGetPopupClassFromAlign(align) {
      var className = [];
      var props = this.$props;
      var popupPlacement = props.popupPlacement,
          builtinPlacements = props.builtinPlacements,
          prefixCls = props.prefixCls,
          alignPoint = props.alignPoint,
          getPopupClassNameFromAlign = props.getPopupClassNameFromAlign;

      if (popupPlacement && builtinPlacements) {
        className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint));
      }

      if (getPopupClassNameFromAlign) {
        className.push(getPopupClassNameFromAlign(align));
      }

      return className.join(' ');
    },
    getPopupAlign: function getPopupAlign() {
      var props = this.$props;
      var popupPlacement = props.popupPlacement,
          popupAlign = props.popupAlign,
          builtinPlacements = props.builtinPlacements;

      if (popupPlacement && builtinPlacements) {
        return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);
      }

      return popupAlign;
    },
    savePopup: function savePopup(node) {
      this._component = node;
      this.savePopupRef(node);
    },
    getComponent: function getComponent() {
      var _slot;

      var self = this;
      var mouseProps = {};

      if (this.isMouseEnterToShow()) {
        mouseProps.onMouseenter = self.onPopupMouseenter;
      }

      if (this.isMouseLeaveToHide()) {
        mouseProps.onMouseleave = self.onPopupMouseleave;
      }

      mouseProps.onMousedown = this.onPopupMouseDown;
      mouseProps[_util_supportsPassive ? 'onTouchstartPassive' : 'onTouchstart'] = this.onPopupMouseDown;
      var handleGetPopupClassFromAlign = self.handleGetPopupClassFromAlign,
          getRootDomNode = self.getRootDomNode,
          getContainer = self.getContainer,
          $attrs = self.$attrs;
      var _self$$props = self.$props,
          prefixCls = _self$$props.prefixCls,
          destroyPopupOnHide = _self$$props.destroyPopupOnHide,
          popupClassName = _self$$props.popupClassName,
          action = _self$$props.action,
          popupAnimation = _self$$props.popupAnimation,
          popupTransitionName = _self$$props.popupTransitionName,
          popupStyle = _self$$props.popupStyle,
          mask = _self$$props.mask,
          maskAnimation = _self$$props.maskAnimation,
          maskTransitionName = _self$$props.maskTransitionName,
          zIndex = _self$$props.zIndex,
          stretch = _self$$props.stretch,
          alignPoint = _self$$props.alignPoint;
      var _this$$data = this.$data,
          sPopupVisible = _this$$data.sPopupVisible,
          point = _this$$data.point;
      var align = this.getPopupAlign();

      var popupProps = Trigger_extends(Trigger_extends({
        prefixCls: prefixCls,
        destroyPopupOnHide: destroyPopupOnHide,
        visible: sPopupVisible,
        point: alignPoint ? point : null,
        action: action,
        align: align,
        animation: popupAnimation,
        getClassNameFromAlign: handleGetPopupClassFromAlign,
        stretch: stretch,
        getRootDomNode: getRootDomNode,
        mask: mask,
        zIndex: zIndex,
        transitionName: popupTransitionName,
        maskAnimation: maskAnimation,
        maskTransitionName: maskTransitionName,
        getContainer: getContainer,
        popupClassName: popupClassName,
        popupStyle: popupStyle,
        onAlign: $attrs.onPopupAlign || utils_noop
      }, mouseProps), {
        ref: this.savePopup
      });

      return Object(external_Vue_["createVNode"])(Popup, popupProps, Trigger_isSlot(_slot = props_util_getComponent(self, 'popup')) ? _slot : {
        default: function _default() {
          return [_slot];
        }
      });
    },
    getContainer: function getContainer() {
      var props = this.$props,
          dialogContext = this.dialogContext;
      var popupContainer = document.createElement('div'); // Make sure default popup container will never cause scrollbar appearing
      // https://github.com/react-component/trigger/issues/41

      popupContainer.style.position = 'absolute';
      popupContainer.style.top = '0';
      popupContainer.style.left = '0';
      popupContainer.style.width = '100%';
      var mountNode = props.getPopupContainer ? props.getPopupContainer(findDOMNode(this), dialogContext) : props.getDocument().body;
      mountNode.appendChild(popupContainer);
      this.popupContainer = popupContainer;
      return popupContainer;
    },
    setPopupVisible: function setPopupVisible(sPopupVisible, event) {
      var alignPoint = this.alignPoint,
          prevPopupVisible = this.sPopupVisible,
          $attrs = this.$attrs;
      this.clearDelayTimer();

      if (prevPopupVisible !== sPopupVisible) {
        if (!hasProp(this, 'popupVisible')) {
          this.setState({
            sPopupVisible: sPopupVisible,
            prevPopupVisible: prevPopupVisible
          });
        }

        $attrs.onPopupVisibleChange && $attrs.onPopupVisibleChange(sPopupVisible);
      } // Always record the point position since mouseEnterDelay will delay the show


      if (alignPoint && event) {
        this.setPoint(event);
      }
    },
    setPoint: function setPoint(point) {
      var alignPoint = this.$props.alignPoint;
      if (!alignPoint || !point) return;
      this.setState({
        point: {
          pageX: point.pageX,
          pageY: point.pageY
        }
      });
    },
    handlePortalUpdate: function handlePortalUpdate() {
      if (this.prevPopupVisible !== this.sPopupVisible) {
        this.afterPopupVisibleChange(this.sPopupVisible);
      }
    },
    delaySetPopupVisible: function delaySetPopupVisible(visible, delayS, event) {
      var _this5 = this;

      var delay = delayS * 1000;
      this.clearDelayTimer();

      if (delay) {
        var point = event ? {
          pageX: event.pageX,
          pageY: event.pageY
        } : null;
        this.delayTimer = requestAnimationTimeout(function () {
          _this5.setPopupVisible(visible, point);

          _this5.clearDelayTimer();
        }, delay);
      } else {
        this.setPopupVisible(visible, event);
      }
    },
    clearDelayTimer: function clearDelayTimer() {
      if (this.delayTimer) {
        requestAnimationTimeout_cancelAnimationTimeout(this.delayTimer);
        this.delayTimer = null;
      }
    },
    clearOutsideHandler: function clearOutsideHandler() {
      if (this.clickOutsideHandler) {
        this.clickOutsideHandler.remove();
        this.clickOutsideHandler = null;
      }

      if (this.contextmenuOutsideHandler1) {
        this.contextmenuOutsideHandler1.remove();
        this.contextmenuOutsideHandler1 = null;
      }

      if (this.contextmenuOutsideHandler2) {
        this.contextmenuOutsideHandler2.remove();
        this.contextmenuOutsideHandler2 = null;
      }

      if (this.touchOutsideHandler) {
        this.touchOutsideHandler.remove();
        this.touchOutsideHandler = null;
      }
    },
    createTwoChains: function createTwoChains(event) {
      var fn = function fn() {};

      var events = getEvents(this);

      if (this.childOriginEvents[event] && events[event]) {
        return this["fire".concat(event)];
      }

      fn = this.childOriginEvents[event] || events[event] || fn;
      return fn;
    },
    isClickToShow: function isClickToShow() {
      var _this$$props = this.$props,
          action = _this$$props.action,
          showAction = _this$$props.showAction;
      return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
    },
    isContextmenuToShow: function isContextmenuToShow() {
      var _this$$props2 = this.$props,
          action = _this$$props2.action,
          showAction = _this$$props2.showAction;
      return action.indexOf('contextmenu') !== -1 || showAction.indexOf('contextmenu') !== -1;
    },
    isClickToHide: function isClickToHide() {
      var _this$$props3 = this.$props,
          action = _this$$props3.action,
          hideAction = _this$$props3.hideAction;
      return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
    },
    isMouseEnterToShow: function isMouseEnterToShow() {
      var _this$$props4 = this.$props,
          action = _this$$props4.action,
          showAction = _this$$props4.showAction;
      return action.indexOf('hover') !== -1 || showAction.indexOf('mouseenter') !== -1;
    },
    isMouseLeaveToHide: function isMouseLeaveToHide() {
      var _this$$props5 = this.$props,
          action = _this$$props5.action,
          hideAction = _this$$props5.hideAction;
      return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseleave') !== -1;
    },
    isFocusToShow: function isFocusToShow() {
      var _this$$props6 = this.$props,
          action = _this$$props6.action,
          showAction = _this$$props6.showAction;
      return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
    },
    isBlurToHide: function isBlurToHide() {
      var _this$$props7 = this.$props,
          action = _this$$props7.action,
          hideAction = _this$$props7.hideAction;
      return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
    },
    forcePopupAlign: function forcePopupAlign() {
      if (this.$data.sPopupVisible && this._component && this._component.alignInstance) {
        this._component.alignInstance.forceAlign();
      }
    },
    fireEvents: function fireEvents(type, e) {
      if (this.childOriginEvents[type]) {
        this.childOriginEvents[type](e);
      }

      var event = this.$props[type] || this.$attrs[type];

      if (event) {
        event(e);
      }
    },
    close: function close() {
      this.setPopupVisible(false);
    }
  },
  render: function render() {
    var _this6 = this;

    var sPopupVisible = this.sPopupVisible,
        $attrs = this.$attrs;
    var children = props_util_filterEmpty(props_util_getSlot(this));
    var _this$$props8 = this.$props,
        forceRender = _this$$props8.forceRender,
        alignPoint = _this$$props8.alignPoint;

    if (children.length > 1) {
      _util_warning(false, 'Trigger children just support only one default', true);
    }

    var child = children[0];
    this.childOriginEvents = getEvents(child);
    var newChildProps = {
      key: 'trigger'
    };

    if (this.isContextmenuToShow()) {
      newChildProps.onContextmenu = this.onContextmenu;
    } else {
      newChildProps.onContextmenu = this.createTwoChains('onContextmenu');
    }

    if (this.isClickToHide() || this.isClickToShow()) {
      newChildProps.onClick = this.onClick;
      newChildProps.onMousedown = this.onMousedown;
      newChildProps[_util_supportsPassive ? 'onTouchstartPassive' : 'onTouchstart'] = this.onTouchstart;
    } else {
      newChildProps.onClick = this.createTwoChains('onClick');
      newChildProps.onMousedown = this.createTwoChains('onMousedown');
      newChildProps[_util_supportsPassive ? 'onTouchstartPassive' : 'onTouchstart'] = this.createTwoChains('onTouchstart');
    }

    if (this.isMouseEnterToShow()) {
      newChildProps.onMouseenter = this.onMouseenter;

      if (alignPoint) {
        newChildProps.onMousemove = this.onMouseMove;
      }
    } else {
      newChildProps.onMouseenter = this.createTwoChains('onMouseenter');
    }

    if (this.isMouseLeaveToHide()) {
      newChildProps.onMouseleave = this.onMouseleave;
    } else {
      newChildProps.onMouseleave = this.createTwoChains('onMouseleave');
    }

    if (this.isFocusToShow() || this.isBlurToHide()) {
      newChildProps.onFocus = this.onFocus;
      newChildProps.onBlur = this.onBlur;
    } else {
      newChildProps.onFocus = this.createTwoChains('onFocus');

      newChildProps.onBlur = function (e) {
        if (e && (!e.relatedTarget || !contains(e.target, e.relatedTarget))) {
          _this6.createTwoChains('onBlur')(e);
        }
      };
    }

    var childrenClassName = _util_classNames(child && child.props && child.props.class, $attrs.class);

    if (childrenClassName) {
      newChildProps.class = childrenClassName;
    }

    var trigger = cloneElement(child, newChildProps);
    var portal; // prevent unmounting after it's rendered

    if (sPopupVisible || this._component || forceRender) {
      portal = Object(external_Vue_["createVNode"])(Portal, {
        "key": "portal",
        "children": this.getComponent(),
        "getContainer": this.getContainer,
        "didUpdate": this.handlePortalUpdate
      }, null);
    }

    return [portal, trigger];
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/index.js
// based on rc-trigger 2.6.5

/* harmony default export */ var vc_trigger = (Trigger);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/placements.js
var placements_autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset = [0, 0];
var placements = {
  left: {
    points: ['cr', 'cl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: targetOffset
  },
  right: {
    points: ['cl', 'cr'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: targetOffset
  },
  top: {
    points: ['bc', 'tc'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  bottom: {
    points: ['tc', 'bc'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  topLeft: {
    points: ['bl', 'tl'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  leftTop: {
    points: ['tr', 'tl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: targetOffset
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  rightTop: {
    points: ['tl', 'tr'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: targetOffset
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  rightBottom: {
    points: ['bl', 'br'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: targetOffset
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  leftBottom: {
    points: ['br', 'bl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: targetOffset
  }
};
/* harmony default export */ var vc_tooltip_placements = (placements);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/Content.js


/* harmony default export */ var Content = ({
  name: 'Content',
  props: {
    prefixCls: vue_types.string,
    overlay: vue_types.any,
    trigger: vue_types.any,
    overlayInnerStyle: vue_types.any
  },
  updated: function updated() {
    var trigger = this.trigger;

    if (trigger) {
      trigger.forcePopupAlign();
    }
  },
  render: function render() {
    var overlay = this.overlay,
        prefixCls = this.prefixCls,
        overlayInnerStyle = this.overlayInnerStyle;
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-inner"),
      "role": "tooltip",
      "style": overlayInnerStyle
    }, [typeof overlay === 'function' ? overlay() : overlay]);
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/Tooltip.js


function Tooltip_extends() { Tooltip_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Tooltip_extends.apply(this, arguments); }

var Tooltip_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};








function Tooltip_noop() {}

/* harmony default export */ var Tooltip = (Object(external_Vue_["defineComponent"])({
  name: 'Tooltip',
  inheritAttrs: false,
  props: {
    trigger: vue_types.any.def(['hover']),
    defaultVisible: vue_types.looseBool,
    visible: vue_types.looseBool,
    placement: vue_types.string.def('right'),
    transitionName: vue_types.oneOfType([vue_types.string, vue_types.object]),
    animation: vue_types.any,
    afterVisibleChange: vue_types.func.def(function () {}),
    overlay: vue_types.any,
    overlayStyle: vue_types.object,
    overlayClassName: vue_types.string,
    prefixCls: vue_types.string.def('rc-tooltip'),
    mouseEnterDelay: vue_types.number.def(0),
    mouseLeaveDelay: vue_types.number.def(0.1),
    getTooltipContainer: vue_types.func,
    destroyTooltipOnHide: vue_types.looseBool.def(false),
    align: vue_types.object.def(function () {
      return {};
    }),
    arrowContent: vue_types.any.def(null),
    tipId: vue_types.string,
    builtinPlacements: vue_types.object,
    overlayInnerStyle: vue_types.style
  },
  methods: {
    getPopupElement: function getPopupElement() {
      var _this$$props = this.$props,
          prefixCls = _this$$props.prefixCls,
          tipId = _this$$props.tipId,
          overlayInnerStyle = _this$$props.overlayInnerStyle;
      return [Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-arrow"),
        "key": "arrow"
      }, [props_util_getComponent(this, 'arrowContent')]), Object(external_Vue_["createVNode"])(Content, {
        "key": "content",
        "trigger": this.$refs.trigger,
        "prefixCls": prefixCls,
        "id": tipId,
        "overlay": props_util_getComponent(this, 'overlay'),
        "overlayInnerStyle": overlayInnerStyle
      }, null)];
    },
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.trigger.getPopupDomNode();
    }
  },
  render: function render(h) {
    var _this = this;

    var _a = props_util_getOptionProps(this),
        overlayClassName = _a.overlayClassName,
        trigger = _a.trigger,
        mouseEnterDelay = _a.mouseEnterDelay,
        mouseLeaveDelay = _a.mouseLeaveDelay,
        overlayStyle = _a.overlayStyle,
        prefixCls = _a.prefixCls,
        afterVisibleChange = _a.afterVisibleChange,
        transitionName = _a.transitionName,
        animation = _a.animation,
        placement = _a.placement,
        align = _a.align,
        destroyTooltipOnHide = _a.destroyTooltipOnHide,
        defaultVisible = _a.defaultVisible,
        getTooltipContainer = _a.getTooltipContainer,
        restProps = Tooltip_rest(_a, ["overlayClassName", "trigger", "mouseEnterDelay", "mouseLeaveDelay", "overlayStyle", "prefixCls", "afterVisibleChange", "transitionName", "animation", "placement", "align", "destroyTooltipOnHide", "defaultVisible", "getTooltipContainer"]);

    var extraProps = Tooltip_extends({}, restProps);

    if (hasProp(this, 'visible')) {
      extraProps.popupVisible = this.$props.visible;
    }

    var $attrs = this.$attrs;

    var triggerProps = Tooltip_extends(Tooltip_extends(Tooltip_extends({
      popupClassName: overlayClassName,
      prefixCls: prefixCls,
      action: trigger,
      builtinPlacements: placements,
      popupPlacement: placement,
      popupAlign: align,
      getPopupContainer: getTooltipContainer,
      afterPopupVisibleChange: afterVisibleChange,
      popupTransitionName: transitionName,
      popupAnimation: animation,
      defaultPopupVisible: defaultVisible,
      destroyPopupOnHide: destroyTooltipOnHide,
      mouseLeaveDelay: mouseLeaveDelay,
      popupStyle: overlayStyle,
      mouseEnterDelay: mouseEnterDelay
    }, extraProps), $attrs), {
      onPopupVisibleChange: $attrs.onVisibleChange || Tooltip_noop,
      onPopupAlign: $attrs.onPopupAlign || Tooltip_noop,
      ref: 'trigger',
      popup: this.getPopupElement()
    });

    return Object(external_Vue_["createVNode"])(vc_trigger, triggerProps, {
      default: function _default() {
        return [props_util_getSlot(_this)[0]];
      }
    });
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/index.js
// based on rc-tooltip 3.7.3

/* harmony default export */ var vc_tooltip = (Tooltip);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/placements.js
function placements_extends() { placements_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return placements_extends.apply(this, arguments); }


var autoAdjustOverflowEnabled = {
  adjustX: 1,
  adjustY: 1
};
var autoAdjustOverflowDisabled = {
  adjustX: 0,
  adjustY: 0
};
var placements_targetOffset = [0, 0];
function getOverflowOptions(autoAdjustOverflow) {
  if (typeof autoAdjustOverflow === 'boolean') {
    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;
  }

  return placements_extends(placements_extends({}, autoAdjustOverflowDisabled), autoAdjustOverflow);
}
function placements_getPlacements(config) {
  var _config$arrowWidth = config.arrowWidth,
      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,
      _config$horizontalArr = config.horizontalArrowShift,
      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,
      _config$verticalArrow = config.verticalArrowShift,
      verticalArrowShift = _config$verticalArrow === void 0 ? 12 : _config$verticalArrow,
      _config$autoAdjustOve = config.autoAdjustOverflow,
      autoAdjustOverflow = _config$autoAdjustOve === void 0 ? true : _config$autoAdjustOve;
  var placementMap = {
    left: {
      points: ['cr', 'cl'],
      offset: [-4, 0]
    },
    right: {
      points: ['cl', 'cr'],
      offset: [4, 0]
    },
    top: {
      points: ['bc', 'tc'],
      offset: [0, -4]
    },
    bottom: {
      points: ['tc', 'bc'],
      offset: [0, 4]
    },
    topLeft: {
      points: ['bl', 'tc'],
      offset: [-(horizontalArrowShift + arrowWidth), -4]
    },
    leftTop: {
      points: ['tr', 'cl'],
      offset: [-4, -(verticalArrowShift + arrowWidth)]
    },
    topRight: {
      points: ['br', 'tc'],
      offset: [horizontalArrowShift + arrowWidth, -4]
    },
    rightTop: {
      points: ['tl', 'cr'],
      offset: [4, -(verticalArrowShift + arrowWidth)]
    },
    bottomRight: {
      points: ['tr', 'bc'],
      offset: [horizontalArrowShift + arrowWidth, 4]
    },
    rightBottom: {
      points: ['bl', 'cr'],
      offset: [4, verticalArrowShift + arrowWidth]
    },
    bottomLeft: {
      points: ['tl', 'bc'],
      offset: [-(horizontalArrowShift + arrowWidth), 4]
    },
    leftBottom: {
      points: ['br', 'cl'],
      offset: [-4, verticalArrowShift + arrowWidth]
    }
  };
  Object.keys(placementMap).forEach(function (key) {
    placementMap[key] = config.arrowPointAtCenter ? placements_extends(placements_extends({}, placementMap[key]), {
      overflow: getOverflowOptions(autoAdjustOverflow),
      targetOffset: placements_targetOffset
    }) : placements_extends(placements_extends({}, placements[key]), {
      overflow: getOverflowOptions(autoAdjustOverflow)
    });
    placementMap[key].ignoreShake = true;
  });
  return placementMap;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/colors.js

var PresetStatusColorTypes = tuple('success', 'processing', 'error', 'default', 'warning');
var PresetColorTypes = tuple('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime');
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/abstractTooltipProps.js


var triggerType = vue_types.oneOf(tuple('hover', 'focus', 'click', 'contextmenu'));
/* harmony default export */ var abstractTooltipProps = (function () {
  return {
    trigger: vue_types.oneOfType([triggerType, vue_types.arrayOf(triggerType)]).def('hover'),
    visible: vue_types.looseBool,
    defaultVisible: vue_types.looseBool,
    placement: vue_types.oneOf(tuple('top', 'left', 'right', 'bottom', 'topLeft', 'topRight', 'bottomLeft', 'bottomRight', 'leftTop', 'leftBottom', 'rightTop', 'rightBottom')).def('top'),
    color: vue_types.string,
    transitionName: vue_types.string.def('zoom-big-fast'),
    overlayStyle: vue_types.object.def(function () {
      return {};
    }),
    overlayClassName: vue_types.string,
    openClassName: vue_types.string,
    prefixCls: vue_types.string,
    mouseEnterDelay: vue_types.number.def(0.1),
    mouseLeaveDelay: vue_types.number.def(0.1),
    getPopupContainer: vue_types.func,
    arrowPointAtCenter: vue_types.looseBool.def(false),
    autoAdjustOverflow: vue_types.oneOfType([vue_types.looseBool, vue_types.object]).def(true),
    destroyTooltipOnHide: vue_types.looseBool.def(false),
    align: vue_types.object.def(function () {
      return {};
    }),
    builtinPlacements: vue_types.object,
    children: vue_types.array,
    onVisibleChange: vue_types.func,
    'onUpdate:visible': vue_types.func
  };
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/Tooltip.js


function Tooltip_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Tooltip_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Tooltip_typeof = function _typeof(obj) { return typeof obj; }; } else { Tooltip_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Tooltip_typeof(obj); }

function tooltip_Tooltip_extends() { tooltip_Tooltip_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return tooltip_Tooltip_extends.apply(this, arguments); }












var splitObject = function splitObject(obj, keys) {
  var picked = {};

  var omitted = tooltip_Tooltip_extends({}, obj);

  keys.forEach(function (key) {
    if (obj && key in obj) {
      picked[key] = obj[key];
      delete omitted[key];
    }
  });
  return {
    picked: picked,
    omitted: omitted
  };
};

var Tooltip_props = abstractTooltipProps();
var PresetColorRegex = new RegExp("^(".concat(PresetColorTypes.join('|'), ")(-inverse)?$"));

var Tooltip_tooltipProps = tooltip_Tooltip_extends(tooltip_Tooltip_extends({}, Tooltip_props), {
  title: vue_types.VNodeChild
});

/* harmony default export */ var tooltip_Tooltip = (Object(external_Vue_["defineComponent"])({
  name: 'ATooltip',
  inheritAttrs: false,
  props: Tooltip_tooltipProps,
  emits: ['update:visible', 'visibleChange'],
  setup: function setup() {
    return {
      configProvider: Object(external_Vue_["inject"])('configProvider', defaultConfigProvider)
    };
  },
  data: function data() {
    return {
      sVisible: !!this.$props.visible || !!this.$props.defaultVisible
    };
  },
  watch: {
    visible: function visible(val) {
      this.sVisible = val;
    }
  },
  methods: {
    handleVisibleChange: function handleVisibleChange(visible) {
      if (!hasProp(this, 'visible')) {
        this.sVisible = this.isNoTitle() ? false : visible;
      }

      if (!this.isNoTitle()) {
        this.$emit('update:visible', visible);
        this.$emit('visibleChange', visible);
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.tooltip.getPopupDomNode();
    },
    getPlacements: function getPlacements() {
      var _this$$props = this.$props,
          builtinPlacements = _this$$props.builtinPlacements,
          arrowPointAtCenter = _this$$props.arrowPointAtCenter,
          autoAdjustOverflow = _this$$props.autoAdjustOverflow;
      return builtinPlacements || placements_getPlacements({
        arrowPointAtCenter: arrowPointAtCenter,
        verticalArrowShift: 8,
        autoAdjustOverflow: autoAdjustOverflow
      });
    },
    // Fix Tooltip won't hide at disabled button
    // mouse events don't trigger at disabled button in Chrome
    // https://github.com/react-component/tooltip/issues/18
    getDisabledCompatibleChildren: function getDisabledCompatibleChildren(ele) {
      if ((Tooltip_typeof(ele.type) === 'object' && (ele.type.__ANT_BUTTON === true || ele.type.__ANT_SWITCH === true || ele.type.__ANT_CHECKBOX === true) || ele.type === 'button') && ele.props && (ele.props.disabled || ele.props.disabled === '')) {
        // Pick some layout related style properties up to span
        // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254
        var _splitObject = splitObject(getStyle(ele), ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),
            picked = _splitObject.picked,
            omitted = _splitObject.omitted;

        var spanStyle = tooltip_Tooltip_extends(tooltip_Tooltip_extends({
          display: 'inline-block'
        }, picked), {
          cursor: 'not-allowed',
          width: ele.props && ele.props.block ? '100%' : null
        });

        var buttonStyle = tooltip_Tooltip_extends(tooltip_Tooltip_extends({}, omitted), {
          pointerEvents: 'none'
        });

        var child = cloneElement(ele, {
          style: buttonStyle
        }, true);
        return Object(external_Vue_["createVNode"])("span", {
          "style": spanStyle
        }, [child]);
      }

      return ele;
    },
    isNoTitle: function isNoTitle() {
      var title = props_util_getComponent(this, 'title');
      return !title && title !== 0;
    },
    getOverlay: function getOverlay() {
      var title = props_util_getComponent(this, 'title');

      if (title === 0) {
        return title;
      }

      return title || '';
    },
    // 动态设置动画点
    onPopupAlign: function onPopupAlign(domNode, align) {
      var placements = this.getPlacements(); // 当前返回的位置

      var placement = Object.keys(placements).filter(function (key) {
        return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];
      })[0];

      if (!placement) {
        return;
      } // 根据当前坐标设置动画点


      var rect = domNode.getBoundingClientRect();
      var transformOrigin = {
        top: '50%',
        left: '50%'
      };

      if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {
        transformOrigin.top = "".concat(rect.height - align.offset[1], "px");
      } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {
        transformOrigin.top = "".concat(-align.offset[1], "px");
      }

      if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {
        transformOrigin.left = "".concat(rect.width - align.offset[0], "px");
      } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {
        transformOrigin.left = "".concat(-align.offset[0], "px");
      }

      domNode.style.transformOrigin = "".concat(transformOrigin.left, " ").concat(transformOrigin.top);
    }
  },
  render: function render() {
    var _classNames;

    var $props = this.$props,
        $data = this.$data,
        $attrs = this.$attrs;
    var customizePrefixCls = $props.prefixCls,
        openClassName = $props.openClassName,
        getPopupContainer = $props.getPopupContainer,
        color = $props.color,
        overlayClassName = $props.overlayClassName;
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls = this.configProvider.getPrefixCls;
    var prefixCls = getPrefixCls('tooltip', customizePrefixCls);
    var children = this.children || props_util_filterEmpty(props_util_getSlot(this));
    children = children.length === 1 ? children[0] : children;
    var sVisible = $data.sVisible; // Hide tooltip when there is no title

    if (!hasProp(this, 'visible') && this.isNoTitle()) {
      sVisible = false;
    }

    if (!children) {
      return null;
    }

    var child = this.getDisabledCompatibleChildren(isValidElement(children) ? children : Object(external_Vue_["createVNode"])("span", null, [children]));
    var childCls = _util_classNames((_classNames = {}, Tooltip_defineProperty(_classNames, openClassName || "".concat(prefixCls, "-open"), sVisible), Tooltip_defineProperty(_classNames, child.props && child.props.class, child.props && child.props.class), _classNames));
    var customOverlayClassName = _util_classNames(overlayClassName, Tooltip_defineProperty({}, "".concat(prefixCls, "-").concat(color), color && PresetColorRegex.test(color)));
    var formattedOverlayInnerStyle;
    var arrowContentStyle;

    if (color && !PresetColorRegex.test(color)) {
      formattedOverlayInnerStyle = {
        backgroundColor: color
      };
      arrowContentStyle = {
        backgroundColor: color
      };
    }

    var vcTooltipProps = tooltip_Tooltip_extends(tooltip_Tooltip_extends(tooltip_Tooltip_extends({}, $attrs), $props), {
      prefixCls: prefixCls,
      getTooltipContainer: getPopupContainer || getContextPopupContainer,
      builtinPlacements: this.getPlacements(),
      overlay: this.getOverlay(),
      visible: sVisible,
      ref: 'tooltip',
      overlayClassName: customOverlayClassName,
      overlayInnerStyle: formattedOverlayInnerStyle,
      arrowContent: Object(external_Vue_["createVNode"])("span", {
        "class": "".concat(prefixCls, "-arrow-content"),
        "style": arrowContentStyle
      }, null),
      onVisibleChange: this.handleVisibleChange,
      onPopupAlign: this.onPopupAlign
    });

    return Object(external_Vue_["createVNode"])(vc_tooltip, vcTooltipProps, {
      default: function _default() {
        return [sVisible ? cloneElement(child, {
          class: childCls
        }) : child];
      }
    });
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/index.js


/* harmony default export */ var tooltip = (withInstall(tooltip_Tooltip));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/popover/index.js


function popover_extends() { popover_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return popover_extends.apply(this, arguments); }









function popover_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var popover_props = abstractTooltipProps();
var Popover = Object(external_Vue_["defineComponent"])({
  name: 'APopover',
  props: popover_extends(popover_extends({}, popover_props), {
    prefixCls: vue_types.string,
    transitionName: vue_types.string.def('zoom-big'),
    content: vue_types.any,
    title: vue_types.any
  }),
  setup: function setup() {
    return {
      configProvider: Object(external_Vue_["inject"])('configProvider', defaultConfigProvider)
    };
  },
  methods: {
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.tooltip.getPopupDomNode();
    }
  },
  render: function render() {
    var _slot;

    var title = this.title,
        customizePrefixCls = this.prefixCls,
        $slots = this.$slots;
    var getPrefixCls = this.configProvider.getPrefixCls;
    var prefixCls = getPrefixCls('popover', customizePrefixCls);
    var props = props_util_getOptionProps(this);
    delete props.title;
    delete props.content;

    var tooltipProps = popover_extends(popover_extends({}, props), {
      prefixCls: prefixCls,
      ref: 'tooltip',
      title: Object(external_Vue_["createVNode"])("div", null, [(title || $slots.title) && Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-title")
      }, [props_util_getComponent(this, 'title')]), Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-inner-content")
      }, [props_util_getComponent(this, 'content')])])
    });

    return Object(external_Vue_["createVNode"])(tooltip, tooltipProps, popover_isSlot(_slot = props_util_getSlot(this)) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var popover = (withInstall(Popover));
// CONCATENATED MODULE: ./src/packages/popover/src/index.tsx




function popover_src_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function popover_src_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { popover_src_ownKeys(Object(source), true).forEach(function (key) { popover_src_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { popover_src_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function popover_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/* harmony default export */ var popover_src = (Object(external_Vue_["defineComponent"])({
  name: 'MPopover',
  props: {
    /**
     * 是否显示气泡（v-model）
     */
    visible: {
      type: Boolean,
      default: false
    },
    prefixCls: {
      type: String,
      default: 'am-popover'
    },

    /**
     * 是否显示遮罩
     */
    mask: {
      type: Boolean,
      default: true
    },

    /**
     * 是否允许点击遮罩层关闭
     */
    maskClosable: {
      type: Boolean,
      default: true
    },
    placement: {
      type: String
    }
  },
  item: null,
  install: null,
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var currentValue = Object(external_Vue_["ref"])(props.visible);
    Object(external_Vue_["watch"])(function () {
      return props.visible;
    }, function (value) {
      currentValue.value = value;
    });
    Object(external_Vue_["watch"])(function () {
      return currentValue.value;
    }, function (currentValue) {
      emit('update:visible', currentValue);
      emit('change', currentValue);
    });
    return {
      currentValue: currentValue
    };
  },
  render: function render() {
    var _this = this;

    var maskClass = classnames_default()("".concat(this.prefixCls, "-mask"), popover_src_defineProperty({}, "".concat(this.prefixCls, "-mask-hidden"), !this.currentValue));
    var slots = {
      content: this.$slots.content,
      default: function _default() {
        var _a, _b;

        return Object(external_Vue_["createVNode"])(external_Vue_["Fragment"], null, [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a), _this.mask ? Object(external_Vue_["createVNode"])("div", {
          "onClick": function onClick(e) {
            if (!_this.maskClosable) {
              e.stopPropagation();
              e.preventDefault();
            }
          },
          "class": maskClass
        }, null) : null]);
      }
    };
    var popoverProps = Object.assign(Object.assign({}, this.$attrs), {
      prefixCls: this.prefixCls,
      'v-model': [this.currentValue, 'visible'],
      trigger: ['click']
    });
    return Object(external_Vue_["createVNode"])(popover, popoverProps, popover_src_objectSpread({}, slots));
  }
}));
// CONCATENATED MODULE: ./src/packages/popover/src/item.tsx


function item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





/* harmony default export */ var src_item = (Object(external_Vue_["defineComponent"])({
  name: 'PopoverItem',
  props: {
    prefixCls: {
      type: String,
      default: 'am-popover'
    },

    /**
     * 图标
     */
    icon: {},

    /**
     * 是否禁用
     */
    disabled: {
      type: Boolean
    },
    firstItem: {
      type: String
    },
    activeStyle: {}
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var _c = this,
        prefixCls = _c.prefixCls,
        icon = _c.icon,
        disabled = _c.disabled,
        firstItem = _c.firstItem,
        activeStyle = _c.activeStyle,
        restProps = tslib_es6_rest(_c, ["prefixCls", "icon", "disabled", "firstItem", "activeStyle"]);

    var cls = classnames_default()("".concat(prefixCls, "-item"), item_defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled));
    var activeClass = "".concat(prefixCls, "-item-active");

    if (firstItem) {
      activeClass += "".concat(prefixCls, "-item-fix-active-arrow");
    }

    return Object(external_Vue_["createVNode"])(feedback, {
      "disabled": disabled,
      "activeClassName": activeClass,
      "activeStyle": activeStyle
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
          "class": cls
        }, restProps, {
          "onClick": function onClick(e) {
            if (!_this.disabled) {
              _this.$emit('click', e);
            }
          }
        }), [Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-item-container")
        }, [icon ? // tslint:disable-next-line:jsx-no-multiline-js
        Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-item-icon"),
          "aria-hidden": "true"
        }, [icon]) : null, Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-item-content")
        }, [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)])])])];
      }
    });
  }
}));
// EXTERNAL MODULE: ./src/packages/popover/style/index.less
var packages_popover_style = __webpack_require__("87d7");

// CONCATENATED MODULE: ./src/packages/popover/style/index.tsx


// CONCATENATED MODULE: ./src/packages/popover/index.ts



popover_src.Item = src_item;

popover_src.install = function (Vue) {
  Vue.component('MPopover', popover_src);
  Vue.component('MPopoverItem', popover_src.Item);
};

/* harmony default export */ var packages_popover = (popover_src);
// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-notification/index.js
var vc_notification = __webpack_require__("8b54");
var vc_notification_default = /*#__PURE__*/__webpack_require__.n(vc_notification);

// CONCATENATED MODULE: ./src/packages/toast/src/index.tsx


function toast_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var src_prefixCls = 'am-toast';

function getMessageInstance(mask, callback) {
  var _classnames;

  vc_notification_default.a.newInstance({
    prefixCls: src_prefixCls,
    style: {},
    transitionName: 'am-fade',
    class: classnames_default()((_classnames = {}, toast_src_defineProperty(_classnames, "".concat(src_prefixCls, "-mask"), mask), toast_src_defineProperty(_classnames, "".concat(src_prefixCls, "-nomask"), !mask), _classnames))
  }, function (notification) {
    return callback && callback(notification);
  });
}

function notice(_content, type) {
  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;

  var _onClose = arguments.length > 3 ? arguments[3] : undefined;

  var mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
  var iconTypes = {
    info: '',
    success: 'success',
    fail: 'fail',
    offline: 'dislike',
    loading: 'loading'
  };
  var iconType = iconTypes[type];
  var messageInstance = {
    $destroy: function $destroy() {
      console.error('Toast渲染未完成');
    },
    destroyed: false
  };

  messageInstance.destroy = function () {
    if (!messageInstance.destroyed) {
      messageInstance.destroyed = true;
      messageInstance.$destroy();
    }
  };

  messageInstance.hide = function () {
    if (typeof messageInstance.destroy === 'function') {
      messageInstance.destroy();
    }
  };

  getMessageInstance(mask, function (notification) {
    messageInstance.$destroy = notification.destroy;
    messageInstance.component = notification.component;
    notification.notice({
      duration: duration,
      style: {},
      onClick: function onClick() {},
      content: function content(h) {
        return !!iconType ? Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(src_prefixCls, "-text ").concat(src_prefixCls, "-text-icon"),
          "role": 'alert',
          "aria-live": 'assertive'
        }, [Object(external_Vue_["createVNode"])(packages_icon, {
          "type": iconType,
          "size": 'lg'
        }, null), Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(src_prefixCls, "-text-info")
        }, [_content])]) : Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(src_prefixCls, "-text"),
          "role": 'alert',
          "aria-live": 'assertive'
        }, [Object(external_Vue_["createVNode"])("div", null, [_content])]);
      },
      closable: true,
      onClose: function onClose() {
        if (_onClose) {
          _onClose();
        }

        if (typeof notification.destroy === 'function') {
          notification.destroy();
        }

        messageInstance.destroy = null;
      }
    });
  });
  return messageInstance;
}

/* harmony default export */ var toast_src = ({
  install: function install(any) {},
  show: function show(content, duration, mask) {
    return notice(content, 'info', duration, function () {}, mask);
  },
  info: function info(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'info', duration, onClose, mask);
  },
  success: function success(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'success', duration, onClose, mask);
  },
  fail: function fail(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'fail', duration, onClose, mask);
  },
  offline: function offline(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'offline', duration, onClose, mask);
  },
  loading: function loading(content, duration, onClose, mask) {
    return notice(content, 'loading', duration, onClose, mask);
  }
});
// EXTERNAL MODULE: ./src/packages/toast/style/index.less
var toast_style = __webpack_require__("425a");

// CONCATENATED MODULE: ./src/packages/toast/style/index.tsx


// CONCATENATED MODULE: ./src/packages/toast/index.ts


/* harmony default export */ var packages_toast = (toast_src);
// CONCATENATED MODULE: ./src/packages/list/src/item.tsx


function src_item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* tslint:disable:jsx-no-multiline-js */







function item_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var Brief = Object(external_Vue_["defineComponent"])({
  name: 'Brief',
  props: {
    prefixCls: {},
    role: {}
  },
  render: function render() {
    return Object(external_Vue_["createVNode"])("div", {
      "class": "am-list-brief"
    }, [this.$slots.default()]);
  }
});
var Item = Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'ListItem',
  props: {
    text: {
      type: Boolean,
      default: false
    },
    prefixCls: {
      default: 'am-list'
    },
    role: {
      type: String
    },
    platform: {
      type: String,
      default: 'iOS'
    },
    thumb: {
      type: [String, Object]
    },
    extra: {
      type: [String, Object]
    },
    extraPosition: {
      type: String,
      default: 'right'
    },
    activeStyle: {
      type: Object
    },
    multipleLine: {
      type: Boolean,
      default: false
    },
    error: {
      type: Boolean,
      default: false
    },
    errorMessage: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: false
    },
    align: {
      type: String,
      default: 'middle'
    },
    wrap: {
      type: Boolean
    },
    arrow: {
      type: String
    },
    title: {
      type: [String, Object],
      default: ''
    },
    labelPosition: {
      type: String,
      default: 'left'
    },
    contentStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    extraStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    touchFeedback: {
      type: Boolean,
      default: false
    },
    required: {
      type: Boolean,
      default: false
    },
    suffix: {},
    errorDisplayType: {
      type: String,
      default: 'text'
    }
  },
  Brief: Brief,
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;
    var debounceTimeout = Object(external_Vue_["ref"])(null);
    var coverRippleStyle = Object(external_Vue_["ref"])({
      display: 'none'
    });
    var rippleClicked = Object(external_Vue_["ref"])(false);
    var list = Object(external_Vue_["inject"])('list');
    var showErrorPopover = false;
    var instance = Object(external_Vue_["getCurrentInstance"])();
    var actualError = Object(external_Vue_["computed"])(function () {
      var _a, _b;

      return (_b = (_a = props.error) !== null && _a !== void 0 ? _a : instance.parent['error']) !== null && _b !== void 0 ? _b : false;
    });
    var actualErrorMessage = Object(external_Vue_["computed"])(function () {
      return props.errorMessage || instance.parent['errorMessage'];
    });
    var actualDisabled = Object(external_Vue_["computed"])(function () {
      return props.disabled;
    });
    var actualErrorDisplayType = Object(external_Vue_["computed"])(function () {
      var _a;

      return (_a = props.errorDisplayType) !== null && _a !== void 0 ? _a : instance.parent['errorDisplayType'];
    });

    var onClick = function onClick(ev) {
      ev.stopPropagation();
      var isAndroid = props.platform === 'android';

      if (isAndroid) {
        if (debounceTimeout.value) {
          clearTimeout(debounceTimeout.value);
          debounceTimeout.value = null;
        }

        var _Item = ev.currentTarget;
        var RippleWidth = Math.max(_Item.offsetHeight, _Item.offsetWidth);
        var ClientRect = ev.currentTarget.getBoundingClientRect();
        var pointX = ev.clientX - ClientRect.left - _Item.offsetWidth / 2;
        var pointY = ev.clientY - ClientRect.top - _Item.offsetWidth / 2;
        coverRippleStyle.value = {
          width: "".concat(RippleWidth, "px"),
          height: "".concat(RippleWidth, "px"),
          left: "".concat(pointX, "px"),
          top: "".concat(pointY, "px")
        };
        rippleClicked.value = true;
        debounceTimeout.value = setTimeout(function () {
          coverRippleStyle.value = {
            display: 'none'
          };
          rippleClicked.value = false;
        }, 1000);
      }

      emit('click');
    };

    var renderExtra = function renderExtra() {
      var _a;

      return !isEmptySlot(slots.extra) || props.extra ? Object(external_Vue_["createVNode"])("div", {
        "style": props.extraStyle,
        "class": classnames_default()("".concat(props.prefixCls, "-extra"), src_item_defineProperty({}, "".concat(props.prefixCls, "-extra-text"), props.text))
      }, [((_a = slots.extra) === null || _a === void 0 ? void 0 : _a.call(slots)) || props.extra, props.errorDisplayType === 'text' && actualError.value && actualErrorMessage.value ? Object(external_Vue_["createVNode"])("div", null, [actualErrorMessage.value]) : null]) : null;
    };

    var renderThumb = function renderThumb() {
      var thumb = props.thumb,
          prefixCls = props.prefixCls;

      if (slots.thumb) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-thumb")
        }, [slots.thumb()]);
      } else if (thumb) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-thumb")
        }, [typeof thumb === 'string' ? Object(external_Vue_["createVNode"])("img", {
          "src": thumb
        }, null) : thumb]);
      } else if (props.required) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-required")
        }, null);
      } else {
        return null;
      }
    };

    var renderLabel = function renderLabel() {
      if (!isEmptySlot(slots.default)) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-content"),
          "style": props.contentStyle
        }, [slots.default()]);
      } else if (props.title) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-content"),
          "style": props.contentStyle
        }, [props.title]);
      } else {
        return null;
      }
    };

    var renderControl = function renderControl() {
      return slots.control ? Object(external_Vue_["createVNode"])("div", {
        "class": props.prefixCls + '-control'
      }, [slots.control()]) : null;
    };

    Object(external_Vue_["onBeforeUnmount"])(function () {
      if (debounceTimeout.value) {
        clearTimeout(debounceTimeout.value);
        debounceTimeout.value = null;
      }
    });
    return {
      coverRippleStyle: coverRippleStyle,
      rippleClicked: rippleClicked,
      actualErrorDisplayType: actualErrorDisplayType,
      actualError: actualError,
      actualDisabled: actualDisabled,
      onClick: onClick,
      renderThumb: renderThumb,
      renderLabel: renderLabel,
      renderControl: renderControl,
      renderExtra: renderExtra,
      actualErrorMessage: actualErrorMessage,
      showErrorPopover: showErrorPopover,
      list: list
    };
  },
  render: function render() {
    var _classNames2,
        _classNames4,
        _classNames5,
        _this = this;

    var _a, _b, _c;

    var prefixCls = this.prefixCls,
        activeStyle = this.activeStyle,
        align = this.align,
        wrap = this.wrap,
        disabled = this.disabled,
        multipleLine = this.multipleLine,
        arrow = this.arrow,
        actualError = this.actualError;
    var coverRippleStyle = this.coverRippleStyle,
        rippleClicked = this.rippleClicked;
    var section = this.$parent['section'];
    var wrapCls = classnames_default()("".concat(prefixCls, "-item"), "".concat(prefixCls, "-item-label-") + this.labelPosition, (_a = this.$attrs.class) !== null && _a !== void 0 ? _a : '', (_classNames2 = {}, src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-disabled"), this.actualDisabled), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-error"), actualError), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-error-text"), actualError && this.actualErrorDisplayType === 'text'), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-top"), align === 'top'), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-middle"), align === 'middle'), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-bottom"), align === 'bottom'), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-section"), section), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-extra-left"), this.extraPosition === 'left'), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-extra-center"), this.extraPosition === 'center'), src_item_defineProperty(_classNames2, "".concat(prefixCls, "-item-extra-right"), this.extraPosition === 'right'), _classNames2));
    var rippleCls = classnames_default()("".concat(prefixCls, "-ripple"), src_item_defineProperty({}, "".concat(prefixCls, "-ripple-animate"), rippleClicked));
    var lineCls = classnames_default()("".concat(prefixCls, "-line"), (_classNames4 = {}, src_item_defineProperty(_classNames4, "".concat(prefixCls, "-line-multiple"), multipleLine), src_item_defineProperty(_classNames4, "".concat(prefixCls, "-line-wrap"), wrap), _classNames4));
    var arrowCls = classnames_default()("".concat(prefixCls, "-arrow"), (_classNames5 = {}, src_item_defineProperty(_classNames5, "".concat(prefixCls, "-arrow-horizontal"), arrow === 'horizontal'), src_item_defineProperty(_classNames5, "".concat(prefixCls, "-arrow-vertical"), arrow === 'down' || arrow === 'up'), src_item_defineProperty(_classNames5, "".concat(prefixCls, "-arrow-vertical-up"), arrow === 'up'), _classNames5));

    var content = Object(external_Vue_["createVNode"])("div", {
      "onClick": this.onClick,
      "class": wrapCls
    }, [this.renderThumb(), Object(external_Vue_["createVNode"])("div", {
      "class": lineCls
    }, [this.renderLabel(), this.renderControl(), this.renderExtra(), arrow && Object(external_Vue_["createVNode"])("div", {
      "class": arrowCls,
      "aria-hidden": "true"
    }, null), this.actualError && this.errorDisplayType !== 'text' ? Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-error-extra"),
      "onClick": function onClick(e) {
        if (_this.actualErrorMessage) {
          if (_this.actualErrorDisplayType === 'toast') {
            packages_toast.fail(_this.actualErrorMessage);
          }

          if (_this.actualErrorDisplayType === 'popover' && !_this.showErrorPopover) {
            _this.showErrorPopover = true;
          }
        }

        _this.$emit('error-click', e);

        _this.$emit('errorClick', e);
      }
    }, [this.errorDisplayType === 'popover' ? Object(external_Vue_["createVNode"])(packages_popover, {
      'value': _this.showErrorPopover,
      "onUpdate:value": function onUpdateValue($event) {
        return _this.showErrorPopover = $event;
      },
      "mask": false
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(packages_popover.Item, {
          "slot": "content"
        }, {
          default: function _default() {
            return [_this.errorMessage];
          }
        })];
      }
    }) : null]) : null, this.$slots.suffix || this.suffix ? Object(external_Vue_["createVNode"])("div", {
      "class": this.prefixCls + '-suffix'
    }, [((_c = (_b = this.$slots).suffix) === null || _c === void 0 ? void 0 : _c.call(_b)) || this.suffix]) : null]), Object(external_Vue_["createVNode"])("div", {
      "style": coverRippleStyle,
      "class": rippleCls
    }, null)]);

    return (// @ts-ignore
      Object(external_Vue_["createVNode"])(feedback, {
        "disabled": disabled || !this.onClick || !this.touchFeedback || this.list && !this.list.touchFeedback,
        "activeStyle": activeStyle,
        "activeClassName": "".concat(prefixCls, "-item-active")
      }, item_isSlot(content) ? content : {
        default: function _default() {
          return [content];
        }
      })
    );
  }
});
/* harmony default export */ var list_src_item = (Item);
// CONCATENATED MODULE: ./src/packages/list/src/index.tsx


function list_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




/* harmony default export */ var list_src = (Object(external_Vue_["defineComponent"])({
  Item: list_src_item,
  install: null,
  inheritAttrs: false,
  name: 'MList',
  props: {
    section: {
      type: Boolean,
      default: false
    },
    prefixCls: {
      default: 'am-list'
    },
    role: {
      type: String
    },
    title: {
      type: [String, Object]
    },
    spaceBetweenSection: {
      type: Number,
      default: 8
    },
    touchFeedback: {
      type: Boolean,
      default: true
    },
    model: {
      type: Object
    },
    rules: {
      type: Object
    },
    disabled: {
      type: Boolean,
      default: false
    },
    editable: {
      type: Boolean,
      default: true
    },
    required: {
      type: Boolean,
      default: false
    }
  },
  provide: function provide() {
    return {
      list: this
    };
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var fields = Object(external_Vue_["ref"])([]);

    var clearValidate = function clearValidate() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var localFields = props.length ? typeof props === 'string' ? fields.value.filter(function (field) {
        return props === field.prop;
      }) : fields.value.filter(function (field) {
        return props.indexOf(field.prop) > -1;
      }) : fields.value;
      localFields.forEach(function (field) {
        field.clearValidate();
      });
    };

    var resetFields = function resetFields() {
      if (!props.model) {
        console.warn('[Element Warn][Form]model is required for resetFields to work.');
        return;
      }

      fields.value.forEach(function (field) {
        field.resetField();
      });
    };

    var validate = function validate(callback) {
      if (!props.model) {
        return;
      }

      var promise;
      var copyCallback = callback; // if no callback, return promise

      if (typeof copyCallback !== 'function' && Promise) {
        promise = new Promise(function (resolve, reject) {
          copyCallback = function copyCallback(valid) {
            var errorField = fields.value.find(function (it) {
              return it.validateStatus === 'error';
            });

            if (errorField) {
              errorField.focus();
            }

            valid ? resolve(valid) : reject(valid);
          };
        });
      }

      var valid = true;
      var count = 0; // 如果需要验证的fields为空，调用验证时立刻返回callback

      if (fields.value.length === 0 && copyCallback) {
        copyCallback(true);
      }

      var invalidFields = {};
      fields.value.forEach(function (field) {
        field.validate('', function (message, field) {
          if (message) {
            valid = false;
          }

          invalidFields = Object.assign({}, invalidFields, field);

          if (typeof copyCallback === 'function' && ++count === fields.value.length) {
            copyCallback(valid, invalidFields);
          }
        });
      });

      if (promise) {
        return promise;
      }
    };

    var validateField = function validateField(props, cb) {
      var copyProps = [].concat(props);
      var localFields = fields.value.filter(function (field) {
        return copyProps.indexOf(field.prop) !== -1;
      });

      if (!localFields.length) {
        console.warn('[Element Warn]please pass correct props!');
        return;
      }

      localFields.forEach(function (field) {
        field.validate('', cb);
      });
    };

    return {
      fields: fields,
      clearValidate: clearValidate,
      resetFields: resetFields,
      validate: validate,
      validateField: validateField
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b, _c;

    var prefixCls = this.prefixCls;
    var wrapCls = classnames_default()(prefixCls, list_src_defineProperty({}, prefixCls + '-section', this.section));
    var children = [];

    if (this.$slots.default) {
      this.$slots.default().forEach(function (it, index) {
        if (index < _this.$slots.default().length - 1) {
          if (_this.section && it.props) {
            if (it.props.style) {
              it.props.style.marginBottom = "".concat(_this.spaceBetweenSection, "px");
            } else {
              it.props.style = {
                marginBottom: "".concat(_this.spaceBetweenSection, "px")
              };
            }
          }
        }

        children.push(it);
      });
    }

    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [this.$slots.title || this.title ? Object(external_Vue_["createVNode"])("div", {
      "class": classnames_default()("".concat(prefixCls, "-header"), list_src_defineProperty({}, "".concat(prefixCls, "-required"), this.required))
    }, [(_c = (_b = (_a = this.$slots).title) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : this.title]) : '', children.length ? Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-body")
    }, [children]) : null, this.$slots.footer ? this.$slots.footer() : null]);
  }
}));
// EXTERNAL MODULE: ./src/packages/list/style/index.less
var list_style = __webpack_require__("7277");

// CONCATENATED MODULE: ./src/packages/list/style/index.tsx


// CONCATENATED MODULE: ./src/packages/list/index.ts



list_src.install = function (Vue) {
  Vue.component('MList', list_src);
  Vue.component('MListItem', list_src.Item);
  Vue.component('MListItemBrief', list_src.Item.Brief);
};

/* harmony default export */ var packages_list = (list_src);
// CONCATENATED MODULE: ./src/packages/calendar/src/item.tsx


function item_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function item_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { item_ownKeys(Object(source), true).forEach(function (key) { calendar_src_item_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { item_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function calendar_src_item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







var item_MIN_DATE = new Date(2000, 1, 1, 0, 0, 0);
var item_MAX_DATE = new Date(new Date().getFullYear() + 10, 12, 31, 23, 59, 59);
/* harmony default export */ var calendar_src_item = (Object(external_Vue_["defineComponent"])({
  name: 'MCalendarItem',
  props: Object.assign(Object.assign(Object.assign({}, simpleFormComponentProps), pureInputComponentProps), {
    /**
     * 标题
     */
    title: {
      type: [String, Object]
    },

    /**
     * 默认值
     */
    defaultDate: {
      type: Date,
      default: function _default() {
        return new Date();
      }
    },
    minDate: {
      type: Date,
      default: function _default() {
        return item_MIN_DATE;
      }
    },
    maxDate: {
      type: Date,
      default: function _default() {
        return item_MAX_DATE;
      }
    },
    pickTime: {
      type: Boolean,
      default: false
    },
    type: {
      type: String,
      default: 'range'
    },
    placeholder: {
      type: String
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        attrs = _ref.attrs,
        slots = _ref.slots;

    var _useBaseInputComponen = base_input_component_useBaseInputComponent(props, {
      emit: emit,
      attrs: attrs,
      slots: slots
    }),
        getDefaultSlot = _useBaseInputComponen.getDefaultSlot,
        inputSlots = _useBaseInputComponen.slots,
        cssStyle = _useBaseInputComponen.cssStyle,
        listeners = _useBaseInputComponen.listeners,
        inputProps = _useBaseInputComponen.props;

    var currentValue = Object(external_Vue_["ref"])([]);
    var visible = Object(external_Vue_["ref"])(false);
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      if (props.type === 'one') {
        currentValue.value = [value];
      } else if (value) {
        currentValue.value = value;
      }
    }, {
      immediate: true
    });
    var displayValue = Object(external_Vue_["computed"])(function () {
      var _a, _b, _c;

      var valueStrs = currentValue.value.map(function (it) {
        if (!it) {
          return null;
        }

        if (props.pickTime) {
          return moment(it).format('YYYY/MM/DD HH:mm');
        } else {
          return moment(it).format('YYYY/MM/DD');
        }
      });

      if (props.type === 'range') {
        if (valueStrs[0] || valueStrs[1]) {
          return (_a = valueStrs[0]) !== null && _a !== void 0 ? _a : '' + ' ~ ' + ((_b = valueStrs[1]) !== null && _b !== void 0 ? _b : '');
        }

        return '';
      } else {
        return (_c = valueStrs[0]) !== null && _c !== void 0 ? _c : '';
      }
    });

    var onClick = function onClick() {
      visible.value = true;
    };

    var onConfirm = function onConfirm(value1, value2) {
      if (props.type === 'range') {
        currentValue.value = [value1, value2];
        emit('update:value', [value1, value2]);
      } else {
        currentValue.value = [value1];
        emit('update:value', value1);
      }
    };

    var onClose = function onClose() {
      visible.value = false;
    };

    return {
      onClose: onClose,
      inputProps: inputProps,
      displayValue: displayValue,
      onClick: onClick,
      onConfirm: onConfirm,
      listeners: listeners,
      getDefaultSlot: getDefaultSlot,
      cssStyle: cssStyle,
      inputSlots: inputSlots,
      visible: visible,
      currentValue: currentValue
    };
  },
  render: function render() {
    var _this = this;

    var slots = {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(calendar_src, Object(external_Vue_["mergeProps"])(_this.inputProps, _this.listeners, {
          "value": _this.currentValue,
          "visible": _this.visible,
          "onClose": _this.onClose,
          "onConfirm": _this.onConfirm,
          "defaultValue": _this.currentValue,
          "style": _this.cssStyle
        }), item_objectSpread({
          default: function _default() {
            return [_this.getDefaultSlot()];
          }
        }, _this.inputSlots)), Object(external_Vue_["createVNode"])("span", null, [_this.title])];
      },
      extra: function extra() {
        return Object(external_Vue_["createVNode"])("span", null, [_this.displayValue || _this.placeholder]);
      }
    };
    return Object(external_Vue_["createVNode"])(packages_list.Item, {
      "text": !!this.displayValue,
      "required": this.required,
      "touchFeedback": true,
      "disabled": this.disabled,
      "arrow": "horizontal",
      "title": this.title,
      "onClick": this.onClick
    }, item_objectSpread({}, slots));
  }
}));
// CONCATENATED MODULE: ./src/packages/calendar/src/view.tsx








var endOfMonth = function endOfMonth() {
  var now = new Date();
  return new Date(new Date(now.getFullYear(), now.getMonth() + 1, 1).getTime() - 24 * 3600 * 1000);
};

var beginOfMonth = function beginOfMonth() {
  var now = new Date();
  return new Date(now.getFullYear(), now.getMonth(), 1);
};

/* harmony default export */ var view = (Object(external_Vue_["defineComponent"])({
  props: Object.assign(Object.assign({}, calendar_props), {
    prefixCls: {
      type: String,
      default: 'am-calendar'
    },
    timePickerPrefixCls: {
      type: String,
      default: 'am-picker'
    },
    timePickerPickerPrefixCls: {
      type: String,
      default: 'am-picker-col'
    }
  }),
  setup: function setup(props) {
    var state = Object(external_Vue_["reactive"])({
      visible: props.visible
    });
    return {
      state: state
    };
  },
  render: function render() {
    var _this = this;

    var locale = getComponentLocale(this.$props, {}, 'Calendar', function () {
      return src_locale_zh_CN;
    });
    var Header = calendar_view.DefaultHeader;
    return (// @ts-ignore
      Object(external_Vue_["createVNode"])(calendar_view, Object(external_Vue_["mergeProps"])({
        "class": this.prefixCls + '-view',
        "locale": locale,
        "renderHeader": function renderHeader(headerProps) {
          return Object(external_Vue_["createVNode"])(Header, Object(external_Vue_["mergeProps"])(headerProps, {
            "closeIcon": Object(external_Vue_["createVNode"])(packages_icon, {
              "type": "cross"
            }, null)
          }), null);
        },
        "onSelectHasDisableDate": function onSelectHasDisableDate() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this.$emit.apply(_this, ['select-has-disable-date'].concat(args));
        }
      }, Object.assign(Object.assign({}, this.$props), {
        type: 'one',
        displayMode: true,
        minDate: this.minDate || beginOfMonth(),
        maxDate: this.maxDate || endOfMonth()
      }), {
        "visible": this.state.visible
      }), null)
    );
  }
}));
// EXTERNAL MODULE: ./src/packages/picker-view/style/index.less
var picker_view_style = __webpack_require__("b012");

// CONCATENATED MODULE: ./src/packages/picker-view/style/index.tsx


// EXTERNAL MODULE: ./src/packages/picker/style/index.less
var picker_style = __webpack_require__("ec9d");

// CONCATENATED MODULE: ./src/packages/picker/style/index.tsx


// EXTERNAL MODULE: ./src/packages/calendar/style/index.less
var calendar_style = __webpack_require__("deaf");

// CONCATENATED MODULE: ./src/packages/calendar/style/index.tsx



// CONCATENATED MODULE: ./src/packages/calendar/index.ts




calendar_src.Item = calendar_src_item;
calendar_src.View = view;

calendar_src.install = function (Vue) {
  Vue.component('MCalendar', calendar_src);
  Vue.component('MCalendarItem', calendar_src.Item);
  Vue.component('MCalendarView', calendar_src.View);
};

/* harmony default export */ var packages_calendar = (calendar_src);
// CONCATENATED MODULE: ./src/packages/card/src/body.tsx



/* harmony default export */ var body = (Object(external_Vue_["defineComponent"])({
  name: 'MCardBody',
  props: {
    prefixCls: {
      default: 'am-card'
    }
  },
  render: function render() {
    var _a, _b;

    var prefixCls = this.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-body"));
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);
  }
}));
// CONCATENATED MODULE: ./src/packages/card/src/header.tsx



/* harmony default export */ var src_header = (Object(external_Vue_["defineComponent"])({
  name: 'MCardHeader',
  props: {
    prefixCls: {
      default: 'am-card'
    },
    thumbStyle: {
      default: function _default() {
        return {};
      }
    },
    thumb: {
      type: String
    },
    extra: {
      type: String
    },
    title: {
      type: String
    }
  },
  render: function render() {
    var _a, _b, _c, _d, _e, _f;

    var prefixCls = this.prefixCls,
        thumb = this.thumb,
        thumbStyle = this.thumbStyle,
        extra = this.extra,
        title = this.title;
    var wrapCls = "".concat(prefixCls, "-header");
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-header-content")
    }, [(_c = (_b = (_a = this.$slots).thumb) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : this.thumb ? Object(external_Vue_["createVNode"])("img", {
      "style": thumbStyle,
      "src": thumb
    }, null) : null, !isEmptySlot(this.$slots.default) ? this.$slots.default() : title]), this.$slots.extra || extra ? // tslint:disable-next-line:jsx-no-multiline-js
    Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-header-extra")
    }, [(_f = (_e = (_d = this.$slots).extra) === null || _e === void 0 ? void 0 : _e.call(_d)) !== null && _f !== void 0 ? _f : extra]) : null]);
  }
}));
// CONCATENATED MODULE: ./src/packages/card/src/footer.tsx



/* harmony default export */ var src_footer = (Object(external_Vue_["defineComponent"])({
  name: 'MCardFooter',
  props: {
    prefixCls: {
      default: 'am-card'
    },
    extra: {
      type: String
    },
    content: {
      type: String
    }
  },
  render: function render() {
    var prefixCls = this.prefixCls,
        content = this.content,
        extra = this.extra;
    var wrapCls = "".concat(prefixCls, "-footer");
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-footer-content")
    }, [!isEmptySlot(this.$slots.default) ? this.$slots.default() : content]), (this.$slots.extra || extra) && Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-footer-extra")
    }, [!isEmptySlot(this.$slots.extra) ? this.$slots.extra() : extra])]);
  }
}));
// CONCATENATED MODULE: ./src/packages/card/src/index.tsx


function card_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/* harmony default export */ var card_src = (Object(external_Vue_["defineComponent"])({
  name: 'MCard',
  Body: body,
  Header: src_header,
  Footer: src_footer,
  props: {
    prefixCls: {
      default: 'am-card'
    },
    full: {
      type: Boolean,
      default: false
    }
  },
  render: function render() {
    var _a, _b;

    var prefixCls = this.prefixCls,
        full = this.full;
    var wrapCls = classnames_default()(prefixCls, card_src_defineProperty({}, "".concat(prefixCls, "-full"), full));
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);
  }
}));
// EXTERNAL MODULE: ./src/packages/card/style/index.less
var card_style = __webpack_require__("02f8");

// CONCATENATED MODULE: ./src/packages/card/style/index.tsx


// CONCATENATED MODULE: ./src/packages/card/index.ts


var card_Plugin = card_src;

card_Plugin.install = function (Vue) {
  Vue.component('MCard', card_src);
  Vue.component('MCardBody', card_src.Body);
  Vue.component('MCardHeader', card_src.Header);
  Vue.component('MCardFooter', card_src.Footer);
};

/* harmony default export */ var card = (card_Plugin);
// EXTERNAL MODULE: ./node_modules/exenv/index.js
var exenv = __webpack_require__("dab3");
var exenv_default = /*#__PURE__*/__webpack_require__.n(exenv);

// EXTERNAL MODULE: ./node_modules/raf/index.js
var node_modules_raf = __webpack_require__("c449");
var raf_default = /*#__PURE__*/__webpack_require__.n(node_modules_raf);

// CONCATENATED MODULE: ./src/packages/carousel/src/decorators.tsx


'use strict';

var IDecoratorProps = {
  currentSlide: {
    type: Number
  },
  slideCount: {
    type: Number
  },
  frameWidth: {
    type: [Number, String]
  },
  slideWidth: {
    type: [Number, String]
  },
  slidesToScroll: {
    type: Number
  },
  cellSpacing: {
    type: Number
  },
  slidesToShow: {
    type: Number
  },
  wrapAround: {
    type: Boolean
  },
  nextSlide: {
    type: Function
  },
  previousSlide: {
    type: Function
  },
  goToSlide: {
    type: Function
  }
};
var Decorator1 = Object(external_Vue_["defineComponent"])({
  name: 'Decorator1',
  props: Object.assign({}, IDecoratorProps),
  setup: function setup(props) {
    var handleClick = function handleClick(e) {
      e.preventDefault();
      props.previousSlide();
    };

    var getButtonStyles = function getButtonStyles(disabled) {
      return {
        border: 0,
        background: 'rgba(0,0,0,0.4)',
        color: 'white',
        padding: 10,
        outline: 0,
        opacity: disabled ? 0.3 : 1,
        cursor: 'pointer'
      };
    };

    return {
      getButtonStyles: getButtonStyles,
      handleClick: handleClick
    };
  },
  render: function render() {
    return Object(external_Vue_["createVNode"])("button", {
      "style": this.getButtonStyles(this.currentSlide === 0 && !this.wrapAround),
      "onClick": this.handleClick.bind(this)
    }, [Object(external_Vue_["createTextVNode"])("PREV")]);
  }
});
var Decorator2 = Object(external_Vue_["defineComponent"])({
  name: 'DefaultDecorator',
  props: Object.assign({}, IDecoratorProps),
  setup: function setup(props) {
    var handleClick = function handleClick(e) {
      e.preventDefault();

      if (props.nextSlide) {
        props.nextSlide();
      }
    };

    var getButtonStyles = function getButtonStyles(disabled) {
      return {
        border: 0,
        background: 'rgba(0,0,0,0.4)',
        color: 'white',
        padding: 10,
        outline: 0,
        opacity: disabled ? 0.3 : 1,
        cursor: 'pointer'
      };
    };

    return {
      getButtonStyles: getButtonStyles,
      handleClick: handleClick
    };
  },
  render: function render() {
    return Object(external_Vue_["createVNode"])("button", {
      "style": this.getButtonStyles(this.currentSlide + this.slidesToScroll >= this.slideCount && !this.wrapAround),
      "onClick": this.handleClick.bind(this)
    }, [Object(external_Vue_["createTextVNode"])("NEXT")]);
  }
});
var Decorator3 = Object(external_Vue_["defineComponent"])({
  name: 'DefaultDecorator',
  props: Object.assign({}, IDecoratorProps),
  setup: function setup() {
    var getIndexes = function getIndexes(count, inc) {
      var arr = [];

      for (var i = 0; i < count; i += inc) {
        arr.push(i);
      }

      return arr;
    };

    var getListStyles = function getListStyles() {
      return {
        position: 'relative',
        margin: 0,
        top: -10,
        padding: 0
      };
    };

    var getListItemStyles = function getListItemStyles() {
      return {
        listStyleType: 'none',
        display: 'inline-block'
      };
    };

    var getButtonStyles = function getButtonStyles(active) {
      return {
        border: 0,
        background: 'transparent',
        color: 'black',
        cursor: 'pointer',
        padding: 10,
        outline: 0,
        fontSize: 24,
        opacity: active ? 1 : 0.5
      };
    };

    return {
      getIndexes: getIndexes,
      getListStyles: getListStyles,
      getButtonStyles: getButtonStyles,
      getListItemStyles: getListItemStyles
    };
  },
  render: function render() {
    var _this = this;

    var indexes = this.getIndexes(this.slideCount, this.slidesToScroll);
    return Object(external_Vue_["createVNode"])("ul", {
      "style": this.getListStyles()
    }, [indexes.map(function (index) {
      return Object(external_Vue_["createVNode"])("li", {
        "style": _this.getListItemStyles(),
        "key": index
      }, [Object(external_Vue_["createVNode"])("button", {
        "style": _this.getButtonStyles(_this.currentSlide === index),
        "onClick": _this.goToSlide && _this.goToSlide.bind(null, index)
      }, [Object(external_Vue_["createTextVNode"])("\u2022")])]);
    })]);
  }
});
var DefaultDecorators = [{
  component: Decorator1,
  position: 'CenterLeft'
}, {
  component: Decorator2,
  position: 'CenterRight'
}, {
  component: Decorator3,
  position: 'BottomCenter'
}];
/* harmony default export */ var decorators = (DefaultDecorators);
// CONCATENATED MODULE: ./src/packages/carousel/src/base.tsx






'use strict'; // from https://github.com/chenglou/tween-functions


function easeOutCirc(t, b, _c, d) {
  var c = _c - b;
  var t2 = t; // 差之毫厘，谬之千里

  return c * Math.sqrt(1 - (t2 = t2 / d - 1) * t2) + b;
}

function linear(t, b, _c, d) {
  var c = _c - b;
  return c * t / d + b;
}

function filterNotEmpty(nodes) {
  var n = [];
  nodes.forEach(function (it) {
    if (!(it instanceof Text) || it.textContent) {
      n.push(it);
    }
  });
  return n;
}

var DEFAULT_STACK_BEHAVIOR = 'ADDITIVE';
var DEFAULT_DURATION = 300;
var DEFAULT_DELAY = 0;
var stackBehavior = {
  ADDITIVE: 'ADDITIVE',
  DESTRUCTIVE: 'DESTRUCTIVE'
};

var addEvent = function addEvent(elem, type, eventHandle) {
  if (elem === null || typeof elem === 'undefined') {
    return;
  }

  if (elem.addEventListener.bind(elem)) {
    elem.addEventListener(type, eventHandle, false);
  } else if (elem.attachEvent) {
    elem.attachEvent('on' + type, eventHandle);
  } else {
    elem['on' + type] = eventHandle;
  }
};

var removeEvent = function removeEvent(elem, type, eventHandle) {
  if (elem === null || typeof elem === 'undefined') {
    return;
  }

  if (elem.removeEventListener.bind(elem)) {
    elem.removeEventListener(type, eventHandle, false);
  } else if (elem.detachEvent) {
    elem.detachEvent('on' + type, eventHandle);
  } else {
    elem['on' + type] = null;
  }
};

var CarouselBase = Object(external_Vue_["defineComponent"])({
  name: 'CarouselBase',
  inheritAttrs: false,
  props: {
    afterSlide: {
      type: Function,
      default: function _default() {
        return function () {};
      }
    },
    autoplay: {
      type: Boolean,
      default: false
    },
    resetAutoplay: {
      type: Boolean,
      default: true
    },
    swipeSpeed: {
      type: Number,
      default: 12
    },
    autoplayInterval: {
      type: Number,
      default: 3000
    },
    beforeSlide: {
      type: Function,
      default: function _default() {
        return function () {};
      }
    },
    cellAlign: {
      default: 'left'
    },
    cellSpacing: {
      default: 0
    },
    data: {
      default: function _default() {
        return function () {};
      }
    },
    decorators: {
      default: function _default() {
        return decorators;
      }
    },
    dragging: {
      type: Boolean,
      default: true
    },
    easing: {
      default: function _default() {
        return easeOutCirc;
      }
    },
    edgeEasing: {
      default: function _default() {
        return linear;
      }
    },
    framePadding: {
      default: '0px'
    },
    frameOverflow: {
      default: 'hidden'
    },
    initialSlideHeight: {
      type: Number
    },
    initialSlideWidth: {},
    slideIndex: {
      default: 0
    },
    slidesToShow: {
      default: 1
    },
    slidesToScroll: {
      type: [Number, String],
      default: 1
    },
    slideWidth: {
      default: 1
    },
    speed: {
      default: 500
    },
    swiping: {
      type: Boolean,
      default: true
    },
    vertical: {
      type: Boolean,
      default: false
    },
    width: {
      default: '100%'
    },
    wrapAround: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var _this = this;

    var emit = _ref.emit,
        slots = _ref.slots;
    var touchObject = Object(external_Vue_["ref"])({});
    var autoplayPaused = Object(external_Vue_["ref"])(null);
    var clickSafe = Object(external_Vue_["ref"])(true);
    var autoplayID = Object(external_Vue_["ref"])(null);

    var _rafID = Object(external_Vue_["ref"])(null);

    var state = Object(external_Vue_["reactive"])({
      slidesToShow: props.slidesToShow,
      slideHeight: 0,
      currentSlide: props.slideIndex,
      dragging: false,
      frameWidth: 0,
      left: 0,
      slideCount: 0,
      lidesToShow: 0,
      slidesToScroll: typeof props.slidesToScroll === 'number' ? props.slidesToScroll : 1,
      slideWidth: 0,
      top: 0,
      tweenQueue: []
    });
    Object(external_Vue_["watch"])(function () {
      return props.slideIndex;
    }, function (value) {
      if (value !== state.currentSlide) {
        goToSlide(value);
      }
    });
    Object(external_Vue_["watch"])(function () {
      return props.autoplay;
    }, function (value) {
      if (value) {
        startAutoplay();
      } else {
        stopAutoplay();
      }
    });

    var setState = function setState(object, callback) {
      Object.keys(object).forEach(function (key) {
        state[key] = object[key];
      });

      if (callback) {
        callback();
      }
    };

    var tweenState = function tweenState(path, _ref2) {
      var easing = _ref2.easing,
          duration = _ref2.duration,
          delay = _ref2.delay,
          beginValue = _ref2.beginValue,
          endValue = _ref2.endValue,
          onEnd = _ref2.onEnd,
          configSB = _ref2.stackBehavior;
      var cursor = state;
      var stateName; // see comment below on pash hash

      var pathHash;

      if (typeof path === 'string') {
        stateName = path;
        pathHash = path;
      } else {
        for (var i = 0; i < path.length - 1; i++) {
          cursor = cursor[path[i]];
        }

        stateName = path[path.length - 1];
        pathHash = path.join('|');
      } // see the reasoning for these defaults at the top of file


      var newConfig = {
        easing: easing,
        duration: duration == null ? DEFAULT_DURATION : duration,
        delay: delay == null ? DEFAULT_DELAY : delay,
        beginValue: beginValue == null ? cursor[stateName] : beginValue,
        endValue: endValue,
        onEnd: onEnd,
        stackBehavior: configSB || DEFAULT_STACK_BEHAVIOR
      };
      var newTweenQueue = state.tweenQueue;

      if (newConfig.stackBehavior === stackBehavior.DESTRUCTIVE) {
        newTweenQueue = state.tweenQueue.filter(function (item) {
          return item.pathHash !== pathHash;
        });
      } // we store path hash, so that during value retrieval we can use hash
      // comparison to find the path. See the kind of shitty thing you have to
      // do when you don't have value comparison for collections?


      newTweenQueue.push({
        pathHash: pathHash,
        config: newConfig,
        initTime: Date.now() + newConfig.delay
      }); // sorry for mutating. For perf reasons we don't want to deep clone.
      // guys, can we please all start using persistent collections so that
      // we can stop worrying about nonesense like this

      cursor[stateName] = newConfig.endValue;

      if (newTweenQueue.length === 1) {
        _rafID.value = raf_default()(_rafCb.bind(_this));
      } // this will also include the above mutated update


      state.tweenQueue = newTweenQueue;
    };

    var getTweeningValue = function getTweeningValue(path) {
      var tweeningValue;
      var pathHash;

      if (typeof path === 'string') {
        tweeningValue = state[path];
        pathHash = path;
      } else {
        tweeningValue = state;

        for (var i = 0; i < path.length; i++) {
          tweeningValue = tweeningValue[path[i]];
        }

        pathHash = path.join('|');
      }

      var now = Date.now();

      for (var _i = 0; _i < state.tweenQueue.length; _i++) {
        var _state$tweenQueue$_i = state.tweenQueue[_i],
            itemPathHash = _state$tweenQueue$_i.pathHash,
            initTime = _state$tweenQueue$_i.initTime,
            config = _state$tweenQueue$_i.config;

        if (itemPathHash !== pathHash) {
          continue;
        }

        var progressTime = now - initTime > config.duration ? config.duration : Math.max(0, now - initTime); // `now - initTime` can be negative if initTime is scheduled in the
        // future by a delay. In this case we take 0
        // if duration is 0, consider that as jumping to endValue directly. This
        // is needed because the easing functino might have undefined behavior for
        // duration = 0

        var easeValue = config.duration === 0 ? config.endValue : config.easing(progressTime, config.beginValue, config.endValue, config.duration // TODO: some funcs accept a 5th param
        );
        var contrib = easeValue - config.endValue;
        tweeningValue += contrib;
      }

      return tweeningValue;
    };

    var _rafCb = function _rafCb() {
      if (state.tweenQueue.length === 0) {
        return;
      }

      var now = Date.now();
      var newTweenQueue = [];

      for (var i = 0; i < state.tweenQueue.length; i++) {
        var item = state.tweenQueue[i];
        var initTime = item.initTime,
            config = item.config;

        if (now - initTime < config.duration) {
          newTweenQueue.push(item);
        } else {
          if (config.onEnd) {
            config.onEnd();
          }
        }
      } // onEnd might trigger a parent callback that removes this component
      // -1 means we've canceled it in componentWillUnmount


      if (_rafID.value === -1) {
        return;
      }

      state.tweenQueue = newTweenQueue;
      _rafID.value = raf_default()(_rafCb);
    };

    var getTouchEvents = function getTouchEvents() {
      if (props.swiping === false) {
        return null;
      }

      return {
        onTouchstart: function onTouchstart(e) {
          touchObject.value = {
            startX: e.touches[0].pageX,
            startY: e.touches[0].pageY
          };
          handleMouseOver();
        },
        onTouchmove: function onTouchmove(e) {
          var direction = swipeDirection(touchObject.value.startX, e.touches[0].pageX, touchObject.value.startY, e.touches[0].pageY);

          if (direction !== 0) {
            e.preventDefault();
          }

          var length = props.vertical ? Math.round(Math.sqrt(Math.pow(e.touches[0].pageY - touchObject.value.startY, 2))) : Math.round(Math.sqrt(Math.pow(e.touches[0].pageX - touchObject.value.startX, 2)));
          touchObject.value = {
            startX: touchObject.value.startX,
            startY: touchObject.value.startY,
            endX: e.touches[0].pageX,
            endY: e.touches[0].pageY,
            length: length,
            direction: direction
          };
          setState({
            left: props.vertical ? 0 : getTargetLeft(touchObject.value.length * touchObject.value.direction),
            top: props.vertical ? getTargetLeft(touchObject.value.length * touchObject.value.direction) : 0
          });
        },
        onTouchend: function onTouchend(e) {
          handleSwipe(e);
          handleMouseOut();
        },
        onTouchcancel: function onTouchcancel(e) {
          handleSwipe(e);
        }
      };
    };

    var getMouseEvents = function getMouseEvents() {
      if (props.dragging === false) {
        return null;
      }

      return {
        onMouseover: function onMouseover() {
          handleMouseOver();
        },
        onMouseout: function onMouseout() {
          handleMouseOut();
        },
        onMousedown: function onMousedown(e) {
          touchObject.value = {
            startX: e.clientX,
            startY: e.clientY
          };
          setState({
            dragging: true
          });
        },
        onMousemove: function onMousemove(e) {
          if (!state.dragging) {
            return;
          }

          var direction = swipeDirection(touchObject.value.startX, e.clientX, touchObject.value.startY, e.clientY);

          if (direction !== 0) {
            e.preventDefault();
          }

          var length = props.vertical ? Math.round(Math.sqrt(Math.pow(e.clientY - touchObject.value.startY, 2))) : Math.round(Math.sqrt(Math.pow(e.clientX - touchObject.value.startX, 2)));
          touchObject.value = {
            startX: touchObject.value.startX,
            startY: touchObject.value.startY,
            endX: e.clientX,
            endY: e.clientY,
            length: length,
            direction: direction
          };
          setState({
            left: props.vertical ? 0 : getTargetLeft(touchObject.value.length * touchObject.value.direction),
            top: props.vertical ? getTargetLeft(touchObject.value.length * touchObject.value.direction) : 0
          });
        },
        onMouseup: function onMouseup(e) {
          if (!state.dragging) {
            return;
          }

          handleSwipe(e);
        },
        onMouseleave: function onMouseleave(e) {
          if (!state.dragging) {
            return;
          }

          handleSwipe(e);
        }
      };
    };

    var handleMouseOver = function handleMouseOver() {
      if (props.autoplay) {
        autoplayPaused.value = true;
        stopAutoplay();
      }
    };

    var handleMouseOut = function handleMouseOut() {
      if (props.autoplay && autoplayPaused.value) {
        startAutoplay();
        autoplayPaused.value = null;
      }
    };

    var handleClick = function handleClick(e) {
      if (clickSafe.value === true) {
        e.preventDefault();
        e.stopPropagation();

        if (e.nativeEvent) {
          e.nativeEvent.stopPropagation();
        }
      }
    };

    var handleSwipe = function handleSwipe(_) {
      clickSafe.value = !!(typeof touchObject.value.length !== 'undefined' && touchObject.value.length > 44);
      var slidesToShow = props.slidesToShow;
      var slidesToScroll = props.slidesToScroll,
          swipeSpeed = props.swipeSpeed; // var slidesToShow = this.slidesToShow;

      if (slidesToScroll === 'auto') {
        state.lidesToShow = state.slidesToScroll;
      }

      if (childrenCount() > 1 && touchObject.value.length > state.slideWidth / slidesToShow / swipeSpeed) {
        if (touchObject.value.direction === 1) {
          if (state.currentSlide >= childrenCount() - slidesToShow && !props.wrapAround) {
            animateSlide(props.edgeEasing);
          } else {
            nextSlide();
          }
        } else if (touchObject.value.direction === -1) {
          if (state.currentSlide <= 0 && !props.wrapAround) {
            animateSlide(props.edgeEasing);
          } else {
            previousSlide();
          }
        }
      } else {
        goToSlide(state.currentSlide);
      }

      touchObject.value = {};
      state.dragging = false;
    };

    var swipeDirection = function swipeDirection(x1, x2, y1, y2) {
      var xDist = x1 - x2;
      var yDist = y1 - y2;
      var r = Math.atan2(yDist, xDist);
      var swipeAngle = Math.round(r * 180 / Math.PI);

      if (swipeAngle < 0) {
        swipeAngle = 360 - Math.abs(swipeAngle);
      }

      if (swipeAngle <= 45 && swipeAngle >= 0) {
        return 1;
      }

      if (swipeAngle <= 360 && swipeAngle >= 315) {
        return 1;
      }

      if (swipeAngle >= 135 && swipeAngle <= 225) {
        return -1;
      }

      if (props.vertical === true) {
        if (swipeAngle >= 35 && swipeAngle <= 135) {
          return 1;
        } else {
          return -1;
        }
      }

      return 0;
    };

    var autoplayIterator = function autoplayIterator() {
      if (props.wrapAround) {
        return nextSlide();
      }

      if (state.currentSlide !== state.slideCount - state.slidesToShow) {
        nextSlide();
      } else {
        stopAutoplay();
      }
    };

    var startAutoplay = function startAutoplay() {
      if (childrenCount() <= 1) {
        return;
      }

      autoplayID.value = setInterval(autoplayIterator, props.autoplayInterval);
    };

    var resetAutoplayFun = function resetAutoplayFun() {
      if (props.resetAutoplay && props.autoplay && !autoplayPaused.value) {
        // by warmhug
        stopAutoplay();
        startAutoplay();
      }
    };

    var stopAutoplay = function stopAutoplay() {
      if (autoplayID.value) {
        clearInterval(autoplayID.value);
      }
    };

    var goToSlide = function goToSlide(index) {
      var beforeSlide = props.beforeSlide,
          afterSlide = props.afterSlide;

      if (index >= childrenCount() || index < 0) {
        if (!props.wrapAround) {
          return;
        }

        if (index >= childrenCount()) {
          beforeSlide(state.currentSlide, 0);
          return setState({
            currentSlide: 0
          }, function () {
            animateSlide(null, null, getTargetLeft(null, index), function () {
              animateSlide(null, 0.01);
              afterSlide(0);
              resetAutoplayFun();
              setExternalData();
            });
          });
        } else {
          var endSlide = childrenCount() - state.slidesToScroll;
          beforeSlide(state.currentSlide, endSlide);
          return setState({
            currentSlide: endSlide
          }, function () {
            animateSlide(null, null, getTargetLeft(null, index), function () {
              animateSlide(null, 0.01);
              afterSlide(endSlide);
              resetAutoplayFun();
              setExternalData();
            });
          });
        }
      }

      beforeSlide(state.currentSlide, index);
      state.currentSlide = index;
      animateSlide();
      props.afterSlide(index);
      resetAutoplayFun();
      setExternalData();
    };

    var nextSlide = function nextSlide() {
      var count = childrenCount();
      var slidesToShow = props.slidesToShow;

      if (props.slidesToScroll === 'auto') {
        slidesToShow = state.slidesToScroll;
      }

      if (state.currentSlide >= count - slidesToShow && !props.wrapAround) {
        return;
      }

      if (props.wrapAround) {
        goToSlide(state.currentSlide + state.slidesToScroll);
      } else {
        if (props.slideWidth !== 1) {
          return goToSlide(state.currentSlide + state.slidesToScroll);
        }

        goToSlide(Math.min(state.currentSlide + state.slidesToScroll, count - slidesToShow));
      }
    };

    var previousSlide = function previousSlide() {
      if (state.currentSlide <= 0 && !props.wrapAround) {
        return;
      }

      if (props.wrapAround) {
        goToSlide(state.currentSlide - state.slidesToScroll);
      } else {
        goToSlide(Math.max(0, state.currentSlide - state.slidesToScroll));
      }
    };

    var animateSlide = function animateSlide(easing, duration, endValue, callback) {
      tweenState(props.vertical ? 'top' : 'left', {
        easing: easing || props.easing,
        duration: duration || props.speed,
        endValue: endValue || getTargetLeft(),
        delay: null,
        beginValue: null,
        onEnd: callback || null,
        stackBehavior: stackBehavior
      });
    };

    var getTargetLeft = function getTargetLeft(touchOffset, slide) {
      var offset;
      var target = slide || state.currentSlide;
      var cellSpacing = props.cellSpacing;

      switch (props.cellAlign) {
        case 'left':
          {
            offset = 0;
            offset -= cellSpacing * target;
            break;
          }

        case 'center':
          {
            offset = (state.frameWidth - state.slideWidth) / 2;
            offset -= cellSpacing * target;
            break;
          }

        case 'right':
          {
            offset = state.frameWidth - state.slideWidth;
            offset -= cellSpacing * target;
            break;
          }

        default:
          break;
      }

      var left = state.slideWidth * target;
      var lastSlide = state.currentSlide > 0 && target + state.slidesToScroll >= state.slideCount;

      if (lastSlide && props.slideWidth !== 1 && !props.wrapAround && props.slidesToScroll === 'auto') {
        left = state.slideWidth * state.slideCount - state.frameWidth;
        offset = 0;
        offset -= cellSpacing * (state.slideCount - 1);
      }

      offset -= touchOffset || 0;
      return (left - offset) * -1;
    };

    var bindEvents = function bindEvents() {
      if (exenv_default.a.canUseDOM) {
        addEvent(window, 'resize', onResize.bind(_this));
        addEvent(document, 'readystatechange', onReadyStateChange.bind(_this));
      }
    };

    var onResize = function onResize() {
      setDimensions();
    };

    var onReadyStateChange = function onReadyStateChange() {
      setDimensions();
    };

    var unbindEvents = function unbindEvents() {
      if (exenv_default.a.canUseDOM) {
        removeEvent(window, 'resize', onResize.bind(_this));
        removeEvent(document, 'readystatechange', onReadyStateChange.bind(_this));
      }
    };

    var formatChildren = function formatChildren(children) {
      var realChildren = unwrapFragment(children);
      var positionValue = props.vertical ? getTweeningValue('top') : getTweeningValue('left');
      return realChildren.map(function (child, index) {
        return Object(external_Vue_["createVNode"])("li", {
          "class": "slider-slide",
          "style": getSlideStyles(index, positionValue),
          "key": index
        }, [child]);
      });
    };

    var setInitialDimensions = function setInitialDimensions() {
      var vertical = props.vertical,
          initialSlideHeight = props.initialSlideHeight,
          initialSlideWidth = props.initialSlideWidth,
          slidesToShow = props.slidesToShow,
          cellSpacing = props.cellSpacing;
      var slideWidth = vertical ? initialSlideHeight || 0 : initialSlideWidth || 0;
      var slideHeight = initialSlideHeight ? initialSlideHeight * slidesToShow : 0;
      var frameHeight = slideHeight + cellSpacing * (slidesToShow - 1);
      setState({
        slideHeight: slideHeight,
        frameWidth: vertical ? frameHeight : '100%',
        slideCount: childrenCount(),
        slideWidth: slideWidth
      }, function () {
        setLeft();
        setExternalData();
      });
    };

    var frameRef = Object(external_Vue_["ref"])(null);

    var setDimensions = function setDimensions() {
      var frameWidth;
      var frameHeight;
      var slideHeight;
      var slideWidth;
      var slidesToScroll = props.slidesToScroll;
      var frame = frameRef.value;
      var firstSlide = filterNotEmpty(frame && frame.childNodes[0].childNodes)[0];

      if (firstSlide) {
        firstSlide.style.height = 'auto';
        slideHeight = props.vertical ? firstSlide.offsetHeight * props.slidesToShow : firstSlide.offsetHeight;
      } else {
        slideHeight = 100;
      }

      if (typeof props.slideWidth !== 'number') {
        slideWidth = parseInt(props.slideWidth, 10);
      } else {
        if (props.vertical) {
          slideWidth = slideHeight / props.slidesToShow * props.slideWidth;
        } else {
          if (frame) {
            slideWidth = frame.offsetWidth / props.slidesToShow * props.slideWidth;
          }
        }
      }

      if (!props.vertical) {
        slideWidth -= props.cellSpacing * ((100 - 100 / props.slidesToShow) / 100);
      }

      frameHeight = slideHeight + props.cellSpacing * (props.slidesToShow - 1);

      if (frame) {
        frameWidth = props.vertical ? frameHeight : frame.offsetWidth;
      }

      if (props.slidesToScroll === 'auto') {
        state.slidesToScroll = Math.floor(frameWidth / (slideWidth + props.cellSpacing));
      }

      setState({
        slideHeight: slideHeight,
        frameWidth: frameWidth,
        slideWidth: slideWidth,
        slidesToScroll: slidesToScroll,
        left: props.vertical ? 0 : getTargetLeft(),
        top: props.vertical ? getTargetLeft() : 0
      }, function () {
        setLeft();
      });
    };

    var setLeft = function setLeft() {
      setState({
        left: props.vertical ? 0 : getTargetLeft(),
        top: props.vertical ? getTargetLeft() : 0
      });
    };

    var setExternalData = function setExternalData() {
      if (props.data) {
        props.data();
      }
    };

    var childrenCount = function childrenCount() {
      return unwrapFragment(slots.default()).length || 0;
    };

    var getListStyles = function getListStyles() {
      var listWidth = state.slideWidth * childrenCount();
      var cellSpacing = props.cellSpacing;
      var spacingOffset = cellSpacing * childrenCount();
      var transform = 'translate3d(' + getTweeningValue('left') + 'px, ' + getTweeningValue('top') + 'px, 0)';
      return {
        transform: transform,
        WebkitTransform: transform,
        msTransform: 'translate(' + getTweeningValue('left') + 'px, ' + getTweeningValue('top') + 'px)',
        position: 'relative',
        display: 'block',
        margin: props.vertical ? cellSpacing / 2 * -1 + 'px 0px' : '0px ' + cellSpacing / 2 * -1 + 'px',
        padding: 0,
        height: props.vertical ? listWidth + spacingOffset + 'px' : state.slideHeight + 'px',
        width: props.vertical ? 'auto' : listWidth + spacingOffset + 'px',
        cursor: state.dragging ? 'pointer' : 'inherit',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box'
      };
    };

    var getFrameStyles = function getFrameStyles() {
      return {
        position: 'relative',
        display: 'block',
        overflow: props.frameOverflow,
        height: props.vertical ? state.frameWidth + 'px' || false : 'auto',
        margin: props.framePadding,
        padding: 0,
        transform: 'translate3d(0, 0, 0)',
        WebkitTransform: 'translate3d(0, 0, 0)',
        msTransform: 'translate(0, 0)',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box'
      };
    };

    var getSlideStyles = function getSlideStyles(index, positionValue) {
      var targetPosition = getSlideTargetPosition(index, positionValue);
      var cellSpacing = props.cellSpacing;
      return {
        position: 'absolute',
        left: props.vertical ? 0 : targetPosition + 'px',
        top: props.vertical ? targetPosition + 'px' : 0,
        display: props.vertical ? 'block' : 'inline-block',
        listStyleType: 'none',
        verticalAlign: 'top',
        width: props.vertical ? '100%' : state.slideWidth + 'px',
        height: 'auto',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box',
        marginLeft: props.vertical ? 'auto' : cellSpacing / 2 + 'px',
        marginRight: props.vertical ? 'auto' : cellSpacing / 2 + 'px',
        marginTop: props.vertical ? cellSpacing / 2 + 'px' : 'auto',
        marginBottom: props.vertical ? cellSpacing / 2 + 'px' : 'auto'
      };
    };

    var getSlideTargetPosition = function getSlideTargetPosition(index, positionValue) {
      var slidesToShow = state.frameWidth / state.slideWidth;
      var targetPosition = (state.slideWidth + props.cellSpacing) * index;
      var end = (state.slideWidth + props.cellSpacing) * slidesToShow * -1;

      if (props.wrapAround) {
        var slidesBefore = Math.ceil(positionValue / state.slideWidth);

        if (state.slideCount - slidesBefore <= index) {
          return (state.slideWidth + props.cellSpacing) * (state.slideCount - index) * -1;
        }

        var slidesAfter = Math.ceil((Math.abs(positionValue) - Math.abs(end)) / state.slideWidth);

        if (state.slideWidth !== 1) {
          slidesAfter = Math.ceil((Math.abs(positionValue) - state.slideWidth) / state.slideWidth);
        }

        if (index <= slidesAfter - 1) {
          return (state.slideWidth + props.cellSpacing) * (state.slideCount + index);
        }
      }

      return targetPosition;
    };

    var getSliderStyles = function getSliderStyles() {
      return {
        position: 'relative',
        display: 'block',
        width: props.width,
        height: 'auto',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box',
        visibility: state.slideWidth ? 'visible' : 'hidden'
      };
    };

    var getStyleTagStyles = function getStyleTagStyles() {
      return '.slider-slide > img {width: 100%; display: block;}';
    };

    var getDecoratorStyles = function getDecoratorStyles(position) {
      switch (position) {
        case 'TopLeft':
          {
            return {
              position: 'absolute',
              top: 0,
              left: 0
            };
          }

        case 'TopCenter':
          {
            return {
              position: 'absolute',
              top: 0,
              left: '50%',
              transform: 'translateX(-50%)',
              WebkitTransform: 'translateX(-50%)',
              msTransform: 'translateX(-50%)'
            };
          }

        case 'TopRight':
          {
            return {
              position: 'absolute',
              top: 0,
              right: 0
            };
          }

        case 'CenterLeft':
          {
            return {
              position: 'absolute',
              top: '50%',
              left: 0,
              transform: 'translateY(-50%)',
              WebkitTransform: 'translateY(-50%)',
              msTransform: 'translateY(-50%)'
            };
          }

        case 'CenterCenter':
          {
            return {
              position: 'absolute',
              top: '50%',
              left: '50%',
              transform: 'translate(-50%,-50%)',
              WebkitTransform: 'translate(-50%, -50%)',
              msTransform: 'translate(-50%, -50%)'
            };
          }

        case 'CenterRight':
          {
            return {
              position: 'absolute',
              top: '50%',
              right: 0,
              transform: 'translateY(-50%)',
              WebkitTransform: 'translateY(-50%)',
              msTransform: 'translateY(-50%)'
            };
          }

        case 'BottomLeft':
          {
            return {
              position: 'absolute',
              bottom: 0,
              left: 0
            };
          }

        case 'BottomCenter':
          {
            return {
              position: 'absolute',
              bottom: 0,
              width: '100%',
              textAlign: 'center'
            };
          }

        case 'BottomRight':
          {
            return {
              position: 'absolute',
              bottom: 0,
              right: 0
            };
          }

        default:
          {
            return {
              position: 'absolute',
              top: 0,
              left: 0
            };
          }
      }
    };

    {
      setInitialDimensions();
    }
    Object(external_Vue_["onMounted"])(function () {
      setDimensions();
      bindEvents();
      setExternalData();

      if (props.autoplay) {
        startAutoplay();
      }
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      unbindEvents();
      stopAutoplay();
      raf_default.a.cancel(_rafID.value);
      _rafID.value = -1;
    });
    Object(external_Vue_["onBeforeUpdate"])(function () {
      setDimensions();
    });
    return {
      state: state,
      childrenCount: childrenCount,
      getTouchEvents: getTouchEvents,
      getMouseEvents: getMouseEvents,
      getStyleTagStyles: getStyleTagStyles,
      handleClick: handleClick,
      getDecoratorStyles: getDecoratorStyles,
      nextSlide: nextSlide,
      previousSlide: previousSlide,
      goToSlide: goToSlide,
      getSliderStyles: getSliderStyles,
      formatChildren: formatChildren,
      getFrameStyles: getFrameStyles,
      getListStyles: getListStyles,
      setFrameRef: function setFrameRef(el) {
        frameRef.value = el;
      }
    };
  },
  render: function render() {
    var _this2 = this;

    this.state.slideCount = this.childrenCount();
    var children = this.childrenCount() > 1 ? this.formatChildren(this.$slots.default()) : this.$slots.default();
    return Object(external_Vue_["createVNode"])("div", {
      "class": "slider",
      "ref": "slider",
      "style": Object.assign({}, this.getSliderStyles())
    }, [Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": "slider-frame",
      "ref": this.setFrameRef,
      "style": this.getFrameStyles()
    }, Object.assign(Object.assign({}, this.getTouchEvents()), this.getMouseEvents()), {
      "onClick": this.handleClick.bind(this)
    }), [Object(external_Vue_["createVNode"])("ul", {
      "class": "slider-list",
      "ref": "list",
      "style": this.getListStyles()
    }, [children])]), this.decorators ? this.decorators.map(function (Decorator, index) {
      return Object(external_Vue_["createVNode"])("div", {
        "style": Object.assign(Object.assign({}, _this2.getDecoratorStyles(Decorator.position)), Decorator.style || {}),
        "class": 'slider-decorator-' + index,
        "key": index
      }, [Object(external_Vue_["createVNode"])(Decorator.component, {
        currentSlide: _this2.state.currentSlide,
        slideCount: _this2.state.slideCount,
        frameWidth: _this2.state.frameWidth,
        slideWidth: _this2.state.slideWidth,
        slidesToScroll: _this2.state.slidesToScroll,
        cellSpacing: _this2.cellSpacing,
        slidesToShow: _this2.slidesToShow,
        wrapAround: _this2.wrapAround,
        nextSlide: _this2.nextSlide,
        previousSlide: _this2.previousSlide,
        goToSlide: _this2.goToSlide
      }, null)]);
    }) : null]);
  }
});
/* harmony default export */ var base = (CarouselBase);
// CONCATENATED MODULE: ./src/packages/carousel/src/index.tsx


function carousel_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





function carousel_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var DotDecorator = Object(external_Vue_["defineComponent"])({
  name: 'DotDecorator',
  inheritAttrs: false,
  props: {
    slideCount: {
      type: Number
    },
    slidesToScroll: {
      type: Number
    },
    currentSlide: {
      type: Number
    },
    prefixCls: {
      type: String,
      default: 'am-carousel'
    },
    dotActiveStyle: {
      type: Object
    },
    dotStyle: {
      type: Object
    }
  },
  render: function render() {
    var _this = this;

    var arr = [];

    for (var i = 0; i < this.slideCount; i += this.slidesToScroll) {
      arr.push(i);
    }

    var dotDom = arr.map(function (index) {
      var dotCls = classnames_default()("".concat(_this.prefixCls, "-wrap-dot"), carousel_src_defineProperty({}, "".concat(_this.prefixCls, "-wrap-dot-active"), index === _this.currentSlide));
      var currentDotStyle = index === _this.currentSlide ? _this.dotActiveStyle : _this.dotStyle;
      return Object(external_Vue_["createVNode"])("div", {
        "class": dotCls,
        "key": index
      }, [Object(external_Vue_["createVNode"])("span", {
        "style": currentDotStyle
      }, null)]);
    });
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(this.prefixCls, "-wrap")
    }, [dotDom]);
  }
});
var Carousel = Object(external_Vue_["defineComponent"])({
  name: 'Carousel',
  props: {
    prefixCls: {
      type: String,
      default: 'am-carousel'
    },
    beforeChange: {},
    afterChange: {
      type: Function
    },
    swipeSpeed: {},
    easing: {},
    dotStyle: {
      default: function _default() {
        return {};
      }
    },
    dotActiveStyle: {
      default: function _default() {
        return {};
      }
    },
    frameOverflow: {
      type: String
    },
    cellAlign: {
      type: String,
      default: 'center'
    },
    cellSpacing: {
      type: Number
    },
    slideWidth: {
      type: [String, Number]
    },
    dots: {
      type: Boolean,
      default: true
    },
    vertical: {
      type: Boolean
    },
    autoplay: {
      type: Boolean,
      default: false
    },
    autoplayInterval: {
      type: Number
    },
    infinite: {
      type: Boolean,
      default: false
    },
    initialSlideWidth: {
      type: Number
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var selectedIndex = Object(external_Vue_["ref"])(0);

    var onChange = function onChange(index) {
      selectedIndex.value = index;

      if (props.afterChange) {
        props.afterChange(index);
      }
    };

    return {
      onChange: onChange,
      selectedIndex: selectedIndex
    };
  },
  render: function render() {
    var _slot;

    var infinite = this.infinite,
        selectedIndex = this.selectedIndex,
        beforeChange = this.beforeChange,
        afterChange = this.afterChange,
        dots = this.dots,
        prefixCls = this.prefixCls,
        dotActiveStyle = this.dotActiveStyle,
        dotStyle = this.dotStyle,
        vertical = this.vertical;
    var newProps = Object.assign(Object.assign({}, this.$props), {
      wrapAround: infinite,
      slideIndex: selectedIndex,
      beforeSlide: beforeChange
    });
    var Decorators = [];

    if (dots) {
      Decorators = [{
        component: DotDecorator,
        position: 'BottomCenter'
      }];
    }

    var wrapCls = classnames_default()(prefixCls, carousel_src_defineProperty({}, "".concat(prefixCls, "-vertical"), vertical));
    return Object(external_Vue_["createVNode"])(base, Object(external_Vue_["mergeProps"])(Object.assign(Object.assign({}, newProps), {
      decorators: Decorators,
      afterSlide: this.onChange
    }), {
      "class": wrapCls
    }), carousel_src_isSlot(_slot = this.$slots.default()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var carousel_src = (Carousel);
// EXTERNAL MODULE: ./src/packages/carousel/style/index.less
var carousel_style = __webpack_require__("c0ad");

// CONCATENATED MODULE: ./src/packages/carousel/style/index.tsx


// CONCATENATED MODULE: ./src/packages/carousel/index.ts


var carousel_Plugin = carousel_src;

carousel_Plugin.install = function (Vue) {
  Vue.component('MCarousel', carousel_src);
};

/* harmony default export */ var packages_carousel = (carousel_Plugin);
// CONCATENATED MODULE: ./src/packages/utils/get-data-attr.tsx
/* harmony default export */ var get_data_attr = (function (props) {
  return Object.keys(props).reduce(function (prev, key) {
    if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
      prev[key] = props[key];
    }

    return prev;
  }, {});
});
// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-checkbox/index.js
var vc_checkbox = __webpack_require__("d1dd");
var vc_checkbox_default = /*#__PURE__*/__webpack_require__.n(vc_checkbox);

// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox.tsx





function checkbox_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var Checkbox = Object(external_Vue_["defineComponent"])({
  name: 'MCheckbox',
  props: {
    prefixCls: {
      default: 'am-checkbox'
    },
    name: {
      type: String
    },
    wrapLabel: {
      type: Boolean,
      default: true
    },
    disabled: {
      type: Boolean,
      default: false
    },
    value: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var checked = Object(external_Vue_["ref"])(props.value || false);
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      checked.value = value;
    });
    Object(external_Vue_["watch"])(function () {
      return checked.value;
    }, function (checked) {
      emit('update:value', checked);
    });

    var onClick = function onClick(e) {
      // e.stopPropagation();
      // e.preventDefault();
      checked.value = !checked.value;
      emit('update:value', checked.value);
    };

    return {
      onClick: onClick
    };
  },
  render: function render() {
    var _slot;

    var _a, _b;

    var prefixCls = this.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-wrapper"));

    var mark = Object(external_Vue_["createVNode"])("label", {
      "class": wrapCls
    }, [Object(external_Vue_["createVNode"])(vc_checkbox_default.a, Object(external_Vue_["mergeProps"])({
      "onClick": this.onClick,
      "checked": this.value
    }, this.$props), null), (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);

    if (this.wrapLabel) {
      return mark;
    }

    return Object(external_Vue_["createVNode"])(vc_checkbox_default.a, Object(external_Vue_["mergeProps"])({
      "onClick": this.onClick,
      "checked": this.value
    }, this.$props), checkbox_isSlot(_slot = this.$slots.default()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var src_checkbox = (Checkbox);
// CONCATENATED MODULE: ./src/packages/checkbox/src/agree-item.tsx







function agree_item_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var agree_item = (Object(external_Vue_["defineComponent"])({
  name: 'MAgreeItem',
  props: {
    prefixCls: {
      type: String,
      default: 'am-checkbox'
    },
    name: {
      type: String
    },
    wrapLabel: {
      type: Boolean,
      default: true
    },
    defaultValue: {
      type: Boolean,
      default: false
    },
    value: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var _a;

    var state = Object(external_Vue_["reactive"])({
      value: (_a = props.value) !== null && _a !== void 0 ? _a : props.defaultValue
    });
    Object(external_Vue_["watch"])(function () {
      return state.value;
    }, function (value) {
      emit('update:value', value);
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.value = value;
    });
    return {
      state: state
    };
  },
  render: function render() {
    var _this = this;

    var _slot;

    var restProps = tslib_es6_rest(this.$props, []);

    var prefixCls = restProps.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-agree"));
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])(get_data_attr(restProps), {
      "class": wrapCls
    }), [Object(external_Vue_["createVNode"])(src_checkbox, Object(external_Vue_["mergeProps"])(restProps, {
      'value': _this.state.value,
      "onUpdate:value": function onUpdateValue($event) {
        return _this.state.value = $event;
      },
      "class": "".concat(prefixCls, "-agree-label")
    }), agree_item_isSlot(_slot = this.$slots.default()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    })]);
  }
}));
// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox-item.tsx


function checkbox_item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







function checkbox_item_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var CheckboxItem = Object(external_Vue_["defineComponent"])({
  name: 'MCheckboxItem',
  props: {
    thumbStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    listPrefixCls: {
      type: String,
      default: 'am-list'
    },
    prefixCls: {
      type: String,
      default: 'am-checkbox'
    },
    name: {
      type: String
    },
    wrapLabel: {
      type: Boolean,
      default: false
    },
    checkboxProps: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    extra: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: false
    },
    value: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var state = Object(external_Vue_["reactive"])({
      value: props.value
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.value = value;
    });
    Object(external_Vue_["watch"])(function () {
      return state.value;
    }, function (value) {
      emit('update:value', value);
      emit('change', value);
    });

    var onChange = function onChange(value) {};

    var onClick = function onClick(e) {
      if (!props.disabled) {
        state.value = !state.value;
      }
    };

    return {
      state: state,
      onChange: onChange,
      onClick: onClick
    };
  },
  render: function render() {
    var _slot;

    var _this = this;

    var _a = this.$props,
        listPrefixCls = _a.listPrefixCls,
        disabled = _a.disabled,
        checkboxProps = _a.checkboxProps,
        restProps = tslib_es6_rest(_a, ["listPrefixCls", "disabled", "checkboxProps"]);

    var prefixCls = restProps.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-item"), checkbox_item_defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled === true));
    var extraProps = {};
    ['name', 'defaultChecked', 'checked', 'onChange', 'disabled'].forEach(function (i) {
      if (i in _this.$props) {
        extraProps[i] = _this.$props[i];
      }
    }); // @ts-ignore

    var thumb = Object(external_Vue_["createVNode"])(src_checkbox, Object(external_Vue_["mergeProps"])(Object.assign(Object.assign(Object.assign({}, checkboxProps), extraProps), {
      value: this.state.value
    }), {
      "style": this.thumbStyle,
      "onChange": this.onChange
    }), null);

    return (// @ts-ignore
      Object(external_Vue_["createVNode"])(packages_list.Item, Object(external_Vue_["mergeProps"])(restProps, {
        "touchFeedback": !this.disabled,
        "onClick": this.onClick,
        "prefixCls": listPrefixCls,
        "class": wrapCls,
        "thumb": thumb
      }), checkbox_item_isSlot(_slot = this.$slots.default()) ? _slot : {
        default: function _default() {
          return [_slot];
        }
      })
    );
  }
});
/* harmony default export */ var checkbox_item = (CheckboxItem);
// CONCATENATED MODULE: ./src/packages/checkbox/src/index.tsx



src_checkbox.CheckboxItem = checkbox_item;
src_checkbox.AgreeItem = agree_item;
/* harmony default export */ var checkbox_src = (src_checkbox);
// CONCATENATED MODULE: ./src/packages/utils/option.ts
var getOptionProperty = function getOptionProperty(option, property) {
  if (typeof option === 'string') {
    return option;
  } else if (typeof property === 'string') {
    return option[property];
  } else if (typeof property === 'function') {
    return property(option);
  }
};
// CONCATENATED MODULE: ./src/packages/mixins/options-based-component.ts
function options_based_component_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { options_based_component_typeof = function _typeof(obj) { return typeof obj; }; } else { options_based_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return options_based_component_typeof(obj); }







var optionsBasedComponentProps = Object.assign(Object.assign({}, simpleFormComponentProps), {
  /**
   * 选项对象中作为标签的属性名称
   */
  labelProperty: {
    type: [String, Function],
    default: 'label'
  },

  /**
   * 选项对象中作为值的属性名称
   */
  valueProperty: {
    type: [String, Function],
    default: 'value'
  },

  /**
   * 选项数据
   */
  options: {
    type: Array
  }
});
var options_based_component_useOptionsBaseComponent = function useOptionsBaseComponent(props, _ref) {
  var emit = _ref.emit,
      attrs = _ref.attrs,
      slots = _ref.slots;
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    defaultValue: undefined,
    propName: 'value'
  };

  var _useBaseInputComponen = base_input_component_useBaseInputComponent(props, {
    emit: emit,
    attrs: attrs,
    slots: slots
  }, options),
      isDisabled = _useBaseInputComponen.isDisabled,
      stateValue = _useBaseInputComponen.stateValue,
      isReadonly = _useBaseInputComponen.isReadonly;

  var searchKeyword = Object(external_Vue_["ref"])('');

  var getOptions = function getOptions() {
    return getResolvedOptions(props.options);
  };

  var getResolvedOptions = function getResolvedOptions(options) {
    if (options) {
      return options.map(function (option) {
        return Object.assign({}, option, {
          label: getOptionProperty(option, props.labelProperty),
          value: getOptionProperty(option, props.valueProperty)
        });
      }).filter(function (item) {
        var label = item.label;

        if (options_based_component_typeof(label) === 'object') {
          label = getNodeText(label) || '';
        }

        return !searchKeyword.value || label.includes(searchKeyword.value);
      });
    } else {
      return null;
    }
  };

  var setProps = function setProps() {
    if (!isEmptySlot(slots.default)) {
      unwrapFragment(slots.default()).forEach(function (node) {
        if (node.props.disabled === undefined) {
          node.props.disabled = isDisabled.value;
        }

        if (node.props.readonly === undefined) {
          node.props.readonly = isReadonly.value;
        }
      });
    }
  };

  Object(external_Vue_["onBeforeUpdate"])(function () {
    setProps();
  });
  {
    setProps();
  }
  return {
    getOptions: getOptions,
    isReadonly: isReadonly,
    isDisabled: isDisabled,
    searchKeyword: searchKeyword,
    stateValue: stateValue
  };
};
// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox-list.tsx


function checkbox_list_toConsumableArray(arr) { return checkbox_list_arrayWithoutHoles(arr) || checkbox_list_iterableToArray(arr) || checkbox_list_unsupportedIterableToArray(arr) || checkbox_list_nonIterableSpread(); }

function checkbox_list_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function checkbox_list_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return checkbox_list_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return checkbox_list_arrayLikeToArray(o, minLen); }

function checkbox_list_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function checkbox_list_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return checkbox_list_arrayLikeToArray(arr); }

function checkbox_list_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }






function checkbox_list_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var MCheckboxList = Object(external_Vue_["defineComponent"])({
  name: 'MCheckboxList',
  props: Object.assign(Object.assign({}, optionsBasedComponentProps), {
    value: {
      type: Array
    },
    title: {
      type: String
    },
    maxHeightPercentage: {
      type: Number
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;

    var _useOptionsBaseCompon = options_based_component_useOptionsBaseComponent(props, {
      emit: emit,
      attrs: attrs,
      slots: slots
    }, {
      defaultValue: [],
      propName: 'value'
    }),
        getOptions = _useOptionsBaseCompon.getOptions,
        stateValue = _useOptionsBaseCompon.stateValue,
        isDisabled = _useOptionsBaseCompon.isDisabled;

    var renderOptions = function renderOptions() {
      var options = getOptions();
      return options.map(function (option) {
        return Object(external_Vue_["createVNode"])(checkbox_item, {
          "value": stateValue.value.includes(option.value),
          "disabled": option.disabled || isDisabled.value,
          "onChange": function onChange(checkState) {
            _onChange(checkState, option.value);
          }
        }, {
          default: function _default() {
            return [option.label];
          }
        });
      });
    };

    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (v) {
      stateValue.value = v;
    });

    var _onChange = function _onChange(checkState, value) {
      if (checkState) {
        if (!stateValue.value.includes(value)) {
          stateValue.value = [].concat(checkbox_list_toConsumableArray(stateValue.value), [value]);
        }
      } else {
        stateValue.value = stateValue.value.filter(function (it) {
          return it !== value;
        });
      }
    };

    var instance = Object(external_Vue_["getCurrentInstance"])();
    Object(external_Vue_["onMounted"])(function () {
      if (props.maxHeightPercentage) {
        var windowHeight = document.body.clientHeight;
        var maxHeight = props.maxHeightPercentage;

        if (instance.vnode.el.clientHeight > windowHeight * maxHeight) {
          instance.vnode.el.style.height = windowHeight * maxHeight + 'px';
        }
      }
    });
    return {
      renderOptions: renderOptions
    };
  },
  render: function render() {
    var _slot;

    return Object(external_Vue_["createVNode"])(packages_list, {
      "required": this.required,
      "title": this.title
    }, checkbox_list_isSlot(_slot = this.renderOptions()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var checkbox_list = (MCheckboxList);
// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox-popup-list.tsx


function checkbox_popup_list_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function checkbox_popup_list_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { checkbox_popup_list_ownKeys(Object(source), true).forEach(function (key) { checkbox_popup_list_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { checkbox_popup_list_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function checkbox_popup_list_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/* harmony default export */ var checkbox_popup_list = (Object(external_Vue_["defineComponent"])({
  name: 'MCheckboxPopupList',
  props: Object.assign(Object.assign({}, optionsBasedComponentProps), {
    title: {
      type: [String, Object]
    },
    placeholder: {
      type: String
    },
    clearable: {
      type: Boolean,
      default: false
    },
    separator: {
      type: String,
      default: '、'
    },
    visible: {
      type: Boolean,
      default: false
    },
    searchable: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;

    var _useOptionsBaseCompon = options_based_component_useOptionsBaseComponent(props, {
      emit: emit,
      slots: slots,
      attrs: attrs
    }),
        getOptions = _useOptionsBaseCompon.getOptions,
        searchKeyword = _useOptionsBaseCompon.searchKeyword,
        isReadonly = _useOptionsBaseCompon.isReadonly,
        stateValue = _useOptionsBaseCompon.stateValue,
        isDisabled = _useOptionsBaseCompon.isDisabled;

    var popupVisible = Object(external_Vue_["ref"])(props.visible);
    Object(external_Vue_["watch"])(function () {
      return props.visible;
    }, function (visible) {
      popupVisible.value = visible;
    });
    Object(external_Vue_["watch"])(function () {
      return popupVisible.value;
    }, function (popupVisible) {
      emit('update:visible', popupVisible);
    });
    var optionText = Object(external_Vue_["computed"])(function () {
      var options = getOptions(); // @ts-ignore

      var value = stateValue.value;
      var array = [];

      if (value) {
        value.forEach(function (v, index) {
          var option = options.find(function (it) {
            return it.value === v;
          });

          if (option) {
            array.push(option.label);
          } else {
            array.push(v);
          }

          if (index < value.length - 1) {
            array.push(props.separator);
          }
        });
      }

      return array;
    });

    var onChange = function onChange(value) {
      stateValue.value = value;
      emit('update:value', stateValue.value);
      emit('change', stateValue.value);
    };

    var onClick = function onClick() {
      if (!isDisabled.value && !isReadonly.value) {
        popupVisible.value = true;
      }
    };

    var onClear = function onClear() {
      emit('clear');
      emit('update:value', []);
      closePopup();
    };

    var closePopup = function closePopup() {
      popupVisible.value = false;
    };

    var renderSearch = function renderSearch() {
      return props.searchable ? Object(external_Vue_["createVNode"])(Object(external_Vue_["resolveComponent"])("m-search-bar"), {
        "value": searchKeyword.value,
        "onInput": function onInput(v) {
          searchKeyword.value = v;
        }
      }, null) : null;
    };

    return {
      onChange: onChange,
      stateValue: stateValue,
      getOptions: getOptions,
      onClick: onClick,
      isDisabled: isDisabled,
      isReadonly: isReadonly,
      closePopup: closePopup,
      onClear: onClear,
      renderSearch: renderSearch,
      popupVisible: popupVisible,
      optionText: optionText
    };
  },
  render: function render() {
    var _this = this;

    var listProps = Object.assign(Object.assign(Object.assign({}, this.$attrs), this.$props), {
      options: this.getOptions()
    });
    var stateValue = this.stateValue,
        placeholder = this.placeholder;
    listProps.title = undefined;

    var cancelButton = Object(external_Vue_["createVNode"])("div", {
      "onClick": this.onClear,
      "class": "am-popup-item am-popup-header-left"
    }, [Object(external_Vue_["createTextVNode"])("\u6E05\u9664")]);

    var slots = {
      extra: function extra() {
        return Object(external_Vue_["createVNode"])("span", null, [stateValue && stateValue.length ? _this.optionText : placeholder]);
      },
      default: function _default() {
        return Object(external_Vue_["createVNode"])("span", null, [_this.title]);
      }
    };
    return [Object(external_Vue_["createVNode"])(packages_list.Item, {
      "onClick": this.onClick,
      "touchFeedback": !this.isReadonly && !this.isDisabled,
      "required": this.required,
      "text": !!this.optionText,
      "disabled": this.isDisabled
    }, checkbox_popup_list_objectSpread({}, slots)), Object(external_Vue_["createVNode"])(packages_popup, {
      "visible": this.isDisabled ? false : this.popupVisible,
      "showCancel": this.clearable,
      "cancelButton": cancelButton,
      "title": this.title,
      "onOk": this.closePopup,
      "onCancel": this.closePopup
    }, {
      default: function _default() {
        return [_this.renderSearch(), Object(external_Vue_["createVNode"])(checkbox_list, Object(external_Vue_["mergeProps"])(listProps, {
          "maxHeightPercentage": 0.7,
          "onChange": _this.onChange
        }), null)];
      }
    })];
  }
}));
// EXTERNAL MODULE: ./src/packages/checkbox/style/index.less
var checkbox_style = __webpack_require__("a27d");

// CONCATENATED MODULE: ./src/packages/checkbox/style/index.tsx



// CONCATENATED MODULE: ./src/packages/checkbox/index.ts







var checkbox_Plugin = checkbox_src;
checkbox_Plugin.AgreeItem = agree_item;
checkbox_Plugin.CheckboxItem = checkbox_item;

checkbox_Plugin.install = function (Vue) {
  Vue.component('MCheckbox', checkbox_src);
  Vue.component('MCheckboxList', checkbox_list);
  Vue.component('MCheckboxItem', checkbox_src.CheckboxItem);
  Vue.component('MAgreeItem', checkbox_src.AgreeItem);
  Vue.component('MCheckboxPopupList', checkbox_popup_list);
};

/* harmony default export */ var packages_checkbox = (checkbox_Plugin);
// CONCATENATED MODULE: ./src/packages/vmc-picker/popup-picker-types.tsx
var PopupPickerProps = {
  picker: {},
  value: {},
  triggerType: {
    type: String,
    default: 'click'
  },
  WrapComponent: {},
  cancelText: {},
  okText: {},
  title: {},
  visible: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  content: {},
  actionTextUnderlayColor: {},
  actionTextActiveOpacity: {},

  /** web only */
  wrapStyle: {},
  prefixCls: {},
  pickerValueProp: {
    type: String
  },
  pickerValueChangeProp: {
    type: String
  },
  transitionName: {},
  popupTransitionName: {},
  maskTransitionName: {}
};
// CONCATENATED MODULE: ./src/packages/vmc-picker/popup-mixin.tsx


function popup_mixin_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function PopupMixin(getModal, newProps) {
  return Object(external_Vue_["defineComponent"])({
    name: 'PopupMixin',
    props: Object.assign({}, PopupPickerProps),
    setup: function setup(props, _ref) {
      var emit = _ref.emit,
          slots = _ref.slots;
      var picker = Object(external_Vue_["ref"])(null);
      var state = Object(external_Vue_["reactive"])({
        pickerValue: props.value !== undefined ? props.value : null,
        visible: props.visible || false
      });
      Object(external_Vue_["watch"])(function () {
        return state.visible;
      }, function (visible) {
        emit('visible-change', visible);
      });
      Object(external_Vue_["watch"])(function () {
        return props.value;
      }, function (value) {
        state.pickerValue = value;
      });
      Object(external_Vue_["watch"])(function () {
        return props.visible;
      }, function (value) {
        setVisibleState(value);
      });

      var onPickerChange = function onPickerChange(pickerValue) {
        if (state.pickerValue !== pickerValue) {
          state.pickerValue = pickerValue;
          var pickerValueChangeProp = props.pickerValueChangeProp;

          if (picker && picker.props[pickerValueChangeProp]) {
            picker.props[pickerValueChangeProp](pickerValue);
          }
        }
      };

      var saveRef = function saveRef(picker) {
        picker.value = picker;
      };

      var setVisibleState = function setVisibleState(visible) {
        state.visible = visible;

        if (!visible) {
          state.pickerValue = null;
        }
      };

      var fireVisibleChange = function fireVisibleChange(visible) {
        if (state.visible !== visible) {
          setVisibleState(visible);
          emit('visible-change', visible);
          emit('update:visible', visible);
        }
      };

      var onTriggerClick = function onTriggerClick(e) {
        var child = slots.default()[0];
        var childProps = child.props || {};

        if (childProps[props.triggerType]) {
          childProps[props.triggerType](e);
        }

        fireVisibleChange(!state.visible);
      };

      var onOk = function onOk() {
        emit('ok');
        fireVisibleChange(false);
      };

      var getContent = function getContent() {
        if (slots.picker) {
          var _setProps;

          var localPicker = slots.picker()[0];
          var pickerValue = state.pickerValue;

          if (pickerValue === null) {
            pickerValue = props.value;
          }

          vnode_setProps(picker.value, (_setProps = {}, popup_mixin_defineProperty(_setProps, props.pickerValueProp, pickerValue), popup_mixin_defineProperty(_setProps, props.pickerValueChangeProp, onPickerChange), _setProps)); // localPicker.ref = 'picker';

          return localPicker;
        }

        if (picker.value) {
          var _cloneVNodes;

          var _pickerValue = state.pickerValue;

          if (_pickerValue === null) {
            _pickerValue = props.value;
          }

          return vnode_cloneVNodes(picker.value, (_cloneVNodes = {}, popup_mixin_defineProperty(_cloneVNodes, props.pickerValueProp, _pickerValue), popup_mixin_defineProperty(_cloneVNodes, props.pickerValueChangeProp, onPickerChange), popup_mixin_defineProperty(_cloneVNodes, "ref", saveRef), _cloneVNodes));
        } else {
          return props.picker;
        }
      };

      var onCancel = function onCancel() {
        fireVisibleChange(false);
        emit('cancel');
      };

      var hide = function hide() {
        fireVisibleChange(false);
        emit('hide');
      };

      return {
        getContent: getContent,
        onOk: onOk,
        hide: hide,
        onCancel: onCancel,
        state: state,
        onTriggerClick: onTriggerClick
      };
    },
    render: function render() {
      var _this = this;

      var props = this.$props;
      var children = this.$slots.default();

      if (!children) {
        return getModal(props, this.state.visible, {
          getContent: this.getContent,
          onOk: this.onOk,
          hide: this.hide,
          onCancel: this.onCancel
        });
      }

      var disabled = this.$props.disabled;

      if (!disabled) {
        children.forEach(function (child) {
          setListeners(child, popup_mixin_defineProperty({}, _this.triggerType, _this.onTriggerClick));
        });
      }

      var modal = getModal(props, this.state.visible, {
        getContent: this.getContent,
        onOk: this.onOk,
        hide: this.hide,
        onCancel: this.onCancel
      });
      return Object(external_Vue_["createVNode"])("div", {
        "style": props.wrapStyle
      }, [children, modal]);
    }
  });
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/popup.tsx




var popup_getModal = function getModal(props, visible, _ref) {
  var getContent = _ref.getContent,
      hide = _ref.hide,
      onCancel = _ref.onCancel,
      onOk = _ref.onOk;
  var content = getContent();
  return Object(external_Vue_["createVNode"])(packages_popup, Object(external_Vue_["mergeProps"])({
    title: props.title,
    visible: visible,
    showCancel: true,
    showOk: true,
    closable: false,
    transitionName: props.transitionName || props.popupTransitionName,
    maskTransitionName: props.maskTransitionName
  }, {
    "onCancel": onCancel,
    "onOk": onOk,
    "style": props.style
  }), {
    default: function _default() {
      return [Object(external_Vue_["createVNode"])("div", null, [content])];
    }
  });
};

/* harmony default export */ var vmc_picker_popup = (PopupMixin(popup_getModal, {
  prefixCls: 'rmc-picker-popup',
  WrapComponent: 'span',
  triggerType: 'onClick',
  pickerValueProp: 'value',
  pickerValueChangeProp: 'onValueChange'
}));
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/popup.tsx



/* harmony default export */ var vmc_date_picker_popup = (Object(external_Vue_["defineComponent"])({
  name: 'PopupDatePicker',
  props: {
    onVisibleChange: {},
    title: {},
    visible: {
      type: Boolean,
      default: false
    },
    cancelText: {
      type: String
    },
    okText: {
      type: String
    },
    prefixCls: {
      type: String
    },
    datePicker: {},
    date: {},
    disabled: {
      type: Boolean,
      default: false
    },
    editable: {
      type: Boolean,
      default: true
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var store = Object(external_Vue_["inject"])('store', undefined);

    var onCancel = function onCancel() {
      if (store.onCancel) {
        store.onCancel();
      }

      emit('cancel');
    };

    var onOk = function onOk(v) {
      if (store.onOk) {
        store.onOk();
      }

      emit('change', v);
      emit('ok', v);
    };

    return {
      store: store,
      onCancel: onCancel,
      onOk: onOk
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var props = Object.assign(Object.assign(Object.assign({}, this.$props), this.$attrs), {
      picker: this.datePicker,
      value: this.date,
      disabled: this.disabled || !this.editable,
      onCancel: this.onCancel,
      onOk: this.onOk
    });
    return Object(external_Vue_["createVNode"])(vmc_picker_popup, props, {
      default: function _default() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    });
  }
}));
// CONCATENATED MODULE: ./src/packages/date-picker/src/locale/zh_CN.tsx

/* harmony default export */ var date_picker_src_locale_zh_CN = ({
  okText: '确定',
  cancelText: '取消',
  extra: '请选择',
  DatePickerLocale: zh_CN
});
// CONCATENATED MODULE: ./src/packages/date-picker/src/props-type.tsx

var props_type_datePickerProps = {
  disabled: {
    type: Boolean
  },
  cancelText: {},
  editable: {
    type: Boolean,
    default: true
  },
  extra: {
    type: String
  },
  format: {},
  locale: {
    type: Object,
    default: function _default() {
      return date_picker_src_locale_zh_CN;
    }
  },
  maxDate: {
    type: Date
  },
  minDate: {
    type: Date
  },
  minuteStep: {
    type: Number,
    default: 1
  },
  mode: {
    type: String,
    default: 'datetime'
  },
  okText: {},
  title: {},
  value: {
    type: Object
  },
  visible: {
    type: Boolean,
    default: false
  }
};
// CONCATENATED MODULE: ./src/packages/date-picker/src/utils.tsx
function utils_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { utils_typeof = function _typeof(obj) { return typeof obj; }; } else { utils_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return utils_typeof(obj); }

function formatIt(date, form) {
  var pad = function pad(n) {
    return n < 10 ? "0".concat(n) : n;
  };

  var dateStr = "".concat(date.getFullYear(), "-").concat(pad(date.getMonth() + 1), "-").concat(pad(date.getDate()));
  var timeStr = "".concat(pad(date.getHours()), ":").concat(pad(date.getMinutes()));

  if (form === 'YYYY') {
    return date.getFullYear() + '';
  }

  if (form === 'YYYY-MM-DD') {
    return dateStr;
  }

  if (form === 'YYYY-MM') {
    return dateStr.substring(0, 7);
  }

  if (form === 'HH:mm') {
    return timeStr;
  }

  return "".concat(dateStr, " ").concat(timeStr);
}

function formatFn(instance, value) {
  var formatsEnum = {
    date: 'YYYY-MM-DD',
    time: 'HH:mm',
    datetime: 'YYYY-MM-DD HH:mm',
    year: 'YYYY',
    month: 'YYYY-MM'
  };
  var format = instance.$props.format;

  var type = utils_typeof(format);

  if (type === 'string') {
    if (typeof value === 'number') {
      return formatIt(new Date(value), format);
    } else {
      return formatIt(value, format);
    }
  }

  if (type === 'function') {
    return format(value);
  }

  if (typeof value === 'number') {
    return formatIt(new Date(value), formatsEnum[instance.$props.mode]);
  } else {
    return formatIt(value, formatsEnum[instance.$props.mode]);
  }
}
// CONCATENATED MODULE: ./src/packages/date-picker/src/index.tsx









var src_getDatePicker = function getDatePicker(isView) {
  return Object(external_Vue_["defineComponent"])({
    install: null,
    Item: null,
    name: 'MDatePicker',
    props: Object.assign(Object.assign({}, props_type_datePickerProps), {
      placeholder: {
        type: String,
        default: ''
      },
      prefixCls: {
        type: String,
        default: 'am-picker'
      },
      use12Hours: {
        type: Boolean,
        default: false
      },
      pickerPrefixCls: {
        type: String,
        default: 'am-picker-col'
      },
      popupPrefixCls: {
        type: String,
        default: 'am-picker-popup'
      }
    }),
    setup: function setup(props, _ref) {
      var emit = _ref.emit;
      var scrollValue = Object(external_Vue_["ref"])(props.value);
      var localVisible = Object(external_Vue_["ref"])(props.visible);
      Object(external_Vue_["watch"])(function () {
        return props.visible;
      }, function (visible) {
        localVisible.value = visible;
      });

      var onOk = function onOk() {
        var value = props.value;

        if (scrollValue.value !== undefined) {
          value = scrollValue.value;
        }

        emit('update:value', value);
        emit('change', value);
        emit('ok', value);
      };

      var onVisibleChange = function onVisibleChange(visible) {
        scrollValue.value = undefined;
        localVisible.value = visible;
        emit('update:visible', visible);
      };

      var fixOnOk = function fixOnOk(picker) {
        if (picker) {
          picker.onOk = onOk;
        }
      };

      var onChange = function onChange(v) {
        scrollValue.value = v;

        if (isView) {
          emit('update:value', v);
          emit('change', v);
        }
      };

      var getDate = function getDate() {
        if (typeof props.value === 'number') {
          return new Date(props.value);
        } else {
          return props.value || new Date();
        }
      };

      Object(external_Vue_["provide"])('store', {
        onOk: null
      });
      return {
        scrollValue: scrollValue,
        onOk: onOk,
        onVisibleChange: onVisibleChange,
        fixOnOk: fixOnOk,
        onChange: onChange,
        getDate: getDate,
        localVisible: localVisible
      };
    },
    render: function render() {
      var _this = this;

      var value = this.value,
          popupPrefixCls = this.popupPrefixCls;
      var locale = getComponentLocale(this.$props, null, 'DatePicker', function () {
        return date_picker_src_locale_zh_CN;
      });
      var okText = locale.okText,
          cancelText = locale.cancelText,
          extra = locale.extra,
          DatePickerLocale = locale.DatePickerLocale;
      /**
       * 注意:
       * 受控 表示 通过设置 value 属性、组件的最终状态跟 value 设置值一致。
       * 默认不设置 value 或 只设置 defaultValue 表示非受控。
       *
       * DatePickerView 对外通过 value “只支持 受控” 模式（可以使用 defaultDate 支持 非受控 模式，但不对外）
       * PickerView 对外通过 value “只支持 受控” 模式
       *
       * DatePicker / Picker 对外只有 value 属性 (没有 defaultValue)，
       * 其中 List 展示部分 “只支持 受控” 模式，
       * 弹出的 选择器部分 会随外部 value 改变而变、同时能自由滚动
       * （即不会因为传入的 value 不变而不能滚动 (不像原生 input 的受控行为)）
       *
       */

      var datePickerProps = {
        minuteStep: this.minuteStep,
        locale: DatePickerLocale,
        minDate: this.minDate,
        maxDate: this.maxDate,
        mode: this.mode,
        pickerPrefixCls: this.pickerPrefixCls,
        prefixCls: this.prefixCls,
        value: this.getDate(),
        use12Hours: this.use12Hours,
        onChange: this.onChange
      };

      var datePicker = Object(external_Vue_["createVNode"])(vmc_date_picker_date_picker, datePickerProps, null);

      if (isView) {
        return datePicker;
      }

      var textValue = value ? formatFn(this, value) : null;
      var childExtra = textValue ? textValue : this.extra || extra || this.placeholder;
      var visible = this.disabled || !this.editable ? false : this.localVisible;
      return Object(external_Vue_["createVNode"])(vmc_date_picker_popup, Object(external_Vue_["mergeProps"])({
        "onVisibleChange": this.onVisibleChange,
        "datePicker": datePicker
      }, this.$props, {
        "title": this.title,
        "disabled": this.disabled,
        "editable": this.editable,
        "visible": visible,
        "prefixCls": popupPrefixCls,
        "date": this.getDate(),
        "cancelText": this.cancelText || cancelText,
        "okText": this.okText || okText,
        "ref": this.fixOnOk
      }), {
        default: function _default() {
          return [_this.$slots.default && _this.$slots.default().map(function (it) {
            vnode_setProps(it, {
              touchFeedback: true,
              onClick: function onClick() {
                _this.onVisibleChange(true);
              },
              text: !!textValue,
              extra: childExtra,
              arrow: 'horizontal'
            });
            return it;
          })];
        }
      });
    }
  });
};
/* harmony default export */ var date_picker_src = (src_getDatePicker(false));
// EXTERNAL MODULE: ./node_modules/async-validator/es/index.js
var async_validator_es = __webpack_require__("a15e");
var es_default = /*#__PURE__*/__webpack_require__.n(async_validator_es);

// CONCATENATED MODULE: ./src/packages/mixins/utils.ts
var getPropByPath = function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  var copyPath = path;
  copyPath = copyPath.replace(/\[(\w+)]/g, '.$1');
  copyPath = copyPath.replace(/^\./, '');
  var keyArr = copyPath.split('.');
  var i = 0;

  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) {
      break;
    }

    var key = keyArr[i];

    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error('please transfer a valid prop path to form item!');
      }

      break;
    }
  }

  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
};
var mixins_utils_noop = function noop(a, b) {};
// CONCATENATED MODULE: ./src/packages/mixins/form-component.tsx
var form_component_this = undefined;

function form_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var form_component_noop = function noop(a, b) {};

var formComponentProps = {
  /**
   * class 前缀
   */
  prefixCls: {
    type: String
  },
  disabled: {
    type: Boolean
  },
  error: {
    type: Boolean,
    default: false
  },
  errorMessage: {
    type: String
  },
  prop: {
    type: String
  },
  editable: {
    type: Boolean,
    default: true
  },

  /**
   * 是否必须
   */
  required: {
    type: Boolean,
    default: false
  },
  rules: {
    type: Array
  },
  value: {
    type: Object
  },
  errorDisplayType: {
    type: String
  }
};
var form_component_useFormComponent = function useFormComponent(props, _ref) {
  var emit = _ref.emit;

  var _useEmitter = emitter_useEmitter(Object(external_Vue_["getCurrentInstance"])()),
      dispatch = _useEmitter.dispatch;

  var currentErrorMessage = Object(external_Vue_["ref"])(props.errorMessage);
  var list = Object(external_Vue_["inject"])('list');
  var validateStatus = Object(external_Vue_["ref"])('');
  var currentValue = Object(external_Vue_["ref"])(props.value);
  var validateDisabled = Object(external_Vue_["ref"])(true);
  var isCurrentError = Object(external_Vue_["ref"])(false);
  Object(external_Vue_["watch"])(function () {
    return props.errorMessage;
  }, function (errorMessage) {
    currentErrorMessage.value = errorMessage;
  });
  Object(external_Vue_["watch"])(function () {
    return props.value;
  }, function (value) {
    if (currentValue.value !== value) {
      currentValue.value = value;
    }
  });
  Object(external_Vue_["watch"])(function () {
    return currentValue.value;
  }, function (currentValue) {
    emit('update:value', currentValue);
    emit('change', currentValue);
  });
  var fieldValue = Object(external_Vue_["computed"])(function () {
    return currentValue.value;
  });
  var isDisabled = Object(external_Vue_["computed"])(function () {
    var disabled = props.disabled;

    if (list) {
      if (!disabled) {
        disabled = list.disabled;
      }
    }

    return disabled;
  });
  var isReadonly = Object(external_Vue_["computed"])(function () {
    var isReadonly = !props.editable;

    if (list && !isReadonly) {
      isReadonly = !list.editable;
    }

    return isReadonly;
  });

  var getFilteredRule = function getFilteredRule(trigger) {
    var rules = getRules();
    return rules.filter(function (rule) {
      if (!rule.trigger || trigger === '') {
        return true;
      }

      if (Array.isArray(rule.trigger)) {
        return rule.trigger.indexOf(trigger) > -1;
      } else {
        return rule.trigger === trigger;
      }
    }).map(function (rule) {
      return Object.assign({}, rule);
    });
  };

  var getRules = function getRules() {
    var formRules = list && list.rules;
    var prop = getPropByPath(formRules, props.prop || '');
    formRules = formRules ? prop.o[props.prop || ''] || prop.v : [];
    var selfRules = props.rules;
    var requiredRule = props.required !== undefined ? {
      required: props.required
    } : [];

    if (formRules && formRules.some(function (rule) {
      return rule.required !== undefined;
    }) || selfRules && selfRules.some(function (rule) {
      return rule.required !== undefined;
    })) {
      requiredRule = [];
    }

    return [].concat(selfRules || formRules || []).concat(requiredRule);
  };

  var onFieldBlur = function onFieldBlur() {};

  var onFieldChange = function onFieldChange() {
    if (validateDisabled.value) {
      validateDisabled.value = false;
    }
  };

  var validate = function validate(trigger) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : form_component_noop;
    Object(external_Vue_["nextTick"])(function () {
      validateDisabled.value = false;
      var rules = getFilteredRule(trigger);

      if ((!rules || rules.length === 0) && props.required === undefined) {
        callback();
        return true;
      }

      validateStatus.value = 'validating';
      var descriptor = {};

      if (rules && rules.length > 0) {
        rules.forEach(function (rule) {
          delete rule.trigger;
        });
      }

      descriptor[props.prop] = rules;
      var validator = new es_default.a(descriptor);

      var model = form_component_defineProperty({}, props.prop, fieldValue.value);

      validator.validate(model, {
        firstFields: true
      }, function (errors, invalidFields) {
        validateStatus.value = !errors ? 'success' : 'error';
        isCurrentError.value = validateStatus.value === 'error';
        currentErrorMessage.value = errors ? errors[0].message : '';
        callback(currentErrorMessage.value, invalidFields);
        emit('validate', !errors, errors);
        list && list.$emit('validate', props.prop, !errors, currentErrorMessage.value || null);
      });
    });
  };

  {
    if (list) {
      dispatch('DForm', 'd.form.addField', [form_component_this]);
    }
  }
  return {
    currentValue: currentValue,
    onFieldChange: onFieldChange,
    validate: validate,
    onFieldBlur: onFieldBlur,
    isReadonly: isReadonly,
    isDisabled: isDisabled
  };
};
// CONCATENATED MODULE: ./src/packages/date-picker/src/item.tsx


function src_item_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function src_item_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { src_item_ownKeys(Object(source), true).forEach(function (key) { date_picker_src_item_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { src_item_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function date_picker_src_item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/* harmony default export */ var date_picker_src_item = (Object(external_Vue_["defineComponent"])({
  name: 'DatePickerItem',
  props: Object.assign(Object.assign({}, formComponentProps), {
    title: {
      type: [String, Object]
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;

    var _useBaseInputComponen = base_input_component_useBaseInputComponent(props, {
      emit: emit,
      slots: slots,
      attrs: attrs
    }),
        stateValue = _useBaseInputComponen.stateValue,
        isDisabled = _useBaseInputComponen.isDisabled,
        cssStyle = _useBaseInputComponen.cssStyle,
        isReadonly = _useBaseInputComponen.isReadonly;

    var localVisible = Object(external_Vue_["ref"])(false);
    return {
      stateValue: stateValue,
      localVisible: localVisible,
      isDisabled: isDisabled,
      isReadonly: isReadonly,
      cssStyle: cssStyle
    };
  },
  render: function render() {
    var _this = this;

    return Object(external_Vue_["createVNode"])(date_picker_src, Object(external_Vue_["mergeProps"])(this.$attrs, {
      "disabled": this.isDisabled,
      "editable": !this.isReadonly,
      'value': _this.stateValue,
      "onUpdate:value": function onUpdateValue($event) {
        return _this.stateValue = $event;
      },
      'visible': _this.localVisible,
      "onUpdate:visible": function onUpdateVisible($event) {
        return _this.localVisible = $event;
      },
      "style": this.cssStyle
    }), src_item_objectSpread({
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(packages_list.Item, {
          "title": _this.title,
          "touchFeedback": true,
          "onClick": function onClick() {
            _this.localVisible = true;
          },
          "required": _this.required,
          "disabled": _this.isDisabled,
          "error": _this.error,
          "errorDisplayType": _this.errorDisplayType,
          "errorMessage": _this.errorMessage,
          "arrow": "horizontal"
        }, null)];
      }
    }, this.$slots));
  }
}));
// CONCATENATED MODULE: ./src/packages/date-picker/style/index.tsx

// CONCATENATED MODULE: ./src/packages/date-picker/index.ts



date_picker_src.Item = date_picker_src_item;

date_picker_src.install = function (Vue) {
  Vue.component('MDatePicker', date_picker_src);
  Vue.component('MDatePickerItem', date_picker_src.Item);
};

/* harmony default export */ var packages_date_picker = (date_picker_src);
// CONCATENATED MODULE: ./src/packages/date-picker-view/style/index.ts

// CONCATENATED MODULE: ./src/packages/date-picker-view/src/index.tsx

/* harmony default export */ var date_picker_view_src = (src_getDatePicker(true));
// CONCATENATED MODULE: ./src/packages/date-picker-view/index.ts



date_picker_view_src.install = function (Vue) {
  Vue.component('MDatePickerView', date_picker_view_src);
};

/* harmony default export */ var date_picker_view = (date_picker_view_src);
// CONCATENATED MODULE: ./src/packages/vmc-gesture/config.tsx
/* tslint:disable:no-bitwise */
// http://hammerjs.github.io/api/#directions
var DIRECTION_NONE = 1; // 00001

var DIRECTION_LEFT = 2; // 00010

var DIRECTION_RIGHT = 4; // 00100

var DIRECTION_UP = 8; // 01000

var DIRECTION_DOWN = 16; // 10000

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT; // 00110 6

var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN; // 11000 24

var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL; // 11110  30
// http://hammerjs.github.io/recognizer-press/

var PRESS = {
  time: 251 // Minimal press time in ms.

}; // http://hammerjs.github.io/recognizer-swipe/

var SWIPE = {
  threshold: 10,
  velocity: 0.3
};
// CONCATENATED MODULE: ./src/packages/vmc-gesture/util.tsx
/* tslint:disable:no-bitwise */


function _calcTriangleDistance(x, y) {
  return Math.sqrt(x * x + y * y);
}

function _calcAngle(x, y) {
  var radian = Math.atan2(y, x);
  return 180 / (Math.PI / radian);
}

function util_now() {
  return Date.now();
}
function calcMutliFingerStatus(touches) {
  if (touches.length < 2) {
    return;
  }

  var _touches$ = touches[0],
      x1 = _touches$.x,
      y1 = _touches$.y;
  var _touches$2 = touches[1],
      x2 = _touches$2.x,
      y2 = _touches$2.y;
  var deltaX = x2 - x1;
  var deltaY = y2 - y1;
  return {
    x: deltaX,
    y: deltaY,
    z: _calcTriangleDistance(deltaX, deltaY),
    angle: _calcAngle(deltaX, deltaY)
  };
}
function calcMoveStatus(startTouches, touches, time) {
  var _startTouches$ = startTouches[0],
      x1 = _startTouches$.x,
      y1 = _startTouches$.y;
  var _touches$3 = touches[0],
      x2 = _touches$3.x,
      y2 = _touches$3.y;
  var deltaX = x2 - x1;
  var deltaY = y2 - y1;

  var deltaZ = _calcTriangleDistance(deltaX, deltaY);

  return {
    x: deltaX,
    y: deltaY,
    z: deltaZ,
    time: time,
    velocity: deltaZ / time,
    angle: _calcAngle(deltaX, deltaY)
  };
}
function calcRotation(startMutliFingerStatus, mutliFingerStatus) {
  var startAngle = startMutliFingerStatus.angle;
  var angle = mutliFingerStatus.angle;
  return angle - startAngle;
}
function getEventName(prefix, status) {
  return prefix + status[0].toUpperCase() + status.slice(1);
}
function shouldTriggerSwipe(delta, velocity) {
  return Math.abs(delta) >= SWIPE.threshold && Math.abs(velocity) > SWIPE.velocity;
}
function shouldTriggerDirection(direction, directionSetting) {
  if (directionSetting & direction) {
    return true;
  }

  return false;
}
/**
 * @private
 * get the direction between two points
 * Note: will change next version
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */

function getDirection(x, y) {
  if (x === y) {
    return DIRECTION_NONE;
  }

  if (Math.abs(x) >= Math.abs(y)) {
    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
  }

  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}
/**
 * @private
 * get the direction between tow points when touch moving
 * Note: will change next version
 * @param {Object} point1 coordinate point, include x & y attributes
 * @param {Object} point2 coordinate point, include x & y attributes
 * @return {Number} direction
 */

function getMovingDirection(point1, point2) {
  var x1 = point1.x,
      y1 = point1.y;
  var x2 = point2.x,
      y2 = point2.y;
  var deltaX = x2 - x1;
  var deltaY = y2 - y1;

  if (deltaX === 0 && deltaY === 0) {
    return DIRECTION_NONE;
  }

  if (Math.abs(deltaX) >= Math.abs(deltaY)) {
    return deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
  }

  return deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}
function getDirectionEventName(direction) {
  var name;

  switch (direction) {
    case DIRECTION_NONE:
      break;

    case DIRECTION_LEFT:
      name = 'left';
      break;

    case DIRECTION_RIGHT:
      name = 'right';
      break;

    case DIRECTION_UP:
      name = 'up';
      break;

    case DIRECTION_DOWN:
      name = 'down';
      break;

    default:
  }

  return name;
}
// CONCATENATED MODULE: ./src/packages/vmc-gesture/index.tsx
/* tslint:disable:no-console */



var directionMap = {
  all: DIRECTION_ALL,
  vertical: DIRECTION_VERTICAL,
  horizontal: DIRECTION_HORIZONTAL
};
var Gesture = Object(external_Vue_["defineComponent"])({
  name: 'Gesture',
  props: {
    enableRotate: {
      type: Boolean,
      default: false
    },
    enablePinch: {
      type: Boolean,
      default: false
    },
    direction: {
      type: String,
      default: 'all'
    },
    onPinch: {},
    onPinchStart: {},
    onPinchMove: {},
    onPinchEnd: {},
    onPinchCancel: {},
    onPinchIn: {},
    onPinchOut: {},
    onRotate: {},
    onRotateStart: {},
    onRotateMove: {},
    onRotateEnd: {},
    onRotateCancel: {},
    onPan: {},
    onPanStart: {},
    onPanMove: {},
    onPanEnd: {},
    onPanCancel: {},
    onPanLeft: {},
    onPanRight: {},
    onPanUp: {},
    onPanDown: {},
    onTap: {},
    onPress: {},
    onPressUp: {},
    onSwipe: {},
    onSwipeLeft: {},
    onSwipeRight: {},
    onSwipeUp: {},
    onSwipeDown: {},
    onTouchStart: {},
    onTouchMove: {},
    onTouchEnd: {},
    onTouchCancel: {}
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var gesture = Object(external_Vue_["ref"])(null);
    var event = Object(external_Vue_["ref"])(null);
    var pressTimer = Object(external_Vue_["ref"])(null);
    var directionSetting = Object(external_Vue_["ref"])(null);

    var triggerEvent = function triggerEvent(name) {
      var cb = props[name];

      if (typeof cb === 'function') {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        // always give user gesture object as first params first
        cb.apply(void 0, [getGestureState()].concat(args));
      }
    };

    var triggerCombineEvent = function triggerCombineEvent(mainEventName, eventStatus) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      triggerEvent.apply(void 0, [mainEventName].concat(args));
      triggerSubEvent.apply(void 0, [mainEventName, eventStatus].concat(args));
    };

    var triggerSubEvent = function triggerSubEvent(mainEventName, eventStatus) {
      if (eventStatus) {
        var subEventName = getEventName(mainEventName, eventStatus);

        for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
          args[_key3 - 2] = arguments[_key3];
        }

        triggerEvent.apply(void 0, [subEventName].concat(args));
      }
    };

    var triggerPinchEvent = function triggerPinchEvent(mainEventName, eventStatus) {
      var scale = gesture.value.scale;

      if (eventStatus === 'move' && typeof scale === 'number') {
        if (scale > 1) {
          triggerEvent('onPinchOut');
        }

        if (scale < 1) {
          triggerEvent('onPinchIn');
        }
      }

      for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
        args[_key4 - 2] = arguments[_key4];
      }

      triggerCombineEvent.apply(void 0, [mainEventName, eventStatus].concat(args));
    };

    var initPressTimer = function initPressTimer() {
      cleanPressTimer();
      pressTimer.value = setTimeout(function () {
        setGestureState({
          press: true
        });
        triggerEvent('onPress');
      }, PRESS.time);
    };

    var cleanPressTimer = function cleanPressTimer() {
      /* tslint:disable:no-unused-expression */
      pressTimer.value && clearTimeout(pressTimer.value);
    };

    var setGestureState = function setGestureState(params) {
      if (!gesture.value) {
        gesture.value = {};
      } // cache the previous touches


      if (gesture.value.touches) {
        gesture.value.preTouches = gesture.value.touches;
      }

      gesture.value = Object.assign(Object.assign({}, gesture.value), params);
    };

    var getGestureState = function getGestureState() {
      if (!gesture.value) {
        return gesture.value;
      } else {
        // shallow copy
        return Object.assign({}, gesture.value);
      }
    };

    var cleanGestureState = function cleanGestureState() {
      delete gesture.value;
    };

    var getTouches = function getTouches(e) {
      return Array.prototype.slice.call(e.touches).map(function (item) {
        return {
          x: item.screenX,
          y: item.screenY
        };
      });
    };

    var triggerUserCb = function triggerUserCb(status, e) {
      var cbName = getEventName('onTouch', status);

      if (cbName in props && props[cbName]) {
        props[cbName](e);
      }
    };

    var _handleTouchStart = function _handleTouchStart(e) {
      triggerUserCb('start', e);
      event.value = e;

      if (e.touches.length > 1) {
        e.preventDefault();
      }

      initGestureStatus(e);
      initPressTimer();
      checkIfMultiTouchStart();
    };

    var initGestureStatus = function initGestureStatus(e) {
      cleanGestureState(); // store the gesture start state

      var startTouches = getTouches(e);
      var startTime = util_now();
      var startMutliFingerStatus = calcMutliFingerStatus(startTouches);
      setGestureState({
        startTime: startTime,
        startTouches: startTouches,
        startMutliFingerStatus: startMutliFingerStatus,

        /* copy for next time touch move cala convenient*/
        time: startTime,
        touches: startTouches,
        mutliFingerStatus: startMutliFingerStatus,
        srcEvent: event.value
      });
    };

    var checkIfMultiTouchStart = function checkIfMultiTouchStart() {
      var enablePinch = props.enablePinch,
          enableRotate = props.enableRotate;
      var touches = gesture.value.touches;

      if (touches.length > 1 && (enablePinch || enableRotate)) {
        if (enablePinch) {
          var startMutliFingerStatus = calcMutliFingerStatus(touches);
          setGestureState({
            startMutliFingerStatus: startMutliFingerStatus,

            /* init pinch status */
            pinch: true,
            scale: 1
          });
          triggerCombineEvent('onPinch', 'start');
        }

        if (enableRotate) {
          setGestureState({
            /* init rotate status */
            rotate: true,
            rotation: 0
          });
          triggerCombineEvent('onRotate', 'start');
        }
      }
    };

    var _handleTouchMove = function _handleTouchMove(e) {
      triggerUserCb('move', e);
      event.value = e;

      if (!gesture.value) {
        // sometimes weird happen: touchstart -> touchmove..touchmove.. --> touchend --> touchmove --> touchend
        // so we need to skip the unnormal event cycle after touchend
        return;
      } // not a long press


      cleanPressTimer();
      updateGestureStatus(e);
      checkIfSingleTouchMove();
      checkIfMultiTouchMove();
    };

    var checkIfMultiTouchMove = function checkIfMultiTouchMove() {
      var _gesture$value = gesture.value,
          pinch = _gesture$value.pinch,
          rotate = _gesture$value.rotate,
          touches = _gesture$value.touches,
          startMutliFingerStatus = _gesture$value.startMutliFingerStatus,
          mutliFingerStatus = _gesture$value.mutliFingerStatus;

      if (!pinch && !rotate) {
        return;
      }

      if (touches.length < 2) {
        setGestureState({
          pinch: false,
          rotate: false
        }); // Todo: 2 finger -> 1 finger, wait to test this situation

        pinch && triggerCombineEvent('onPinch', 'cancel');
        rotate && triggerCombineEvent('onRotate', 'cancel');
        return;
      }

      if (pinch) {
        var scale = mutliFingerStatus.z / startMutliFingerStatus.z;
        setGestureState({
          scale: scale
        });
        triggerPinchEvent('onPinch', 'move');
      }

      if (rotate) {
        var rotation = calcRotation(startMutliFingerStatus, mutliFingerStatus);
        setGestureState({
          rotation: rotation
        });
        triggerCombineEvent('onRotate', 'move');
      }
    };

    var allowGesture = function allowGesture() {
      return shouldTriggerDirection(gesture.value.direction, directionSetting.value);
    };

    var checkIfSingleTouchMove = function checkIfSingleTouchMove() {
      var _gesture$value2 = gesture.value,
          pan = _gesture$value2.pan,
          touches = _gesture$value2.touches,
          moveStatus = _gesture$value2.moveStatus,
          preTouches = _gesture$value2.preTouches,
          _gesture$value2$avail = _gesture$value2.availablePan,
          availablePan = _gesture$value2$avail === void 0 ? true : _gesture$value2$avail;

      if (touches.length > 1) {
        setGestureState({
          pan: false
        }); // Todo: 1 finger -> 2 finger, wait to test this situation

        pan && triggerCombineEvent('onPan', 'cancel');
        return;
      } // add avilablePan condition to fix the case in scrolling, which will cause unavailable pan move.


      if (moveStatus && availablePan) {
        var direction = getMovingDirection(preTouches[0], touches[0]);
        setGestureState({
          direction: direction
        });
        var eventName = getDirectionEventName(direction);

        if (!allowGesture()) {
          // if the first move is unavailable, then judge all of remaining touch movings are also invalid.
          if (!pan) {
            setGestureState({
              availablePan: false
            });
          }

          return;
        }

        if (!pan) {
          triggerCombineEvent('onPan', 'start');
          setGestureState({
            pan: true,
            availablePan: true
          });
        } else {
          triggerCombineEvent('onPan', eventName);
          triggerSubEvent('onPan', 'move');
        }
      }
    };

    var checkIfMultiTouchEnd = function checkIfMultiTouchEnd(status) {
      var _gesture$value3 = gesture.value,
          pinch = _gesture$value3.pinch,
          rotate = _gesture$value3.rotate;

      if (pinch) {
        triggerCombineEvent('onPinch', status);
      }

      if (rotate) {
        triggerCombineEvent('onRotate', status);
      }
    };

    var updateGestureStatus = function updateGestureStatus(e) {
      var time = util_now();
      setGestureState({
        time: time
      });

      if (!e.touches || !e.touches.length) {
        return;
      }

      var _gesture$value4 = gesture.value,
          startTime = _gesture$value4.startTime,
          startTouches = _gesture$value4.startTouches,
          pinch = _gesture$value4.pinch,
          rotate = _gesture$value4.rotate;
      var touches = getTouches(e);
      var moveStatus = calcMoveStatus(startTouches, touches, time - startTime);
      var mutliFingerStatus;

      if (pinch || rotate) {
        mutliFingerStatus = calcMutliFingerStatus(touches);
      }

      setGestureState({
        /* update status snapshot */
        touches: touches,
        mutliFingerStatus: mutliFingerStatus,

        /* update duration status */
        moveStatus: moveStatus
      });
    };

    var _handleTouchEnd = function _handleTouchEnd(e) {
      triggerUserCb('end', e);
      event.value = e;

      if (!gesture.value) {
        return;
      }

      cleanPressTimer();
      updateGestureStatus(e);
      doSingleTouchEnd('end');
      checkIfMultiTouchEnd('end');
    };

    var _handleTouchCancel = function _handleTouchCancel(e) {
      triggerUserCb('cancel', e);
      event.value = e; // Todo: wait to test cancel case

      if (!gesture.value) {
        return;
      }

      cleanPressTimer();
      updateGestureStatus(e);
      doSingleTouchEnd('cancel');
      checkIfMultiTouchEnd('cancel');
    };

    var triggerAllowEvent = function triggerAllowEvent(type, status) {
      if (allowGesture()) {
        triggerCombineEvent(type, status);
      } else {
        triggerSubEvent(type, status);
      }
    };

    var doSingleTouchEnd = function doSingleTouchEnd(status) {
      var _gesture$value5 = gesture.value,
          moveStatus = _gesture$value5.moveStatus,
          pinch = _gesture$value5.pinch,
          rotate = _gesture$value5.rotate,
          press = _gesture$value5.press,
          pan = _gesture$value5.pan,
          direction = _gesture$value5.direction;

      if (pinch || rotate) {
        return;
      }

      if (moveStatus) {
        var z = moveStatus.z,
            velocity = moveStatus.velocity;
        var swipe = shouldTriggerSwipe(z, velocity);
        setGestureState({
          swipe: swipe
        });

        if (pan) {
          // pan need end, it's a process
          // sometimes, start with pan left, but end with pan right....
          triggerAllowEvent('onPan', status);
        }

        if (swipe) {
          var directionEvName = getDirectionEventName(direction); // swipe just need a direction, it's a endpoint

          triggerAllowEvent('onSwipe', directionEvName);
          return;
        }
      }

      if (press) {
        triggerEvent('onPressUp');
        return;
      }

      triggerEvent('onTap');
    };

    var componentWillUnmount = function componentWillUnmount() {
      cleanPressTimer();
    };

    var getTouchAction = function getTouchAction() {
      var enablePinch = props.enablePinch,
          enableRotate = props.enableRotate;

      if (enablePinch || enableRotate || directionSetting.value === DIRECTION_ALL) {
        return 'pan-x pan-y';
      }

      if (directionSetting.value === DIRECTION_VERTICAL) {
        return 'pan-x';
      }

      if (directionSetting.value === DIRECTION_HORIZONTAL) {
        return 'pan-y';
      }

      return 'auto';
    };

    {
      directionSetting.value = directionMap[props.direction];
    }
    return {
      getTouchAction: getTouchAction,
      _handleTouchStart: _handleTouchStart,
      _handleTouchMove: _handleTouchMove,
      _handleTouchCancel: _handleTouchCancel,
      _handleTouchEnd: _handleTouchEnd
    };
  },
  render: function render() {
    var children = this.$slots.default();
    var child = children.length >= 1 ? children[0] : null;
    var touchAction = this.getTouchAction();
    child.props = Object.assign({
      onTouchstart: this._handleTouchStart,
      onTouchmove: this._handleTouchMove,
      onTouchcancel: this._handleTouchCancel,
      onTouchend: this._handleTouchEnd
    }, child.props || {});
    return Object(external_Vue_["cloneVNode"])(child, {
      style: {
        touchAction: touchAction
      }
    });
  }
});
/* harmony default export */ var vmc_gesture = (Gesture);
// CONCATENATED MODULE: ./src/packages/tabs/src/utils.tsx
function getTransformPropValue(v) {
  return {
    transform: v,
    WebkitTransform: v,
    MozTransform: v
  };
}
function getPxStyle(value) {
  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'px';
  var vertical = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var v = vertical ? "0px, ".concat(value).concat(unit, ", 0px") : "".concat(value).concat(unit, ", 0px, 0px");
  return "translate3d(".concat(v, ")");
}
function setPxStyle(el, value) {
  var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'px';
  var vertical = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var useLeft = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  if (useLeft) {
    if (vertical) {
      el.style.top = "".concat(value).concat(unit);
    } else {
      el.style.left = "".concat(value).concat(unit);
    }
  } else {
    utils_setTransform(el.style, getPxStyle(value, unit, vertical));
  }
}
function utils_setTransform(style, v) {
  style.transform = v;
  style.webkitTransform = v;
  style.mozTransform = v;
}
// CONCATENATED MODULE: ./src/packages/tabs/src/default-tab-bar.tsx





var DefaultTabBar = Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'DefaultTabBar',
  props: {
    card: {
      type: Boolean
    },
    activeCardColor: {
      type: String
    },
    prefixCls: {
      default: 'am-tabs-default-bar'
    },

    /** call this function to switch tab */
    goToTab: {
      type: Function,
      default: function _default() {}
    },
    tabs: {
      default: function _default() {
        return [];
      }
    },

    /** 当前激活的标签页 */
    activeTab: {
      default: 0
    },
    animated: {
      type: Boolean,
      default: true
    },
    renderTab: {
      type: Function
    },
    renderUnderline: {
      type: Boolean,
      default: true
    },
    page: {
      default: 5
    },
    tabBarPosition: {
      type: String,
      default: 'top'
    },
    tabBarUnderlineStyle: {
      default: function _default() {
        return {};
      }
    },
    tabBarBackgroundColor: {
      default: '#fff'
    },
    tabBarActiveTextColor: {
      default: ''
    },
    tabBarInactiveTextColor: {
      default: ''
    },
    tabBarTextStyle: {
      default: function _default() {
        return {};
      }
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var instanceId = Object(external_Vue_["ref"])(null);
    var isMoving = Object(external_Vue_["ref"])(false);
    var showPrev = Object(external_Vue_["ref"])(false);
    var showNext = Object(external_Vue_["ref"])(false);
    var transform = Object(external_Vue_["ref"])('');
    Object(external_Vue_["watch"])(function () {
      return props.activeTab;
    }, function () {
      getTransformByIndex();
    });
    Object(external_Vue_["watch"])(function () {
      return props.tabs;
    }, function () {
      getTransformByIndex();
    });
    var layoutRef = Object(external_Vue_["ref"])(null);
    var onPan = Object(external_Vue_["computed"])(function () {
      var lastOffset = 0;
      var finalOffset = 0;

      var getLastOffset = function getLastOffset() {
        var isVertical = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isTabBarVertical();
        var offset = +"".concat(lastOffset).replace('%', '');

        if ("".concat(lastOffset).indexOf('%') >= 0) {
          offset /= 100;
          offset *= isVertical ? layoutRef.value.clientHeight : layoutRef.value.clientWidth;
        }

        return offset;
      };

      return {
        onPanStart: function onPanStart() {
          isMoving.value = true;
        },
        onPanMove: function onPanMove(status) {
          if (!status.moveStatus || !layoutRef.value.value) {
            return;
          }

          var isVertical = isTabBarVertical();
          var offset = getLastOffset() + (isVertical ? status.moveStatus.y : status.moveStatus.x);
          var canScrollOffset = isVertical ? -layoutRef.value.scrollHeight + layoutRef.value.clientHeight : -layoutRef.value.scrollWidth + layoutRef.value.clientWidth;
          offset = Math.min(offset, 0);
          offset = Math.max(offset, canScrollOffset);
          setPxStyle(layoutRef.value.value, offset, 'px', isVertical);
          finalOffset = offset;
          showPrev.value = -offset > 0;
          showNext.value = offset > canScrollOffset;
        },
        onPanEnd: function onPanEnd() {
          var isVertical = isTabBarVertical();
          lastOffset = finalOffset;
          isMoving.value = false;
          transform.value = getPxStyle(finalOffset, 'px', isVertical);
        },
        setCurrentOffset: function setCurrentOffset(offset) {
          return lastOffset = offset;
        }
      };
    });

    var getTransformByIndex = function getTransformByIndex() {
      var activeTab = props.activeTab,
          tabs = props.tabs,
          _props$page = props.page,
          page = _props$page === void 0 ? 0 : _props$page;
      var isVertical = isTabBarVertical();
      var size = getTabSize(page, tabs.length);
      var center = page / 2;
      var pos = Math.min(activeTab, tabs.length - center - .5);
      var skipSize = Math.min(-(pos - center + .5) * size, 0);
      onPan.value.setCurrentOffset("".concat(skipSize, "%"));
      transform.value = getPxStyle(skipSize, '%', isVertical);
      showPrev.value = activeTab > center - .5 && tabs.length > page;
      showNext.value = activeTab < tabs.length - center - .5 && tabs.length > page;
    };

    var onPress = function onPress(index) {
      var goToTab = props.goToTab,
          tabs = props.tabs;
      emit('tabClick', tabs[index], index);
      goToTab && goToTab(index);
    };

    var isTabBarVertical = function isTabBarVertical() {
      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.tabBarPosition;
      return position === 'left' || position === 'right';
    };

    var nativeRenderTab = function nativeRenderTab(t, i, size, isTabBarVertical) {
      var prefixCls = props.prefixCls,
          renderTab = props.renderTab,
          activeTab = props.activeTab,
          tabBarTextStyle = props.tabBarTextStyle,
          tabBarActiveTextColor = props.tabBarActiveTextColor,
          tabBarInactiveTextColor = props.tabBarInactiveTextColor;
      var textStyle = Object.assign({}, tabBarTextStyle);
      var cls = "".concat(prefixCls, "-tab");
      var ariaSelected = false;
      var style = Object.assign(Object.assign({}, textStyle), isTabBarVertical ? {
        height: "".concat(size, "%")
      } : {
        width: "".concat(size, "%")
      });

      if (props.card && props.activeCardColor) {
        style.borderColor = props.activeCardColor;
      }

      if (props.card) {
        cls += " ".concat(cls, "-card");
      }

      if (activeTab === i) {
        cls += " ".concat(cls, "-active");
        ariaSelected = true;

        if (tabBarActiveTextColor) {
          textStyle.color = tabBarActiveTextColor;
        }

        style.backgroundColor = props.activeCardColor;
      } else if (tabBarInactiveTextColor) {
        textStyle.color = tabBarInactiveTextColor;
      }

      return Object(external_Vue_["createVNode"])("div", {
        "key": "t_".concat(i),
        "style": style,
        "id": "m-tabs-".concat(instanceId.value, "-").concat(i),
        "role": "tab",
        "aria-selected": ariaSelected,
        "class": cls,
        "onClick": function onClick() {
          return onPress(i);
        }
      }, [renderTab ? renderTab(t) : t.title]);
    };

    var getTabSize = function getTabSize(page, tabLength) {
      return 100 / Math.min(page, tabLength);
    };

    {
      getTransformByIndex();
      instanceId.value = instanceId.value++;
    }
    return {
      setLayout: function setLayout(el) {
        layoutRef.value = el;
      },
      isTabBarVertical: isTabBarVertical,
      getTabSize: getTabSize,
      nativeRenderTab: nativeRenderTab,
      isMoving: isMoving,
      transform: transform,
      showNext: showNext,
      showPrev: showPrev,
      onPan: onPan
    };
  },
  render: function render() {
    var _this = this;

    var prefixCls = this.prefixCls,
        animated = this.animated,
        _this$tabs = this.tabs,
        tabs = _this$tabs === void 0 ? [] : _this$tabs,
        _this$page = this.page,
        page = _this$page === void 0 ? 0 : _this$page,
        _this$activeTab = this.activeTab,
        activeTab = _this$activeTab === void 0 ? 0 : _this$activeTab,
        tabBarBackgroundColor = this.tabBarBackgroundColor,
        tabBarUnderlineStyle = this.tabBarUnderlineStyle,
        tabBarPosition = this.tabBarPosition;
    var renderUnderline = !this.card && this.renderUnderline;
    var isMoving = this.isMoving,
        transform = this.transform,
        showNext = this.showNext,
        showPrev = this.showPrev;
    var isTabBarVertical = this.isTabBarVertical();
    var needScroll = tabs.length > page;
    var size = this.getTabSize(page, tabs.length);
    var Tabs = tabs.map(function (t, i) {
      return _this.nativeRenderTab(t, i, size, isTabBarVertical);
    });
    var cls = prefixCls;

    if (animated && !isMoving) {
      cls += " ".concat(prefixCls, "-animated");
    }

    var style = {
      backgroundColor: tabBarBackgroundColor || ''
    };
    var transformStyle = needScroll ? Object.assign({}, getTransformPropValue(transform)) : {};

    var _a = this.onPan,
        setCurrentOffset = _a.setCurrentOffset,
        onPan = tslib_es6_rest(_a, ["setCurrentOffset"]);

    var underlineProps = {
      style: Object.assign(Object.assign(Object.assign({}, isTabBarVertical ? {
        height: "".concat(size, "%")
      } : {
        width: "".concat(size, "%")
      }), isTabBarVertical ? {
        top: "".concat(size * activeTab, "%")
      } : {
        left: "".concat(size * activeTab, "%")
      }), tabBarUnderlineStyle),
      class: "".concat(prefixCls, "-underline")
    };
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(cls, " ").concat(prefixCls, "-").concat(tabBarPosition),
      "style": style
    }, [showPrev && Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-prevpage")
    }, null), Object(external_Vue_["createVNode"])(vmc_gesture, Object(external_Vue_["mergeProps"])(onPan, {
      "direction": isTabBarVertical ? 'vertical' : 'horizontal'
    }), {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("div", {
          "role": "tablist",
          "class": "".concat(prefixCls, "-content"),
          "style": transformStyle,
          "ref": _this.setLayout
        }, [Tabs, renderUnderline ? Object(external_Vue_["createVNode"])("div", underlineProps, null) : ''])];
      }
    }), showNext && Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-nextpage")
    }, null)]);
  }
});
/* harmony default export */ var default_tab_bar = (DefaultTabBar);
// CONCATENATED MODULE: ./src/packages/utils/dom.ts
var htmlAttrNames = ['innerHTML', 'class', 'style', 'accesskey', 'contenteditable', 'contextmenu', 'dir', 'draggable', 'hidden', 'id', 'lang', 'placeholder', 'spellcheck', 'tabindex', 'title', 'translate', 'radiogroup', 'role', 'about', 'datatype', 'inlist', 'prefix', 'property', 'resource', 'typeof', 'vocab', 'autocapitalize', 'autocorrect', 'autocave', 'color', 'itemprop', 'itemscope', 'itemtype', 'itemid', 'itemref', 'results', 'security', 'unselectable'];
var filterHTMLAttrs = function filterHTMLAttrs(props) {
  var res = {};
  Object.keys(props).forEach(function (key) {
    if (htmlAttrNames.includes(key)) {
      res[key] = props[key];
    }
  });
  return res;
};
// CONCATENATED MODULE: ./src/packages/tabs/src/tab-pane.tsx





var TabPane = Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'TabPane',
  props: {
    role: {
      type: String
    },
    active: {
      type: Boolean
    },
    fixX: {
      type: Boolean,
      default: true
    },
    fixY: {
      type: Boolean,
      default: true
    }
  },
  setup: function setup(props) {
    var layout = Object(external_Vue_["ref"])(null);
    var offsetX = Object(external_Vue_["ref"])(0);
    var offsetY = Object(external_Vue_["ref"])(0);

    var setLayout = function setLayout(div) {
      layout.value = div;
    };

    Object(external_Vue_["onBeforeUpdate"])(function () {
      if (props.active !== props.active) {
        if (props.active) {
          offsetX.value = 0;
          offsetY.value = 0;
        } else {
          offsetX.value = layout.value.scrollLeft;
          offsetY.value = layout.value.scrollTop;
        }
      }
    });
    return {
      setLayout: setLayout,
      offsetX: offsetX,
      offsetY: offsetY
    };
  },
  render: function render() {
    var _a = this,
        active = _a.active,
        fixX = _a.fixX,
        fixY = _a.fixY,
        props = tslib_es6_rest(_a, ["active", "fixX", "fixY"]);

    var style = Object.assign(Object.assign({}, fixX && this.offsetX ? getTransformPropValue(getPxStyle(-this.offsetX, 'px', false)) : {}), fixY && this.offsetY ? getTransformPropValue(getPxStyle(-this.offsetY, 'px', true)) : {});
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "style": style
    }, filterHTMLAttrs(Object.assign(Object.assign({}, this.$props), this.$attrs)), {
      "ref": this.setLayout
    }), [this.$slots.default()]);
  }
});
/* harmony default export */ var tab_pane = (TabPane);
// CONCATENATED MODULE: ./src/packages/tabs/src/index.tsx









function tabs_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var src_getPanDirection = function getPanDirection(direction) {
  switch (direction) {
    case DIRECTION_LEFT:
    case DIRECTION_RIGHT:
      return 'horizontal';

    case DIRECTION_UP:
    case DIRECTION_DOWN:
      return 'vertical';

    default:
      return 'none';
  }
};
var src_Tabs = Object(external_Vue_["defineComponent"])({
  DefaultTabBar: default_tab_bar,
  name: 'Tabs',
  props: {
    /**
     * 使用卡片样式
     */
    card: {
      type: Boolean
    },

    /**
     * 激活的卡片背景色（未激活卡片的边框色与之相同）
     */
    activeCardColor: {
      type: String
    },

    /**
     * class前缀
     */
    prefixCls: {
      type: String,
      default: 'am-tabs'
    },
    useOnPan: {
      type: Boolean,
      default: true
    },
    renderTabBar: {
      type: Function
    },

    /**
     * 标签数据
     */
    tabs: {
      default: function _default() {
        return [];
      }
    },

    /** TabBar's position | default: top */
    tabBarPosition: {
      default: 'top'
    },

    /**
     * 当前激活的卡片的索引
     */
    value: {
      type: [String, Number],
      default: 0
    },
    page: {
      type: Number
    },

    /**
     * 是否支持手势
     */
    swipeable: {
      type: Boolean,
      default: true
    },

    /**
     * 与当前激活标签相邻的提前渲染的标签数量
     */
    prerenderingSiblingsNumber: {
      type: Number,
      default: 1
    },

    /**
     * 切换标签时是否有动画
     */
    animated: {
      type: Boolean,
      default: true
    },

    /**
     * 是否销毁未激活的标签页
     */
    destroyInactiveTab: {
      type: Boolean,
      default: false
    },

    /**
     * 切换卡片的滑动距离，0-1之间
     */
    distanceToChangeTab: {
      type: Number,
      default: 0.3
    },
    usePaged: {
      type: Boolean,
      default: true
    },

    /**
     * 标签页方向
     */
    tabDirection: {
      type: String,
      default: 'horizontal'
    },

    /** 标签下划线样式 */
    tabBarUnderlineStyle: {
      type: Object
    },

    /** 标签页背景颜色 */
    tabBarBackgroundColor: {
      type: String
    },

    /** 激活的标签页文字颜色 */
    tabBarActiveTextColor: {
      type: String
    },

    /** 未激活的标签页文字颜色 */
    tabBarInactiveTextColor: {
      type: String
    },

    /** 标签栏文字样式 */
    tabBarTextStyle: {
      type: Object
    },

    /** use left instead of transform | default: false */
    useLeftInsteadTransform: {
      type: Boolean
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var contentPos = Object(external_Vue_["ref"])('');
    var isMoving = Object(external_Vue_["ref"])(false);
    var instanceId = Object(external_Vue_["ref"])(null);
    var prevCurrentTab = Object(external_Vue_["ref"])(null);
    var tabCache = Object(external_Vue_["reactive"])({});

    var getTabIndex = function getTabIndex() {
      var page = props.page,
          value = props.value,
          tabs = props.tabs;
      var param = (page !== undefined ? page : value) || 0;
      var index = 0;

      if (typeof param === 'string') {
        tabs.forEach(function (t, i) {
          if (t.key === param) {
            index = i;
          }
        });
      } else {
        index = param || 0;
      }

      return index < 0 ? 0 : index;
    };

    var currentTab = Object(external_Vue_["ref"])(getTabIndex());
    var nextCurrentTab = Object(external_Vue_["ref"])(null);
    var layoutRef = Object(external_Vue_["ref"])(null);
    Object(external_Vue_["watch"])(function () {
      return props.page;
    }, function (page) {
      if (page !== undefined && page !== null) {
        currentTab.value = page;
      }
    });
    Object(external_Vue_["watch"])(function () {
      return currentTab.value;
    }, function (index) {
      emit('update:value', index);
    });
    var onPan = Object(external_Vue_["computed"])(function () {
      var lastOffset = 0;
      var finalOffset = 0;
      var panDirection;

      var getLastOffset = function getLastOffset() {
        var isVertical = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isTabVertical();
        var offset = +"".concat(lastOffset).replace('%', '');

        if ("".concat(lastOffset).indexOf('%') >= 0) {
          offset /= 100;
          offset *= isVertical ? layoutRef.clientHeight : layoutRef.value.clientWidth;
        }

        return offset;
      };

      return {
        onPanStart: function onPanStart(status) {
          if (!props.swipeable || !props.animated) {
            return;
          }

          panDirection = src_getPanDirection(status.direction);
          isMoving.value = true;
        },
        onPanMove: function onPanMove(status) {
          var swipeable = props.swipeable,
              animated = props.animated,
              useLeftInsteadTransform = props.useLeftInsteadTransform;

          if (!status.moveStatus || !layoutRef.value.value || !swipeable || !animated) {
            return;
          }

          var isVertical = isTabVertical();
          var offset = getLastOffset();

          if (isVertical) {
            offset += panDirection === 'horizontal' ? 0 : status.moveStatus.y;
          } else {
            offset += panDirection === 'vertical' ? 0 : status.moveStatus.x;
          }

          var canScrollOffset = isVertical ? -layoutRef.value.scrollHeight + layoutRef.value.clientHeight : -layoutRef.value.scrollWidth + layoutRef.value.clientWidth;
          offset = Math.min(offset, 0);
          offset = Math.max(offset, canScrollOffset);
          setPxStyle(layoutRef.value.value, offset, 'px', isVertical, useLeftInsteadTransform);
          finalOffset = offset;
        },
        onPanEnd: function onPanEnd() {
          if (!props.swipeable || !props.animated) {
            return;
          }

          lastOffset = finalOffset;
          var isVertical = isTabVertical();
          var offsetIndex = getOffsetIndex(finalOffset, isVertical ? layoutRef.value.clientHeight : layoutRef.value.clientWidth);
          isMoving.value = false;

          if (offsetIndex === currentTab.value) {
            if (props.usePaged) {
              utils_setTransform(layoutRef.value.style, getContentPosByIndex(offsetIndex, isTabVertical(), props.useLeftInsteadTransform));
            }
          } else {
            goToTab(offsetIndex);
          }
        },
        setCurrentOffset: function setCurrentOffset(offset) {
          return lastOffset = offset;
        }
      };
    });
    /** on tab click */

    var onTabClick = function onTabClick(tab, index) {
      emit('tab-click', index);
    };

    var isTabVertical = function isTabVertical() {
      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.tabDirection;
      return direction === 'vertical';
    };

    var shouldRenderTab = function shouldRenderTab(idx) {
      var _props$prerenderingSi = props.prerenderingSiblingsNumber,
          prerenderingSiblingsNumber = _props$prerenderingSi === void 0 ? 0 : _props$prerenderingSi;
      return currentTab.value - prerenderingSiblingsNumber <= idx && idx <= currentTab.value + prerenderingSiblingsNumber;
    };

    var componentDidMount = function componentDidMount() {
      prevCurrentTab.value = currentTab.value;
    };

    var getOffsetIndex = function getOffsetIndex(current, width) {
      var threshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.distanceToChangeTab || 0;
      var ratio = Math.abs(current / width);
      var direction = ratio > currentTab.value ? '<' : '>';
      var index = Math.floor(ratio);

      switch (direction) {
        case '<':
          return ratio - index > threshold ? index + 1 : index;

        case '>':
          return 1 - ratio + index > threshold ? index : index + 1;

        default:
          return Math.round(ratio);
      }
    };

    var baseGoToTab = function baseGoToTab(index) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var setState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      if (!force && nextCurrentTab.value === index) {
        return false;
      }

      nextCurrentTab.value = index;
      var tabs = props.tabs;

      if (index >= 0 && index < tabs.length) {
        if (!force) {
          emit('change', tabs[index], index);

          if (props.page !== undefined) {
            return false;
          }
        }

        currentTab.value = index;

        if (setState) {
          setState();
        }
      }

      return true;
    };

    var getTabBarBaseProps = function getTabBarBaseProps() {
      var animated = props.animated,
          tabBarActiveTextColor = props.tabBarActiveTextColor,
          tabBarBackgroundColor = props.tabBarBackgroundColor,
          tabBarInactiveTextColor = props.tabBarInactiveTextColor,
          tabBarPosition = props.tabBarPosition,
          tabBarTextStyle = props.tabBarTextStyle,
          tabBarUnderlineStyle = props.tabBarUnderlineStyle,
          tabs = props.tabs;
      return {
        activeTab: currentTab.value,
        animated: animated,
        card: props.card,
        activeCardColor: props.activeCardColor,
        goToTab: tabClickGoToTab,
        tabBarActiveTextColor: tabBarActiveTextColor,
        tabBarBackgroundColor: tabBarBackgroundColor,
        tabBarInactiveTextColor: tabBarInactiveTextColor,
        tabBarPosition: tabBarPosition,
        tabBarTextStyle: tabBarTextStyle,
        tabBarUnderlineStyle: tabBarUnderlineStyle,
        tabs: tabs,
        instanceId: instanceId.value
      };
    };

    var getSubElements = function getSubElements() {
      var children = unwrapFragment(slots.default());
      var subElements = {};
      return function () {
        var defaultPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$i$-';
        var allPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$ALL$';

        if (Array.isArray(children)) {
          children.forEach(function (child, index) {
            if (child.key) {
              subElements[child.key] = child;
            }

            subElements["".concat(defaultPrefix).concat(index)] = child;
          });
        } else if (children) {
          subElements[allPrefix] = children;
        }

        return subElements;
      };
    };

    var getSubElement = function getSubElement(tab, index) {
      var defaultPrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '$i$-';
      var allPrefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '$ALL$';
      var key = tab.key !== null && tab.key !== undefined && tab.key !== '' ? tab.key : "".concat(defaultPrefix).concat(index);
      var getSubElementsFn = getSubElements();
      var elements = getSubElementsFn(defaultPrefix, allPrefix);
      var component = elements[key] || elements[allPrefix];

      if (component instanceof Function) {
        component = component(tab, index);
      }

      return component || null;
    };

    var goToTab = function goToTab(index) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var usePaged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.usePaged;
      var tabDirection = props.tabDirection,
          useLeftInsteadTransform = props.useLeftInsteadTransform;

      var setState = function setState() {};

      if (usePaged) {
        setState = function setState() {
          contentPos.value = getContentPosByIndex(index, isTabVertical(tabDirection), useLeftInsteadTransform);
        };
      }

      return baseGoToTab(index, force, setState);
    };

    var tabClickGoToTab = function tabClickGoToTab(index) {
      goToTab(index, false, true);
    };

    var getContentPosByIndex = function getContentPosByIndex(index, isVertical) {
      var useLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var value = "".concat(-index * 100, "%");
      onPan.value.setCurrentOffset(value);

      if (useLeft) {
        return "".concat(value);
      } else {
        var translate = isVertical ? "0px, ".concat(value) : "".concat(value, ", 0px"); // fix: content overlay TabBar on iOS 10. ( 0px -> 1px )

        return "translate3d(".concat(translate, ", 1px)");
      }
    };

    var onSwipe = function onSwipe(status) {
      var tabBarPosition = props.tabBarPosition,
          swipeable = props.swipeable,
          usePaged = props.usePaged;

      if (!swipeable || !usePaged || isTabVertical()) {
        return;
      }

      switch (tabBarPosition) {
        case 'top':
        case 'bottom':
          switch (status.direction) {
            case DIRECTION_LEFT:
              if (!isTabVertical()) {
                goToTab(prevCurrentTab.value + 1);
              }

              break;

            case DIRECTION_UP:
              if (isTabVertical()) {
                goToTab(prevCurrentTab.value + 1);
              }

              break;

            case DIRECTION_RIGHT:
              if (!isTabVertical()) {
                goToTab(prevCurrentTab.value - 1);
              }

              break;

            case DIRECTION_DOWN:
              if (isTabVertical()) {
                goToTab(prevCurrentTab.value - 1);
              }

              break;
          }

          break;
      }
    };

    var renderContent = function renderContent() {
      var prefixCls = props.prefixCls,
          tabs = props.tabs,
          animated = props.animated,
          destroyInactiveTab = props.destroyInactiveTab,
          useLeftInsteadTransform = props.useLeftInsteadTransform;
      var contentCls = "".concat(prefixCls, "-content-wrap");

      if (animated && !isMoving.value) {
        contentCls += " ".concat(contentCls, "-animated");
      }

      var contentStyle = animated ? useLeftInsteadTransform ? Object.assign({
        position: 'relative'
      }, isTabVertical() ? {
        top: contentPos.value
      } : {
        left: contentPos
      }) : getTransformPropValue(contentPos.value) : Object.assign({
        position: 'relative'
      }, isTabVertical() ? {
        top: "".concat(-currentTab.value * 100, "%")
      } : {
        left: "".concat(-currentTab * 100, "%")
      });

      var _getTabBarBaseProps = getTabBarBaseProps(),
          instanceId = _getTabBarBaseProps.instanceId;

      return Object(external_Vue_["createVNode"])("div", {
        "class": contentCls,
        "style": contentStyle,
        "ref": function ref(el) {
          layoutRef.value = el;
        }
      }, [tabs && tabs.map(function (tab, index) {
        var cls = "".concat(prefixCls, "-pane-wrap");

        if (currentTab.value === index) {
          cls += " ".concat(cls, "-active");
        } else {
          cls += " ".concat(cls, "-inactive");
        }

        var key = tab.key || "tab_".concat(index); // update tab cache

        if (shouldRenderTab(index)) {
          tabCache[index] = getSubElement(tab, index);
        } else if (destroyInactiveTab) {
          tabCache[index] = undefined;
        }

        return Object(external_Vue_["createVNode"])(tab_pane, {
          "key": key,
          "class": cls,
          "active": currentTab.value === index,
          "role": "tabpanel",
          "aria-hidden": currentTab.value !== index,
          "aria-labelledby": "m-tabs-".concat(instanceId, "-").concat(index),
          "fixX": isTabVertical,
          "fixY": !isTabVertical
        }, {
          default: function _default() {
            return [tabCache[index]];
          }
        });
      })]);
    };

    {
      nextCurrentTab.value = currentTab.value;
      instanceId.value = instanceId.value++;
      contentPos.value = getContentPosByIndex(getTabIndex(), isTabVertical(props.tabDirection), props.useLeftInsteadTransform);
    }
    Object(external_Vue_["onBeforeUpdate"])(function () {
      if (props.page !== props.page && props.page !== undefined) {
        baseGoToTab(getTabIndex(), true);
      }
    });
    Object(external_Vue_["onUpdated"])(function () {
      prevCurrentTab.value = currentTab.value;
    });
    return {
      isTabVertical: isTabVertical,
      getTabBarBaseProps: getTabBarBaseProps,
      onPan: onPan,
      onTabClick: onTabClick,
      onSwipe: onSwipe,
      renderContent: renderContent
    };
  },
  render: function render() {
    var _slot;

    var _this = this;

    var prefixCls = this.prefixCls,
        tabBarPosition = this.tabBarPosition,
        tabDirection = this.tabDirection,
        useOnPan = this.useOnPan;
    var isTabVertical = this.isTabVertical(tabDirection);
    var tabBarProps = Object.assign({}, this.getTabBarBaseProps());
    var onPan = !isTabVertical && useOnPan ? this.onPan : {};
    var content = [Object(external_Vue_["createVNode"])("div", {
      "key": "tabBar",
      "class": "".concat(prefixCls, "-tab-bar-wrap")
    }, [this.renderTabBar ? this.renderTabBar(tabBarProps) : Object(external_Vue_["createVNode"])(default_tab_bar, Object(external_Vue_["mergeProps"])(tabBarProps, {
      "onTabClick": function onTabClick(tab, index) {
        _this.onTabClick(tab, index);
      }
    }), null)]), Object(external_Vue_["createVNode"])(vmc_gesture, Object(external_Vue_["mergeProps"])({
      "key": "$content",
      "onSwipe": this.onSwipe
    }, {
      onPan: onPan
    }), tabs_src_isSlot(_slot = this.renderContent()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    })];
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, " ").concat(prefixCls, "-").concat(tabDirection, " ").concat(prefixCls, "-").concat(tabBarPosition)
    }, [tabBarPosition === 'top' || tabBarPosition === 'left' ? content : content.reverse()]);
  }
});
/* harmony default export */ var tabs_src = (src_Tabs);
// CONCATENATED MODULE: ./src/packages/vmc-drawer/index.tsx


function vmc_drawer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function vmc_drawer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { vmc_drawer_typeof = function _typeof(obj) { return typeof obj; }; } else { vmc_drawer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return vmc_drawer_typeof(obj); }






function vmc_drawer_getOffset(ele) {
  var el = ele;
  var _x = 0;
  var _y = 0;

  while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {
    _x += el.offsetLeft - el.scrollLeft;
    _y += el.offsetTop - el.scrollTop;
    el = el.offsetParent;
  }

  return {
    top: _y,
    left: _x
  };
}

var CANCEL_DISTANCE_ON_SCROLL = 20;
var vmc_drawer_Drawer = Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'Drawer',
  props: {
    prefixCls: {
      type: String,
      default: 'rmc-drawer'
    },
    sidebarStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    contentStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    overlayStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    dragHandleStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    sidebar: {
      type: Object
    },
    docked: {
      type: Boolean,
      default: false
    },
    visible: {
      type: Boolean,
      default: false
    },
    transitions: {
      type: Boolean,
      default: true
    },
    touch: {
      type: Boolean,
      default: true
    },
    enableDragHandle: {
      type: Boolean,
      default: true
    },
    position: {
      type: String,
      default: 'left'
    },
    dragToggleDistance: {
      type: Number,
      default: 30
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var state = Object(external_Vue_["reactive"])({
      // the detected width of the sidebar in pixels
      sidebarWidth: 0,
      sidebarHeight: 0,
      sidebarTop: 0,
      dragHandleTop: 0,
      // keep track of touching params
      touchIdentifier: null,
      touchStartX: null,
      touchStartY: null,
      touchCurrentX: null,
      touchCurrentY: null,
      // if touch is supported by the browser
      touchSupported: (typeof window === "undefined" ? "undefined" : vmc_drawer_typeof(window)) === 'object' && 'ontouchstart' in window,
      notTouch: true
    });
    var isMoving = Object(external_Vue_["ref"])(false);
    var sidebarRef = Object(external_Vue_["ref"])(null);
    var dragHandleRef = Object(external_Vue_["ref"])(null);
    var contentRef = Object(external_Vue_["computed"])(function () {
      return contentRef.value;
    });
    var overlayRef = Object(external_Vue_["computed"])(function () {
      return overlayRef.value;
    });
    var onPan = Object(external_Vue_["computed"])(function () {
      var lastOffset = 0;
      var finalOffset = 0;
      var panDirection;

      var getLastOffset = function getLastOffset() {
        var offset = +"".concat(lastOffset).replace('%', '');

        if ("".concat(lastOffset).indexOf('%') >= 0) {
          offset /= 100;
          offset *= overlayRef.value.clientWidth;
        }

        return offset;
      };

      return {
        onPanStart: function onPanStart(status) {
          panDirection = src_getPanDirection(status.direction);
          isMoving.value = true;
        },
        onPanMove: function onPanMove(status) {
          if (!status.moveStatus) {
            return;
          }

          var offset = getLastOffset();
          offset += panDirection === 'vertical' ? 0 : status.moveStatus.x;
          var canScrollOffset = -overlayRef.value.scrollWidth + overlayRef.value.clientWidth;
          offset = Math.min(offset, 0);
          offset = Math.max(offset, canScrollOffset);
          setPxStyle(overlayRef.value, offset, 'px', false, false);
          finalOffset = offset;
        },
        onPanEnd: function onPanEnd() {
          lastOffset = finalOffset; // const offsetIndex = this.getOffsetIndex(finalOffset, this.overlayRef.clientWidth);

          isMoving.value = false;
        },
        setCurrentOffset: function setCurrentOffset(offset) {
          return lastOffset = offset;
        }
      };
    });

    var onOverlayClicked = function onOverlayClicked() {
      if (props.visible) {
        // see https://github.com/react-component/drawer/issues/9
        setTimeout(function () {
          emit('open', false, {
            overlayClicked: true
          });
        }, 0);
      }
    };

    var onTouchStart = function onTouchStart(ev) {
      // filter out if a user starts swiping with a second finger
      if (!isTouching()) {
        var touch = ev.targetTouches[0];
        state.touchIdentifier = state.notTouch ? touch.identifier : null;
        state.touchStartX = touch.clientX;
        state.touchStartY = touch.clientY;
        state.touchCurrentX = touch.clientX;
        state.touchCurrentY = touch.clientY;
      }
    };

    var onTouchMove = function onTouchMove(ev) {
      // ev.preventDefault(); // cannot touchmove with FastClick
      if (isTouching()) {
        for (var ind = 0; ind < ev.targetTouches.length; ind++) {
          // we only care about the finger that we are tracking
          if (ev.targetTouches[ind].identifier === state.touchIdentifier) {
            state.touchCurrentX = ev.targetTouches[ind].clientX;
            state.touchCurrentY = ev.targetTouches[ind].clientY;
            break;
          }
        }
      }
    };

    var onTouchEnd = function onTouchEnd() {
      state.notTouch = false;

      if (isTouching()) {
        // trigger a change to open if sidebar has been dragged beyond dragToggleDistance
        var touchWidth = touchSidebarWidth();

        if (props.visible && touchWidth < state.sidebarWidth - props.dragToggleDistance || !props.visible && touchWidth > props.dragToggleDistance) {
          emit('update:visible', !props.visible);
        }

        var touchHeight = touchSidebarHeight();

        if (props.visible && touchHeight < state.sidebarHeight - props.dragToggleDistance || !props.visible && touchHeight > props.dragToggleDistance) {
          emit('update:visible', !props.visible);
        }

        state.touchIdentifier = null;
        state.touchStartX = null;
        state.touchStartY = null;
        state.touchCurrentX = null;
        state.touchCurrentY = null;
      }
    };

    var onScroll = function onScroll() {
      if (isTouching() && inCancelDistanceOnScroll()) {
        state.touchIdentifier = null;
        state.touchStartX = null;
        state.touchStartY = null;
        state.touchCurrentX = null;
        state.touchCurrentY = null;
      }
    };

    var inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {
      var cancelDistanceOnScroll;

      switch (props.position) {
        case 'right':
          cancelDistanceOnScroll = Math.abs(state.touchCurrentX - state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;
          break;

        case 'bottom':
          cancelDistanceOnScroll = Math.abs(state.touchCurrentY - state.touchStartY) < CANCEL_DISTANCE_ON_SCROLL;
          break;

        case 'top':
          cancelDistanceOnScroll = Math.abs(state.touchStartY - state.touchCurrentY) < CANCEL_DISTANCE_ON_SCROLL;
          break;

        case 'left':
        default:
          cancelDistanceOnScroll = Math.abs(state.touchStartX - state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;
      }

      return cancelDistanceOnScroll;
    };

    var isTouching = function isTouching() {
      return state.touchIdentifier !== null;
    };

    var saveSidebarSize = function saveSidebarSize() {
      var sidebar = sidebarRef.value;
      var width = sidebar.offsetWidth;
      var height = sidebar.offsetHeight;
      var sidebarTop = vmc_drawer_getOffset(sidebarRef.value).top;
      var dragHandleTop = vmc_drawer_getOffset(dragHandleRef.value).top;

      if (width !== state.sidebarWidth) {
        state.sidebarWidth = width;
      }

      if (height !== state.sidebarHeight) {
        state.sidebarHeight = height;
      }

      if (sidebarTop !== state.sidebarTop) {
        state.sidebarTop = sidebarTop;
      }

      if (dragHandleTop !== state.dragHandleTop) {
        state.dragHandleTop = dragHandleTop;
      }
    };

    var touchSidebarWidth = function touchSidebarWidth() {
      // if the sidebar is open and start point of drag is inside the sidebar
      // we will only drag the distance they moved their finger
      // otherwise we will move the sidebar to be below the finger.
      if (props.position === 'right') {
        if (props.visible && window.innerWidth - state.touchStartX < state.sidebarWidth) {
          if (state.touchCurrentX > state.touchStartX) {
            return state.sidebarWidth + state.touchStartX - state.touchCurrentX;
          }

          return state.sidebarWidth;
        }

        return Math.min(window.innerWidth - state.touchCurrentX, state.sidebarWidth);
      }

      if (props.position === 'left') {
        if (props.visible && state.touchStartX < state.sidebarWidth) {
          if (state.touchCurrentX > state.touchStartX) {
            return state.sidebarWidth;
          }

          return state.sidebarWidth - state.touchStartX + state.touchCurrentX;
        }

        return Math.min(state.touchCurrentX, state.sidebarWidth);
      }
    };

    var touchSidebarHeight = function touchSidebarHeight() {
      // if the sidebar is open and start point of drag is inside the sidebar
      // we will only drag the distance they moved their finger
      // otherwise we will move the sidebar to be below the finger.
      if (props.position === 'bottom') {
        if (props.visible && window.innerHeight - state.touchStartY < state.sidebarHeight) {
          if (state.touchCurrentY > state.touchStartY) {
            return state.sidebarHeight + state.touchStartY - state.touchCurrentY;
          }

          return state.sidebarHeight;
        }

        return Math.min(window.innerHeight - state.touchCurrentY, state.sidebarHeight);
      }

      if (props.position === 'top') {
        var touchStartOffsetY = state.touchStartY - state.sidebarTop;

        if (props.visible && touchStartOffsetY < state.sidebarHeight) {
          if (state.touchCurrentY > state.touchStartY) {
            return state.sidebarHeight;
          }

          return state.sidebarHeight - state.touchStartY + state.touchCurrentY;
        }

        return Math.min(state.touchCurrentY - state.dragHandleTop, state.sidebarHeight);
      }
    };

    var renderStyle = function renderStyle(_ref2) {
      var _ref2$sidebarStyle = _ref2.sidebarStyle,
          sidebarStyle = _ref2$sidebarStyle === void 0 ? null : _ref2$sidebarStyle,
          _ref2$isTouching = _ref2.isTouching,
          isTouching = _ref2$isTouching === void 0 ? null : _ref2$isTouching,
          _ref2$overlayStyle = _ref2.overlayStyle,
          overlayStyle = _ref2$overlayStyle === void 0 ? null : _ref2$overlayStyle,
          _ref2$contentStyle = _ref2.contentStyle,
          contentStyle = _ref2$contentStyle === void 0 ? null : _ref2$contentStyle;

      if (props.position === 'right' || props.position === 'left') {
        sidebarStyle.transform = "translateX(0%)";
        sidebarStyle.WebkitTransform = "translateX(0%)";

        if (isTouching) {
          var percentage = touchSidebarWidth() / state.sidebarWidth; // slide open to what we dragged

          if (props.position === 'right') {
            sidebarStyle.transform = "translateX(".concat((1 - percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateX(".concat((1 - percentage) * 100, "%)");
          }

          if (props.position === 'left') {
            sidebarStyle.transform = "translateX(-".concat((1 - percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateX(-".concat((1 - percentage) * 100, "%)");
          } // fade overlay to match distance of drag


          overlayStyle.opacity = percentage;
          overlayStyle.visibility = 'visible';
        }

        if (contentStyle) {
          contentStyle[props.position] = "".concat(state.sidebarWidth, "px");
        }
      }

      if (props.position === 'top' || props.position === 'bottom') {
        sidebarStyle.transform = "translateY(0%)";
        sidebarStyle.WebkitTransform = "translateY(0%)";

        if (isTouching) {
          var _percentage = touchSidebarHeight() / state.sidebarHeight; // slide open to what we dragged


          if (props.position === 'bottom') {
            sidebarStyle.transform = "translateY(".concat((1 - _percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateY(".concat((1 - _percentage) * 100, "%)");
          }

          if (props.position === 'top') {
            sidebarStyle.transform = "translateY(-".concat((1 - _percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateY(-".concat((1 - _percentage) * 100, "%)");
          } // fade overlay to match distance of drag


          overlayStyle.opacity = _percentage;
          overlayStyle.visibility = 'visible';
        }

        if (contentStyle) {
          contentStyle[props.position] = "".concat(state.sidebarHeight, "px");
        }
      }
    };

    Object(external_Vue_["onMounted"])(function () {
      saveSidebarSize();
    });
    Object(external_Vue_["onUpdated"])(function () {
      // filter out the updates when we're touching
      if (!isTouching()) {
        saveSidebarSize();
      }
    });
    return {
      setSidebar: function setSidebar(el) {
        sidebarRef.value = el;
      },
      setDragHandle: function setDragHandle(el) {
        dragHandleRef.value = el;
      },
      isTouching: isTouching,
      renderStyle: renderStyle,
      state: state,
      onTouchStart: onTouchStart,
      onTouchMove: onTouchMove,
      onTouchEnd: onTouchEnd,
      onScroll: onScroll,
      onOverlayClicked: onOverlayClicked
    };
  },
  render: function render() {
    var _rootCls,
        _this = this;

    var _a, _b, _c;

    var prefixCls = this.prefixCls,
        position = this.position,
        transitions = this.transitions,
        touch = this.touch,
        enableDragHandle = this.enableDragHandle,
        sidebar = this.sidebar,
        docked = this.docked,
        visible = this.visible;
    var sidebarStyle = Object.assign({}, this.sidebarStyle);
    var contentStyle = Object.assign({}, this.contentStyle);
    var overlayStyle = Object.assign({}, this.overlayStyle);
    var rootCls = (_rootCls = {}, vmc_drawer_defineProperty(_rootCls, prefixCls, true), vmc_drawer_defineProperty(_rootCls, "".concat(prefixCls, "-").concat(position), true), _rootCls);
    var rootProps = {
      style: (_a = this.$attrs.style) !== null && _a !== void 0 ? _a : {}
    };
    var isTouching = this.isTouching();

    if (isTouching) {
      this.renderStyle({
        sidebarStyle: sidebarStyle,
        isTouching: true,
        overlayStyle: overlayStyle
      });
    } else if (this.docked) {
      if (this.visible) {
        rootCls["".concat(prefixCls, "-docked")] = true;
        this.renderStyle({
          sidebarStyle: sidebarStyle,
          contentStyle: contentStyle
        });
      }
    } else if (this.visible && !docked) {
      rootCls["".concat(prefixCls, "-open")] = true;
      this.renderStyle({
        sidebarStyle: sidebarStyle
      });
      overlayStyle.opacity = 1;
      overlayStyle.visibility = 'visible';
    }

    if (isTouching || !transitions) {
      sidebarStyle.transition = undefined;
      sidebarStyle.webkitTransition = undefined;
      contentStyle.transition = undefined;
      overlayStyle.transition = undefined;
    }

    var dragHandle = null;

    if (this.state.touchSupported && touch) {
      if (open) {
        rootProps.onTouchstart = function (ev) {
          _this.state.notTouch = true;

          _this.onTouchStart(ev);
        };

        rootProps.onTouchmove = this.onTouchMove;
        rootProps.onTouchend = this.onTouchEnd;
        rootProps.onTouchcancel = this.onTouchEnd;
        rootProps.onScroll = this.onScroll;
      } else if (enableDragHandle) {
        dragHandle = Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-draghandle"),
          "style": this.dragHandleStyle,
          "onTouchstart": this.onTouchStart.bind(this),
          "onTouchmove": this.onTouchMove.bind(this),
          "onTouchend": this.onTouchEnd.bind(this),
          "onTouchcancel": this.onTouchEnd.bind(this),
          "ref": this.setDragHandle
        }, null);
      }
    }

    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": classnames_default()(rootCls)
    }, rootProps), [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-sidebar"),
      "style": sidebarStyle,
      "ref": this.setSidebar
    }, [sidebar]), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-overlay"),
      "style": overlayStyle,
      "role": "presentation",
      "ref": "overlay",
      "onClick": this.onOverlayClicked
    }, null), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-content"),
      "style": contentStyle,
      "ref": "content"
    }, [dragHandle, (_c = (_b = this.$slots).default) === null || _c === void 0 ? void 0 : _c.call(_b)])]);
  }
});
/* harmony default export */ var vmc_drawer = (vmc_drawer_Drawer);
// CONCATENATED MODULE: ./src/packages/drawer/src/index.tsx



var drawer_src_Drawer = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'Drawer',
  props: {
    /**
     * 抽屉内容容器样式
     */
    sidebarStyle: {
      type: Object
    },
    contentStyle: {
      type: Object
    },
    overlayStyle: {
      type: Object
    },
    dragHandleStyle: {
      type: Object
    },
    docked: {
      type: Boolean
    },
    transitions: {
      type: Boolean
    },
    touch: {
      type: Boolean,
      default: true
    },
    dragToggleDistance: {
      type: Number
    },
    prefixCls: {
      type: String,
      default: 'am-drawer'
    },
    sidebar: {},
    visible: {
      type: Boolean,
      default: false
    },
    position: {
      type: String,
      default: 'left'
    }
  },
  render: function render() {
    var _this = this;

    var _a, _b, _c, _d, _e;

    var props = Object.assign(Object.assign(Object.assign({}, this.$props), this.$attrs), {
      sidebar: (_c = (_b = (_a = this.$slots).sidebar) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : this.sidebar,
      visible: this.visible,
      onOpen: function onOpen(value) {
        _this.$emit('update:visible', value);
      }
    });
    return Object(external_Vue_["createVNode"])(vmc_drawer, props, {
      default: function _default() {
        return [(_e = (_d = _this.$slots).default) === null || _e === void 0 ? void 0 : _e.call(_d)];
      }
    });
  }
});
/* harmony default export */ var drawer_src = (drawer_src_Drawer);
// EXTERNAL MODULE: ./src/packages/drawer/style/index.less
var packages_drawer_style = __webpack_require__("c426");

// CONCATENATED MODULE: ./src/packages/drawer/style/index.tsx


// CONCATENATED MODULE: ./src/packages/drawer/index.ts



drawer_src.install = function (Vue) {
  Vue.component('MDrawer', drawer_src);
};

/* harmony default export */ var packages_drawer = (drawer_src);
// CONCATENATED MODULE: ./src/packages/flex/src/flex.tsx


function flex_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





/* harmony default export */ var flex = (Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  Item: null,
  name: 'Flex',
  props: {
    alignContent: {
      type: String
    },
    prefixCls: {
      type: String,
      default: 'am-flexbox'
    },
    role: {
      type: String
    },
    direction: {
      type: String
    },
    wrap: {
      type: String
    },
    justify: {
      type: String
    },
    align: {
      type: String,
      default: 'center'
    },
    disabled: {
      type: Boolean
    }
  },
  render: function render() {
    var _classnames;

    var _a, _b;

    var _c = this,
        direction = _c.direction,
        wrap = _c.wrap,
        justify = _c.justify,
        align = _c.align,
        alignContent = _c.alignContent,
        prefixCls = _c.prefixCls,
        restProps = tslib_es6_rest(_c, ["direction", "wrap", "justify", "align", "alignContent", "prefixCls"]);

    var wrapCls = classnames_default()(prefixCls, (_classnames = {}, flex_defineProperty(_classnames, "".concat(prefixCls, "-dir-row"), direction === 'row'), flex_defineProperty(_classnames, "".concat(prefixCls, "-dir-row-reverse"), direction === 'row-reverse'), flex_defineProperty(_classnames, "".concat(prefixCls, "-dir-column"), direction === 'column'), flex_defineProperty(_classnames, "".concat(prefixCls, "-dir-column-reverse"), direction === 'column-reverse'), flex_defineProperty(_classnames, "".concat(prefixCls, "-nowrap"), wrap === 'nowrap'), flex_defineProperty(_classnames, "".concat(prefixCls, "-wrap"), wrap === 'wrap'), flex_defineProperty(_classnames, "".concat(prefixCls, "-wrap-reverse"), wrap === 'wrap-reverse'), flex_defineProperty(_classnames, "".concat(prefixCls, "-justify-start"), justify === 'start'), flex_defineProperty(_classnames, "".concat(prefixCls, "-justify-end"), justify === 'end'), flex_defineProperty(_classnames, "".concat(prefixCls, "-justify-center"), justify === 'center'), flex_defineProperty(_classnames, "".concat(prefixCls, "-justify-between"), justify === 'between'), flex_defineProperty(_classnames, "".concat(prefixCls, "-justify-around"), justify === 'around'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-start"), align === 'start'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-center"), align === 'center'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-end"), align === 'end'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-baseline"), align === 'baseline'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-stretch"), align === 'stretch'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-content-start"), alignContent === 'start'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-content-end"), alignContent === 'end'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-content-center"), alignContent === 'center'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-content-between"), alignContent === 'between'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-content-around"), alignContent === 'around'), flex_defineProperty(_classnames, "".concat(prefixCls, "-align-content-stretch"), alignContent === 'stretch'), _classnames));
    var props = filterHTMLAttrs(Object.assign(Object.assign({}, restProps), this.$attrs));
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])(props, {
      "class": wrapCls
    }), [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);
  }
}));
// CONCATENATED MODULE: ./src/packages/flex/src/flex-item.tsx





/* harmony default export */ var flex_item = (Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'FlexItem',
  props: {
    disabled: {
      type: Boolean,
      default: false
    },
    prefixCls: {
      type: String,
      default: 'am-flexbox'
    }
  },
  render: function render() {
    var _a, _b;

    var _c = this,
        prefixCls = _c.prefixCls,
        restProps = tslib_es6_rest(_c, ["prefixCls"]);

    var wrapCls = classnames_default()("".concat(prefixCls, "-item"));
    var props = filterHTMLAttrs(Object.assign(Object.assign({}, restProps), this.$attrs));
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": wrapCls
    }, props), [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);
  }
}));
// CONCATENATED MODULE: ./src/packages/flex/src/index.ts


flex.Item = flex_item;
/* harmony default export */ var flex_src = (flex);
// CONCATENATED MODULE: ./src/packages/flex/index.ts

var flex_Plugin = flex_src;

flex_Plugin.install = function (Vue) {
  Vue.component('MFlex', flex_src);
  Vue.component('MFlexItem', flex_src.Item);
};

/* harmony default export */ var packages_flex = (flex_Plugin);
// CONCATENATED MODULE: ./src/packages/grid/src/index.tsx


function grid_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function grid_src_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { grid_src_typeof = function _typeof(obj) { return typeof obj; }; } else { grid_src_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return grid_src_typeof(obj); }









function grid_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var grid_src = (Object(external_Vue_["defineComponent"])({
  name: 'Grid',
  props: {
    /**
     * 宫格数据列表
     */
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },

    /**
     * 是否有边框
     */
    bordered: {
      type: Boolean,
      default: true
    },

    /**
     * 列数
     */
    cols: {
      type: Number,
      default: 4
    },
    carousel: {
      type: Boolean,
      default: false
    },
    carouselMaxRow: {
      type: Number,
      default: 2
    },
    prefixCls: {
      type: String,
      default: 'am-grid'
    },
    square: {
      type: Boolean,
      default: true
    },
    activeClassName: {
      type: String
    },
    activeStyle: {},
    itemStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var initialSlideWidth = Object(external_Vue_["ref"])(0);

    var renderCarousel = function renderCarousel(rowsArr, pageCount, rowCount) {
      var carouselMaxRow = props.carouselMaxRow;
      var pagesArr = [];

      for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {
        var pageRows = [];

        for (var ii = 0; ii < carouselMaxRow; ii++) {
          var rowIndex = pageIndex * carouselMaxRow + ii;

          if (rowIndex < rowCount) {
            pageRows.push(rowsArr[rowIndex]);
          } else {
            // 空节点为了确保末尾页的最后未到底的行有底线(样式中last-child会没线)
            pageRows.push(Object(external_Vue_["createVNode"])("div", {
              "key": "gridline-".concat(rowIndex)
            }, null));
          }
        }

        pagesArr.push(Object(external_Vue_["createVNode"])("div", {
          "key": "pageitem-".concat(pageIndex),
          "class": "".concat(props.prefixCls, "-carousel-page")
        }, [pageRows]));
      }

      return pagesArr;
    };

    var renderItem = function renderItem(dataItem, index, columnNum) {
      var itemEl = null;

      if (dataItem) {
        var icon = dataItem.icon,
            text = dataItem.text;
        itemEl = Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-item-inner-content column-num-").concat(columnNum)
        }, [renderIcon(icon, props.prefixCls), Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(props.prefixCls, "-text")
        }, [text])]);
      }

      return Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(props.prefixCls, "-item-content")
      }, [itemEl]);
    };

    var getRows = function getRows(rowCount, dataLength) {
      var cols = props.cols,
          prefixCls = props.prefixCls,
          activeStyle = props.activeStyle,
          activeClassName = props.activeClassName,
          itemStyle = props.itemStyle;
      var rowsArr = [];
      var rowWidth = "".concat(100 / cols, "%");
      var colStyle = Object.assign({
        width: rowWidth
      }, itemStyle);

      for (var i = 0; i < rowCount; i++) {
        var rowArr = [];

        var _loop = function _loop(j) {
          var dataIndex = i * cols + j;
          var itemEl = void 0;

          if (dataIndex < dataLength) {
            var _slot;

            var el = props.data && props.data[dataIndex];
            var TouchFeedback2 = feedback;
            itemEl = Object(external_Vue_["createVNode"])(TouchFeedback2, {
              "key": "griditem-".concat(dataIndex),
              "activeClassName": activeClassName ? activeClassName : "".concat(prefixCls, "-item-active"),
              "activeStyle": activeStyle
            }, {
              default: function _default() {
                return [Object(external_Vue_["createVNode"])(packages_flex.Item, {
                  "class": "".concat(prefixCls, "-item"),
                  "nativeOn": {
                    click: function click() {
                      emit('click', el, dataIndex);
                    }
                  },
                  "style": colStyle
                }, grid_src_isSlot(_slot = renderItem(el, dataIndex, cols)) ? _slot : {
                  default: function _default() {
                    return [_slot];
                  }
                })];
              }
            });
          } else {
            itemEl = Object(external_Vue_["createVNode"])(packages_flex.Item, {
              "key": "griditem-".concat(dataIndex),
              "class": "".concat(prefixCls, "-item ").concat(prefixCls, "-null-item"),
              "style": colStyle
            }, null);
          }

          rowArr.push(itemEl);
        };

        for (var j = 0; j < cols; j++) {
          _loop(j);
        }

        rowsArr.push(Object(external_Vue_["createVNode"])(packages_flex, {
          "justify": "center",
          "align": "stretch",
          "key": "gridline-".concat(i)
        }, grid_src_isSlot(rowArr) ? rowArr : {
          default: function _default() {
            return [rowArr];
          }
        }));
      }

      return rowsArr;
    };

    var renderIcon = function renderIcon(icon, prefixCls) {
      if (typeof icon === 'string') {
        if (icon.startsWith('http://') || icon.startsWith('https://')) {
          return Object(external_Vue_["createVNode"])("img", {
            "class": "".concat(prefixCls, "-icon"),
            "src": icon,
            "alt": ""
          }, null);
        } else {
          return Object(external_Vue_["createVNode"])(packages_icon, {
            "type": icon,
            "size": "lg"
          }, null);
        }
      } else if (grid_src_typeof(icon) === 'object') {
        if (Object(external_Vue_["isVNode"])(icon)) {
          return icon;
        }

        return Object(external_Vue_["createVNode"])(packages_icon, {
          icon: icon
        }, null);
      }
    };

    Object(external_Vue_["onMounted"])(function () {
      initialSlideWidth.value = document.documentElement.clientWidth;
    });
    return {
      renderItem: renderItem,
      initialSlideWidth: initialSlideWidth,
      getRows: getRows,
      renderCarousel: renderCarousel
    };
  },
  render: function render() {
    var _classnames;

    var _a = this,
        prefixCls = _a.prefixCls,
        data = _a.data,
        bordered = _a.bordered,
        carousel = _a.carousel,
        square = _a.square,
        activeStyle = _a.activeStyle,
        cols = _a.cols,
        carouselMaxRow = _a.carouselMaxRow,
        renderItem = _a.renderItem,
        activeClassName = _a.activeClassName,
        restPropsForCarousel = tslib_es6_rest(_a, ["prefixCls", "data", "bordered", "carousel", "square", "activeStyle", "cols", "carouselMaxRow", "renderItem", "activeClassName"]);

    var initialSlideWidth = this.initialSlideWidth;
    var dataLength = data && data.length || 0;
    var rowCount = Math.ceil(dataLength / cols);
    var rowsArr;
    var renderEl;

    if (carousel) {
      var _slot2;

      if (initialSlideWidth < 0) {
        // carousel  server render. because carousel dependes on document
        return null;
      }

      if (rowCount % carouselMaxRow !== 0) {
        rowCount = rowCount + carouselMaxRow - rowCount % carouselMaxRow;
      }

      var pageCount = Math.ceil(rowCount / carouselMaxRow);
      rowsArr = this.getRows(rowCount, dataLength);
      var carouselProps = {};

      if (pageCount <= 1) {
        carouselProps = {
          dots: false,
          dragging: false,
          swiping: false
        };
      }

      renderEl = Object(external_Vue_["createVNode"])(packages_carousel, Object(external_Vue_["mergeProps"])({
        "initialSlideWidth": initialSlideWidth
      }, restPropsForCarousel, carouselProps), grid_src_isSlot(_slot2 = this.renderCarousel(rowsArr, pageCount, rowCount)) ? _slot2 : {
        default: function _default() {
          return [_slot2];
        }
      });
    } else {
      renderEl = this.getRows(rowCount, dataLength);
    }

    var cls = classnames_default()(prefixCls, (_classnames = {}, grid_src_defineProperty(_classnames, "".concat(prefixCls, "-square"), square), grid_src_defineProperty(_classnames, "".concat(prefixCls, "-line"), bordered), grid_src_defineProperty(_classnames, "".concat(prefixCls, "-carousel"), carousel), _classnames));
    return Object(external_Vue_["createVNode"])("div", {
      "class": cls
    }, [renderEl]);
  }
}));
// EXTERNAL MODULE: ./src/packages/flex/style/index.less
var flex_style = __webpack_require__("5f3d");

// CONCATENATED MODULE: ./src/packages/flex/style/index.tsx


// EXTERNAL MODULE: ./src/packages/grid/style/index.less
var grid_style = __webpack_require__("353c");

// CONCATENATED MODULE: ./src/packages/grid/style/index.tsx




// CONCATENATED MODULE: ./src/packages/grid/index.ts


var grid_Plugin = grid_src;

grid_Plugin.install = function (Vue) {
  Vue.component('MGrid', grid_src);
};

/* harmony default export */ var grid = (grid_Plugin);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist??ref--0-1!./src/packages/image-picker/src/html.vue?vue&type=template&id=ee3f16ae

function htmlvue_type_template_id_ee3f16ae_render(_ctx, _cache, $props, $setup, $data, $options) {
  return Object(external_Vue_["openBlock"])(), Object(external_Vue_["createBlock"])("div", {
    class: "svg-container",
    style: {
      "font-size": "10px"
    },
    innerHTML: _ctx.html
  }, null, 8, ["innerHTML"]);
}
// CONCATENATED MODULE: ./src/packages/image-picker/src/html.vue?vue&type=template&id=ee3f16ae

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--13-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist??ref--0-1!./src/packages/image-picker/src/html.vue?vue&type=script&lang=ts

/* harmony default export */ var htmlvue_type_script_lang_ts = (Object(external_Vue_["defineComponent"])({
  name: 'SrcHtml',
  props: {
    html: String,
    onClick: {}
  }
}));
// CONCATENATED MODULE: ./src/packages/image-picker/src/html.vue?vue&type=script&lang=ts
 
// EXTERNAL MODULE: ./src/packages/image-picker/src/html.vue?vue&type=style&index=0&id=ee3f16ae&lang=less
var htmlvue_type_style_index_0_id_ee3f16ae_lang_less = __webpack_require__("441e");

// CONCATENATED MODULE: ./src/packages/image-picker/src/html.vue





htmlvue_type_script_lang_ts.render = htmlvue_type_template_id_ee3f16ae_render

/* harmony default export */ var html = (htmlvue_type_script_lang_ts);
// CONCATENATED MODULE: ./src/packages/image-picker/src/index.tsx


function src_toConsumableArray(arr) { return src_arrayWithoutHoles(arr) || src_iterableToArray(arr) || src_unsupportedIterableToArray(arr) || src_nonIterableSpread(); }

function src_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function src_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return src_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return src_arrayLikeToArray(o, minLen); }

function src_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function src_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return src_arrayLikeToArray(arr); }

function src_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }







function image_picker_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var word = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M64 439.3h520v520H64v-520z m50 470h420v-420H114v420z m843-538.1V940H624.1v-50H907V391.9l-20.7-20.7H649.8V134.7L629.1 114H297v287.6h-50V64h402.8L957 371.2z m-120.7-50L699.8 184.7v136.5h136.5zM377.8 842.9h-53.6l-5.8-188.4-93.9 188.4h-54.7l-9.7-257.7H212l2.3 180.4 88.4-180.4h57.5l6 178.4 84.9-178.4h51.3L377.8 842.9z\" fill=\"#8a8a8a\" ></path></svg>";
var pdf = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M977 371.2V940h-82.9v-50H927V391.9l-20.7-20.7H669.8V134.7L649.1 114H317v271.6h-50V64h402.8L977 371.2z m-120.7-50L719.8 184.7v136.5h136.5z m-76.8 161.6v422.3H117.2V482.8h662.3m48.9-48.8h-760v520h760V434z m-670 380V574h80c30.3 0 50.1 1.2 59.3 3.6 14.2 3.6 26 11.4 35.6 23.5 9.5 12.1 14.3 27.6 14.3 46.7 0 14.7-2.8 27.1-8.3 37.2-5.5 10-12.5 17.9-21 23.7-8.5 5.7-17.1 9.5-25.9 11.4-11.9 2.3-29.1 3.4-51.7 3.4h-32.5V814h-49.8z m49.9-199.4v68.1h27.3c19.7 0 32.8-1.3 39.4-3.8 6.6-2.5 11.8-6.4 15.6-11.8 3.8-5.3 5.6-11.6 5.6-18.7 0-8.7-2.6-15.9-7.9-21.6-5.3-5.7-12-9.2-20-10.6-6-1.1-17.9-1.6-35.9-1.6h-24.1zM353.9 574H445c20.6 0 36.2 1.5 47 4.6 14.5 4.1 26.9 11.5 37.2 22.1 10.3 10.6 18.2 23.5 23.6 38.9 5.4 15.3 8.1 34.2 8.1 56.7 0 19.8-2.5 36.8-7.6 51.1-6.2 17.5-15 31.6-26.5 42.4-8.6 8.2-20.3 14.6-35 19.2-11 3.4-25.7 5.1-44.1 5.1h-93.8V574z m49.8 40.6v159H441c13.9 0 24-0.8 30.2-2.3 8.1-2 14.8-5.3 20.1-10 5.3-4.7 9.7-12.4 13.1-23.2 3.4-10.7 5.1-25.4 5.1-44s-1.7-32.8-5.1-42.7c-3.4-9.9-8.1-17.7-14.2-23.2-6.1-5.6-13.8-9.3-23.1-11.3-7-1.5-20.6-2.3-40.9-2.3h-22.5zM569.1 814V574h169.3v40.6H618.9v56.8H722V712H618.9v102h-49.8z\" fill=\"#8a8a8a\"></path></svg>";
var txt = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M724.5 298.8H841L724.5 182.3v116.5z m159.4-13.6c17.3 17.3 26.9 40.7 26.9 65.1v507.5c0 29.3-24 53.2-53.2 53.2H325.2c-29.3 0-53.2-24-53.2-53.2v-39.9h39.9v39.9c0 7.2 6.1 13.3 13.3 13.3h532.3c7.2 0 13.3-6.1 13.3-13.3V350.3c0-3.9-0.5-7.8-1.4-11.5H684.6v-185c-3.8-0.9-7.6-1.3-11.5-1.4H325.2c-7.2 0-13.3 6.1-13.3 13.3v119.8H272V165.7c0-29.3 24-53.2 53.2-53.2H673c24.4 0 47.8 9.7 65.1 27l145.8 145.7zM631.3 478.5v-39.9h186.3v39.9H631.3z m0 119.8v-39.9h186.3v39.9H631.3z m0 119.8v-39.9h186.3v39.9H631.3z m-519 59.8V325.4h452.5v452.5H112.3z m343-328.8v-39.9H221.8v39.9h93.4v245.1h46.7V449.1h93.4z m0 0\" fill=\"#8a8a8a\" ></path></svg>";
var excel = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M476.7 550.4v368h-368v-368h368m40-40h-448v448h448v-448zM161.4 877.6l110.7-149.2-97.7-137.1h45.1l52 73.4c10.8 15.2 18.5 27 23 35.2 6.4-10.4 13.9-21.3 22.7-32.6l57.6-76H416l-100.6 135 108.4 151.4H377l-72-102.3c-4-5.9-8.2-12.2-12.5-19.1-6.4 10.4-10.9 17.6-13.7 21.5l-71.9 99.8h-45.5z m633.9-349.4H580.6v40h214.8v-40z m0 144.4H580.6v40h214.8v-40zM683.1 64H215.3v397h40V104h411.2l16.6 16.6v215.6h215.6l16.6 16.6V920H580.6v40h374.8V336.2L683.1 64z m40 232.2V160.6l135.6 135.6H723.1z m72.2 87.6h-420v40h420v-40z\" fill=\"#8a8a8a\" ></path></svg>";
var file = "<svg class=\"icon\"viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M859.428571 146.285714v512a18.285714 18.285714 0 0 1-5.339428 12.946286l-219.428572 219.428571A18.285714 18.285714 0 0 1 621.714286 896H182.857143a18.285714 18.285714 0 0 1-18.285714-18.285714V146.285714a18.285714 18.285714 0 0 1 18.285714-18.285714h658.285714a18.285714 18.285714 0 0 1 18.285714 18.285714z m-36.571428 18.285715h-621.714286v694.857142h413.001143l208.713143-208.713142V164.571429zM365.714286 347.428571a18.285714 18.285714 0 0 1 0-36.571428h292.571428a18.285714 18.285714 0 1 1 0 36.571428h-292.571428z m0 146.285715a18.285714 18.285714 0 1 1 0-36.571429h292.571428a18.285714 18.285714 0 1 1 0 36.571429h-292.571428z m274.285714 182.857143V768a18.285714 18.285714 0 1 1-36.571429 0v-109.714286a18.285714 18.285714 0 0 1 18.285715-18.285714h109.714285a18.285714 18.285714 0 1 1 0 36.571429h-91.428571z\" fill=\"#8a8a8a\"></path></svg>";

function getIcon(image) {
  if (image.file) {
    var type = image.file.type;

    if (type) {
      if (type.endsWith('.document') || type.endsWith('msword')) {
        return word;
      } else if (type.endsWith('.sheet') || type.endsWith('excel')) {
        return excel;
      } else if (type === 'text/plain') {
        return txt;
      } else if (type.endsWith('pdf')) {
        return pdf;
      } else {
        return file;
      }
    }

    return file;
  } else {
    var u = new URL(image.url);

    if (u.pathname.endsWith('.pdf')) {
      return pdf;
    } else if (u.pathname.endsWith('.doc') || u.pathname.endsWith('.docs')) {
      return word;
    } else if (u.pathname.endsWith('.xls') || u.pathname.endsWith('.xlsx')) {
      return excel;
    } else if (u.pathname.endsWith('.txt')) {
      return txt;
    } else {
      return file;
    }
  }
}

function isImage(image) {
  if (image.file) {
    return image.file.type.startsWith('image/');
  } else {
    return ['.png', '.jpg', '.jpeg', '.bmp'].some(function (it) {
      return image.url.includes(it);
    });
  }
}

/* harmony default export */ var image_picker_src = (Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'ImagePicker',
  props: {
    onChange: {},
    onImageClick: {},
    onFail: {},
    prefixCls: {
      type: String,
      default: 'am-image-picker'
    },
    value: {
      default: function _default() {
        return [];
      }
    },
    selectable: {
      type: Boolean,
      default: true
    },
    multiple: {
      type: Boolean,
      default: false
    },
    accept: {
      type: String,
      default: '*'
    },
    length: {
      type: Number,
      default: 4
    },
    maxLength: {
      type: Number,
      default: 8
    },

    /**
     * 允许上传的最大字节数
     */
    maxSize: {
      type: Number,
      default: 0
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var fileSelectorInputRef = Object(external_Vue_["ref"])(null);
    var fileSelectorInput = Object(external_Vue_["computed"])(function () {
      return fileSelectorInputRef.value;
    });
    var showSelector = Object(external_Vue_["computed"])(function () {
      return props.selectable && (!props.value || props.value.length < props.length);
    });

    var getOrientation = function getOrientation(file, callback) {
      var reader = new FileReader();

      reader.onload = function (e) {
        var view = new DataView(e.target.result);

        if (view.getUint16(0, false) !== 0xffd8) {
          return callback(-2);
        }

        var length = view.byteLength;
        var offset = 2;

        while (offset < length) {
          var marker = view.getUint16(offset, false);
          offset += 2;

          if (marker === 0xffe1) {
            var tmp = view.getUint32(offset += 2, false);

            if (tmp !== 0x45786966) {
              return callback(-1);
            }

            var little = view.getUint16(offset += 6, false) === 0x4949;
            offset += view.getUint32(offset + 4, little);
            var tags = view.getUint16(offset, little);
            offset += 2;

            for (var i = 0; i < tags; i++) {
              if (view.getUint16(offset + i * 12, little) === 0x0112) {
                return callback(view.getUint16(offset + i * 12 + 8, little));
              }
            }
          } else if ((marker & 0xff00) !== 0xff00) {
            break;
          } else {
            offset += view.getUint16(offset, false);
          }
        }

        return callback(-1);
      };

      reader.readAsArrayBuffer(file.slice(0, 64 * 1024));
    };

    var getRotation = function getRotation() {
      var orientation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var imgRotation = 0;

      switch (orientation) {
        case 3:
          imgRotation = 180;
          break;

        case 6:
          imgRotation = 90;
          break;

        case 8:
          imgRotation = 270;
          break;

        default:
      }

      return imgRotation;
    };

    var removeImage = function removeImage(index) {
      var newImages = [];
      var value = props.value || [];
      value.forEach(function (image, idx) {
        if (index !== idx) {
          newImages.push(image);
        }
      });
      emit('update:value', newImages, 'remove', index);
      emit('change', newImages, 'remove', index);
    };

    var addImage = function addImage(imgItem) {
      var newImages = props.value ? src_toConsumableArray(props.value) : [];
      imgItem.forEach(function (img) {
        if (newImages.length < props.maxLength) {
          newImages.push(img);
        }
      });
      emit('update:value', newImages, 'add');
      emit('change', newImages, 'add');
    };

    var onImageClick = function onImageClick(image, index) {
      emit('click', image, index);
    };

    var onFileChange = function onFileChange(e) {
      if (e && e.target && e.target.files && e.target.files.length) {
        var files = e.target.files;
        var imageParsePromiseList = [];

        for (var i = 0; i < files.length; i++) {
          imageParsePromiseList.push(parseFile(files.item(i), i));
        }

        Promise.all(imageParsePromiseList).then(function (imageItems) {
          return addImage(imageItems);
        }).catch(function (error) {
          emit('fail', error);
        });
      }

      if (e && e.target) {
        e.target.value = '';
      }
    };

    var parseFile = function parseFile(file, index) {
      return new Promise(function (resolve, reject) {
        if (props.maxSize && file.size > props.maxSize) {
          reject('文件大小超出限制');
        } else {
          var reader = new FileReader();

          reader.onload = function (e) {
            var dataURL = e.target.result;

            if (!dataURL) {
              reject("Fail to get the ".concat(index, " image"));
              return;
            }

            var orientation = 1;
            getOrientation(file, function (res) {
              // -2: not jpeg , -1: not defined
              if (res > 0) {
                orientation = res;
              }

              resolve({
                url: dataURL,
                orientation: orientation,
                file: file
              });
            });
          };

          reader.readAsDataURL(file);
        }
      });
    };

    var localIsImage = function localIsImage(image) {
      return isImage(image) || props.accept && props.accept.includes('image/');
    };

    return {
      fileSelectorInput: fileSelectorInput,
      showSelector: showSelector,
      getOrientation: getOrientation,
      getRotation: getRotation,
      removeImage: removeImage,
      addImage: addImage,
      onImageClick: onImageClick,
      onFileChange: onFileChange,
      parseFile: parseFile,
      localIsImage: localIsImage
    };
  },
  render: function render() {
    var _this = this;

    var prefixCls = this.prefixCls,
        _this$value = this.value,
        value = _this$value === void 0 ? [] : _this$value,
        selectable = this.selectable,
        multiple = this.multiple,
        accept = this.accept;
    var imgItemList = [];
    var count = parseInt('' + this.length, 10);

    if (count <= 0) {
      count = 4;
    }

    var wrapCls = classnames_default()("".concat(prefixCls));
    value.forEach(function (image, index) {
      if (index === _this.maxLength) {
        return;
      }

      var imgStyle = {
        backgroundImage: _this.localIsImage(image) ? "url(".concat(image.url, ")") : 'none',
        transform: "rotate(".concat(_this.getRotation(image.orientation), "deg)")
      };
      var itemStyle = {};
      imgItemList.push(Object(external_Vue_["createVNode"])(packages_flex.Item, {
        "key": "item-".concat(index),
        "style": itemStyle
      }, {
        default: function _default() {
          return [Object(external_Vue_["createVNode"])("div", {
            "key": index,
            "class": "".concat(prefixCls, "-item")
          }, [Object(external_Vue_["createVNode"])("div", {
            "class": "".concat(prefixCls, "-item-remove"),
            "role": "button",
            "aria-label": "Click and Remove this image",
            "onClick": function onClick() {
              _this.removeImage(index);
            }
          }, null), // @ts-ignore
          Object(external_Vue_["createVNode"])(html, {
            "class": "".concat(prefixCls, "-item-content"),
            "aria-label": "Image can be clicked",
            "onClick": function onClick() {
              _this.onImageClick(image, index);
            },
            "html": imgStyle.backgroundImage === 'none' ? getIcon(image) : null,
            "style": imgStyle
          }, null)])];
        }
      }));
    });

    var selectEl = Object(external_Vue_["createVNode"])(packages_flex.Item, {
      "key": "select"
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(feedback, {
          "activeClassName": "".concat(prefixCls, "-upload-btn-active")
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("div", {
              "class": "".concat(prefixCls, "-item ").concat(prefixCls, "-upload-btn"),
              "role": "button",
              "aria-label": "选择并添加图片"
            }, [Object(external_Vue_["createVNode"])("input", {
              "ref": "fileSelectorInput",
              "type": "file",
              "accept": accept,
              "onChange": function onChange(v) {
                _this.onFileChange(v);
              },
              "multiple": multiple
            }, null)])];
          }
        })];
      }
    });

    var allEl = selectable && imgItemList.length < this.maxLength ? imgItemList.concat([selectEl]) : imgItemList;
    var length = allEl.length;

    if (length !== 0 && length % count !== 0) {
      var blankCount = count - length % count;
      var fillBlankEl = [];

      for (var i = 0; i < blankCount; i++) {
        fillBlankEl.push(Object(external_Vue_["createVNode"])(packages_flex.Item, {
          "key": "blank-".concat(i)
        }, null));
      }

      allEl = allEl.concat(fillBlankEl);
    }

    var flexEl = [];

    for (var _i = 0; _i < allEl.length / count; _i++) {
      var rowEl = allEl.slice(_i * count, _i * count + count);
      flexEl.push(rowEl);
    }

    var renderEl = flexEl.map(function (item, index) {
      return Object(external_Vue_["createVNode"])(packages_flex, {
        "key": "flex-".concat(index)
      }, image_picker_src_isSlot(item) ? item : {
        default: function _default() {
          return [item];
        }
      });
    });
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-list"),
      "role": "group"
    }, [renderEl])]);
  }
}));
// EXTERNAL MODULE: ./src/packages/image-picker/style/index.less
var image_picker_style = __webpack_require__("d409");

// CONCATENATED MODULE: ./src/packages/image-picker/style/index.ts



// CONCATENATED MODULE: ./src/packages/image-picker/index.ts



image_picker_src.install = function (Vue) {
  Vue.component('MImagePicker', image_picker_src);
};

/* harmony default export */ var image_picker = (image_picker_src);
// CONCATENATED MODULE: ./src/packages/utils/class.tsx
function hasClass(node, className) {
  if (node.classList) {
    return node.classList.contains(className);
  }

  var originClass = node.className;
  return " ".concat(originClass, " ").indexOf(" ".concat(className, " ")) > -1;
}
function addClass(node, className) {
  if (node.classList) {
    node.classList.add(className);
  } else {
    if (!hasClass(node, className)) {
      node.className = "".concat(node.className, " ").concat(className);
    }
  }
}
function removeClass(node, className) {
  if (node.classList) {
    node.classList.remove(className);
  } else {
    if (hasClass(node, className)) {
      var originClass = node.className;
      node.className = " ".concat(originClass, " ").replace(" ".concat(className, " "), '');
    }
  }
}
// CONCATENATED MODULE: ./src/packages/utils/exenv.tsx
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
var IS_IOS = canUseDOM && /iphone|ipad|ipod/i.test(window.navigator.userAgent);
// CONCATENATED MODULE: ./src/packages/input/src/custom-keyboard.tsx







function custom_keyboard_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var KeyboardItem = Object(external_Vue_["defineComponent"])({
  name: 'KeyboardItem',
  props: {
    value: {
      type: [String, Number]
    },
    label: String,
    type: {
      type: String
    },
    prefixCls: {
      default: 'am-number-keyboard'
    },
    iconOnly: {},
    disabled: {
      type: Boolean,
      default: false
    }
  },
  render: function render() {
    var _this = this;

    var _a, _b, _c, _d;

    var _e = this,
        prefixCls = _e.prefixCls,
        disabled = _e.disabled,
        label = _e.label,
        iconOnly = _e.iconOnly,
        restProps = tslib_es6_rest(_e, ["prefixCls", "disabled", "label", "iconOnly"]);

    var value = (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a);
    var type = this.type;

    if (type === 'keyboard-delete') {
      value = 'delete';
    } else if (type === 'keyboard-hide') {
      value = 'hide';
    } else if (type === 'keyboard-confirm') {
      value = 'confirm';
    }

    var wrapCls = classnames_default()("".concat(prefixCls, "-item"));
    return Object(external_Vue_["createVNode"])(feedback, {
      "class": type,
      "activeClassName": "".concat(prefixCls, "-item-active")
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("td", Object(external_Vue_["mergeProps"])({
          "ref": "td",
          "onClick": function onClick(e) {
            _this.$emit('click', e, _this.value);
          },
          "class": wrapCls
        }, restProps), [(_d = (_c = _this.$slots).default) === null || _d === void 0 ? void 0 : _d.call(_c), iconOnly && Object(external_Vue_["createVNode"])("i", {
          "class": "sr-only"
        }, [label])])];
      }
    });
  }
});
/* harmony default export */ var custom_keyboard = (Object(external_Vue_["defineComponent"])({
  name: 'CustomKeyboard',
  props: {
    onClick: {},
    prefixCls: {},
    confirmLabel: {},
    backspaceLabel: {
      type: String
    },
    cancelKeyboardLabel: {
      type: String
    },
    wrapProps: {},
    header: {}
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var linkedInput = Object(external_Vue_["ref"])(null);
    var confirmDisabled = Object(external_Vue_["ref"])(null);
    var confirmKeyboardItem = Object(external_Vue_["ref"])(null);

    var onKeyboardClick = function onKeyboardClick(e) {
      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      e.stopImmediatePropagation();

      if (value === 'confirm' && confirmDisabled.value) {
        return null;
      } else {
        if (linkedInput.value) {
          linkedInput.value.onKeyboardClick(value);
        }
      }
    };

    var renderKeyboardItem = function renderKeyboardItem(item, index) {
      var KeyboardItem2 = KeyboardItem;
      return Object(external_Vue_["createVNode"])(KeyboardItem2, Object(external_Vue_["mergeProps"])({
        value: item
      }, {
        "onClick": onKeyboardClick,
        "key": "item-".concat(item, "-").concat(index)
      }), custom_keyboard_isSlot(item) ? item : {
        default: function _default() {
          return [item];
        }
      });
    };

    var getAriaAttr = function getAriaAttr(label) {
      if (IS_IOS) {
        return {
          label: label,
          iconOnly: true
        };
      } else {
        return {
          role: 'button',
          'aria-label': label
        };
      }
    };

    return {
      linkedInput: linkedInput,
      confirmDisabled: confirmDisabled,
      confirmKeyboardItem: confirmKeyboardItem,
      onKeyboardClick: onKeyboardClick,
      renderKeyboardItem: renderKeyboardItem,
      getAriaAttr: getAriaAttr
    };
  },
  render: function render() {
    var _this2 = this;

    var prefixCls = this.prefixCls,
        confirmLabel = this.confirmLabel,
        backspaceLabel = this.backspaceLabel,
        cancelKeyboardLabel = this.cancelKeyboardLabel,
        wrapProps = this.wrapProps,
        header = this.header;
    var wrapperCls = classnames_default()("".concat(prefixCls, "-wrapper"), "".concat(prefixCls, "-wrapper-hide"));
    var KeyboardItem2 = KeyboardItem;
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": wrapperCls,
      "ref": "antmKeyboard"
    }, wrapProps), [header, Object(external_Vue_["createVNode"])("table", null, [Object(external_Vue_["createVNode"])("tbody", null, [Object(external_Vue_["createVNode"])("tr", null, [['1', '2', '3'].map(function (item, index) {
      return (// tslint:disable-next-line:jsx-no-multiline-js
        _this2.renderKeyboardItem(item, index)
      );
    }), Object(external_Vue_["createVNode"])(KeyboardItem2, Object.assign(Object.assign({}, this.getAriaAttr(backspaceLabel)), {
      type: 'keyboard-delete',
      rowSpan: 2,
      onClick: function onClick(e) {
        return _this2.onKeyboardClick(e, 'delete');
      }
    }), null)]), Object(external_Vue_["createVNode"])("tr", null, [['4', '5', '6'].map(function (item, index) {
      return (// tslint:disable-next-line:jsx-no-multiline-js
        _this2.renderKeyboardItem(item, index)
      );
    })]), Object(external_Vue_["createVNode"])("tr", null, [['7', '8', '9'].map(function (item, index) {
      return (// tslint:disable-next-line:jsx-no-multiline-js
        _this2.renderKeyboardItem(item, index)
      );
    }), Object(external_Vue_["createVNode"])(KeyboardItem2, Object(external_Vue_["mergeProps"])({
      type: 'keyboard-confirm',
      rowSpan: 2,
      onClick: function onClick(e) {
        return _this2.onKeyboardClick(e, 'confirm');
      }
    }, {
      "tdRef": "td"
    }), custom_keyboard_isSlot(confirmLabel) ? confirmLabel : {
      default: function _default() {
        return [confirmLabel];
      }
    })]), Object(external_Vue_["createVNode"])("tr", null, [['.', '0'].map(function (item, index) {
      return (// tslint:disable-next-line:jsx-no-multiline-js
        _this2.renderKeyboardItem(item, index)
      );
    }), Object(external_Vue_["createVNode"])(KeyboardItem2, Object.assign(Object.assign({}, this.getAriaAttr(cancelKeyboardLabel)), {
      type: 'keyboard-hide',
      onClick: function onClick(e) {
        return _this2.onKeyboardClick(e, 'hide');
      }
    }), null)])])])]);
  }
}));
// CONCATENATED MODULE: ./src/packages/input/src/custom-input.tsx






function custom_input_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var instanceArr = [];
var customNumberKeyboard = null;
/* harmony default export */ var custom_input = (Object(external_Vue_["defineComponent"])({
  name: 'MNumberInput',
  props: {
    onConfirm: {},
    onChange: {},
    onFocus: {},
    onBlur: {},
    placeholder: {
      default: ''
    },
    disabled: {
      type: Boolean,
      default: false
    },
    editable: {
      type: Boolean,
      default: true
    },
    moneyKeyboardAlign: {},
    moneyKeyboardWrapProps: {},
    moneyKeyboardHeader: {},
    value: {
      type: [String, Number]
    },
    prefixCls: {
      default: 'am-input'
    },
    keyboardPrefixCls: {
      default: 'am-number-keyboard'
    },
    confirmLabel: {},
    backspaceLabel: {
      type: String
    },
    cancelKeyboardLabel: {
      type: String
    },
    maxLength: {
      type: Number
    },
    type: {}
  },
  watch: {
    value: function value(_value) {
      this.currentValue = _value;
    },
    focus: function focus(_focus) {
      if (_focus) {
        this.onInputFocus();
      }
    }
  },
  setup: function setup(props, _ref) {
    var _this = this;

    var emit = _ref.emit,
        slots = _ref.slots;

    var _a;

    var container = Object(external_Vue_["ref"])(null);
    var inputRef = Object(external_Vue_["ref"])(null);
    var focus = Object(external_Vue_["ref"])(false);
    var currentValue = Object(external_Vue_["ref"])(null);
    var keyboardRef = Object(external_Vue_["ref"])(null);

    var onChange = function onChange(value) {
      if (props.value === undefined) {
        currentValue.value = value.target.value;
      }

      emit('change', value);
    };

    var onConfirm = function onConfirm(value) {
      emit('confirm', value);
    };

    var addBlurListener = function addBlurListener() {
      document.addEventListener('click', doBlur, false);
    };

    var removeBlurListener = function removeBlurListener() {
      document.removeEventListener('click', doBlur, false);
    };

    var saveRef = function saveRef(el) {
      customNumberKeyboard = el;
      instanceArr.push({
        el: el,
        container: container.value
      });
    };

    var getComponent = function getComponent() {
      var confirmLabel = props.confirmLabel,
          backspaceLabel = props.backspaceLabel,
          cancelKeyboardLabel = props.cancelKeyboardLabel,
          keyboardPrefixCls = props.keyboardPrefixCls,
          moneyKeyboardWrapProps = props.moneyKeyboardWrapProps,
          moneyKeyboardHeader = props.moneyKeyboardHeader;
      return Object(external_Vue_["createVNode"])(custom_keyboard, {
        "ref": function ref(el) {
          keyboardRef.value = el;
        },
        "onClick": onKeyboardClick,
        "prefixCls": keyboardPrefixCls,
        "confirmLabel": confirmLabel,
        "backspaceLabel": backspaceLabel,
        "cancelKeyboardLabel": cancelKeyboardLabel,
        "wrapProps": moneyKeyboardWrapProps,
        "header": moneyKeyboardHeader
      }, null);
    };

    var getContainer = function getContainer() {
      var keyboardPrefixCls = props.keyboardPrefixCls;

      if (!container.value) {
        var _container = document.createElement('div');

        _container.setAttribute('id', "".concat(keyboardPrefixCls, "-container-").concat(new Date().getTime()));

        document.body.appendChild(_container);
        _container['value'] = _container;
      }

      return container.value;
    };

    var doBlur = function doBlur(ev) {
      if (ev.target !== inputRef.value) {
        onInputBlur(props.value.toString());
      }
    };

    var removeCurrentExtraKeyboard = function removeCurrentExtraKeyboard() {
      instanceArr = instanceArr.filter(function (item) {
        var el = item.el,
            container = item.container;

        if (el && container && el !== customNumberKeyboard) {
          container.parentNode.removeChild(container);
        }

        return el === customNumberKeyboard;
      });
    };

    var unLinkInput = function unLinkInput() {
      if (customNumberKeyboard && customNumberKeyboard.antmKeyboard && customNumberKeyboard.linkedInput && customNumberKeyboard.linkedInput === _this) {
        customNumberKeyboard.linkedInput = null;
        addClass(customNumberKeyboard.antmKeyboard, "".concat(props.keyboardPrefixCls, "-wrapper-hide"));
      } // for unmount


      removeBlurListener();
      removeCurrentExtraKeyboard();
    };

    var onInputBlur = function onInputBlur(value) {
      if (focus.value) {
        focus.value = false;
        emit('blur', value);
        setTimeout(function () {
          unLinkInput();
        }, 50);
      }
    };

    var onInputFocus = function onInputFocus(e) {
      emit('focus', props.value);
      focus.value = true;

      if (customNumberKeyboard) {
        customNumberKeyboard.linkedInput = _this;

        if (customNumberKeyboard.antmKeyboard) {
          removeClass(customNumberKeyboard.antmKeyboard, "".concat(props.keyboardPrefixCls, "-wrapper-hide"));
        }

        customNumberKeyboard.confirmDisabled = props.value === '';

        if (customNumberKeyboard.confirmKeyboardItem) {
          if (props.value === '') {
            addClass(customNumberKeyboard.confirmKeyboardItem, "".concat(props.keyboardPrefixCls, "-item-disabled"));
          } else {
            removeClass(customNumberKeyboard.confirmKeyboardItem, "".concat(props.keyboardPrefixCls, "-item-disabled"));
          }
        }
      }
    };

    var onKeyboardClick = function onKeyboardClick(keyboardItemValue) {
      var maxLength = props.maxLength,
          value = props.value; // tslint:disable-next-line:no-this-assignment

      var valueAfterChange; // 删除键

      if (keyboardItemValue === 'delete') {
        valueAfterChange = value.toString().substring(0, value.toString().length - 1);
        emit('change', {
          target: {
            value: valueAfterChange
          }
        }); // 确认键
      } else if (keyboardItemValue === 'confirm') {
        valueAfterChange = value;
        onChange({
          target: {
            value: valueAfterChange
          }
        });
        onInputBlur(value.toString());
        onConfirm(value); // 收起键
      } else if (keyboardItemValue === 'hide') {
        valueAfterChange = value;
        onInputBlur(valueAfterChange);
      } else {
        if (maxLength !== undefined && +maxLength >= 0 && (value + keyboardItemValue).length > maxLength) {
          valueAfterChange = (value + keyboardItemValue).substr(0, maxLength);
          onChange({
            target: {
              value: valueAfterChange
            }
          });
        } else {
          valueAfterChange = value + keyboardItemValue;
          onChange({
            target: {
              value: valueAfterChange
            }
          });
        }
      }

      if (customNumberKeyboard) {
        customNumberKeyboard.confirmDisabled = valueAfterChange === '';

        if (customNumberKeyboard.confirmKeyboardItem) {
          if (valueAfterChange === '') {
            addClass(customNumberKeyboard.confirmKeyboardItem, "".concat(props.keyboardPrefixCls, "-item-disabled"));
          } else {
            removeClass(customNumberKeyboard.confirmKeyboardItem, "".concat(props.keyboardPrefixCls, "-item-disabled"));
          }
        }
      }
    };

    var onFakeInputClick = function onFakeInputClick(e) {
      focusFunc(e);
    };

    var focusFunc = function focusFunc(e) {
      // this focus may invocked by users page button click, so this click may trigger blurEventListener at the same time
      removeBlurListener();

      if (!focus.value) {
        onInputFocus(e);
      }

      setTimeout(function () {
        addBlurListener();
      }, 50);
    };

    var renderPortal = function renderPortal() {
      var _slot;

      var props = {
        disabled: false,
        to: getContainer()
      };
      return Object(external_Vue_["createVNode"])(external_Vue_["Teleport"], props, custom_input_isSlot(_slot = getComponent()) ? _slot : {
        default: function _default() {
          return [_slot];
        }
      });
    };

    {
      currentValue.value = ((_a = props.value) === null || _a === void 0 ? void 0 : _a.toString()) || '';
    }
    Object(external_Vue_["onBeforeUnmount"])(function () {
      // focus:true unmount 不能触发 blur
      if (!focus.value) {
        emit('blur', props.value);
      }

      unLinkInput();
    });
    Object(external_Vue_["onMounted"])(function () {
      saveRef(keyboardRef.value);
    });
    return {
      container: container,
      inputRef: inputRef,
      focus: focus,
      currentValue: currentValue,
      keyboardRef: keyboardRef,
      onChange: onChange,
      onConfirm: onConfirm,
      addBlurListener: addBlurListener,
      removeBlurListener: removeBlurListener,
      saveRef: saveRef,
      getComponent: getComponent,
      getContainer: getContainer,
      doBlur: doBlur,
      removeCurrentExtraKeyboard: removeCurrentExtraKeyboard,
      unLinkInput: unLinkInput,
      onInputBlur: onInputBlur,
      onInputFocus: onInputFocus,
      onKeyboardClick: onKeyboardClick,
      onFakeInputClick: onFakeInputClick,
      focusFunc: focusFunc,
      renderPortal: renderPortal
    };
  },
  render: function render() {
    var placeholder = this.placeholder,
        disabled = this.disabled,
        editable = this.editable,
        moneyKeyboardAlign = this.moneyKeyboardAlign;
    var focus = this.focus,
        value = this.value;
    var preventKeyboard = disabled || !editable;
    var fakeInputCls = classnames_default()("fake-input", {
      focus: focus,
      'fake-input-disabled': disabled
    });
    var fakeInputContainerCls = classnames_default()('fake-input-container', {
      'fake-input-container-left': moneyKeyboardAlign === 'left'
    });
    return Object(external_Vue_["createVNode"])("div", {
      "class": fakeInputContainerCls
    }, [value === '' && Object(external_Vue_["createVNode"])("div", {
      "class": "fake-input-placeholder"
    }, [placeholder]), Object(external_Vue_["createVNode"])("div", {
      "role": "textbox",
      "class": fakeInputCls,
      "ref": "input",
      "onClick": preventKeyboard ? function () {} : this.onFakeInputClick
    }, [value]), this.renderPortal()]);
  }
}));
// CONCATENATED MODULE: ./src/packages/input/src/input.tsx


var Input = Object(external_Vue_["defineComponent"])({
  name: 'Input',
  props: {
    value: {
      type: [String, Number]
    },
    disabled: Boolean,
    placeholder: String,
    readonly: Boolean,
    type: {
      type: String
    },
    textAlign: {
      type: String,
      default: 'left'
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var _a, _b;

    var currentValue = Object(external_Vue_["ref"])((_b = (_a = props.value) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '');
    var inputRef = Object(external_Vue_["ref"])(null);

    var onInputBlur = function onInputBlur(e) {
      var value = e.target.value;
      emit('blur', value);
    };

    var onInputFocus = function onInputFocus(e) {
      emit('focus');
    };

    var focus = function focus() {
      if (inputRef.value) {
        inputRef.value.focus();
      }
    };

    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      currentValue.value = value === null || value === void 0 ? void 0 : value.toString();
    });
    return {
      currentValue: currentValue,
      inputRef: inputRef,
      onInputBlur: onInputBlur,
      focus: focus,
      onInputFocus: onInputFocus
    };
  },
  render: function render() {
    var _this = this;

    var currentValue = this.currentValue;
    var type = this.type === 'number' ? 'text' : this.type;
    var props = Object.assign(Object.assign(Object.assign({}, this.$props), this.$attrs), {
      value: currentValue,
      type: type,
      ref: function ref(el) {
        _this.inputRef = el;
      },
      disabled: this.disabled,
      readonly: this.readonly,
      placeholder: this.placeholder,
      onBlur: function onBlur(e) {
        _this.onInputBlur(e);
      },
      onInput: function onInput(e) {
        _this.$emit('change', e);
      },
      style: {
        textAlign: this.textAlign
      }
    });
    return Object(external_Vue_["createVNode"])("input", props, null);
  }
});
/* harmony default export */ var input = (Input);
// CONCATENATED MODULE: ./src/packages/input/src/index.tsx


function input_src_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function input_src_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { input_src_ownKeys(Object(source), true).forEach(function (key) { input_src_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { input_src_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function input_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* tslint:disable:jsx-no-multiline-js */









function src_noop() {}

function normalizeValue(value) {
  if (typeof value === 'undefined' || value === null) {
    return '';
  }

  return value + '';
}

/* harmony default export */ var input_src = (Object(external_Vue_["defineComponent"])({
  name: 'InputItem',
  props: Object.assign(Object.assign({}, formComponentProps), {
    defaultValue: {
      type: [String, Number]
    },
    title: {
      type: [String, Object]
    },

    /**
     * class 前缀
     */
    prefixCls: {
      type: String,
      default: 'am-input'
    },

    /**
     * list class 前缀
     */
    prefixListCls: {
      type: String,
      default: 'am-list'
    },

    /**
     * 文字排版起始方向, 只有 type='money' 支持，
     * 可选为 <code>'left'</code>, <code>'right'</code>
     */
    moneyKeyboardAlign: {
      type: String,
      default: 'right'
    },
    moneyKeyboardWrapProps: {
      type: Function,
      default: function _default() {
        return {};
      }
    },
    moneyKeyboardHeader: {
      default: null
    },
    type: {
      type: String,
      default: 'text'
    },

    /**
     * input元素的name属性
     */
    name: {
      type: String
    },

    /**
     * 占位文字
     */
    placeholder: {
      type: String,
      default: ''
    },

    /**
     * 是否支持清除内容
     */
    clearable: {
      type: Boolean,
      default: false
    },

    /**
     * 最大长度
     */
    maxLength: {
      type: Number,
      default: 1000000
    },

    /**
     * 右边注释
     */
    extra: {
      default: ''
    },
    labelNumber: {
      default: 5
    },
    textAlign: {
      type: String
    },
    locale: {},
    android: {
      type: Boolean,
      default: false
    },
    required: {
      type: Boolean,
      default: false
    },
    errorDisplayType: {
      type: String,
      default: 'toast'
    }
  }),
  install: null,
  setup: function setup(props, _ref) {
    var slots = _ref.slots,
        emit = _ref.emit,
        attrs = _ref.attrs;
    var state = Object(external_Vue_["reactive"])({
      placeholder: props.placeholder || ''
    });

    var _useFormComponent = form_component_useFormComponent(props, {
      emit: emit
    }),
        currentValue = _useFormComponent.currentValue,
        isDisabled = _useFormComponent.isDisabled,
        isReadonly = _useFormComponent.isReadonly,
        onFieldBlur = _useFormComponent.onFieldBlur,
        onFieldChange = _useFormComponent.onFieldChange;

    var debounceTimeout = Object(external_Vue_["ref"])(null);
    Object(external_Vue_["watch"])(function () {
      return props.placeholder;
    }, function (placeholder) {
      state.placeholder = placeholder;
    });
    var inputRef = Object(external_Vue_["ref"])(null);

    var renderLabel = function renderLabel() {
      var _classnames;

      var prefixCls = props.prefixCls;
      var labelNumber = props.labelNumber;
      var labelCls = classnames_default()("".concat(prefixCls, "-label"), (_classnames = {}, input_src_defineProperty(_classnames, "".concat(prefixCls, "-label-2"), labelNumber === 2), input_src_defineProperty(_classnames, "".concat(prefixCls, "-label-3"), labelNumber === 3), input_src_defineProperty(_classnames, "".concat(prefixCls, "-label-4"), labelNumber === 4), input_src_defineProperty(_classnames, "".concat(prefixCls, "-label-5"), labelNumber === 5), input_src_defineProperty(_classnames, "".concat(prefixCls, "-label-6"), labelNumber === 6), input_src_defineProperty(_classnames, "".concat(prefixCls, "-label-7"), labelNumber === 7), _classnames));

      if (!isEmptySlot(slots.default)) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": labelCls
        }, [slots.default()]);
      } else if (props.title) {
        return Object(external_Vue_["createVNode"])("div", {
          "class": labelCls
        }, [props.title]);
      }

      return null;
    };

    var onInputChange = function onInputChange(e) {
      var _a;

      var el = e.target;
      var rawVal = el.value,
          prePos = el.selectionEnd;
      var preCtrlVal = (_a = currentValue.value) !== null && _a !== void 0 ? _a : '';
      var type = props.type;
      var ctrlValue = rawVal;

      switch (type) {
        case 'bankCard':
          ctrlValue = rawVal.replace(/\D/g, '').replace(/(....)(?=.)/g, '$1 ');
          break;

        case 'phone':
          ctrlValue = rawVal.replace(/\D/g, '').substring(0, 11);
          var valueLen = ctrlValue.length;

          if (valueLen > 3 && valueLen < 8) {
            ctrlValue = "".concat(ctrlValue.substr(0, 3), " ").concat(ctrlValue.substr(3));
          } else if (valueLen >= 8) {
            ctrlValue = "".concat(ctrlValue.substr(0, 3), " ").concat(ctrlValue.substr(3, 4), " ").concat(ctrlValue.substr(7));
          }

          break;

        case 'number':
          ctrlValue = rawVal.replace(/\D/g, '');
          break;

        case 'digit':
          ctrlValue = rawVal.replace(/[^0-9.]/g, '');
          break;

        case 'text':
        case 'password':
        default:
          break;
      }

      if (props.maxLength && ctrlValue.length > props.maxLength) {
        ctrlValue = ctrlValue.substring(0, props.maxLength);
      }

      handleOnChange(ctrlValue, ctrlValue !== rawVal, function () {
        switch (type) {
          case 'bankCard':
          case 'phone':
          case 'number':
            // controlled input type needs to adjust the position of the caret
            try {
              // set selection may throw error (https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange)
              el.selectionStart = el.selectionEnd = calcPos(prePos || 0, preCtrlVal, rawVal, ctrlValue, [' '], /\D/g);
            } catch (error) {
              console.warn('Set selection error:', error);
            }

            break;

          default:
            break;
        }
      });
      onFieldChange();
    };
    /**
     *
     * @param {string} value
     * @param {boolean} isMutated 校正值是否和输入值不同
     * @param adjustPos
     */


    var handleOnChange = function handleOnChange(value) {
      var isMutated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var adjustPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : src_noop;
      currentValue.value = value;
      emit('update:value', value);
      emit('change', value);
      adjustPos();

      if (inputRef.value && isMutated) {
        inputRef.value.$forceUpdate();
      }
    };

    var instance = Object(external_Vue_["getCurrentInstance"])();

    var onInputFocus = function onInputFocus(value) {
      if (debounceTimeout.value) {
        clearTimeout(debounceTimeout.value);
        debounceTimeout.value = null;
      }

      instance.vnode.el.focus();
      emit('focus', value);
    };

    var onInputBlur = function onInputBlur(value) {
      if (inputRef.value) {
        // this.inputRef may be null if customKeyboard unmount
        debounceTimeout.value = window.setTimeout(function () {
          if (document.activeElement !== (inputRef.value && inputRef.value.inputRef)) {
            instance.vnode.el.blur();
          }
        }, 200);
      } // fix autoFocus item blur with flash


      setTimeout(function () {
        // fix ios12 wechat browser click failure after input
        if (document.body) {
          document.body.scrollTop = document.body.scrollTop;
        }
      }, 100);
      onFieldBlur();
      emit('blur', value);
    };

    var clearInput = function clearInput() {
      handleOnChange('');
      focus();
    };

    var focus = function focus() {
      if (inputRef.value) {
        if (typeof inputRef.value.focus === 'function') {
          inputRef.value.focus();
        } else {
          inputRef.value.focus = true;
        }
      }
    };

    var calcPos = function calcPos(prePos, preCtrlVal, rawVal, ctrlVal, placeholderChars, maskReg) {
      var editLength = rawVal.length - preCtrlVal.length;
      var isAddition = editLength > 0;
      var pos = prePos;

      if (isAddition) {
        var additionStr = rawVal.substr(pos - editLength, editLength);
        var ctrlCharCount = additionStr.replace(maskReg, '').length;
        pos -= editLength - ctrlCharCount;
        var placeholderCharCount = 0;

        while (ctrlCharCount > 0) {
          if (placeholderChars.indexOf(ctrlVal.charAt(pos - ctrlCharCount + placeholderCharCount)) === -1) {
            ctrlCharCount--;
          } else {
            placeholderCharCount++;
          }
        }

        pos += placeholderCharCount;
      }

      return pos;
    };

    currentValue.value = normalizeValue((props.value || '') + '');
    Object(external_Vue_["onBeforeUnmount"])(function () {
      if (debounceTimeout.value) {
        window.clearTimeout(debounceTimeout.value);
        debounceTimeout.value = null;
      }
    });
    return {
      clearInput: clearInput,
      setInputRef: function setInputRef(el) {
        inputRef.value = el;
      },
      onInputChange: onInputChange,
      onInputFocus: onInputFocus,
      onInputBlur: onInputBlur,
      isReadonly: isReadonly,
      isDisabled: isDisabled,
      currentValue: currentValue,
      focus: focus,
      state: state,
      renderLabel: renderLabel
    };
  },
  render: function render() {
    var _classnames2,
        _this = this;

    var prefixCls = this.prefixCls,
        prefixListCls = this.prefixListCls,
        isReadonly = this.isReadonly,
        isDisabled = this.isDisabled,
        clearable = this.clearable,
        type = this.type,
        currentValue = this.currentValue,
        moneyKeyboardAlign = this.moneyKeyboardAlign,
        moneyKeyboardWrapProps = this.moneyKeyboardWrapProps,
        moneyKeyboardHeader = this.moneyKeyboardHeader,
        name = this.name,
        maxLength = this.maxLength;
    var extra = this.$slots.extra || this.extra;
    var _confirmLabel$backspa = {
      confirmLabel: '确定',
      backspaceLabel: '退格',
      cancelKeyboardLabel: '收起键盘'
    },
        confirmLabel = _confirmLabel$backspa.confirmLabel,
        backspaceLabel = _confirmLabel$backspa.backspaceLabel,
        cancelKeyboardLabel = _confirmLabel$backspa.cancelKeyboardLabel;
    var focus = this.focus,
        placeholder = this.state.placeholder;
    var wrapCls = classnames_default()("".concat(prefixListCls, "-item"), "".concat(prefixCls, "-item"), "".concat(prefixListCls, "-item-middle"), (_classnames2 = {}, input_src_defineProperty(_classnames2, "".concat(prefixCls, "-disabled"), isDisabled), input_src_defineProperty(_classnames2, "".concat(prefixCls, "-focus"), focus), input_src_defineProperty(_classnames2, "".concat(prefixCls, "-android"), this.android), _classnames2));
    var controlCls = "".concat(prefixCls, "-control");
    var inputType = 'text';

    if (type === 'bankCard' || type === 'phone') {
      inputType = 'tel';
    } else if (type === 'password') {
      inputType = 'password';
    } else if (type === 'digit') {
      inputType = 'number';
    } else if (type !== 'text' && type !== 'number') {
      inputType = type;
    }

    var patternProps;

    if (type === 'number') {
      patternProps = {
        pattern: '[0-9]*'
      };
    }

    var classNameProp = '';

    if (type === 'digit') {
      classNameProp = 'h5numInput';
    }

    var slots = {
      control: function control() {
        return Object(external_Vue_["createVNode"])("div", {
          "class": controlCls
        }, [type === 'money' ? Object(external_Vue_["createVNode"])(custom_input, Object(external_Vue_["mergeProps"])({
          value: normalizeValue(currentValue),
          type: type,
          maxLength: maxLength,
          placeholder: placeholder,
          disabled: isDisabled,
          editable: !isReadonly,
          prefixCls: prefixCls,
          confirmLabel: confirmLabel,
          backspaceLabel: backspaceLabel,
          cancelKeyboardLabel: cancelKeyboardLabel,
          moneyKeyboardAlign: moneyKeyboardAlign,
          moneyKeyboardWrapProps: moneyKeyboardWrapProps,
          moneyKeyboardHeader: moneyKeyboardHeader
        }, {
          "onChange": _this.onInputChange,
          "onFocus": _this.onInputFocus,
          "onBlur": _this.onInputBlur,
          "onConfirm": function onConfirm(v) {
            _this.$emit('confirm', v);
          },
          "ref": _this.setInputRef
        }), null) : Object(external_Vue_["createVNode"])(input, Object.assign(Object.assign({}, patternProps), {
          value: normalizeValue(currentValue),
          defaultValue: _this.defaultValue,
          textAlign: _this.textAlign,
          type: inputType,
          maxLength: maxLength,
          name: name,
          placeholder: placeholder,
          readonly: isReadonly,
          disabled: isDisabled,
          onChange: _this.onInputChange,
          onFocus: _this.onInputFocus,
          onBlur: _this.onInputBlur,
          class: classNameProp,
          ref: _this.setInputRef
        }), null)]);
      },
      suffix: function suffix() {
        return clearable && !isReadonly && !isDisabled && currentValue && "".concat(currentValue).length > 0 ? // @ts-ignore
        Object(external_Vue_["createVNode"])(feedback, {
          "activeClassName": "".concat(prefixCls, "-clear-active")
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("div", {
              "class": "".concat(prefixCls, "-clear"),
              "onClick": _this.clearInput
            }, null)];
          }
        }) : null;
      },
      extra: extra !== '' ? function () {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-extra"),
          "onClick": function onClick(e) {
            _this.$emit('extra-click', e);
          }
        }, [extra]);
      } : null
    };
    return Object(external_Vue_["createVNode"])(packages_list.Item, {
      "title": this.renderLabel(),
      "required": this.required,
      "error": this.error,
      "errorMessage": this.errorMessage,
      "errorDisplayType": this.errorDisplayType,
      "class": wrapCls
    }, input_src_objectSpread({}, slots));
  }
}));
// EXTERNAL MODULE: ./src/packages/input/style/index.less
var input_style = __webpack_require__("8cd7");

// CONCATENATED MODULE: ./src/packages/input/style/index.tsx
 // import '../../m-list/style/';


// CONCATENATED MODULE: ./src/packages/input/index.ts



input_src.install = function (Vue) {
  Vue.component('MInput', input_src);
};

/* harmony default export */ var packages_input = (input_src);
// CONCATENATED MODULE: ./src/packages/loading-directive/src/index.ts

var src_map = new Map();
/* harmony default export */ var loading_directive_src = ({
  beforeMount: function beforeMount(el, binding, vnode) {
    var value = binding.value;

    if (value) {
      var toast = packages_toast.loading('加载中');
      src_map.set(el, toast);
    }
  },
  updated: function updated(el, binding, vnode) {
    var value = binding.value;

    if (binding.value !== binding.oldValue) {
      if (value) {
        var toast = packages_toast.loading('加载中', 30);
        src_map.set(el, toast);
      } else {
        var _toast = src_map.get(el);

        if (_toast) {
          _toast.destroy();
        }
      }
    }
  }
});
// CONCATENATED MODULE: ./src/packages/loading-directive/index.ts

/* harmony default export */ var loading_directive = ({
  install: function install(Vue) {
    Vue.directive('loading', loading_directive_src);
  }
});
// EXTERNAL MODULE: ./src/packages/radio/style/index.less
var radio_style = __webpack_require__("8e34");

// CONCATENATED MODULE: ./src/packages/radio/style/index.tsx



// EXTERNAL MODULE: ./src/packages/menu/style/index.less
var menu_style = __webpack_require__("d8e5");

// CONCATENATED MODULE: ./src/packages/menu/style/index.ts







// CONCATENATED MODULE: ./src/packages/menu/src/locale/zh_CN.tsx
/* harmony default export */ var menu_src_locale_zh_CN = ({
  okText: '确定',
  cancelText: '取消'
});
// CONCATENATED MODULE: ./src/packages/radio/src/radio.tsx





var Radio = Object(external_Vue_["defineComponent"])({
  RadioItem: null,
  install: null,
  name: 'MRadio',
  props: {
    prefixCls: {
      type: String,
      default: 'am-radio'
    },
    listPrefixCls: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: false
    },
    name: {
      type: String
    },
    wrapLabel: {
      default: true
    },
    value: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var checked = Object(external_Vue_["ref"])(props.value || false);

    var onClick = function onClick() {
      checked.value = !checked.value;
      emit('change', checked.value);
    };

    return {
      onClick: onClick
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b, _c, _d;

    var restProps = tslib_es6_rest(this.$props, []);

    var prefixCls = restProps.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-wrapper"));

    if ('class' in restProps) {
      // Todo https://github.com/developit/preact-compat/issues/422

      /* tslint:disable:no-string-literal */
      delete restProps['class'];
    }

    var mark = Object(external_Vue_["createVNode"])("label", {
      "class": wrapCls,
      "onClick": this.onClick
    }, [Object(external_Vue_["createVNode"])(vc_checkbox_default.a, Object(external_Vue_["mergeProps"])(this.$props, {
      "checked": this.value,
      "type": "radio"
    }), null), (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);

    if (this.wrapLabel) {
      return mark;
    }

    return Object(external_Vue_["createVNode"])(vc_checkbox_default.a, Object(external_Vue_["mergeProps"])({
      "type": "radio",
      "checked": this.value
    }, this.$props), {
      default: function _default() {
        return [(_d = (_c = _this.$slots).default) === null || _d === void 0 ? void 0 : _d.call(_c)];
      }
    });
  }
});
/* harmony default export */ var src_radio = (Radio);
// CONCATENATED MODULE: ./src/packages/radio/src/radio-item.tsx


function radio_item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var RadioItem = Object(external_Vue_["defineComponent"])({
  name: 'MRadioItem',
  props: {
    prefixCls: {
      default: 'am-radio'
    },
    listPrefixCls: {
      default: 'am-list'
    },
    radioProps: {
      default: function _default() {
        return {};
      }
    },
    disabled: {
      type: Boolean,
      default: false
    },
    value: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var onChange = function onChange(value) {
      emit('change', value);
    };

    var onClick = function onClick(e) {
      if (!props.disabled) {
        emit('click', e);
        emit('change', !props.value);
      }
    };

    return {
      onClick: onClick,
      onChange: onChange
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var _c = this.$props,
        listPrefixCls = _c.listPrefixCls,
        disabled = _c.disabled,
        radioProps = _c.radioProps,
        otherProps = tslib_es6_rest(_c, ["listPrefixCls", "disabled", "radioProps"]);

    var prefixCls = otherProps.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-item"), radio_item_defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled === true));
    var extraProps = {};
    ['name', 'disabled'].forEach(function (i) {
      if (i in _this.$props) {
        extraProps[i] = _this.$props[i];
      }
    }); // @ts-ignore

    var extra = Object(external_Vue_["createVNode"])(src_radio, Object(external_Vue_["mergeProps"])(Object.assign(Object.assign({}, radioProps), extraProps), {
      "value": this.value,
      "onChange": this.onChange
    }), null);

    return Object(external_Vue_["createVNode"])(packages_list.Item, Object(external_Vue_["mergeProps"])(otherProps, {
      "onClick": this.onClick,
      "prefixCls": listPrefixCls,
      "class": wrapCls,
      "extra": extra
    }), {
      default: function _default() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    });
  }
});
/* harmony default export */ var radio_item = (RadioItem);
// CONCATENATED MODULE: ./src/packages/radio/src/index.tsx


src_radio.RadioItem = radio_item;
/* harmony default export */ var radio_src = (src_radio);
// CONCATENATED MODULE: ./src/packages/radio/src/radio-list.tsx






function radio_list_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var radio_list = (Object(external_Vue_["defineComponent"])({
  name: 'MRadioList',
  props: Object.assign(Object.assign({}, optionsBasedComponentProps), {
    value: {},
    title: {
      type: String
    },
    maxHeightPercentage: {
      type: Number
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;
    var instance = Object(external_Vue_["getCurrentInstance"])();

    var _useOptionsBaseCompon = options_based_component_useOptionsBaseComponent(props, {
      emit: emit,
      slots: slots,
      attrs: attrs
    }),
        getOptions = _useOptionsBaseCompon.getOptions,
        isDisabled = _useOptionsBaseCompon.isDisabled;

    var stateValue = Object(external_Vue_["ref"])(props.value !== undefined ? props.value : null);
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      stateValue.value = value;
    });

    var renderOptions = function renderOptions() {
      var options = getOptions();

      if (options) {
        return options.map(function (option) {
          return Object(external_Vue_["createVNode"])(radio_item, {
            "disabled": option.disabled || isDisabled.value,
            "value": stateValue.value === option.value,
            "onChange": function onChange(checkState) {
              _onChange(checkState, option.value);
            }
          }, {
            default: function _default() {
              return [option.label];
            }
          });
        });
      } else {
        return [];
      }
    };

    var _onChange = function _onChange(checkState, value) {
      if (checkState) {
        stateValue.value = value;
      }

      emit('update:value', value);
      emit('change', value);
    };

    Object(external_Vue_["onMounted"])(function () {
      if (props.maxHeightPercentage) {
        var windowHeight = document.body.clientHeight;
        var maxHeight = props.maxHeightPercentage;

        if (instance.vnode.el.clientHeight > windowHeight * maxHeight) {
          instance.vnode.el.style.height = windowHeight * maxHeight + 'px';
        }
      }
    });
    return {
      renderOptions: renderOptions
    };
  },
  render: function render() {
    var _slot;

    return Object(external_Vue_["createVNode"])(packages_list, {
      "required": this.required,
      "title": this.title
    }, radio_list_isSlot(_slot = this.renderOptions()) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
}));
// CONCATENATED MODULE: ./src/packages/radio/src/radio-popup-list.tsx


function radio_popup_list_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function radio_popup_list_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { radio_popup_list_ownKeys(Object(source), true).forEach(function (key) { radio_popup_list_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { radio_popup_list_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function radio_popup_list_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/* harmony default export */ var radio_popup_list = (Object(external_Vue_["defineComponent"])({
  name: 'MRadioPopupList',
  props: Object.assign(Object.assign({}, optionsBasedComponentProps), {
    title: {
      type: [String, Object]
    },
    placeholder: {
      type: String
    },
    clearable: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;
    var popupVisible = Object(external_Vue_["ref"])(false);

    var _useOptionsBaseCompon = options_based_component_useOptionsBaseComponent(props, {
      emit: emit,
      slots: slots,
      attrs: attrs
    }),
        getOptions = _useOptionsBaseCompon.getOptions,
        isDisabled = _useOptionsBaseCompon.isDisabled,
        isReadonly = _useOptionsBaseCompon.isReadonly,
        stateValue = _useOptionsBaseCompon.stateValue;

    var optionText = Object(external_Vue_["computed"])(function () {
      var options = getOptions();
      var value = stateValue.value;
      var selectedOption = options.find(function (it) {
        return value === it.value;
      });
      return selectedOption && selectedOption.label;
    });

    var onCancel = function onCancel() {
      closePopup();
    };

    var onChange = function onChange(value) {
      stateValue.value = value;
      popupVisible.value = false;
    };

    var onClick = function onClick() {
      if (!isDisabled.value && !isReadonly.value) {
        popupVisible.value = true;
      }
    };

    var onClear = function onClear() {
      emit('clear');
      emit('update:value', null);
      closePopup();
    };

    var closePopup = function closePopup() {
      popupVisible.value = false;
    };

    return {
      onClick: onClick,
      onChange: onChange,
      onCancel: onCancel,
      onClear: onClear,
      getOptions: getOptions,
      stateValue: stateValue,
      closePopup: closePopup,
      optionText: optionText,
      popupVisible: popupVisible,
      isDisabled: isDisabled
    };
  },
  render: function render() {
    var _this = this;

    var listProps = Object.assign(Object.assign(Object.assign({}, this.$attrs), this.$props), {
      options: this.getOptions()
    });
    listProps.title = undefined;

    var cancelButton = Object(external_Vue_["createVNode"])("div", {
      "onClick": this.onClear,
      "class": "am-popup-item am-popup-header-left"
    }, [Object(external_Vue_["createTextVNode"])("\u6E05\u9664")]);

    var optionText = this.optionText,
        placeholder = this.placeholder,
        stateValue = this.stateValue,
        closePopup = this.closePopup,
        title = this.title,
        clearable = this.clearable,
        onClick = this.onClick,
        readOnly = this.readOnly,
        isDisabled = this.isDisabled,
        disabled = this.disabled;
    var slots = {
      extra: function extra() {
        return Object(external_Vue_["createVNode"])("span", null, [stateValue !== undefined && stateValue !== null ? optionText : placeholder]);
      },
      default: function _default() {
        return Object(external_Vue_["createVNode"])("span", null, [title]);
      }
    };
    return Object(external_Vue_["createVNode"])(external_Vue_["Fragment"], null, [Object(external_Vue_["createVNode"])(packages_list.Item, {
      "onClick": onClick,
      "text": !!optionText,
      "required": this.required,
      "touchFeedback": !readOnly && !disabled,
      "disabled": isDisabled
    }, radio_popup_list_objectSpread({}, slots)), Object(external_Vue_["createVNode"])(packages_popup, {
      "visible": isDisabled ? false : this.popupVisible,
      "showCancel": clearable,
      "cancelButton": cancelButton,
      "title": title,
      "onOk": closePopup,
      "onCancel": closePopup
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(radio_list, Object(external_Vue_["mergeProps"])(listProps, {
          "maxHeightPercentage": 0.7,
          "onChange": _this.onChange
        }), null)];
      }
    })]);
  }
}));
// CONCATENATED MODULE: ./src/packages/radio/index.ts





radio_src.install = function (Vue) {
  Vue.component('MRadio', radio_src);
  Vue.component('MRadioItem', radio_src.RadioItem);
  Vue.component('MRadioPopupList', radio_popup_list);
  Vue.component('MRadioList', radio_list);
};

/* harmony default export */ var packages_radio = (radio_src);
// CONCATENATED MODULE: ./src/packages/menu/src/sub-menu.tsx


function sub_menu_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* tslint:disable:jsx-no-multiline-js */






function sub_menu_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var SubMenu = Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'SubMenu',
  props: {
    subMenuPrefixCls: {
      type: String
    },
    radioPrefixCls: {
      type: String
    },
    subMenuData: {
      type: Object
    },
    showSelect: {
      type: Boolean
    },
    onSel: {},
    selItem: {
      type: Object
    },
    multiSelect: {
      type: Boolean
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;

    var onClick = function onClick(dataItem) {
      emit('click', dataItem);
    };

    return {
      onClick: onClick
    };
  },
  render: function render() {
    var _slot;

    var _this = this;

    var subMenuPrefixCls = this.subMenuPrefixCls,
        radioPrefixCls = this.radioPrefixCls,
        subMenuData = this.subMenuData,
        showSelect = this.showSelect,
        selItem = this.selItem,
        multiSelect = this.multiSelect;

    var selected = function selected(dataItem) {
      return showSelect && selItem.length > 0 && selItem.indexOf(dataItem.value) !== -1;
    };

    var ItemComponent = !multiSelect ? packages_radio : packages_checkbox;
    return Object(external_Vue_["createVNode"])(packages_list, {
      "style": {
        paddingTop: 0
      },
      "class": subMenuPrefixCls
    }, sub_menu_isSlot(_slot = subMenuData.map(function (dataItem, idx) {
      var _classnames;

      return Object(external_Vue_["createVNode"])(packages_list.Item, {
        "class": classnames_default()("".concat(radioPrefixCls, "-item"), (_classnames = {}, sub_menu_defineProperty(_classnames, "".concat(subMenuPrefixCls, "-item-selected"), selected(dataItem)), sub_menu_defineProperty(_classnames, "".concat(subMenuPrefixCls, "-item-disabled"), dataItem.disabled), _classnames)),
        "key": idx,
        "extra": Object(external_Vue_["createVNode"])(ItemComponent, {
          "value": selected(dataItem),
          "disabled": dataItem.disabled,
          "onChange": function onChange() {
            return _this.onClick(dataItem);
          }
        }, null)
      }, {
        default: function _default() {
          return [dataItem.label];
        }
      });
    })) ? _slot : {
      default: function _default() {
        return [_slot];
      }
    });
  }
});
/* harmony default export */ var sub_menu = (SubMenu);
// EXTERNAL MODULE: ./node_modules/lodash.clonedeep/index.js
var lodash_clonedeep = __webpack_require__("cd3f");
var lodash_clonedeep_default = /*#__PURE__*/__webpack_require__.n(lodash_clonedeep);

// CONCATENATED MODULE: ./src/packages/menu/src/index.tsx


function menu_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function menu_src_toConsumableArray(arr) { return menu_src_arrayWithoutHoles(arr) || menu_src_iterableToArray(arr) || menu_src_unsupportedIterableToArray(arr) || menu_src_nonIterableSpread(); }

function menu_src_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function menu_src_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return menu_src_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return menu_src_arrayLikeToArray(o, minLen); }

function menu_src_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function menu_src_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return menu_src_arrayLikeToArray(arr); }

function menu_src_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }











function menu_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var Menu = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'Menu',
  props: {
    prefixCls: {
      type: String,
      default: 'am-menu'
    },
    subMenuPrefixCls: {
      type: String,
      default: 'am-sub-menu'
    },
    radioPrefixCls: {
      type: String,
      default: 'am-radio'
    },
    multiSelectMenuBtnsCls: {
      type: String,
      default: 'am-multi-select-btns'
    },
    MenuSelectContanerPrefixCls: {
      type: String,
      default: 'am-menu-select-container'
    },
    data: {
      default: function _default() {
        return [];
      }
    },
    defaultValue: {},
    value: {
      type: Array
    },
    level: {
      default: 2
    },
    height: {
      type: Number
    },
    multiSelect: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;

    var getNewFsv = function getNewFsv() {
      var value = props.value,
          data = props.data;
      var firstValue = '';

      if (value && value.length) {
        // if has init path, chose init first value
        firstValue = value[0]; // this is a contract
      } else if (data && data.length && !data[0].isLeaf) {
        // chose the first menu item if it's not leaf.
        firstValue = data[0].value;
      }

      return firstValue;
    };

    var state = Object(external_Vue_["reactive"])({
      firstLevelSelectValue: getNewFsv(),
      value: lodash_clonedeep_default()(props.value),
      height: props.height
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.firstLevelSelectValue = getNewFsv();
      state.value = lodash_clonedeep_default()(value);
    });
    Object(external_Vue_["watch"])(function () {
      return props.height;
    }, function (height) {
      state.height = height;
    });

    var onMenuOk = function onMenuOk() {
      emit('update:value', state.value);
      emit('ok', state.value);
    };

    var onMenuCancel = function onMenuCancel() {
      state.value = lodash_clonedeep_default()(props.value);
      emit('cancel');
    };

    var onClickFirstLevelItem = function onClickFirstLevelItem(dataItem) {
      state.firstLevelSelectValue = dataItem.value;

      if (dataItem.isLeaf) {
        emit('change', [dataItem.value]);
      }
    };

    var getSelectValue = function getSelectValue(dataItem) {
      var level = props.level,
          multiSelect = props.multiSelect;

      if (multiSelect) {
        var value = state.value,
            firstLevelSelectValue = state.firstLevelSelectValue;

        if (value && value.length > 0) {
          if (level === 2 && value[0] !== firstLevelSelectValue) {
            /* if level is 2, when first level is reselect, reset submenu array */
            return [firstLevelSelectValue, [dataItem.value]];
          } else {
            /* if level is 1, or first level isn't changed when level is 2, just do add or delete for submenu array  */
            var chosenValues = level === 2 ? value[1] : value; // FIXME: hack type

            var existIndex = chosenValues.indexOf(dataItem.value);

            if (existIndex === -1) {
              chosenValues.push(dataItem.value);
            } else {
              chosenValues.splice(existIndex, 1);
            }

            return value;
          }
        } else {
          /* if value is not exist before, init value */
          return level === 2 ? [firstLevelSelectValue, [dataItem.value]] : [dataItem.value];
        }
      }

      return level === 2 ? [state.firstLevelSelectValue, dataItem.value] : [dataItem.value];
    };

    var onClickSubMenuItem = function onClickSubMenuItem(dataItem) {
      var value = getSelectValue(dataItem);
      state.value = value;
      setTimeout(function () {
        // if onChange will close the menu, set a little time to show its selection state.
        emit('change', value);
      }, 300);
    };

    Object(external_Vue_["onMounted"])(function () {
      if (props.height === undefined) {
        state.height = Math.round(document.documentElement.clientHeight / 2);
      }
    });
    return {
      state: state,
      onClickFirstLevelItem: onClickFirstLevelItem,
      onClickSubMenuItem: onClickSubMenuItem,
      onMenuCancel: onMenuCancel,
      onMenuOk: onMenuOk
    };
  },
  render: function render() {
    var _slot;

    var _this = this;

    var _this$data = this.data,
        data = _this$data === void 0 ? [] : _this$data,
        prefixCls = this.prefixCls,
        level = this.level,
        multiSelect = this.multiSelect,
        multiSelectMenuBtnsCls = this.multiSelectMenuBtnsCls,
        MenuSelectContanerPrefixCls = this.MenuSelectContanerPrefixCls;
    var _this$state = this.state,
        firstLevelSelectValue = _this$state.firstLevelSelectValue,
        value = _this$state.value,
        height = _this$state.height;
    var subMenuData = data; // menu only has one level as init

    if (level === 2) {
      var parent = data;

      if (firstLevelSelectValue && firstLevelSelectValue !== '') {
        parent = data.filter(function (dataItem) {
          return dataItem.value === firstLevelSelectValue;
        });
      } // tslint:disable-next-line:prefer-conditional-expression


      if (parent[0] && parent[0].children && parent[0].isLeaf !== true) {
        subMenuData = parent[0].children;
      } else {
        subMenuData = [];
      }
    }

    var subValue = value && value.length > 0 && menu_src_toConsumableArray(value) || [];

    if (level === 2 && subValue.length > 1) {
      subValue.shift();

      if (multiSelect) {
        /* example: [[1,2,3]] -> [1,2,3] */
        subValue = subValue[0]; // FIXME: hack type
      }
    }

    var parentValue = value && value.length > 1 && level === 2 ? value[0] : null;
    var subSelInitItem = subMenuData.filter(function (dataItem) {
      return subValue.indexOf(dataItem.value) !== -1;
    }).map(function (item) {
      return item.value;
    });
    var showSelect = true;

    if (level === 2 && parentValue !== firstLevelSelectValue) {
      showSelect = false;
    } // tslint:disable-next-line:variable-name


    var _locale = getComponentLocale(this.$props, this, 'Menu', menu_src_locale_zh_CN);

    var heightStyle = height !== undefined ? {
      height: "".concat(height, "px")
    } : {};
    return Object(external_Vue_["createVNode"])(packages_flex, {
      "class": prefixCls,
      "style": Object.assign({}, heightStyle),
      "direction": "column",
      "align": "stretch"
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(packages_flex, {
          "align": "start",
          "class": classnames_default()(menu_src_defineProperty({}, MenuSelectContanerPrefixCls, true))
        }, {
          default: function _default() {
            return [level === 2 && Object(external_Vue_["createVNode"])(packages_flex.Item, null, {
              default: function _default() {
                return [Object(external_Vue_["createVNode"])(packages_list, {
                  "role": "tablist"
                }, menu_src_isSlot(_slot = data.map(function (dataItem, index) {
                  return Object(external_Vue_["createVNode"])(packages_list.Item, {
                    "class": dataItem.value === firstLevelSelectValue ? "".concat(prefixCls, "-selected") : '',
                    "onClick": function onClick() {
                      return _this.onClickFirstLevelItem(dataItem);
                    },
                    "key": "listitem-1-".concat(index),
                    "role": "tab",
                    "aria-selected": dataItem.value === firstLevelSelectValue
                  }, {
                    default: function _default() {
                      return [dataItem.label];
                    }
                  });
                })) ? _slot : {
                  default: function _default() {
                    return [_slot];
                  }
                })];
              }
            }), Object(external_Vue_["createVNode"])(packages_flex.Item, {
              "role": "tabpanel",
              "aria-hidden": "false",
              "class": "".concat(MenuSelectContanerPrefixCls, "-submenu")
            }, {
              default: function _default() {
                return [Object(external_Vue_["createVNode"])(sub_menu, {
                  "subMenuPrefixCls": _this.subMenuPrefixCls,
                  "radioPrefixCls": _this.radioPrefixCls,
                  "subMenuData": subMenuData,
                  "selItem": subSelInitItem,
                  "onClick": _this.onClickSubMenuItem,
                  "showSelect": showSelect,
                  "multiSelect": multiSelect
                }, null)];
              }
            })];
          }
        }), multiSelect && Object(external_Vue_["createVNode"])("div", {
          "class": multiSelectMenuBtnsCls
        }, [Object(external_Vue_["createVNode"])(packages_button, {
          "inline": true,
          "class": "".concat(multiSelectMenuBtnsCls, "-btn"),
          "onClick": _this.onMenuCancel
        }, {
          default: function _default() {
            return [_locale.cancelText];
          }
        }), Object(external_Vue_["createVNode"])(packages_button, {
          "inline": true,
          "type": "primary",
          "class": "".concat(multiSelectMenuBtnsCls, "-btn"),
          "onClick": _this.onMenuOk
        }, {
          default: function _default() {
            return [_locale.okText];
          }
        })])];
      }
    });
  }
});
/* harmony default export */ var menu_src = (Menu);
// CONCATENATED MODULE: ./src/packages/menu/index.ts



menu_src.install = function (Vue) {
  Vue.component('MMenu', menu_src);
};

/* harmony default export */ var packages_menu = (menu_src);
// CONCATENATED MODULE: ./src/packages/utils/closest.tsx
function closest(el, selector) {
  var matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;
  var p = el;

  while (p) {
    if (matchesSelector.call(p, selector)) {
      return p;
    }

    p = p.parentElement;
  }

  return null;
}
// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-dialog/index.js
var vc_dialog = __webpack_require__("9dee");
var vc_dialog_default = /*#__PURE__*/__webpack_require__.n(vc_dialog);

// CONCATENATED MODULE: ./src/packages/modal/src/modal.tsx


function modal_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var Modal = Object(external_Vue_["defineComponent"])({
  alert: null,
  confirm: null,
  prompt: null,
  operation: null,
  install: null,
  name: 'Modal',
  props: {
    prefixCls: {
      default: 'am-modal'
    },
    transitionName: {
      type: String
    },
    maskTransitionName: {
      type: String
    },
    wrapClassName: {
      type: String
    },
    wrapProps: {},
    platform: {
      type: String,
      default: 'ios'
    },
    bodyStyle: {},
    title: {},
    maskClosable: {
      type: Boolean,
      default: true
    },
    closable: {
      type: Boolean,
      default: false
    },
    footer: {
      default: function _default() {
        return [];
      }
    },
    className: {
      type: [String, Object]
    },
    onClose: {},
    transparent: {
      type: Boolean,
      default: false
    },
    popup: {
      type: Boolean,
      default: false
    },
    animated: {
      type: Boolean,
      default: true
    },
    animationType: {
      type: String,
      default: 'slide-down'
    },
    onAnimationEnd: {},
    animateAppear: {
      type: Boolean
    },
    operation: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;

    var renderFooterButton = function renderFooterButton(button, prefixCls, i) {
      var buttonStyle = {};

      if (button.style) {
        buttonStyle = button.style;

        if (typeof buttonStyle === 'string') {
          var styleMap = {
            cancel: {},
            default: {},
            destructive: {
              color: 'red'
            }
          };
          buttonStyle = styleMap[buttonStyle] || {};
        }
      }

      var onClickFn = function onClickFn(e) {
        e.preventDefault();

        if (button.onPress) {
          button.onPress();
        }
      };

      return (// @ts-ignore
        Object(external_Vue_["createVNode"])(feedback, {
          "activeClassName": "".concat(prefixCls, "-button-active"),
          "key": i
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("a", {
              "class": "".concat(prefixCls, "-button"),
              "role": "button",
              "style": buttonStyle,
              "onClick": onClickFn
            }, [button.text || "Button"])];
          }
        })
      );
    };

    return {
      renderFooterButton: renderFooterButton
    };
  },
  render: function render() {
    var _this = this,
        _classnames2;

    var _a, _b;

    var _c = this.$props,
        prefixCls = _c.prefixCls,
        wrapClassName = _c.wrapClassName,
        transitionName = _c.transitionName,
        maskTransitionName = _c.maskTransitionName,
        platform = _c.platform,
        _c$footer = _c.footer,
        footer = _c$footer === void 0 ? [] : _c$footer,
        operation = _c.operation,
        animated = _c.animated,
        transparent = _c.transparent,
        popup = _c.popup,
        animationType = _c.animationType,
        restProps = tslib_es6_rest(_c, ["prefixCls", "wrapClassName", "transitionName", "maskTransitionName", "platform", "footer", "operation", "animated", "transparent", "popup", "animationType"]);

    var btnGroupClass = classnames_default()("".concat(prefixCls, "-button-group-").concat(footer.length === 2 && !operation ? 'h' : 'v'), "".concat(prefixCls, "-button-group-").concat(operation ? 'operation' : 'normal'));
    var footerDom = footer.length ? Object(external_Vue_["createVNode"])("div", {
      "class": btnGroupClass,
      "role": "group"
    }, [footer.map(function (button, i) {
      return (// tslint:disable-next-line:jsx-no-multiline-js
        _this.renderFooterButton(button, prefixCls, i)
      );
    })]) : null;
    var transName;
    var maskTransName;

    if (animated) {
      // tslint:disable-next-line:prefer-conditional-expression
      if (transparent) {
        transName = maskTransName = 'am-fade';
      } else {
        transName = maskTransName = 'am-slide-up';
      }

      if (popup) {
        transName = animationType === 'slide-up' ? 'am-slide-up' : 'am-slide-down';
        maskTransName = 'am-fade';
      }
    }

    var wrapCls = classnames_default()(wrapClassName, modal_defineProperty({}, "".concat(prefixCls, "-wrap-popup"), popup));
    var cls = classnames_default()(this.className, (_classnames2 = {}, modal_defineProperty(_classnames2, "".concat(prefixCls, "-transparent"), transparent), modal_defineProperty(_classnames2, "".concat(prefixCls, "-popup"), popup), modal_defineProperty(_classnames2, "".concat(prefixCls, "-operation"), operation), modal_defineProperty(_classnames2, "".concat(prefixCls, "-popup-").concat(animationType), popup && animationType), modal_defineProperty(_classnames2, "".concat(prefixCls, "-android"), platform === 'android'), _classnames2));
    return (// @ts-ignore
      Object(external_Vue_["createVNode"])(vc_dialog_default.a, Object(external_Vue_["mergeProps"])(restProps, {
        "maskClosable": this.maskClosable,
        "visible": this.popup,
        "prefixCls": prefixCls,
        "title": this.title,
        "closable": this.closable,
        "class": cls,
        "onClose": this.onClose || function (e) {
          _this.$emit('change', false);

          _this.$emit('close', e);
        },
        "wrapClassName": wrapCls,
        "transitionName": transitionName || transName,
        "maskTransitionName": maskTransitionName || maskTransName,
        "footer": footerDom
      }), {
        default: function _default() {
          return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
        }
      })
    );
  }
});
/* harmony default export */ var src_modal = (Modal);
// CONCATENATED MODULE: ./src/packages/modal/src/alert.tsx




function alert_alert(title, message) {
  var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
    text: '确定'
  }];
  var platform = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ios';
  var closed = false;

  if (!title && !message) {
    // console.log('Must specify either an alert title, or message, or both');
    return {
      close: function close() {}
    };
  }

  var div = document.createElement('div');
  document.body.appendChild(div);
  var modal = null;

  function close() {
    if (modal && modal.unmount) {
      modal.unmount();
    }

    if (div && div.parentNode) {
      div.parentNode.removeChild(div);
    }
  }

  return new Promise(function (resolve, reject) {
    var footer = actions.map(function (button, index) {
      // tslint:disable-next-line:only-arrow-functions
      var orginPress = button.onPress || function () {};

      button.onPress = function () {
        if (closed) {
          return;
        }

        var res = orginPress();

        if (res && res.then) {
          res.then(function () {
            closed = true;
            close();

            if (actions.length === 2 && index === 0) {
              reject();
            } else {
              resolve(undefined);
            }
          }).catch(function (err) {
            reject(err);
          });
        } else {
          closed = true;
          close();

          if (actions.length === 2 && index === 0) {
            reject();
          } else {
            resolve(undefined);
          }
        }
      };

      return button;
    });
    var prefixCls = 'am-modal';

    function onWrapTouchStart(e) {
      if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {
        return;
      }

      var pNode = closest(e.target, ".".concat(prefixCls, "-footer"));

      if (!pNode) {
        e.preventDefault();
      }
    }

    modal = Object(external_Vue_["createApp"])({
      render: function render() {
        // @ts-ignore
        return Object(external_Vue_["createVNode"])(src_modal, {
          "visible": true,
          "transparent": true,
          "title": title,
          "transitionName": "am-zoom",
          "closable": false,
          "maskClosable": false,
          "footer": footer,
          "maskTransitionName": "am-fade",
          "platform": platform,
          "wrapProps": {
            onTouchStart: onWrapTouchStart
          }
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("div", {
              "class": "".concat(prefixCls, "-alert-content")
            }, [message])];
          }
        });
      }
    });
    modal.mount(div);
    return {
      close: close
    };
  });
}
// CONCATENATED MODULE: ./src/packages/modal/src/operation.tsx




function operation_operation() {
  var actions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{
    text: '确定'
  }];
  var platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ios';
  var closed = false;
  var prefixCls = 'am-modal';
  var div = document.createElement('div');
  document.body.appendChild(div);
  var modal = null;

  function close() {
    if (modal && modal.unmount) {
      modal.unmount();
    }

    if (div && div.parentNode) {
      div.parentNode.removeChild(div);
    }
  }

  var footer = actions.map(function (button) {
    // tslint:disable-next-line:only-arrow-functions
    var orginPress = button.onPress || function () {};

    button.onPress = function () {
      if (closed) {
        return;
      }

      var res = orginPress();

      if (res && res.then) {
        res.then(function () {
          closed = true;
          close();
        }).catch(function () {});
      } else {
        closed = true;
        close();
      }
    };

    return button;
  });

  function onWrapTouchStart(e) {
    if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {
      return;
    }

    var pNode = closest(e.target, ".am-modal-footer");

    if (!pNode) {
      e.preventDefault();
    }
  }

  modal = Object(external_Vue_["createApp"])({
    render: function render() {
      var _this = this;

      var _a, _b; // @ts-ignore


      return Object(external_Vue_["createVNode"])(src_modal, {
        "visible": true,
        "operation": true,
        "transparent": true,
        "prefixCls": prefixCls,
        "transitionName": "am-zoom",
        "closable": false,
        "maskClosable": true,
        "onClose": close,
        "footer": footer,
        "maskTransitionName": "am-fade",
        "class": "am-modal-operation",
        "platform": platform,
        "wrapProps": {
          onTouchStart: onWrapTouchStart
        }
      }, {
        default: function _default() {
          return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
        }
      });
    }
  });
  modal.mount(div);
  return {
    close: close
  };
}
// CONCATENATED MODULE: ./src/packages/modal/src/prompt.tsx




function prompt_prompt(title, message) {
  var callbackOrActions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
    text: '取消'
  }, {
    text: '确认'
  }];
  var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'default';
  var defaultValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  var placeholders = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ['', ''];
  var platform = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'ios';
  var closed = false;
  return new Promise(function (resolve, reject) {
    var copyDefaultValue = typeof defaultValue === 'string' ? defaultValue : typeof defaultValue === 'number' ? "".concat(defaultValue) : '';
    var prefixCls = 'am-modal';
    var data = {
      text: copyDefaultValue
    };

    function onChange(e) {
      var target = e.target;
      var inputType = target.getAttribute('type');

      if (inputType !== null) {
        data[inputType] = target.value;
      }
    } // hotfix issue: https://github.com/ant-design/ant-design-mobile/issues/2177


    function onClick(e) {
      var target = e.currentTarget || e.target;

      if (target) {
        target.focus();
      }
    }

    var focusFn = function focusFn(input) {
      setTimeout(function () {
        if (input) {
          input.focus();
        }
      }, 500);
    };

    var div = document.createElement('div');
    document.body.appendChild(div);
    var modal = null;

    function close() {
      if (modal && modal.unmount) {
        modal.unmount();
      }

      if (div && div.parentNode) {
        div.parentNode.removeChild(div);
      }
    }

    function handleConfirm() {
      var _data$text = data.text,
          text = _data$text === void 0 ? '' : _data$text,
          _data$password = data.password,
          password = _data$password === void 0 ? '' : _data$password;
      var callbackArgs = type === 'login-password' ? [text, password] : type === 'secure-text' ? [password] : [text];
      return resolve(callbackArgs[0]);
    }

    var actions = typeof callbackOrActions === 'function' ? [{
      text: '取消'
    }, {
      text: '确定',
      onPress: callbackOrActions
    }] : callbackOrActions.map(function (item, index) {
      return {
        text: item.text,
        onPress: item.onPress || function () {
          if (index === 1) {
            return handleConfirm();
          }
        }
      };
    });
    var footer = actions.map(function (button) {
      // tslint:disable-next-line:only-arrow-functions
      var orginPress = button.onPress || function () {};

      button.onPress = function () {
        if (closed) {
          return;
        }

        var args = [];

        if (type === 'secure-text') {
          args.push(data['password']);
        } else if (type === 'login-password') {
          args.push(data['text']);
          args.push(data['password']);
        } else {
          args.push(data['text']);
        }

        var res = orginPress.apply(void 0, args);

        if (res && res.then) {
          res.then(function () {
            closed = true;
            close();
          }).catch(function () {});
        } else {
          closed = true;
          close();
        }
      };

      return button;
    });

    function onWrapTouchStart(e) {
      // exclude input element for focus
      if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {
        return;
      }

      var pNode = closest(e.target, ".".concat(prefixCls, "-content"));

      if (!pNode) {
        e.preventDefault();
      }
    }

    modal = Object(external_Vue_["createApp"])({
      methods: {
        createContent: function createContent() {
          var inputDom;

          switch (type) {
            case 'login-password':
              inputDom = Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input-container")
              }, [Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input")
              }, [Object(external_Vue_["createVNode"])("label", null, [Object(external_Vue_["createVNode"])("input", {
                "type": "text",
                "defaultValue": data.text,
                "ref": function ref(input) {
                  return focusFn(input);
                },
                "onClick": onClick,
                "onChange": onChange,
                "placeholder": placeholders[0]
              }, null)])]), Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input")
              }, [Object(external_Vue_["createVNode"])("label", null, [Object(external_Vue_["createVNode"])("input", {
                "type": "password",
                "defaultValue": data.password,
                "onClick": onClick,
                "onChange": onChange,
                "placeholder": placeholders[1]
              }, null)])])]);
              break;

            case 'secure-text':
              inputDom = Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input-container")
              }, [Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input")
              }, [Object(external_Vue_["createVNode"])("label", null, [Object(external_Vue_["createVNode"])("input", {
                "type": "password",
                "defaultValue": data.password,
                "ref": function ref(input) {
                  return focusFn(input);
                },
                "onClick": onClick,
                "onChange": onChange,
                "placeholder": placeholders[0]
              }, null)])])]);
              break;

            case 'default':
            default:
              inputDom = Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input-container")
              }, [Object(external_Vue_["createVNode"])("div", {
                "class": "".concat(prefixCls, "-input")
              }, [Object(external_Vue_["createVNode"])("label", null, [Object(external_Vue_["createVNode"])("input", {
                "type": "text",
                "value": data.text,
                "ref": function ref(el) {
                  focusFn(el);
                },
                "onClick": onClick,
                "onChange": onChange,
                "placeholder": placeholders[0]
              }, null)])])]);
          }

          return Object(external_Vue_["createVNode"])("div", null, [message, inputDom]);
        }
      },
      render: function render() {
        var _this = this;

        // @ts-ignore
        return Object(external_Vue_["createVNode"])(src_modal, {
          "visible": true,
          "transparent": true,
          "prefixCls": prefixCls,
          "title": title,
          "closable": false,
          "maskClosable": false,
          "transitionName": "am-zoom",
          "footer": footer,
          "maskTransitionName": "am-fade",
          "platform": platform,
          "wrapProps": {
            onTouchStart: onWrapTouchStart
          }
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("div", {
              "class": "".concat(prefixCls, "-propmt-content")
            }, [_this.createContent()])];
          }
        });
      }
    });
    modal.mount(div);
    return {
      close: close
    };
  });
}
// CONCATENATED MODULE: ./src/packages/modal/src/confirm.tsx

function confirm_confirm(title, message) {
  var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
    text: '取消'
  }, {
    text: '确定'
  }];
  var platform = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ios';
  return alert_alert(title, message, actions, platform);
}
// CONCATENATED MODULE: ./src/packages/modal/src/index.tsx





src_modal.alert = alert_alert;
src_modal.confirm = confirm_confirm;
src_modal.prompt = prompt_prompt;
src_modal.operation = operation_operation;
/* harmony default export */ var modal_src = (src_modal);
// EXTERNAL MODULE: ./src/packages/modal/style/index.less
var modal_style = __webpack_require__("9e2d");

// CONCATENATED MODULE: ./src/packages/modal/style/index.tsx


// CONCATENATED MODULE: ./src/packages/modal/index.ts



modal_src.install = function (Vue) {
  Vue.component('MModal', modal_src);
};

/* harmony default export */ var packages_modal = (modal_src);
// EXTERNAL MODULE: ./src/packages/nav-bar/style/index.less
var nav_bar_style = __webpack_require__("6692");

// CONCATENATED MODULE: ./src/packages/nav-bar/style/index.ts


// CONCATENATED MODULE: ./src/packages/nav-bar/src/index.tsx




var NavBar = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'NavBar',
  props: {
    onLeftClick: {},
    prefixCls: {
      type: String,
      default: 'am-navbar'
    },
    className: {
      type: String
    },
    mode: {
      default: 'dark'
    },
    icon: {
      type: [String, Object]
    },
    leftContent: {
      type: [String, Object]
    },
    rightContent: {
      type: [String, Object]
    }
  },
  render: function render() {
    var _this = this;

    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;

    var prefixCls = this.prefixCls,
        className = this.className,
        mode = this.mode,
        icon = this.icon;
    var rightContent = (_f = (_c = (_b = (_a = this.$slots).rightContent) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : (_e = (_d = this.$slots)['right-content']) === null || _e === void 0 ? void 0 : _e.call(_d)) !== null && _f !== void 0 ? _f : this.rightContent;
    var leftContent = (_m = (_j = (_h = (_g = this.$slots).leftContent) === null || _h === void 0 ? void 0 : _h.call(_g)) !== null && _j !== void 0 ? _j : (_l = (_k = this.$slots)['left-content']) === null || _l === void 0 ? void 0 : _l.call(_k)) !== null && _m !== void 0 ? _m : this.leftContent;
    return Object(external_Vue_["createVNode"])("div", {
      "class": classnames_default()(className, prefixCls, "".concat(prefixCls, "-").concat(mode))
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-left"),
      "role": "button",
      "onClick": function onClick(e) {
        _this.$emit('left-click', e);
      }
    }, [icon ? Object(external_Vue_["createVNode"])("span", {
      "class": "".concat(prefixCls, "-left-icon"),
      "aria-hidden": "true"
    }, [typeof icon === 'string' ? Object(external_Vue_["createVNode"])(packages_icon, {
      "type": icon
    }, null) : icon]) : (_p = (_o = this.$slots).icon) === null || _p === void 0 ? void 0 : _p.call(_o), leftContent]), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-title")
    }, [this.$slots.default()]), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-right")
    }, [rightContent])]);
  }
});
/* harmony default export */ var nav_bar_src = (NavBar);
// CONCATENATED MODULE: ./src/packages/nav-bar/index.ts



nav_bar_src.install = function (Vue) {
  Vue.component('MNavBar', nav_bar_src);
};

/* harmony default export */ var nav_bar = (nav_bar_src);
// CONCATENATED MODULE: ./src/packages/notice-bar/src/marquee.tsx


var Marquee = Object(external_Vue_["defineComponent"])({
  name: 'Marquee',
  props: {
    prefixCls: {
      type: String
    },
    text: {
      type: [String, Object],
      default: ''
    },
    loop: {
      type: Boolean,
      default: false
    },
    leading: {
      type: Number,
      default: 500
    },
    trailing: {
      type: Number,
      default: 800
    },
    fps: {
      type: Number,
      default: 40
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var state = Object(external_Vue_["reactive"])({
      animatedWidth: 0,
      overflowWidth: 0
    });

    var _marqueeTimer = Object(external_Vue_["ref"])(null);

    var textRef = Object(external_Vue_["ref"])(null);

    var _startAnimation = function _startAnimation() {
      if (_marqueeTimer.value) {
        window.clearTimeout(_marqueeTimer.value);
      }

      var fps = props.fps;
      var TIMEOUT = 1 / fps * 1000;
      var isLeading = state.animatedWidth === 0;
      var timeout = isLeading ? props.leading : TIMEOUT;

      var animate = function animate() {
        var overflowWidth = state.overflowWidth;
        var animatedWidth = state.animatedWidth + 1;
        var isRoundOver = animatedWidth > overflowWidth;

        if (isRoundOver) {
          if (props.loop) {
            animatedWidth = 0;
          } else {
            return;
          }
        }

        if (isRoundOver && props.trailing) {
          _marqueeTimer.value = window.setTimeout(function () {
            state.animatedWidth = animatedWidth;
            _marqueeTimer.value = window.setTimeout(animate, TIMEOUT);
          }, props.trailing);
        } else {
          state.animatedWidth = animatedWidth;
          _marqueeTimer.value = window.setTimeout(animate, TIMEOUT);
        }
      };

      if (state.overflowWidth !== 0) {
        _marqueeTimer.value = window.setTimeout(animate, timeout);
      }
    };

    var instance = Object(external_Vue_["getCurrentInstance"])();

    var _measureText = function _measureText() {
      var container = instance.vnode.el;
      var node = textRef.value;

      if (container && node) {
        var containerWidth = container.offsetWidth;
        var textWidth = node.offsetWidth;
        state.overflowWidth = textWidth - containerWidth;
      }
    };

    Object(external_Vue_["onMounted"])(function () {
      _measureText();

      _startAnimation();
    });
    Object(external_Vue_["onUpdated"])(function () {
      _measureText();

      if (!_marqueeTimer.value) {
        _startAnimation();
      }
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      clearTimeout(_marqueeTimer.value);
    });
    return {
      textRef: textRef,
      state: state
    };
  },
  render: function render() {
    var prefixCls = this.prefixCls,
        text = this.text;
    var style = {
      position: 'relative',
      right: this.state.animatedWidth + 'px',
      whiteSpace: 'nowrap',
      display: 'inline-block'
    };
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-marquee-wrap"),
      "style": {
        overflow: 'hidden'
      },
      "role": "marquee"
    }, [Object(external_Vue_["createVNode"])("div", {
      "ref": this.textRef,
      "class": "".concat(prefixCls, "-marquee"),
      "style": style
    }, [text])]);
  }
});
/* harmony default export */ var marquee = (Marquee);
// CONCATENATED MODULE: ./src/packages/notice-bar/src/index.tsx






/* harmony default export */ var notice_bar_src = (Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  install: null,
  name: 'NoticeBar',
  props: {
    marqueeProps: {
      type: Object
    },
    prefixCls: {
      type: String,
      default: 'am-notice-bar'
    },
    mode: {
      type: String,
      default: ''
    },
    icon: {
      type: [String, Object]
    },
    action: {
      type: Object
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var show = Object(external_Vue_["ref"])(true);

    var onClick = function onClick() {
      var mode = props.mode;
      emit('click');

      if (mode === 'closable') {
        show.value = false;
      }
    };

    return {
      onClick: onClick,
      show: show
    };
  },
  render: function render() {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    var _j = this,
        mode = _j.mode,
        prefixCls = _j.prefixCls,
        action = _j.action,
        marqueeProps = _j.marqueeProps,
        restProps = tslib_es6_rest(_j, ["mode", "prefixCls", "action", "marqueeProps"]);

    var icon = (_d = (_c = (_b = (_a = this.$slots).icon) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : this.icon) !== null && _d !== void 0 ? _d : Object(external_Vue_["createVNode"])(packages_icon, {
      "type": "voice",
      "size": "xxs"
    }, null);
    var extraProps = {};
    var operationDom = null;

    if (mode === 'closable') {
      operationDom = Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-operation"),
        "onClick": this.onClick,
        "role": "button",
        "aria-label": "close"
      }, [(_h = (_g = (_f = (_e = this.$slots).action) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : action) !== null && _h !== void 0 ? _h : Object(external_Vue_["createVNode"])(packages_icon, {
        "type": "cross",
        "size": "md"
      }, null)]);
    } else {
      if (mode === 'link') {
        operationDom = Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-operation"),
          "role": "button",
          "aria-label": "go to detail"
        }, [action ? action : Object(external_Vue_["createVNode"])(packages_icon, {
          "type": "right",
          "size": "md"
        }, null)]);
      }

      extraProps.onClick = this.onClick;
    }

    var wrapCls = classnames_default()(prefixCls);
    return this.show ? Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls,
      "onClick": function onClick(e) {
        if (extraProps.onClick) {
          extraProps.onClick(e);
        }
      },
      "role": "alert"
    }, [icon && // tslint:disable-next-line:jsx-no-multiline-js
    Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-icon"),
      "aria-hidden": "true"
    }, [icon]), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-content")
    }, [Object(external_Vue_["createVNode"])(marquee, Object(external_Vue_["mergeProps"])(marqueeProps, {
      "prefixCls": prefixCls,
      "text": this.$slots.default ? this.$slots.default()[0] : null
    }), null)]), operationDom]) : null;
  }
}));
// EXTERNAL MODULE: ./src/packages/notice-bar/style/index.css
var notice_bar_style = __webpack_require__("545c");

// CONCATENATED MODULE: ./src/packages/notice-bar/style/index.ts

// CONCATENATED MODULE: ./src/packages/notice-bar/index.ts



notice_bar_src.install = function (Vue) {
  Vue.component('MNoticeBar', notice_bar_src);
};

/* harmony default export */ var notice_bar = (notice_bar_src);
// CONCATENATED MODULE: ./src/packages/pagination/src/locale/zh_CN.tsx
/* harmony default export */ var pagination_src_locale_zh_CN = ({
  prevText: '上一页',
  nextText: '下一页'
});
// CONCATENATED MODULE: ./src/packages/pagination/src/index.tsx


function pagination_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







/* harmony default export */ var pagination_src = (Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'Pagination',
  props: {
    prefixCls: {
      type: String,
      default: 'am-pagination'
    },
    mode: {
      default: 'button'
    },
    simple: {
      type: Boolean,
      default: false
    },
    value: {
      type: Number,
      default: 1
    },
    total: {
      type: Number,
      default: 0
    },
    prevText: {
      type: String
    },
    nextText: {
      type: String
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var state = Object(external_Vue_["reactive"])({
      current: props.value
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      if (state.current !== value) {
        state.current = value;
      }
    });

    var onChange = function onChange(p) {
      state.current = p;
      emit('update:value', p);
    };

    return {
      state: state,
      onChange: onChange
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;

    var prefixCls = this.prefixCls,
        mode = this.mode,
        total = this.total,
        simple = this.simple;
    var current = this.state.current;
    var locale = getComponentLocale(this.$props, this.$root, 'Pagination', pagination_src_locale_zh_CN);
    var prevText = locale.prevText,
        nextText = locale.nextText;

    var markup = Object(external_Vue_["createVNode"])(packages_flex, null, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])(packages_flex.Item, {
          "class": "".concat(prefixCls, "-wrap-btn ").concat(prefixCls, "-wrap-btn-prev")
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])(packages_button, {
              "inline": true,
              "disabled": current <= 1,
              "onClick": function onClick() {
                return _this.onChange(current - 1);
              }
            }, {
              default: function _default() {
                return [(_f = (_c = (_b = (_a = _this.$slots).prevText) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : (_e = (_d = _this.$slots)['prev-text']) === null || _e === void 0 ? void 0 : _e.call(_d)) !== null && _f !== void 0 ? _f : prevText];
              }
            })];
          }
        }), _this.$slots.default ? Object(external_Vue_["createVNode"])(packages_flex.Item, null, {
          default: function _default() {
            return [(_h = (_g = _this.$slots).default) === null || _h === void 0 ? void 0 : _h.call(_g)];
          }
        }) : !simple && Object(external_Vue_["createVNode"])(packages_flex.Item, {
          "class": "".concat(prefixCls, "-wrap"),
          "aria-live": "assertive"
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("span", {
              "class": "active"
            }, [current]), Object(external_Vue_["createTextVNode"])("/"), Object(external_Vue_["createVNode"])("span", null, [total])];
          }
        }), Object(external_Vue_["createVNode"])(packages_flex.Item, {
          "class": "".concat(prefixCls, "-wrap-btn ").concat(prefixCls, "-wrap-btn-next")
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])(packages_button, {
              "inline": true,
              "disabled": current >= total,
              "onClick": function onClick() {
                return _this.onChange(_this.state.current + 1);
              }
            }, {
              default: function _default() {
                return [(_p = (_l = (_k = (_j = _this.$slots).nextText) === null || _k === void 0 ? void 0 : _k.call(_j)) !== null && _l !== void 0 ? _l : (_o = (_m = _this.$slots)['next-text']) === null || _o === void 0 ? void 0 : _o.call(_m)) !== null && _p !== void 0 ? _p : nextText];
              }
            })];
          }
        })];
      }
    });

    if (mode === 'number') {
      markup = Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-wrap")
      }, [Object(external_Vue_["createVNode"])("span", {
        "class": "active"
      }, [current]), Object(external_Vue_["createTextVNode"])("/"), Object(external_Vue_["createVNode"])("span", null, [total])]);
    } else if (mode === 'pointer') {
      var arr = [];

      for (var i = 0; i < total; i++) {
        arr.push(Object(external_Vue_["createVNode"])("div", {
          "key": "dot-".concat(i),
          "class": classnames_default()("".concat(prefixCls, "-wrap-dot"), pagination_src_defineProperty({}, "".concat(prefixCls, "-wrap-dot-active"), i + 1 === current))
        }, [Object(external_Vue_["createVNode"])("span", null, null)]));
      }

      markup = Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-wrap")
      }, [arr]);
    }

    var cls = classnames_default()(prefixCls);
    return Object(external_Vue_["createVNode"])("div", {
      "class": cls
    }, [markup]);
  }
}));
// EXTERNAL MODULE: ./src/packages/pagination/style/index.css
var pagination_style = __webpack_require__("7477");

// CONCATENATED MODULE: ./src/packages/pagination/style/index.ts

// CONCATENATED MODULE: ./src/packages/pagination/index.ts



pagination_src.install = function (Vue) {
  Vue.component('MPagination', pagination_src);
};

/* harmony default export */ var pagination = (pagination_src);
// EXTERNAL MODULE: ./node_modules/array-tree-filter/lib/index.js
var lib = __webpack_require__("b8ad");
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// CONCATENATED MODULE: ./src/packages/vmc-cascader/cascader.tsx


function cascader_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function cascader_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var cascader = (Object(external_Vue_["defineComponent"])({
  name: 'Cascader',
  props: {
    onChange: {},
    onScrollChange: {},
    defaultValue: {},
    value: {},
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    cols: {
      type: Number,
      default: 3
    },
    disabled: {
      type: Boolean,
      default: false
    },
    pickerItemStyle: {},
    indicatorStyle: {},
    prefixCls: {
      default: 'rmc-cascader'
    },
    pickerPrefixCls: {
      default: 'rmc-picker'
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var store = Object(external_Vue_["inject"])('store', undefined);

    var getValue = function getValue(d, val) {
      var data = d || props.data;
      var value = val || props.value || props.defaultValue;

      if (!value || !value.length || value.indexOf(undefined) > -1) {
        value = [];

        for (var i = 0; i < props.cols; i++) {
          if (data && data.length) {
            value[i] = data[0].value;
            data = data[0].children;
          }
        }
      }

      return value;
    };

    var state = Object(external_Vue_["reactive"])({
      value: getValue(props.data, props.defaultValue || props.value)
    });

    var onOk = function onOk() {
      emit('update:value', state.value);
      emit('change', state.value);
    };

    var onCancel = function onCancel() {
      state.value = getValue(props.data, props.defaultValue || props.value);
      emit('cancel', state.value);
    };

    var onScrollChange = function onScrollChange() {
      emit('scroll-change');
    };

    var onValueChange = function onValueChange(value) {
      state.value = value;
      emit('change', value);
    };

    var getCols = function getCols() {
      var data = props.data,
          cols = props.cols,
          pickerPrefixCls = props.pickerPrefixCls,
          disabled = props.disabled,
          pickerItemStyle = props.pickerItemStyle,
          indicatorStyle = props.indicatorStyle;
      var value = state.value;
      var childrenTree = lib_default()(data, function (c, level) {
        return c.value === value[level];
      }).map(function (c) {
        return c.children;
      }); // in case the users data is async get when select change

      var needPad = cols - childrenTree.length;

      if (needPad > 0) {
        for (var i = 0; i < needPad; i++) {
          childrenTree.push([]);
        }
      }

      childrenTree.length = cols - 1;
      childrenTree.unshift(data);
      return childrenTree.map(function () {
        var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var level = arguments.length > 1 ? arguments[1] : undefined;
        return Object(external_Vue_["createVNode"])(vmc_picker_picker, {
          "key": level,
          "prefixCls": pickerPrefixCls,
          "style": {
            flex: 1
          },
          "disabled": disabled,
          "data": children,
          "itemStyle": pickerItemStyle,
          "indicatorStyle": indicatorStyle
        }, null);
      });
    };

    {
      if (store) {
        store.onOk = onOk;
        store.onCancel = onCancel;
      }
    }
    Object(external_Vue_["onBeforeUpdate"])(function () {
      if (props.value !== undefined) {
        state.value = getValue(props.data, props.value);
      }
    });
    return {
      getCols: getCols,
      state: state,
      onValueChange: onValueChange,
      onScrollChange: onScrollChange
    };
  },
  render: function render() {
    var _pickerProps;

    var props = this.$props;
    var prefixCls = props.prefixCls;
    var cols = this.getCols();
    var multiStyle = {
      flexDirection: 'row',
      alignItems: 'center'
    };
    var pickerProps = (_pickerProps = {
      prefixCls: prefixCls,
      value: this.state.value,
      style: multiStyle
    }, cascader_defineProperty(_pickerProps, 'onUpdate:value', this.onValueChange), cascader_defineProperty(_pickerProps, "onScrollChange", this.onScrollChange), _pickerProps);
    return Object(external_Vue_["createVNode"])(multi_picker, pickerProps, cascader_isSlot(cols) ? cols : {
      default: function _default() {
        return [cols];
      }
    });
  }
}));
// CONCATENATED MODULE: ./src/packages/vmc-cascader/popup.tsx



/* harmony default export */ var vmc_cascader_popup = (Object(external_Vue_["defineComponent"])({
  name: 'PopupCascader',
  props: {
    cascader: {
      type: Object
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var store = Object(external_Vue_["inject"])('store', undefined);

    var onCancel = function onCancel() {
      if (store.onCancel) {
        store.onCancel();
      }

      emit('cancel');
    };

    var onChange = function onChange(v) {
      emit('change', v);
    };

    var onOk = function onOk(v) {
      if (store.onOk) {
        store.onOk(v);
      }

      emit('change', v);
      emit('ok');
    };

    return {
      onCancel: onCancel,
      onOk: onOk,
      onChange: onChange
    };
  },
  render: function render() {
    var _this = this;

    var props = Object.assign(Object.assign(Object.assign({
      picker: this.cascader
    }, this.$props), this.$attrs), {
      onCancel: this.onCancel,
      onChange: this.onChange,
      onOk: this.onOk
    });
    return Object(external_Vue_["createVNode"])(vmc_picker_popup, props, {
      picker: function picker() {
        return _this.cascader;
      },
      default: this.$slots.default
    });
  }
}));
// CONCATENATED MODULE: ./src/packages/picker/src/index.tsx


function picker_src_toConsumableArray(arr) { return picker_src_arrayWithoutHoles(arr) || picker_src_iterableToArray(arr) || picker_src_unsupportedIterableToArray(arr) || picker_src_nonIterableSpread(); }

function picker_src_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function picker_src_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return picker_src_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return picker_src_arrayLikeToArray(o, minLen); }

function picker_src_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function picker_src_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return picker_src_arrayLikeToArray(arr); }

function picker_src_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }










function picker_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var src_PickerMixin = function PickerMixin(isView) {
  return Object(external_Vue_["defineComponent"])({
    name: 'Picker',
    props: {
      placeholder: {
        type: String,
        default: ''
      },
      cancelText: {
        type: String,
        default: '取消'
      },
      okText: {
        type: String,
        default: '确定'
      },
      prefixCls: {
        type: String,
        default: 'am-picker'
      },
      triggerType: {
        type: String,
        default: 'click'
      },
      pickerPrefixCls: {
        type: String,
        default: 'am-picker-col'
      },
      popupPrefixCls: {
        type: String,
        default: 'am-picker-popup'
      },
      title: {
        type: [String, Object],
        default: ''
      },
      data: {},
      cascade: {
        type: Boolean,
        default: true
      },
      value: {
        type: Array
      },
      format: {
        type: Function,
        default: function _default(values) {
          // label is JSX.Element or other
          if (values.length > 0 && typeof values[0] !== 'string') {
            return values;
          }

          return values.join(',');
        }
      },
      cols: {
        type: Number,
        default: 3
      },
      extra: {},
      onChange: {},
      itemStyle: {},
      indicatorStyle: {},
      visible: {
        type: Boolean,
        default: false
      }
    },
    setup: function setup(props, _ref) {
      var emit = _ref.emit,
          slots = _ref.slots;

      var _a;

      var state = Object(external_Vue_["reactive"])({
        visible: props.visible
      });
      Object(external_Vue_["watch"])(function () {
        return props.visible;
      }, function (v) {
        state.visible = v;
      });
      Object(external_Vue_["watch"])(function () {
        return state.visible;
      }, function (v) {
        return emit('update:visible', v);
      });
      var currentValue = Object(external_Vue_["ref"])((_a = props.value) !== null && _a !== void 0 ? _a : []);
      var popupProps = Object(external_Vue_["ref"])(null);
      Object(external_Vue_["watch"])(function () {
        return props.value;
      }, function (v) {
        if (v && v !== currentValue.value) {
          currentValue.value = picker_src_toConsumableArray(v);
        }
      }, {
        immediate: true
      });

      var getSel = function getSel() {
        var value = currentValue.value || [];
        var treeChildren;
        var data = props.data;

        if (props.cascade) {
          treeChildren = lib_default()(data, function (c, level) {
            return c.value === value[level];
          });
        } else {
          treeChildren = value.map(function (v, i) {
            return data[i].filter(function (d) {
              return d.value === v;
            })[0];
          });
        }

        var extra = props.format && props.format(treeChildren.map(function (v) {
          return v.label;
        }));

        if (Array.isArray(extra)) {
          return extra[0];
        }

        return extra;
      };

      var getPickerCol = function getPickerCol() {
        var data = props.data,
            pickerPrefixCls = props.pickerPrefixCls,
            itemStyle = props.itemStyle,
            indicatorStyle = props.indicatorStyle;
        return data.map(function (col, index) {
          return Object(external_Vue_["createVNode"])(vmc_picker_picker, {
            "key": index,
            "prefixCls": pickerPrefixCls,
            "style": {
              flex: 1
            },
            "data": col,
            "itemStyle": itemStyle,
            "indicatorStyle": indicatorStyle
          }, null);
        });
      };

      var onOk = function onOk(v) {
        emit('update:value', picker_src_toConsumableArray(currentValue.value));
        state.visible = false;
      };

      var setScrollValue = function setScrollValue(v) {
        currentValue.value = v;
      };

      var setCasecadeScrollValue = function setCasecadeScrollValue(v) {
        // 级联情况下保证数据正确性，滚动过程中只有当最后一级变化时才变更数据
        if (v && currentValue.value) {
          var length = currentValue.value.length;

          if (length === v.length && currentValue.value[length - 1] === v[length - 1]) {
            return;
          }
        }

        setScrollValue(v);
      };

      var onPickerChange = function onPickerChange(v) {
        setScrollValue(v);
        emit('pickerChange', v);
      };

      var onCancel = function onCancel() {
        var _a;

        state.visible = false;
        currentValue.value = (_a = props.value) !== null && _a !== void 0 ? _a : [];
      };

      var getPlaceholder = function getPlaceholder() {
        return props.placeholder || '';
      };

      Object(external_Vue_["provide"])('store', {
        onOk: null
      });
      return {
        onOk: onOk,
        onPickerChange: onPickerChange,
        getSel: getSel,
        getPlaceholder: getPlaceholder,
        state: state,
        onCancel: onCancel,
        setCasecadeScrollValue: setCasecadeScrollValue,
        setScrollValue: setScrollValue,
        getPickerCol: getPickerCol,
        popupProps: popupProps,
        currentValue: currentValue
      };
    },
    render: function render() {
      var _this = this;

      var _a = this.$props,
          popupPrefixCls = _a.popupPrefixCls,
          itemStyle = _a.itemStyle,
          indicatorStyle = _a.indicatorStyle,
          okText = _a.okText,
          cancelText = _a.cancelText,
          extra = _a.extra,
          cascade = _a.cascade,
          prefixCls = _a.prefixCls,
          pickerPrefixCls = _a.pickerPrefixCls,
          data = _a.data,
          cols = _a.cols,
          restProps = tslib_es6_rest(_a, ["popupPrefixCls", "itemStyle", "indicatorStyle", "okText", "cancelText", "extra", "cascade", "prefixCls", "pickerPrefixCls", "data", "cols"]);

      var _cascader;

      var popupMoreProps = {};

      if (cascade) {
        _cascader = Object(external_Vue_["createVNode"])(cascader, {
          "prefixCls": prefixCls,
          "pickerPrefixCls": pickerPrefixCls,
          "data": data,
          "cols": cols,
          'value': _this.currentValue,
          "onUpdate:value": function onUpdateValue($event) {
            return _this.currentValue = $event;
          },
          "onChange": this.onPickerChange,
          "onScrollChange": this.setCasecadeScrollValue,
          "pickerItemStyle": itemStyle,
          "indicatorStyle": indicatorStyle
        }, null);
      } else {
        var _slot;

        _cascader = Object(external_Vue_["createVNode"])(multi_picker, {
          "style": {
            flexDirection: 'row',
            alignItems: 'center'
          },
          "prefixCls": prefixCls,
          'value': _this.currentValue,
          "onUpdate:value": function onUpdateValue($event) {
            return _this.currentValue = $event;
          },
          "onScrollChange": this.setScrollValue
        }, picker_src_isSlot(_slot = this.getPickerCol()) ? _slot : {
          default: function _default() {
            return [_slot];
          }
        });
        popupMoreProps = {
          pickerValueProp: 'value',
          pickerValueChangeProp: 'onValueChange'
        };
      }

      if (isView) {
        return _cascader;
      }

      var props = Object.assign(Object.assign(Object.assign(Object.assign({}, this.popupProps), restProps), popupMoreProps), {
        prefixCls: popupPrefixCls,
        visible: this.state.visible,
        cascader: _cascader,
        cancelText: cancelText,
        okText: okText,
        onOk: this.onOk,
        onCancel: this.onCancel
      });
      var childExtra = this.getSel() || extra || this.getPlaceholder() || '';
      return Object(external_Vue_["createVNode"])(vmc_cascader_popup, props, {
        cascader: function cascader() {
          return _cascader;
        },
        default: function _default() {
          return _this.$slots.default && _this.$slots.default().map(function (child) {
            var node = Object(external_Vue_["cloneVNode"])(child);
            vnode_setProps(node, {
              touchFeedback: true,
              extra: childExtra,
              arrow: 'horizontal',
              onClick: function onClick() {
                _this.state.visible = true;
              }
            });
            return node;
          });
        }
      });
    }
  });
};
/* harmony default export */ var picker_src = (src_PickerMixin(false));
// CONCATENATED MODULE: ./src/packages/picker/index.ts


var picker_Plugin = picker_src;

picker_Plugin.install = function (Vue) {
  Vue.component('MPicker', picker_src);
};

/* harmony default export */ var packages_picker = (picker_Plugin);
// CONCATENATED MODULE: ./src/packages/picker-view/src/index.ts

var PickerView = src_PickerMixin(true);
/* harmony default export */ var picker_view_src = (PickerView);
// CONCATENATED MODULE: ./src/packages/picker-view/index.ts


var picker_view_Plugin = picker_view_src;

picker_view_Plugin.install = function (app) {
  app.component('MPickerView', picker_view_src);
};

/* harmony default export */ var picker_view = (picker_view_Plugin);
// CONCATENATED MODULE: ./src/packages/progress/src/index.tsx


function progress_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var Progress = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'Progress',
  props: {
    prefixCls: {
      type: String,
      default: 'am-progress'
    },
    barStyle: {
      type: Object
    },
    percent: {
      type: Number,
      default: 0
    },
    position: {
      default: 'fixed'
    },
    unfilled: {
      type: Boolean,
      default: true
    },
    appearTransition: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var barRef = Object(external_Vue_["ref"])(null);
    var noAppearTransition = Object(external_Vue_["ref"])(true);
    Object(external_Vue_["onMounted"])(function () {
      if (props.appearTransition) {
        setTimeout(function () {
          if (barRef.value) {
            barRef.value.style.width = "".concat(props.percent, "%");
          }
        }, 10);
      }
    });
    return {
      noAppearTransition: noAppearTransition,
      barRef: barRef
    };
  },
  render: function render() {
    var _classnames,
        _this = this;

    var prefixCls = this.prefixCls,
        position = this.position,
        unfilled = this.unfilled,
        _this$barStyle = this.barStyle,
        barStyle = _this$barStyle === void 0 ? {} : _this$barStyle;
    var percentStyle = {
      width: this.noAppearTransition || !this.appearTransition ? "".concat(this.percent, "%") : 0,
      height: 0
    };
    var wrapCls = classnames_default()("".concat(prefixCls, "-outer"), (_classnames = {}, progress_src_defineProperty(_classnames, "".concat(prefixCls, "-fixed-outer"), position === 'fixed'), progress_src_defineProperty(_classnames, "".concat(prefixCls, "-hide-outer"), !unfilled), _classnames));
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls,
      "role": "progressbar",
      "aria-valuenow": this.percent,
      "aria-valuemin": 0,
      "aria-valuemax": 100
    }, [Object(external_Vue_["createVNode"])("div", {
      "ref": function ref(el) {
        return _this.barRef = el;
      },
      "class": "".concat(prefixCls, "-bar"),
      "style": Object.assign(Object.assign({}, barStyle), percentStyle)
    }, null)]);
  }
});
/* harmony default export */ var progress_src = (Progress);
// EXTERNAL MODULE: ./src/packages/progress/style/index.css
var progress_style = __webpack_require__("e170");

// CONCATENATED MODULE: ./src/packages/progress/style/index.ts

// CONCATENATED MODULE: ./src/packages/progress/index.ts



progress_src.install = function (app) {
  app.component('MProgress', progress_src);
};

/* harmony default export */ var progress = (progress_src);
// CONCATENATED MODULE: ./src/packages/pull-refresh/src/util.ts
/**
 * 这个文件来自vant
 *
 * @author wuhao
 * @since 2019/04/21
 */
// get nearest scroll element
// http://w3help.org/zh-cn/causes/SD9013
// http://stackoverflow.com/questions/17016740/onscroll-function-is-not-working-for-chrome
function getScrollEventTarget(element) {
  var rootParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
  var node = element;

  while (node && node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === 1 && node !== rootParent) {
    var _window$getComputedSt = window.getComputedStyle(node),
        overflowY = _window$getComputedSt.overflowY;

    if (overflowY === 'scroll' || overflowY === 'auto') {
      return node;
    }

    node = node.parentNode;
  }

  return rootParent;
}
function util_getScrollTop(element) {
  return 'scrollTop' in element ? element.scrollTop : element.pageYOffset;
}
function setScrollTop(element, value) {
  'scrollTop' in element ? element.scrollTop = value : element.scrollTo(element.scrollX, value);
} // get distance from element top to page top

function getElementTop(element) {
  return (element === window ? 0 : element.getBoundingClientRect().top) + util_getScrollTop(window);
}
function getVisibleHeight(element) {
  return element === window ? element.innerHeight : element.getBoundingClientRect().height;
}
// CONCATENATED MODULE: ./src/packages/pull-refresh/src/index.tsx








function src_setTransform(nodeStyle, value) {
  nodeStyle.transform = value;
  nodeStyle.webkitTransform = value;
  nodeStyle.MozTransform = value;
}

var isWebView = typeof navigator !== 'undefined' && /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);
var DOWN = 'down';
var UP = 'up';
var INDICATOR = {
  activate: 'release',
  deactivate: 'pull',
  release: 'loading',
  finish: 'finish'
};
var src_supportsPassive = false;

try {
  var src_opts = Object.defineProperty({}, 'passive', {
    get: function get() {
      src_supportsPassive = true;
    }
  });
  window.addEventListener('test', null, src_opts);
} catch (e) {// empty
}

var willPreventDefault = src_supportsPassive ? {
  passive: false
} : false;
/* harmony default export */ var pull_refresh_src = (Object(external_Vue_["defineComponent"])({
  inheritAttrs: false,
  name: 'PullToRefresh',
  props: {
    activateText: {
      type: String,
      default: '松开刷新'
    },
    deactivateText: {
      type: String,
      default: '取消刷新'
    },
    finishText: {
      type: String,
      default: '刷新完成'
    },
    getScrollContainer: {
      default: function _default() {
        return function () {
          return undefined;
        };
      }
    },
    direction: {
      type: String,
      default: DOWN
    },
    value: {},
    distanceToRefresh: {
      type: Number,
      default: 35
    },
    prefixCls: {
      type: String,
      default: 'am-pull-to-refresh'
    },
    damping: {
      type: Number,
      default: 80
    },
    indicatorHeight: {
      type: Number,
      default: 40
    },
    className: {}
  },
  setup: function setup(props, _ref) {
    var _this = this;

    var emit = _ref.emit;
    var currSt = Object(external_Vue_["ref"])('deactivate');
    var dragOnEdge = Object(external_Vue_["ref"])(false);
    var scrollEl = Object(external_Vue_["ref"])(null);

    var _to = Object(external_Vue_["ref"])(null);

    var _ScreenY = Object(external_Vue_["ref"])(null);

    var _startScreenY = Object(external_Vue_["ref"])(null);

    var _lastScreenY = Object(external_Vue_["ref"])(null);

    var _timer = Object(external_Vue_["ref"])(null);

    var _isMounted = Object(external_Vue_["ref"])(false);

    var containerRef = Object(external_Vue_["ref"])(null);
    var contentRef = Object(external_Vue_["ref"])(null);
    var indicator = Object(external_Vue_["computed"])(function () {
      return {
        activate: props.activateText,
        deactivate: props.deactivateText,
        release: Object(external_Vue_["createVNode"])(packages_icon, {
          "type": 'loading'
        }, null),
        finish: props.finishText
      };
    });

    var triggerPullToRefresh = function triggerPullToRefresh() {
      // 在初始化时、用代码 自动 触发 pullToRefresh
      // 注意：当 direction 为 up 时，当 visible length < content length 时、则看不到效果
      // 添加this._isMounted的判断，否则组建一实例化，currSt就会是finish
      if (!dragOnEdge.value && _isMounted.value) {
        if (props.value) {
          if (props.direction === UP) {
            _lastScreenY.value = -props.distanceToRefresh - 1;
          }

          if (props.direction === DOWN) {
            _lastScreenY.value = props.distanceToRefresh + 1;
          } // change dom need after setState


          currSt.value = 'release';
          setContentStyle(_lastScreenY.value);
        } else {
          currSt.value = 'finish';
          reset();
        }
      }
    };

    var init = function init(ele) {
      if (!ele) {
        // like return in destroy fn ???!!
        return;
      }

      _to.value = {
        touchstart: onTouchStart.bind(_this).bind(_this, ele),
        touchmove: onTouchMove.bind(_this).bind(_this, ele),
        touchend: onTouchEnd.bind(_this).bind(_this, ele),
        touchcancel: onTouchEnd.bind(_this).bind(_this, ele)
      };
      Object.keys(_to.value).forEach(function (key) {
        ele.addEventListener(key, _to.value[key], willPreventDefault);
      });
    };

    var destroy = function destroy(ele) {
      if (!_to.value || !ele) {
        // componentWillUnmount fire before componentDidMount, like forceUpdate ???!!
        return;
      }

      Object.keys(_to.value).forEach(function (key) {
        ele.removeEventListener(key, _to.value[key]);
      });
    };

    var onTouchStart = function onTouchStart(_ele, e) {
      _ScreenY.value = _startScreenY.value = e.touches[0].screenY; // 一开始 value 为 true 时 this._lastScreenY 有值

      _lastScreenY.value = _lastScreenY.value || 0;
    };

    var isEdge = function isEdge() {
      var direction = props.direction;
      var container = props.getScrollContainer() || containerRef.value;

      if (container && container === document.body) {
        // In chrome61 `document.body.scrollTop` is invalid
        var scrollNode = document.scrollingElement ? document.scrollingElement : document.body;

        if (direction === UP) {
          return scrollNode.scrollHeight - scrollNode.scrollTop <= window.innerHeight;
        }

        if (direction === DOWN) {
          return scrollNode.scrollTop <= 0;
        }
      }

      var scrollTop = util_getScrollTop(scrollEl.value);

      if (direction === UP) {
        return scrollEl.value.scrollHeight - scrollTop === scrollEl.value.clientHeight;
      }

      if (direction === DOWN) {
        return scrollTop <= 0;
      }

      return undefined;
    };

    var dampingFunc = function dampingFunc(dy) {
      if (Math.abs(_lastScreenY.value) > props.damping) {
        return 0;
      }

      var ratio = Math.abs(_ScreenY.value - _startScreenY.value) / window.screen.height;
      return dy * (1 - ratio) * 0.6;
    };

    var onTouchMove = function onTouchMove(ele, e) {
      // 使用 pageY 对比有问题
      var _screenY = e.touches[0].screenY; // 拖动方向不符合的不处理

      if (props.direction === UP && _startScreenY.value < _screenY || props.direction === DOWN && _startScreenY.value > _screenY) {
        return;
      }

      if (isEdge()) {
        if (!dragOnEdge.value) {
          // 当用户开始往上滑的时候isEdge还是false的话，会导致this._ScreenY不是想要的，只有当isEdge为true时，再上滑，才有意义
          // 下面这行代码解决了上面这个问题
          _ScreenY.value = _startScreenY.value = e.touches[0].screenY;
          dragOnEdge.value = true;
        }

        e.preventDefault(); // add stopPropagation with fastclick will trigger content onClick event. why?
        // ref https://github.com/ant-design/ant-design-mobile/issues/2141
        // e.stopPropagation();

        var _diff = Math.round(_screenY - _ScreenY.value);

        _ScreenY.value = _screenY;
        _lastScreenY.value += dampingFunc(_diff);
        setContentStyle(_lastScreenY.value);

        if (Math.abs(_lastScreenY.value) < props.distanceToRefresh) {
          if (currSt.value !== 'deactivate') {
            currSt.value = 'deactivate';
          }
        } else {
          if (currSt.value === 'deactivate') {
            currSt.value = 'activate';
          }
        } // https://github.com/ant-design/ant-design-mobile/issues/573#issuecomment-339560829
        // iOS UIWebView issue, It seems no problem in WKWebView


        if (isWebView && e.changedTouches[0].clientY < 0) {
          onTouchEnd();
        }
      }
    };

    var onTouchEnd = function onTouchEnd() {
      if (dragOnEdge.value) {
        dragOnEdge.value = false;
      }

      if (currSt.value === 'activate') {
        currSt.value = 'release';
        _timer.value = setTimeout(function () {
          if (!props.value) {
            currSt.value = 'finish';
            reset();
          }

          _timer.value = undefined;
        }, 1000);
        setContentStyle(props.indicatorHeight);
        emit('refresh');
        emit('update:value', true);
      } else {
        reset();
      }
    };

    var reset = function reset() {
      _lastScreenY.value = 0;
      setContentStyle(0);
    };

    var setContentStyle = function setContentStyle(ty) {
      // todos: Why sometimes do not have `this.contentRef` ?
      if (contentRef.value) {
        src_setTransform(contentRef.value.style, "translate3d(0px,".concat(ty, "px,0)"));
      }
    };

    Object(external_Vue_["onUpdated"])(function () {
      if (!props.value) {
        // triggerPullToRefresh 需要尽可能减少 setState 次数
        triggerPullToRefresh();
      }
    });
    var instance = Object(external_Vue_["getCurrentInstance"])();
    Object(external_Vue_["onMounted"])(function () {
      scrollEl.value = getScrollEventTarget(instance.vnode.el); // `getScrollContainer` most likely return React.Node at the next tick. Need setTimeout

      setTimeout(function () {
        init(props.getScrollContainer() || containerRef.value);
        triggerPullToRefresh();
        _isMounted.value = true;
      });
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      // Should have no setTimeout here!
      destroy(props.getScrollContainer() || containerRef.value);
    });
    return {
      setContainerRef: function setContainerRef(el) {
        containerRef.value = el;
      },
      setContentRef: function setContentRef(el) {
        contentRef.value = el;
      },
      indicator: indicator,
      dragOnEdge: dragOnEdge,
      currSt: currSt
    };
  },
  render: function render() {
    var _this2 = this;

    var _a = this,
        prefixCls = _a.prefixCls,
        getScrollContainer = _a.getScrollContainer,
        direction = _a.direction,
        value = _a.value,
        indicator = _a.indicator,
        distanceToRefresh = _a.distanceToRefresh,
        restProps = tslib_es6_rest(_a, ["prefixCls", "getScrollContainer", "direction", "value", "indicator", "distanceToRefresh"]);

    var renderChildren = Object(external_Vue_["createVNode"])("div", null, [this.$slots.default()]);

    var renderRefresh = function renderRefresh(cls) {
      var cla = classnames_default()(cls, !_this2.dragOnEdge && "".concat(prefixCls, "-transition"));
      return Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-content-wrapper")
      }, [Object(external_Vue_["createVNode"])("div", {
        "class": cla,
        "ref": _this2.setContentRef
      }, [direction === UP ? renderChildren : null, Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-indicator")
      }, [indicator[_this2.currSt] || INDICATOR[_this2.currSt]]), direction === DOWN ? renderChildren : null])]);
    };

    if (getScrollContainer()) {
      return renderRefresh("".concat(prefixCls, "-content ").concat(prefixCls, "-").concat(direction));
    }

    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "ref": this.setContainerRef,
      "class": classnames_default()(this.className, prefixCls, "".concat(prefixCls, "-").concat(direction))
    }, filterHTMLAttrs(restProps)), [renderRefresh("".concat(prefixCls, "-content"))]);
  }
}));
// EXTERNAL MODULE: ./src/packages/pull-refresh/style/index.less
var pull_refresh_style = __webpack_require__("0fc5");

// CONCATENATED MODULE: ./src/packages/pull-refresh/style/index.tsx


// CONCATENATED MODULE: ./src/packages/pull-refresh/index.ts


var pull_refresh_Plugin = pull_refresh_src;

pull_refresh_Plugin.install = function (Vue) {
  Vue.component('MPullRefresh', pull_refresh_src);
};

/* harmony default export */ var pull_refresh = (pull_refresh_Plugin);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/Handle.js


function Handle_extends() { Handle_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Handle_extends.apply(this, arguments); }

function Handle_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







/* harmony default export */ var Handle = (Object(external_Vue_["defineComponent"])({
  name: 'Handle',
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    prefixCls: vue_types.string,
    vertical: vue_types.looseBool,
    offset: vue_types.number,
    disabled: vue_types.looseBool,
    min: vue_types.number,
    max: vue_types.number,
    value: vue_types.number,
    tabindex: vue_types.number,
    reverse: vue_types.looseBool // handleFocus: PropTypes.func.def(noop),
    // handleBlur: PropTypes.func.def(noop),

  },
  data: function data() {
    return {
      clickFocused: false
    };
  },
  mounted: function mounted() {
    // mouseup won't trigger if mouse moved out of handle
    // so we listen on document here.
    this.onMouseUpListener = addEventListenerWrap(document, 'mouseup', this.handleMouseUp);
  },
  beforeUnmount: function beforeUnmount() {
    if (this.onMouseUpListener) {
      this.onMouseUpListener.remove();
    }
  },
  methods: {
    setHandleRef: function setHandleRef(node) {
      this.handle = node;
    },
    setClickFocus: function setClickFocus(focused) {
      this.setState({
        clickFocused: focused
      });
    },
    handleMouseUp: function handleMouseUp() {
      if (document.activeElement === this.handle) {
        this.setClickFocus(true);
      }
    },
    handleBlur: function handleBlur(e) {
      this.setClickFocus(false);

      this.__emit('blur', e);
    },
    handleKeyDown: function handleKeyDown() {
      this.setClickFocus(false);
    },
    clickFocus: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    },
    focus: function focus() {
      this.handle.focus();
    },
    blur: function blur() {
      this.handle.blur();
    },
    // when click can not focus in vue, use mousedown trigger focus
    handleMousedown: function handleMousedown(e) {
      this.focus();

      this.__emit('mousedown', e);
    }
  },
  render: function render() {
    var _ref, _ref2;

    var _getOptionProps = props_util_getOptionProps(this),
        prefixCls = _getOptionProps.prefixCls,
        vertical = _getOptionProps.vertical,
        reverse = _getOptionProps.reverse,
        offset = _getOptionProps.offset,
        disabled = _getOptionProps.disabled,
        min = _getOptionProps.min,
        max = _getOptionProps.max,
        value = _getOptionProps.value,
        tabindex = _getOptionProps.tabindex;

    var className = _util_classNames(this.$attrs.class, Handle_defineProperty({}, "".concat(prefixCls, "-handle-click-focused"), this.clickFocused));
    var positionStyle = vertical ? (_ref = {}, Handle_defineProperty(_ref, reverse ? 'top' : 'bottom', "".concat(offset, "%")), Handle_defineProperty(_ref, reverse ? 'bottom' : 'top', 'auto'), Handle_defineProperty(_ref, "transform", "translateY(+50%)"), _ref) : (_ref2 = {}, Handle_defineProperty(_ref2, reverse ? 'right' : 'left', "".concat(offset, "%")), Handle_defineProperty(_ref2, reverse ? 'left' : 'right', 'auto'), Handle_defineProperty(_ref2, "transform", "translateX(".concat(reverse ? '+' : '-', "50%)")), _ref2);
    var ariaProps = {
      'aria-valuemin': min,
      'aria-valuemax': max,
      'aria-valuenow': value,
      'aria-disabled': !!disabled
    };

    var elStyle = Handle_extends(Handle_extends({}, this.$attrs.style), positionStyle);

    var _tabIndex = tabindex || 0;

    if (disabled || tabindex === null) {
      _tabIndex = null;
    }

    var handleProps = Handle_extends(Handle_extends(Handle_extends(Handle_extends({}, this.$attrs), {
      role: 'slider',
      tabindex: _tabIndex
    }), ariaProps), {
      class: className,
      onBlur: this.handleBlur,
      onKeydown: this.handleKeyDown,
      onMousedown: this.handleMousedown,
      ref: this.setHandleRef,
      style: elStyle
    });

    return Object(external_Vue_["createVNode"])("div", handleProps, null);
  }
}));
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/Track.js


function Track_extends() { Track_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Track_extends.apply(this, arguments); }

function Track_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable */
var Track_Track = function Track(_, _ref) {
  var _ref2, _ref3;

  var attrs = _ref.attrs;
  var included = attrs.included,
      vertical = attrs.vertical,
      offset = attrs.offset,
      length = attrs.length,
      reverse = attrs.reverse,
      style = attrs.style,
      className = attrs.class;
  var positonStyle = vertical ? (_ref2 = {}, Track_defineProperty(_ref2, reverse ? 'top' : 'bottom', "".concat(offset, "%")), Track_defineProperty(_ref2, reverse ? 'bottom' : 'top', 'auto'), Track_defineProperty(_ref2, "height", "".concat(length, "%")), _ref2) : (_ref3 = {}, Track_defineProperty(_ref3, reverse ? 'right' : 'left', "".concat(offset, "%")), Track_defineProperty(_ref3, reverse ? 'left' : 'right', 'auto'), Track_defineProperty(_ref3, "width", "".concat(length, "%")), _ref3);

  var elStyle = Track_extends(Track_extends({}, style), positonStyle);

  return included ? Object(external_Vue_["createVNode"])("div", {
    "class": className,
    "style": elStyle
  }, null) : null;
};

Track_Track.inheritAttrs = false;
/* harmony default export */ var common_Track = (Track_Track);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/Steps.js


function Steps_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Steps_extends() { Steps_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Steps_extends.apply(this, arguments); }




var Steps_calcPoints = function calcPoints(vertical, marks, dots, step, min, max) {
  _util_warning(dots ? step > 0 : true, 'Slider', '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
  var points = Object.keys(marks).map(parseFloat).sort(function (a, b) {
    return a - b;
  });

  if (dots && step) {
    for (var i = min; i <= max; i += step) {
      if (points.indexOf(i) === -1) {
        points.push(i);
      }
    }
  }

  return points;
};

var Steps_Steps = function Steps(_, _ref) {
  var attrs = _ref.attrs;
  var prefixCls = attrs.prefixCls,
      vertical = attrs.vertical,
      reverse = attrs.reverse,
      marks = attrs.marks,
      dots = attrs.dots,
      step = attrs.step,
      included = attrs.included,
      lowerBound = attrs.lowerBound,
      upperBound = attrs.upperBound,
      max = attrs.max,
      min = attrs.min,
      dotStyle = attrs.dotStyle,
      activeDotStyle = attrs.activeDotStyle;
  var range = max - min;
  var elements = Steps_calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
    var _classNames;

    var offset = "".concat(Math.abs(point - min) / range * 100, "%");
    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
    var style = vertical ? Steps_extends(Steps_extends({}, dotStyle), Steps_defineProperty({}, reverse ? 'top' : 'bottom', offset)) : Steps_extends(Steps_extends({}, dotStyle), Steps_defineProperty({}, reverse ? 'right' : 'left', offset));

    if (isActived) {
      style = Steps_extends(Steps_extends({}, style), activeDotStyle);
    }

    var pointClassName = _util_classNames((_classNames = {}, Steps_defineProperty(_classNames, "".concat(prefixCls, "-dot"), true), Steps_defineProperty(_classNames, "".concat(prefixCls, "-dot-active"), isActived), Steps_defineProperty(_classNames, "".concat(prefixCls, "-dot-reverse"), reverse), _classNames));
    return Object(external_Vue_["createVNode"])("span", {
      "class": pointClassName,
      "style": style,
      "key": point
    }, null);
  });
  return Object(external_Vue_["createVNode"])("div", {
    "class": "".concat(prefixCls, "-step")
  }, [elements]);
};

Steps_Steps.inheritAttrs = false;
/* harmony default export */ var common_Steps = (Steps_Steps);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/Marks.js


function Marks_extends() { Marks_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Marks_extends.apply(this, arguments); }

function Marks_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Marks_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Marks_typeof = function _typeof(obj) { return typeof obj; }; } else { Marks_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Marks_typeof(obj); }




var Marks_Marks = function Marks(_, _ref) {
  var attrs = _ref.attrs;
  var className = attrs.class,
      vertical = attrs.vertical,
      reverse = attrs.reverse,
      marks = attrs.marks,
      included = attrs.included,
      upperBound = attrs.upperBound,
      lowerBound = attrs.lowerBound,
      max = attrs.max,
      min = attrs.min,
      onClickLabel = attrs.onClickLabel;
  var marksKeys = Object.keys(marks);
  var range = max - min;
  var elements = marksKeys.map(parseFloat).sort(function (a, b) {
    return a - b;
  }).map(function (point) {
    var _classNames;

    var markPoint = typeof marks[point] === 'function' ? marks[point](h) : marks[point];
    var markPointIsObject = Marks_typeof(markPoint) === 'object' && !isValidElement(markPoint);
    var markLabel = markPointIsObject ? markPoint.label : markPoint;

    if (!markLabel && markLabel !== 0) {
      return null;
    }

    var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
    var markClassName = _util_classNames((_classNames = {}, Marks_defineProperty(_classNames, "".concat(className, "-text"), true), Marks_defineProperty(_classNames, "".concat(className, "-text-active"), isActive), _classNames));

    var bottomStyle = Marks_defineProperty({
      marginBottom: '-50%'
    }, reverse ? 'top' : 'bottom', "".concat((point - min) / range * 100, "%"));

    var leftStyle = Marks_defineProperty({
      transform: "translateX(-50%)",
      msTransform: "translateX(-50%)"
    }, reverse ? 'right' : 'left', reverse ? "".concat((point - min / 4) / range * 100, "%") : "".concat((point - min) / range * 100, "%"));

    var style = vertical ? bottomStyle : leftStyle;
    var markStyle = markPointIsObject ? Marks_extends(Marks_extends({}, style), markPoint.style) : style;
    return Object(external_Vue_["createVNode"])("span", {
      "class": markClassName,
      "style": markStyle,
      "key": point,
      "onMousedown": function onMousedown(e) {
        return onClickLabel(e, point);
      },
      "onTouchstart": function onTouchstart(e) {
        return onClickLabel(e, point);
      }
    }, [markLabel]);
  });
  return Object(external_Vue_["createVNode"])("div", {
    "class": className
  }, [elements]);
};

Marks_Marks.inheritAttrs = false;
/* harmony default export */ var common_Marks = (Marks_Marks);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/utils.js
function utils_toConsumableArray(arr) { return utils_arrayWithoutHoles(arr) || utils_iterableToArray(arr) || utils_unsupportedIterableToArray(arr) || utils_nonIterableSpread(); }

function utils_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function utils_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return utils_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return utils_arrayLikeToArray(o, minLen); }

function utils_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function utils_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return utils_arrayLikeToArray(arr); }

function utils_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



function isEventFromHandle(e, handles) {
  try {
    return Object.keys(handles).some(function (key) {
      return e.target === findDOMNode(handles[key]) || e.target === handles[key];
    });
  } catch (error) {
    return false;
  }
}
function isValueOutOfRange(value, _ref) {
  var min = _ref.min,
      max = _ref.max;
  return value < min || value > max;
}
function isNotTouchEvent(e) {
  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
}
function getClosestPoint(val, _ref2) {
  var marks = _ref2.marks,
      step = _ref2.step,
      min = _ref2.min,
      max = _ref2.max;
  var points = Object.keys(marks).map(parseFloat);

  if (step !== null) {
    var base = Math.pow(10, utils_getPrecision(step));
    var maxSteps = Math.floor((max * base - min * base) / (step * base));
    var steps = Math.min((val - min) / step, maxSteps);
    var closestStep = Math.round(steps) * step + min;
    points.push(closestStep);
  }

  var diffs = points.map(function (point) {
    return Math.abs(val - point);
  });
  return points[diffs.indexOf(Math.min.apply(Math, utils_toConsumableArray(diffs)))];
}
function utils_getPrecision(step) {
  var stepString = step.toString();
  var precision = 0;

  if (stepString.indexOf('.') >= 0) {
    precision = stepString.length - stepString.indexOf('.') - 1;
  }

  return precision;
}
function getMousePosition(vertical, e) {
  var zoom = 1;

  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }

  return (vertical ? e.clientY : e.pageX) / zoom;
}
function getTouchPosition(vertical, e) {
  var zoom = 1;

  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }

  return (vertical ? e.touches[0].clientY : e.touches[0].pageX) / zoom;
}
function getHandleCenterPosition(vertical, handle) {
  var coords = handle.getBoundingClientRect();
  return vertical ? coords.top + coords.height * 0.5 : window.pageXOffset + coords.left + coords.width * 0.5;
}
function ensureValueInRange(val, _ref3) {
  var max = _ref3.max,
      min = _ref3.min;

  if (val <= min) {
    return min;
  }

  if (val >= max) {
    return max;
  }

  return val;
}
function ensureValuePrecision(val, props) {
  var step = props.step;
  var closestPoint = isFinite(getClosestPoint(val, props)) ? getClosestPoint(val, props) : 0; // eslint-disable-line

  return step === null ? closestPoint : parseFloat(closestPoint.toFixed(utils_getPrecision(step)));
}
function pauseEvent(e) {
  e.stopPropagation();
  e.preventDefault();
}
function calculateNextValue(func, value, props) {
  var operations = {
    increase: function increase(a, b) {
      return a + b;
    },
    decrease: function decrease(a, b) {
      return a - b;
    }
  };
  var indexToGet = operations[func](Object.keys(props.marks).indexOf(JSON.stringify(value)), 1);
  var keyToGet = Object.keys(props.marks)[indexToGet];

  if (props.step) {
    return operations[func](value, props.step);
  } else if (!!Object.keys(props.marks).length && !!props.marks[keyToGet]) {
    return props.marks[keyToGet];
  }

  return value;
}
function getKeyboardValueMutator(e, vertical, reverse) {
  var increase = 'increase';
  var decrease = 'decrease';
  var method = increase;

  switch (e.keyCode) {
    case _util_KeyCode.UP:
      method = vertical && reverse ? decrease : increase;
      break;

    case _util_KeyCode.RIGHT:
      method = !vertical && reverse ? decrease : increase;
      break;

    case _util_KeyCode.DOWN:
      method = vertical && reverse ? increase : decrease;
      break;

    case _util_KeyCode.LEFT:
      method = !vertical && reverse ? increase : decrease;
      break;

    case _util_KeyCode.END:
      return function (value, props) {
        return props.max;
      };

    case _util_KeyCode.HOME:
      return function (value, props) {
        return props.min;
      };

    case _util_KeyCode.PAGE_UP:
      return function (value, props) {
        return value + props.step * 2;
      };

    case _util_KeyCode.PAGE_DOWN:
      return function (value, props) {
        return value - props.step * 2;
      };

    default:
      return undefined;
  }

  return function (value, props) {
    return calculateNextValue(method, value, props);
  };
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/createSlider.js


function createSlider_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function createSlider_extends() { createSlider_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return createSlider_extends.apply(this, arguments); }

var createSlider_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};













function createSlider_noop() {}

function createSlider(Component) {
  // const displayName = `ComponentEnhancer(${Component.displayName})`
  var propTypes = {
    min: vue_types.number,
    max: vue_types.number,
    step: vue_types.number,
    marks: vue_types.object,
    included: vue_types.looseBool,
    prefixCls: vue_types.string,
    disabled: vue_types.looseBool,
    handle: vue_types.func,
    dots: vue_types.looseBool,
    vertical: vue_types.looseBool,
    reverse: vue_types.looseBool,
    minimumTrackStyle: vue_types.object,
    maximumTrackStyle: vue_types.object,
    handleStyle: vue_types.oneOfType([vue_types.object, vue_types.arrayOf(vue_types.object)]),
    trackStyle: vue_types.oneOfType([vue_types.object, vue_types.arrayOf(vue_types.object)]),
    railStyle: vue_types.object,
    dotStyle: vue_types.object,
    activeDotStyle: vue_types.object,
    autofocus: vue_types.looseBool
  };
  return Object(external_Vue_["defineComponent"])({
    name: 'CreateSlider',
    mixins: [BaseMixin, Component],
    inheritAttrs: false,
    // model: {
    //   prop: 'value',
    //   event: 'change',
    // },
    props: initDefaultProps(propTypes, {
      prefixCls: 'rc-slider',
      min: 0,
      max: 100,
      step: 1,
      marks: {},
      included: true,
      disabled: false,
      dots: false,
      vertical: false,
      reverse: false,
      trackStyle: [{}],
      handleStyle: [{}],
      railStyle: {},
      dotStyle: {},
      activeDotStyle: {}
    }),
    data: function data() {
      var step = this.step,
          max = this.max,
          min = this.min;
      var isPointDiffEven = isFinite(max - min) ? (max - min) % step === 0 : true; // eslint-disable-line

      _util_warning(step && Math.floor(step) === step ? isPointDiffEven : true, 'Slider', 'Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)', max - min, step);
      this.handlesRefs = {};
      return {};
    },
    mounted: function mounted() {
      var _this = this;

      this.$nextTick(function () {
        // Snapshot testing cannot handle refs, so be sure to null-check this.
        _this.document = _this.sliderRef && _this.sliderRef.ownerDocument; // this.setHandleRefs()

        var autofocus = _this.autofocus,
            disabled = _this.disabled;

        if (autofocus && !disabled) {
          _this.focus();
        }
      });
    },
    beforeUnmount: function beforeUnmount() {
      var _this2 = this;

      this.$nextTick(function () {
        // if (super.componentWillUnmount) super.componentWillUnmount()
        _this2.removeDocumentEvents();
      });
    },
    methods: {
      defaultHandle: function defaultHandle(_a) {
        var index = _a.index,
            directives = _a.directives,
            className = _a.className,
            style = _a.style,
            restProps = createSlider_rest(_a, ["index", "directives", "className", "style"]);

        delete restProps.dragging;

        if (restProps.value === null) {
          return null;
        }

        var handleProps = createSlider_extends(createSlider_extends({}, restProps), {
          class: className,
          style: style,
          key: index
        });

        return Object(external_Vue_["createVNode"])(Handle, handleProps, null);
      },
      onMouseDown: function onMouseDown(e) {
        if (e.button !== 0) {
          return;
        }

        var isVertical = this.vertical;
        var position = getMousePosition(isVertical, e);

        if (!isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }

        this.removeDocumentEvents();
        this.onStart(position);
        this.addDocumentMouseEvents();
        pauseEvent(e);
      },
      onTouchStart: function onTouchStart(e) {
        if (isNotTouchEvent(e)) return;
        var isVertical = this.vertical;
        var position = getTouchPosition(isVertical, e);

        if (!isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }

        this.onStart(position);
        this.addDocumentTouchEvents();
        pauseEvent(e);
      },
      onFocus: function onFocus(e) {
        var vertical = this.vertical;

        if (isEventFromHandle(e, this.handlesRefs)) {
          var handlePosition = getHandleCenterPosition(vertical, e.target);
          this.dragOffset = 0;
          this.onStart(handlePosition);
          pauseEvent(e);

          this.__emit('focus', e);
        }
      },
      onBlur: function onBlur(e) {
        this.onEnd();

        this.__emit('blur', e);
      },
      onMouseUp: function onMouseUp() {
        if (this.handlesRefs[this.prevMovedHandleIndex]) {
          this.handlesRefs[this.prevMovedHandleIndex].clickFocus();
        }
      },
      onMouseMove: function onMouseMove(e) {
        if (!this.sliderRef) {
          this.onEnd();
          return;
        }

        var position = getMousePosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onTouchMove: function onTouchMove(e) {
        if (isNotTouchEvent(e) || !this.sliderRef) {
          this.onEnd();
          return;
        }

        var position = getTouchPosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onKeyDown: function onKeyDown(e) {
        if (this.sliderRef && isEventFromHandle(e, this.handlesRefs)) {
          this.onKeyboard(e);
        }
      },
      onClickMarkLabel: function onClickMarkLabel(e, value) {
        var _this3 = this;

        e.stopPropagation();
        this.onChange({
          sValue: value
        });
        this.setState({
          sValue: value
        }, function () {
          return _this3.onEnd(true);
        });
      },
      getSliderStart: function getSliderStart() {
        var slider = this.sliderRef;
        var vertical = this.vertical,
            reverse = this.reverse;
        var rect = slider.getBoundingClientRect();

        if (vertical) {
          return reverse ? rect.bottom : rect.top;
        }

        return window.pageXOffset + (reverse ? rect.right : rect.left);
      },
      getSliderLength: function getSliderLength() {
        var slider = this.sliderRef;

        if (!slider) {
          return 0;
        }

        var coords = slider.getBoundingClientRect();
        return this.vertical ? coords.height : coords.width;
      },
      addDocumentTouchEvents: function addDocumentTouchEvents() {
        // just work for Chrome iOS Safari and Android Browser
        this.onTouchMoveListener = addEventListenerWrap(this.document, 'touchmove', this.onTouchMove);
        this.onTouchUpListener = addEventListenerWrap(this.document, 'touchend', this.onEnd);
      },
      addDocumentMouseEvents: function addDocumentMouseEvents() {
        this.onMouseMoveListener = addEventListenerWrap(this.document, 'mousemove', this.onMouseMove);
        this.onMouseUpListener = addEventListenerWrap(this.document, 'mouseup', this.onEnd);
      },
      removeDocumentEvents: function removeDocumentEvents() {
        /* eslint-disable no-unused-expressions */
        this.onTouchMoveListener && this.onTouchMoveListener.remove();
        this.onTouchUpListener && this.onTouchUpListener.remove();
        this.onMouseMoveListener && this.onMouseMoveListener.remove();
        this.onMouseUpListener && this.onMouseUpListener.remove();
        /* eslint-enable no-unused-expressions */
      },
      focus: function focus() {
        if (!this.disabled) {
          this.handlesRefs[0].focus();
        }
      },
      blur: function blur() {
        var _this4 = this;

        if (!this.disabled) {
          Object.keys(this.handlesRefs).forEach(function (key) {
            if (_this4.handlesRefs[key] && _this4.handlesRefs[key].blur) {
              _this4.handlesRefs[key].blur();
            }
          });
        }
      },
      calcValue: function calcValue(offset) {
        var vertical = this.vertical,
            min = this.min,
            max = this.max;
        var ratio = Math.abs(Math.max(offset, 0) / this.getSliderLength());
        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
        return value;
      },
      calcValueByPos: function calcValueByPos(position) {
        var sign = this.reverse ? -1 : +1;
        var pixelOffset = sign * (position - this.getSliderStart());
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
      },
      calcOffset: function calcOffset(value) {
        var min = this.min,
            max = this.max;
        var ratio = (value - min) / (max - min);
        return ratio * 100;
      },
      saveSlider: function saveSlider(slider) {
        this.sliderRef = slider;
      },
      saveHandle: function saveHandle(index, handle) {
        this.handlesRefs[index] = handle;
      }
    },
    render: function render() {
      var _classNames;

      var prefixCls = this.prefixCls,
          marks = this.marks,
          dots = this.dots,
          step = this.step,
          included = this.included,
          disabled = this.disabled,
          vertical = this.vertical,
          reverse = this.reverse,
          min = this.min,
          max = this.max,
          maximumTrackStyle = this.maximumTrackStyle,
          railStyle = this.railStyle,
          dotStyle = this.dotStyle,
          activeDotStyle = this.activeDotStyle;
      var _this$$attrs = this.$attrs,
          className = _this$$attrs.class,
          style = _this$$attrs.style,
          id = _this$$attrs.id;

      var _this$renderSlider = this.renderSlider(),
          tracks = _this$renderSlider.tracks,
          handles = _this$renderSlider.handles;

      var sliderClassName = _util_classNames(prefixCls, className, (_classNames = {}, createSlider_defineProperty(_classNames, "".concat(prefixCls, "-with-marks"), Object.keys(marks).length), createSlider_defineProperty(_classNames, "".concat(prefixCls, "-disabled"), disabled), createSlider_defineProperty(_classNames, "".concat(prefixCls, "-vertical"), vertical), _classNames));
      var markProps = {
        vertical: vertical,
        marks: marks,
        included: included,
        lowerBound: this.getLowerBound(),
        upperBound: this.getUpperBound(),
        max: max,
        min: min,
        reverse: reverse,
        class: "".concat(prefixCls, "-mark"),
        onClickLabel: disabled ? createSlider_noop : this.onClickMarkLabel
      };
      return Object(external_Vue_["createVNode"])("div", {
        "id": id,
        "ref": this.saveSlider,
        "tabindex": "-1",
        "class": sliderClassName,
        "onTouchstart": disabled ? createSlider_noop : this.onTouchStart,
        "onMousedown": disabled ? createSlider_noop : this.onMouseDown,
        "onMouseup": disabled ? createSlider_noop : this.onMouseUp,
        "onKeydown": disabled ? createSlider_noop : this.onKeyDown,
        "onFocus": disabled ? createSlider_noop : this.onFocus,
        "onBlur": disabled ? createSlider_noop : this.onBlur,
        "style": style
      }, [Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-rail"),
        "style": createSlider_extends(createSlider_extends({}, maximumTrackStyle), railStyle)
      }, null), tracks, Object(external_Vue_["createVNode"])(common_Steps, {
        "prefixCls": prefixCls,
        "vertical": vertical,
        "reverse": reverse,
        "marks": marks,
        "dots": dots,
        "step": step,
        "included": included,
        "lowerBound": this.getLowerBound(),
        "upperBound": this.getUpperBound(),
        "max": max,
        "min": min,
        "dotStyle": dotStyle,
        "activeDotStyle": activeDotStyle
      }, null), handles, Object(external_Vue_["createVNode"])(common_Marks, markProps, null), props_util_getSlot(this)]);
    }
  });
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/Range.js


function Range_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Range_extends() { Range_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Range_extends.apply(this, arguments); }

function Range_toConsumableArray(arr) { return Range_arrayWithoutHoles(arr) || Range_iterableToArray(arr) || Range_unsupportedIterableToArray(arr) || Range_nonIterableSpread(); }

function Range_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function Range_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Range_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Range_arrayLikeToArray(o, minLen); }

function Range_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function Range_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Range_arrayLikeToArray(arr); }

function Range_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }









var _trimAlignValue = function trimAlignValue(_ref) {
  var value = _ref.value,
      handle = _ref.handle,
      bounds = _ref.bounds,
      props = _ref.props;
  var allowCross = props.allowCross,
      pushable = props.pushable;
  var thershold = Number(pushable);
  var valInRange = ensureValueInRange(value, props);
  var valNotConflict = valInRange;

  if (!allowCross && handle != null && bounds !== undefined) {
    if (handle > 0 && valInRange <= bounds[handle - 1] + thershold) {
      valNotConflict = bounds[handle - 1] + thershold;
    }

    if (handle < bounds.length - 1 && valInRange >= bounds[handle + 1] - thershold) {
      valNotConflict = bounds[handle + 1] - thershold;
    }
  }

  return ensureValuePrecision(valNotConflict, props);
};

var rangeProps = {
  defaultValue: vue_types.arrayOf(vue_types.number),
  value: vue_types.arrayOf(vue_types.number),
  count: vue_types.number,
  pushable: withUndefined(vue_types.oneOfType([vue_types.looseBool, vue_types.number])),
  allowCross: vue_types.looseBool,
  disabled: vue_types.looseBool,
  reverse: vue_types.looseBool,
  tabindex: vue_types.arrayOf(vue_types.number),
  prefixCls: vue_types.string,
  min: vue_types.number,
  max: vue_types.number,
  autofocus: vue_types.looseBool
};
var Range = {
  name: 'Range',
  inheritAttrs: false,
  displayName: 'Range',
  mixins: [BaseMixin],
  props: initDefaultProps(rangeProps, {
    count: 1,
    allowCross: true,
    pushable: false,
    tabindex: []
  }),
  data: function data() {
    var _this = this;

    var count = this.count,
        min = this.min,
        max = this.max;
    var initialValue = Array.apply(void 0, Range_toConsumableArray(Array(count + 1))).map(function () {
      return min;
    });
    var defaultValue = hasProp(this, 'defaultValue') ? this.defaultValue : initialValue;
    var value = this.value;

    if (value === undefined) {
      value = defaultValue;
    }

    var bounds = value.map(function (v, i) {
      return _trimAlignValue({
        value: v,
        handle: i,
        props: _this.$props
      });
    });
    var recent = bounds[0] === max ? 0 : bounds.length - 1;
    return {
      sHandle: null,
      recent: recent,
      bounds: bounds
    };
  },
  watch: {
    value: {
      handler: function handler(val) {
        var bounds = this.bounds;
        this.setChangeValue(val || bounds);
      },
      deep: true
    },
    min: function min() {
      var value = this.value;
      this.setChangeValue(value || this.bounds);
    },
    max: function max() {
      var value = this.value;
      this.setChangeValue(value || this.bounds);
    }
  },
  methods: {
    setChangeValue: function setChangeValue(value) {
      var _this2 = this;

      var bounds = this.bounds;
      var nextBounds = value.map(function (v, i) {
        return _trimAlignValue({
          value: v,
          handle: i,
          bounds: bounds,
          props: _this2.$props
        });
      });
      if (nextBounds.length === bounds.length && nextBounds.every(function (v, i) {
        return v === bounds[i];
      })) return;
      this.setState({
        bounds: nextBounds
      });

      if (value.some(function (v) {
        return isValueOutOfRange(v, _this2.$props);
      })) {
        var newValues = value.map(function (v) {
          return ensureValueInRange(v, _this2.$props);
        });

        this.__emit('change', newValues);
      }
    },
    onChange: function onChange(state) {
      var isNotControlled = !hasProp(this, 'value');

      if (isNotControlled) {
        this.setState(state);
      } else {
        var controlledState = {};
        ['sHandle', 'recent'].forEach(function (item) {
          if (state[item] !== undefined) {
            controlledState[item] = state[item];
          }
        });

        if (Object.keys(controlledState).length) {
          this.setState(controlledState);
        }
      }

      var data = Range_extends(Range_extends({}, this.$data), state);

      var changedValue = data.bounds;

      this.__emit('change', changedValue);
    },
    onStart: function onStart(position) {
      var bounds = this.bounds;

      this.__emit('beforeChange', bounds);

      var value = this.calcValueByPos(position);
      this.startValue = value;
      this.startPosition = position;
      var closestBound = this.getClosestBound(value);
      this.prevMovedHandleIndex = this.getBoundNeedMoving(value, closestBound);
      this.setState({
        sHandle: this.prevMovedHandleIndex,
        recent: this.prevMovedHandleIndex
      });
      var prevValue = bounds[this.prevMovedHandleIndex];
      if (value === prevValue) return;

      var nextBounds = Range_toConsumableArray(bounds);

      nextBounds[this.prevMovedHandleIndex] = value;
      this.onChange({
        bounds: nextBounds
      });
    },
    onEnd: function onEnd(force) {
      var sHandle = this.sHandle;
      this.removeDocumentEvents();

      if (sHandle !== null || force) {
        this.__emit('afterChange', this.bounds);
      }

      this.setState({
        sHandle: null
      });
    },
    onMove: function onMove(e, position) {
      pauseEvent(e);
      var bounds = this.bounds,
          sHandle = this.sHandle;
      var value = this.calcValueByPos(position);
      var oldValue = bounds[sHandle];
      if (value === oldValue) return;
      this.moveTo(value);
    },
    onKeyboard: function onKeyboard(e) {
      var _this$$props = this.$props,
          reverse = _this$$props.reverse,
          vertical = _this$$props.vertical;
      var valueMutator = getKeyboardValueMutator(e, vertical, reverse);

      if (valueMutator) {
        pauseEvent(e);
        var bounds = this.bounds,
            sHandle = this.sHandle;
        var oldValue = bounds[sHandle === null ? this.recent : sHandle];
        var mutatedValue = valueMutator(oldValue, this.$props);

        var value = _trimAlignValue({
          value: mutatedValue,
          handle: sHandle,
          bounds: bounds,
          props: this.$props
        });

        if (value === oldValue) return;
        var isFromKeyboardEvent = true;
        this.moveTo(value, isFromKeyboardEvent);
      }
    },
    getClosestBound: function getClosestBound(value) {
      var bounds = this.bounds;
      var closestBound = 0;

      for (var i = 1; i < bounds.length - 1; ++i) {
        if (value > bounds[i]) {
          closestBound = i;
        }
      }

      if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {
        closestBound += 1;
      }

      return closestBound;
    },
    getBoundNeedMoving: function getBoundNeedMoving(value, closestBound) {
      var bounds = this.bounds,
          recent = this.recent;
      var boundNeedMoving = closestBound;
      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];

      if (isAtTheSamePoint && bounds[recent] === bounds[closestBound]) {
        boundNeedMoving = recent;
      }

      if (isAtTheSamePoint && value !== bounds[closestBound + 1]) {
        boundNeedMoving = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;
      }

      return boundNeedMoving;
    },
    getLowerBound: function getLowerBound() {
      return this.bounds[0];
    },
    getUpperBound: function getUpperBound() {
      var bounds = this.bounds;
      return bounds[bounds.length - 1];
    },

    /**
     * Returns an array of possible slider points, taking into account both
     * `marks` and `step`. The result is cached.
     */
    getPoints: function getPoints() {
      var marks = this.marks,
          step = this.step,
          min = this.min,
          max = this.max;
      var cache = this._getPointsCache;

      if (!cache || cache.marks !== marks || cache.step !== step) {
        var pointsObject = Range_extends({}, marks);

        if (step !== null) {
          for (var point = min; point <= max; point += step) {
            pointsObject[point] = point;
          }
        }

        var points = Object.keys(pointsObject).map(parseFloat);
        points.sort(function (a, b) {
          return a - b;
        });
        this._getPointsCache = {
          marks: marks,
          step: step,
          points: points
        };
      }

      return this._getPointsCache.points;
    },
    moveTo: function moveTo(value, isFromKeyboardEvent) {
      var _this3 = this;

      var nextBounds = Range_toConsumableArray(this.bounds);

      var sHandle = this.sHandle,
          recent = this.recent;
      var handle = sHandle === null ? recent : sHandle;
      nextBounds[handle] = value;
      var nextHandle = handle;

      if (this.$props.pushable !== false) {
        this.pushSurroundingHandles(nextBounds, nextHandle);
      } else if (this.$props.allowCross) {
        nextBounds.sort(function (a, b) {
          return a - b;
        });
        nextHandle = nextBounds.indexOf(value);
      }

      this.onChange({
        recent: nextHandle,
        sHandle: nextHandle,
        bounds: nextBounds
      });

      if (isFromKeyboardEvent) {
        // known problem: because setState is async,
        // so trigger focus will invoke handler's onEnd and another handler's onStart too early,
        // cause onBeforeChange and onAfterChange receive wrong value.
        // here use setState callback to hack，but not elegant
        this.__emit('afterChange', nextBounds);

        this.setState({}, function () {
          _this3.handlesRefs[nextHandle].focus();
        });
        this.onEnd();
      }
    },
    pushSurroundingHandles: function pushSurroundingHandles(bounds, handle) {
      var value = bounds[handle];
      var threshold = this.pushable;
      threshold = Number(threshold);
      var direction = 0;

      if (bounds[handle + 1] - value < threshold) {
        direction = +1; // push to right
      }

      if (value - bounds[handle - 1] < threshold) {
        direction = -1; // push to left
      }

      if (direction === 0) {
        return;
      }

      var nextHandle = handle + direction;
      var diffToNext = direction * (bounds[nextHandle] - value);

      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        // revert to original value if pushing is impossible
        bounds[handle] = bounds[nextHandle] - direction * threshold;
      }
    },
    pushHandle: function pushHandle(bounds, handle, direction, amount) {
      var originalValue = bounds[handle];
      var currentValue = bounds[handle];

      while (direction * (currentValue - originalValue) < amount) {
        if (!this.pushHandleOnePoint(bounds, handle, direction)) {
          // can't push handle enough to create the needed `amount` gap, so we
          // revert its position to the original value
          bounds[handle] = originalValue;
          return false;
        }

        currentValue = bounds[handle];
      } // the handle was pushed enough to create the needed `amount` gap


      return true;
    },
    pushHandleOnePoint: function pushHandleOnePoint(bounds, handle, direction) {
      var points = this.getPoints();
      var pointIndex = points.indexOf(bounds[handle]);
      var nextPointIndex = pointIndex + direction;

      if (nextPointIndex >= points.length || nextPointIndex < 0) {
        // reached the minimum or maximum available point, can't push anymore
        return false;
      }

      var nextHandle = handle + direction;
      var nextValue = points[nextPointIndex];
      var threshold = this.pushable;
      var diffToNext = direction * (bounds[nextHandle] - nextValue);

      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        // couldn't push next handle, so we won't push this one either
        return false;
      } // push the handle


      bounds[handle] = nextValue;
      return true;
    },
    trimAlignValue: function trimAlignValue(value) {
      var sHandle = this.sHandle,
          bounds = this.bounds;
      return _trimAlignValue({
        value: value,
        handle: sHandle,
        bounds: bounds,
        props: this.$props
      });
    },
    ensureValueNotConflict: function ensureValueNotConflict(handle, val, _ref2) {
      var allowCross = _ref2.allowCross,
          thershold = _ref2.pushable;
      var state = this.$data || {};
      var bounds = state.bounds;
      handle = handle === undefined ? state.sHandle : handle;
      thershold = Number(thershold);
      /* eslint-disable eqeqeq */

      if (!allowCross && handle != null && bounds !== undefined) {
        if (handle > 0 && val <= bounds[handle - 1] + thershold) {
          return bounds[handle - 1] + thershold;
        }

        if (handle < bounds.length - 1 && val >= bounds[handle + 1] - thershold) {
          return bounds[handle + 1] - thershold;
        }
      }
      /* eslint-enable eqeqeq */


      return val;
    },
    getTrack: function getTrack(_ref3) {
      var bounds = _ref3.bounds,
          prefixCls = _ref3.prefixCls,
          reverse = _ref3.reverse,
          vertical = _ref3.vertical,
          included = _ref3.included,
          offsets = _ref3.offsets,
          trackStyle = _ref3.trackStyle;
      return bounds.slice(0, -1).map(function (_, index) {
        var _classNames;

        var i = index + 1;
        var trackClassName = _util_classNames((_classNames = {}, Range_defineProperty(_classNames, "".concat(prefixCls, "-track"), true), Range_defineProperty(_classNames, "".concat(prefixCls, "-track-").concat(i), true), _classNames));
        return Object(external_Vue_["createVNode"])(common_Track, {
          "class": trackClassName,
          "vertical": vertical,
          "reverse": reverse,
          "included": included,
          "offset": offsets[i - 1],
          "length": offsets[i] - offsets[i - 1],
          "style": trackStyle[index],
          "key": i
        }, null);
      });
    },
    renderSlider: function renderSlider() {
      var _this4 = this;

      var sHandle = this.sHandle,
          bounds = this.bounds,
          prefixCls = this.prefixCls,
          vertical = this.vertical,
          included = this.included,
          disabled = this.disabled,
          min = this.min,
          max = this.max,
          reverse = this.reverse,
          handle = this.handle,
          defaultHandle = this.defaultHandle,
          trackStyle = this.trackStyle,
          handleStyle = this.handleStyle,
          tabindex = this.tabindex;
      var handleGenerator = handle || defaultHandle;
      var offsets = bounds.map(function (v) {
        return _this4.calcOffset(v);
      });
      var handleClassName = "".concat(prefixCls, "-handle");
      var handles = bounds.map(function (v, i) {
        var _classNames2;

        var _tabIndex = tabindex[i] || 0;

        if (disabled || tabindex[i] === null) {
          _tabIndex = null;
        }

        return handleGenerator({
          class: _util_classNames((_classNames2 = {}, Range_defineProperty(_classNames2, handleClassName, true), Range_defineProperty(_classNames2, "".concat(handleClassName, "-").concat(i + 1), true), _classNames2)),
          prefixCls: prefixCls,
          vertical: vertical,
          offset: offsets[i],
          value: v,
          dragging: sHandle === i,
          index: i,
          tabindex: _tabIndex,
          min: min,
          max: max,
          reverse: reverse,
          disabled: disabled,
          style: handleStyle[i],
          ref: function ref(h) {
            return _this4.saveHandle(i, h);
          },
          onFocus: _this4.onFocus,
          onBlur: _this4.onBlur
        });
      });
      return {
        tracks: this.getTrack({
          bounds: bounds,
          prefixCls: prefixCls,
          reverse: reverse,
          vertical: vertical,
          included: included,
          offsets: offsets,
          trackStyle: trackStyle
        }),
        handles: handles
      };
    }
  }
};
/* harmony default export */ var src_Range = (createSlider(Range));

// CONCATENATED MODULE: ./src/packages/range/src/index.tsx





var range_src_Range = Object(external_Vue_["defineComponent"])({
  name: 'Range',
  props: Object.assign(Object.assign({}, formComponentProps), {
    prefixCls: {
      type: String,
      default: 'am-slider'
    },
    handleStyle: {},
    trackStyle: {},
    railStyle: {},
    onChange: {},
    onAfterChange: {},
    tipFormatter: {},
    pushable: {
      type: Boolean,
      default: false
    },
    min: {
      type: Number
    },
    max: {
      type: Number
    },
    step: {
      type: Number
    }
  }),
  setup: function setup(props, ctx) {
    var _useFormComponent = form_component_useFormComponent(props, ctx),
        currentValue = _useFormComponent.currentValue;

    var handle = function handle(info) {
      return Object(external_Vue_["createVNode"])(Handle, info, null);
    };

    return {
      currentValue: currentValue,
      handle: handle
    };
  },
  render: function render() {
    var _this = this;

    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(this.prefixCls, "-wrapper")
    }, [Object(external_Vue_["createVNode"])(src_Range, Object(external_Vue_["mergeProps"])(this.$props, {
      "handle": this.handle,
      "value": this.currentValue,
      "pushable": this.pushable,
      "onChange": function onChange(v) {
        _this.currentValue = v;
      }
    }), null)]);
  }
});
/* harmony default export */ var range_src = (range_src_Range);
// CONCATENATED MODULE: ./src/packages/range/src/item.tsx





var RangeItem = Object(external_Vue_["defineComponent"])({
  name: 'RangeItem',
  props: Object.assign(Object.assign({}, formComponentProps), {
    title: {
      type: [String, Object]
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var _useFormComponent = form_component_useFormComponent(props, {
      emit: emit
    }),
        isDisabled = _useFormComponent.isDisabled,
        currentValue = _useFormComponent.currentValue;

    return {
      isDisabled: isDisabled,
      currentValue: currentValue
    };
  },
  render: function render() {
    var _this = this;

    return Object(external_Vue_["createVNode"])(packages_list.Item, {
      "multipleLine": true,
      "disabled": this.isDisabled
    }, {
      default: function _default() {
        return [_this.title, Object(external_Vue_["createVNode"])(packages_list.Item.Brief, {
          "style": {
            padding: '15px',
            flex: 1
          }
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])(range_src, Object(external_Vue_["mergeProps"])(Object.assign({}, _this.$attrs, _this.$props), {
              "style": {
                marginLeft: '8px'
              },
              "disabled": _this.isDisabled,
              "value": _this.currentValue
            }, {
              onChange: function onChange(v) {
                _this.currentValue = v;
              }
            }), null)];
          }
        })];
      }
    });
  }
});
/* harmony default export */ var range_src_item = (RangeItem);
// EXTERNAL MODULE: ./src/packages/range/style/index.less
var range_style = __webpack_require__("70b3");

// CONCATENATED MODULE: ./src/packages/range/style/index.ts


// CONCATENATED MODULE: ./src/packages/range/index.ts



range_src.Item = range_src_item;

range_src.install = function (Vue) {
  Vue.component('MRange', range_src);
  Vue.component('MRangeItem', range_src_item);
};

/* harmony default export */ var packages_range = (range_src);
// CONCATENATED MODULE: ./src/packages/result/src/index.tsx


/* tslint:disable:jsx-no-multiline-js */




function result_src_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

/* harmony default export */ var result_src = (Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'MResult',
  props: {
    prefixCls: {
      type: String,
      default: 'am-result'
    },
    imgUrl: {
      type: String
    },
    img: {
      type: [String, Object]
    },
    title: {
      type: [String, Object]
    },
    message: {
      type: [String, Object]
    },
    buttonText: {
      type: String
    },
    buttonType: {
      default: ''
    }
  },
  render: function render() {
    var _this = this;

    var prefixCls = this.prefixCls,
        imgUrl = this.imgUrl,
        buttonText = this.buttonText,
        buttonType = this.buttonType;
    var imgContent = null;
    var img = this.$slots.img || this.img;
    var title = this.$slots.title || this.title;
    var message = this.$slots.message || this.message;

    if (img) {
      imgContent = Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-pic")
      }, [img]);
    } else if (imgUrl) {
      imgContent = Object(external_Vue_["createVNode"])("div", {
        "class": "".concat(prefixCls, "-pic"),
        "style": {
          backgroundImage: "url(".concat(imgUrl, ")")
        }
      }, null);
    }

    return Object(external_Vue_["createVNode"])("div", {
      "class": classnames_default()(prefixCls),
      "role": "alert"
    }, [imgContent, title ? Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-title")
    }, [title]) : null, message ? Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-message")
    }, [message]) : null, buttonText ? Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-button")
    }, [// @ts-ignore
    Object(external_Vue_["createVNode"])(packages_button, {
      "type": buttonType,
      "onClick": function onClick() {
        _this.$emit('click');
      }
    }, result_src_isSlot(buttonText) ? buttonText : {
      default: function _default() {
        return [buttonText];
      }
    })]) : null]);
  }
}));
// EXTERNAL MODULE: ./src/packages/result/style/index.less
var result_style = __webpack_require__("8147");

// CONCATENATED MODULE: ./src/packages/result/style/index.ts

// CONCATENATED MODULE: ./src/packages/result/index.ts



result_src.install = function (Vue) {
  Vue.component('MResult', result_src);
};

/* harmony default export */ var packages_result = (result_src);
// CONCATENATED MODULE: ./src/packages/search-bar/src/index.tsx


function search_bar_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





function onNextFrame(cb) {
  if (window.requestAnimationFrame) {
    return window.requestAnimationFrame(cb);
  }

  return window.setTimeout(cb, 1);
}

function clearNextFrameAction(nextFrameId) {
  if (window.cancelAnimationFrame) {
    window.cancelAnimationFrame(nextFrameId);
  } else {
    window.clearTimeout(nextFrameId);
  }
}

/* harmony default export */ var search_bar_src = (Object(external_Vue_["defineComponent"])({
  name: 'SearchBar',
  props: {
    prefixCls: {
      type: String,
      default: 'am-search'
    },
    defaultValue: {
      type: String
    },
    value: {
      type: String
    },
    placeholder: {
      type: String
    },
    showCancelButton: {
      type: Boolean
    },
    cancelText: {
      type: String
    },
    disabled: {
      type: Boolean
    },
    autoFocus: {
      type: Boolean
    },
    focused: {
      type: Boolean
    },
    maxLength: {
      type: Number
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        attrs = _ref.attrs,
        slots = _ref.slots;
    var rightBtnInitMarginleft = Object(external_Vue_["ref"])(null);
    var firstFocus = Object(external_Vue_["ref"])(null);
    var blurFromOnClear = Object(external_Vue_["ref"])(null);
    var onBlurTimeout = Object(external_Vue_["ref"])(null);
    var state = Object(external_Vue_["reactive"])({
      value: props.value || '',
      focus: false
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.value = value;
    });
    Object(external_Vue_["watch"])(function () {
      return state.value;
    }, function (value) {
      emit('update:value', value);
    });
    var inputRef = Object(external_Vue_["ref"])(null);
    var rightBtnRef = Object(external_Vue_["ref"])(null);
    var syntheticPhContainerRef = Object(external_Vue_["ref"])(null);
    var syntheticPhRef = Object(external_Vue_["ref"])(null);
    var inputContainerRef = Object(external_Vue_["ref"])(null);

    var update = function update() {
      if (syntheticPhRef.value) {
        if (inputContainerRef.value && inputContainerRef.value.className.indexOf("".concat(props.prefixCls, "-start")) > -1) {
          // 检测是否包含名为 ${this.props.prefixCls}-start 样式，生成动画
          // offsetWidth 某些时候是向上取整，某些时候是向下取整，不能用
          if (syntheticPhContainerRef.value) {
            var realWidth = syntheticPhContainerRef.value.getBoundingClientRect().width; // 包含小数

            syntheticPhRef.value.style.width = "".concat(Math.ceil(realWidth), "px");
          }

          if (!props.showCancelButton && rightBtnRef.value) {
            rightBtnRef.value.style.marginRight = '0';
          }
        } else {
          syntheticPhRef.value.style.width = '100%';

          if (!props.showCancelButton && rightBtnRef.value) {
            rightBtnRef.value.style.marginRight = "-".concat(rightBtnRef.value.offsetWidth + (rightBtnInitMarginleft.value != null ? parseInt(rightBtnInitMarginleft.value, 10) : 0), "px");
          }
        }
      }
    };

    var onSubmit = function onSubmit(e) {
      e.preventDefault();
      emit('submit', state.value || '');

      if (inputRef.value) {
        inputRef.value.blur();
      }
    };

    var onChange = function onChange(e) {
      if (!state.focus) {
        state.focus = true;
      }

      var value = e.target.value;
      state.value = value;
      emit('change', value);
    };

    var onFocus = function onFocus() {
      state.focus = true;
      firstFocus.value = true;
      emit('focus');
    };

    var onBlur = function onBlur() {
      onBlurTimeout.value = onNextFrame(function () {
        if (!blurFromOnClear.value) {
          if (document.activeElement !== inputRef.value) {
            state.focus = false;
          }
        }

        blurFromOnClear.value = false;
      }); // fix autoFocus item blur with flash

      if (attrs.onBlur) {
        setTimeout(function () {
          // fix ios12 wechat browser click failure after input
          if (document.body) {
            document.body.scrollTop = document.body.scrollTop;
          }
        }, 100);
        emit('blur');
      }
    };

    var onClear = function onClear() {
      doClear();
    };

    var doClear = function doClear() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      blurFromOnClear.value = value;
      state.value = '';
      emit('clear');
      emit('change');

      if (blurFromOnClear) {
        focus();
      }
    };

    var onCancel = function onCancel() {
      emit('cancel');
      doClear(false);
    };

    var focus = function focus() {
      if (inputRef.value) {
        inputRef.value.focus();
      }
    };

    Object(external_Vue_["onMounted"])(function () {
      if (rightBtnRef.value) {
        var initBtn = window.getComputedStyle(rightBtnRef.value);
        rightBtnInitMarginleft.value = initBtn.marginLeft;
      }

      update();
    });
    Object(external_Vue_["onUpdated"])(function () {
      update();
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      if (onBlurTimeout.value) {
        clearNextFrameAction(onBlurTimeout.value);
        onBlurTimeout.value = null;
      }
    });
    return {
      state: state,
      firstFocus: firstFocus,
      onClear: onClear,
      inputRef: inputRef,
      rightBtnRef: rightBtnRef,
      syntheticPhContainerRef: syntheticPhContainerRef,
      syntheticPhRef: syntheticPhRef,
      inputContainerRef: inputContainerRef,
      onCancel: onCancel,
      onBlur: onBlur,
      onChange: onChange,
      onFocus: onFocus,
      onSubmit: onSubmit
    };
  },
  render: function render() {
    var _classnames3,
        _this = this;

    var prefixCls = this.prefixCls,
        showCancelButton = this.showCancelButton,
        disabled = this.disabled,
        placeholder = this.placeholder,
        maxLength = this.maxLength; // tslint:disable-next-line:variable-name

    var cancelText = '取消';
    var _this$state = this.state,
        value = _this$state.value,
        focus = _this$state.focus;
    var wrapCls = classnames_default()(prefixCls, search_bar_src_defineProperty({}, "".concat(prefixCls, "-start"), focus || value && value.length > 0));
    var clearCls = classnames_default()("".concat(prefixCls, "-clear"), search_bar_src_defineProperty({}, "".concat(prefixCls, "-clear-show"), focus && value && value.length > 0));
    var cancelCls = classnames_default()("".concat(prefixCls, "-cancel"), (_classnames3 = {}, search_bar_src_defineProperty(_classnames3, "".concat(prefixCls, "-cancel-show"), showCancelButton || focus || value && value.length > 0), search_bar_src_defineProperty(_classnames3, "".concat(prefixCls, "-cancel-anim"), this.firstFocus), _classnames3));
    var TouchFeedback2 = feedback;
    return Object(external_Vue_["createVNode"])("form", {
      "onSubmit": this.onSubmit,
      "class": wrapCls,
      "ref": this.inputContainerRef,
      "action": "#"
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-input")
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-synthetic-ph"),
      "ref": this.syntheticPhRef
    }, [Object(external_Vue_["createVNode"])("span", {
      "class": "".concat(prefixCls, "-synthetic-ph-container"),
      "ref": this.syntheticPhContainerRef
    }, [Object(external_Vue_["createVNode"])("i", {
      "class": "".concat(prefixCls, "-synthetic-ph-icon")
    }, null), Object(external_Vue_["createVNode"])("span", {
      "class": "".concat(prefixCls, "-synthetic-ph-placeholder"),
      "style": {
        visibility: placeholder && !value ? 'visible' : 'hidden'
      }
    }, [placeholder])])]), Object(external_Vue_["createVNode"])("input", {
      "type": "search",
      "class": "".concat(prefixCls, "-value"),
      "value": value,
      "disabled": disabled,
      "placeholder": placeholder,
      "onInput": this.onChange,
      "onChange": this.onChange,
      "onFocus": this.onFocus,
      "onBlur": this.onBlur,
      "ref": this.inputRef,
      "maxlength": maxLength
    }, null), Object(external_Vue_["createVNode"])(TouchFeedback2, {
      "activeclass": "".concat(prefixCls, "-clear-active")
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("a", {
          "onClick": _this.onClear,
          "class": clearCls
        }, null)];
      }
    })]), Object(external_Vue_["createVNode"])("div", {
      "class": cancelCls,
      "onClick": this.onCancel,
      "ref": this.rightBtnRef
    }, [this.cancelText || cancelText])]);
  }
}));
// EXTERNAL MODULE: ./src/packages/search-bar/style/index.less
var search_bar_style = __webpack_require__("8fcf");

// CONCATENATED MODULE: ./src/packages/search-bar/style/index.tsx


// CONCATENATED MODULE: ./src/packages/search-bar/index.ts


var search_bar_Plugin = search_bar_src;

search_bar_Plugin.install = function (Vue) {
  Vue.component('MSearchBar', search_bar_src);
};

/* harmony default export */ var search_bar = (search_bar_Plugin);
// CONCATENATED MODULE: ./src/packages/segmented-control/src/index.tsx


function segmented_control_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var SegmentedControl = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'SegmentedControl',
  props: {
    prefixCls: {
      type: String,
      default: 'am-segment'
    },
    tintColor: {
      type: String,
      default: ''
    },
    disabled: {
      type: Boolean,
      default: false
    },
    value: {
      type: Number,
      default: 0
    },
    values: {
      default: function _default() {
        return [];
      }
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var state = Object(external_Vue_["reactive"])({
      selectedIndex: props.value
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.selectedIndex = value;
    });

    var onClick = function onClick(e, index, value) {
      var disabled = props.disabled;

      if (!disabled && state.selectedIndex !== index) {
        // just do a mock so that the api to be the same as react-native
        e.nativeEvent = e.nativeEvent ? e.nativeEvent : {};
        e.nativeEvent.selectedSegmentIndex = index;
        e.nativeEvent.value = value;
        state.selectedIndex = index;
        emit('update:value', index);
        emit('change', index);
      }
    };

    var renderSegmentItem = function renderSegmentItem(idx, value, selected) {
      var prefixCls = props.prefixCls,
          disabled = props.disabled,
          tintColor = props.tintColor;
      var itemCls = classnames_default()("".concat(prefixCls, "-item"), segmented_control_src_defineProperty({}, "".concat(prefixCls, "-item-selected"), selected));
      var itemStyle = {
        color: selected ? '#fff' : tintColor,
        backgroundColor: selected ? tintColor : 'transparent',
        borderColor: tintColor
      };
      var activeInnerStyle = tintColor ? {
        backgroundColor: tintColor
      } : {};
      return Object(external_Vue_["createVNode"])(feedback, {
        "key": idx,
        "disabled": disabled,
        "activeClassName": "".concat(prefixCls, "-item-active")
      }, {
        default: function _default() {
          return [Object(external_Vue_["createVNode"])("div", {
            "class": itemCls,
            "style": itemStyle,
            "role": "tab",
            "aria-selected": selected && !disabled,
            "aria-disabled": disabled,
            "onClick": disabled ? undefined : function (e) {
              return onClick(e, idx, value);
            }
          }, [Object(external_Vue_["createVNode"])("div", {
            "class": "".concat(prefixCls, "-item-inner"),
            "style": activeInnerStyle
          }, null), value])];
        }
      });
    };

    return {
      renderSegmentItem: renderSegmentItem,
      state: state
    };
  },
  render: function render() {
    var _this = this;

    var prefixCls = this.prefixCls,
        disabled = this.disabled,
        _this$values = this.values,
        values = _this$values === void 0 ? [] : _this$values;
    var wrapCls = classnames_default()(prefixCls, segmented_control_src_defineProperty({}, "".concat(prefixCls, "-disabled"), disabled));
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls,
      "role": "tablist"
    }, [values.map(function (value, idx) {
      return (// tslint:disable-next-line:jsx-no-multiline-js
        _this.renderSegmentItem(idx, value, idx === _this.state.selectedIndex)
      );
    })]);
  }
});
/* harmony default export */ var segmented_control_src = (SegmentedControl);
// EXTERNAL MODULE: ./src/packages/segmented-control/style/index.less
var segmented_control_style = __webpack_require__("03ee");

// CONCATENATED MODULE: ./src/packages/segmented-control/style/index.ts

// CONCATENATED MODULE: ./src/packages/segmented-control/index.ts



segmented_control_src.install = function (Vue) {
  Vue.component('MSegmentedControl', segmented_control_src);
};

/* harmony default export */ var segmented_control = (segmented_control_src);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/Slider.js


function Slider_extends() { Slider_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Slider_extends.apply(this, arguments); }








var Slider = Object(external_Vue_["defineComponent"])({
  name: 'Slider',
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    defaultValue: vue_types.number,
    value: vue_types.number,
    disabled: vue_types.looseBool,
    autofocus: vue_types.looseBool,
    tabindex: vue_types.number,
    reverse: vue_types.looseBool,
    min: vue_types.number,
    max: vue_types.number
  },
  data: function data() {
    var defaultValue = this.defaultValue !== undefined ? this.defaultValue : this.min;
    var value = this.value !== undefined ? this.value : defaultValue;
    return {
      sValue: this.trimAlignValue(value),
      dragging: false
    };
  },
  watch: {
    value: {
      handler: function handler(val) {
        this.setChangeValue(val);
      },
      deep: true
    },
    min: function min() {
      var sValue = this.sValue;
      this.setChangeValue(sValue);
    },
    max: function max() {
      var sValue = this.sValue;
      this.setChangeValue(sValue);
    }
  },
  methods: {
    setChangeValue: function setChangeValue(value) {
      var newValue = value !== undefined ? value : this.sValue;
      var nextValue = this.trimAlignValue(newValue, this.$props);
      if (nextValue === this.sValue) return;
      this.setState({
        sValue: nextValue
      });

      if (isValueOutOfRange(newValue, this.$props)) {
        this.__emit('change', nextValue);
      }
    },
    onChange: function onChange(state) {
      var isNotControlled = !hasProp(this, 'value');
      var nextState = state.sValue > this.max ? Slider_extends(Slider_extends({}, state), {
        sValue: this.max
      }) : state;

      if (isNotControlled) {
        this.setState(nextState);
      }

      var changedValue = nextState.sValue;

      this.__emit('change', changedValue);
    },
    onStart: function onStart(position) {
      this.setState({
        dragging: true
      });
      var sValue = this.sValue;

      this.__emit('beforeChange', sValue);

      var value = this.calcValueByPos(position);
      this.startValue = value;
      this.startPosition = position;
      if (value === sValue) return;
      this.prevMovedHandleIndex = 0;
      this.onChange({
        sValue: value
      });
    },
    onEnd: function onEnd(force) {
      var dragging = this.dragging;
      this.removeDocumentEvents();

      if (dragging || force) {
        this.__emit('afterChange', this.sValue);
      }

      this.setState({
        dragging: false
      });
    },
    onMove: function onMove(e, position) {
      pauseEvent(e);
      var sValue = this.sValue;
      var value = this.calcValueByPos(position);
      if (value === sValue) return;
      this.onChange({
        sValue: value
      });
    },
    onKeyboard: function onKeyboard(e) {
      var _this$$props = this.$props,
          reverse = _this$$props.reverse,
          vertical = _this$$props.vertical;
      var valueMutator = getKeyboardValueMutator(e, vertical, reverse);

      if (valueMutator) {
        pauseEvent(e);
        var sValue = this.sValue;
        var mutatedValue = valueMutator(sValue, this.$props);
        var value = this.trimAlignValue(mutatedValue);
        if (value === sValue) return;
        this.onChange({
          sValue: value
        });

        this.__emit('afterChange', value);

        this.onEnd();
      }
    },
    getLowerBound: function getLowerBound() {
      return this.min;
    },
    getUpperBound: function getUpperBound() {
      return this.sValue;
    },
    trimAlignValue: function trimAlignValue(v) {
      var nextProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (v === null) {
        return null;
      }

      var mergedProps = Slider_extends(Slider_extends({}, this.$props), nextProps);

      var val = ensureValueInRange(v, mergedProps);
      return ensureValuePrecision(val, mergedProps);
    },
    getTrack: function getTrack(_ref) {
      var prefixCls = _ref.prefixCls,
          reverse = _ref.reverse,
          vertical = _ref.vertical,
          included = _ref.included,
          offset = _ref.offset,
          minimumTrackStyle = _ref.minimumTrackStyle,
          _trackStyle = _ref._trackStyle;
      return Object(external_Vue_["createVNode"])(common_Track, {
        "class": "".concat(prefixCls, "-track"),
        "vertical": vertical,
        "included": included,
        "offset": 0,
        "reverse": reverse,
        "length": offset,
        "style": Slider_extends(Slider_extends({}, minimumTrackStyle), _trackStyle)
      }, null);
    },
    renderSlider: function renderSlider() {
      var _this = this;

      var prefixCls = this.prefixCls,
          vertical = this.vertical,
          included = this.included,
          disabled = this.disabled,
          minimumTrackStyle = this.minimumTrackStyle,
          trackStyle = this.trackStyle,
          handleStyle = this.handleStyle,
          tabindex = this.tabindex,
          min = this.min,
          max = this.max,
          reverse = this.reverse,
          handle = this.handle,
          defaultHandle = this.defaultHandle;
      var handleGenerator = handle || defaultHandle;
      var sValue = this.sValue,
          dragging = this.dragging;
      var offset = this.calcOffset(sValue);
      var handles = handleGenerator({
        class: "".concat(prefixCls, "-handle"),
        prefixCls: prefixCls,
        vertical: vertical,
        offset: offset,
        value: sValue,
        dragging: dragging,
        disabled: disabled,
        min: min,
        max: max,
        reverse: reverse,
        index: 0,
        tabindex: tabindex,
        style: handleStyle[0] || handleStyle,
        ref: function ref(h) {
          return _this.saveHandle(0, h);
        },
        onFocus: this.onFocus,
        onBlur: this.onBlur
      });

      var _trackStyle = trackStyle[0] || trackStyle;

      return {
        tracks: this.getTrack({
          prefixCls: prefixCls,
          reverse: reverse,
          vertical: vertical,
          included: included,
          offset: offset,
          minimumTrackStyle: minimumTrackStyle,
          _trackStyle: _trackStyle
        }),
        handles: handles
      };
    }
  }
});
/* harmony default export */ var src_Slider = (createSlider(Slider));
// CONCATENATED MODULE: ./src/packages/slider/src/index.tsx





var slider_src_Slider = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'Slider',
  props: Object.assign(Object.assign({}, formComponentProps), {
    prefixCls: {
      type: String,
      default: 'am-slider'
    },
    marks: {},
    dots: {
      type: Boolean
    },
    included: {
      type: Boolean
    },
    handleStyle: {},
    trackStyle: {},
    railStyle: {},
    tipFormatter: {},
    min: {
      type: Number
    },
    max: {
      type: Number
    },
    step: {
      type: Number
    },
    handle: {}
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var _useFormComponent = form_component_useFormComponent(props, {
      emit: emit
    }),
        isDisabled = _useFormComponent.isDisabled,
        currentValue = _useFormComponent.currentValue;

    var handle = function handle(info) {
      return Object(external_Vue_["createVNode"])(Handle, info, null);
    };

    return {
      isDisabled: isDisabled,
      handle: handle,
      currentValue: currentValue
    };
  },
  render: function render() {
    var _this = this;

    var props = Object.assign({}, this.$props, {
      disabled: this.isDisabled
    });
    return Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(this.prefixCls, "-wrapper")
    }, [Object(external_Vue_["createVNode"])(src_Slider, Object(external_Vue_["mergeProps"])(props, {
      "value": this.currentValue,
      "handle": this.handle,
      "included": true,
      "onChange": function onChange(value) {
        _this.currentValue = value;
      }
    }), null)]);
  }
});
/* harmony default export */ var slider_src = (slider_src_Slider);
// CONCATENATED MODULE: ./src/packages/slider/src/slider-item.tsx





/* harmony default export */ var slider_item = (Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'SliderItem',
  props: Object.assign(Object.assign({}, formComponentProps), {
    prefixCls: {
      type: String,
      default: 'am-slider'
    },
    marks: {},
    dots: {
      type: Boolean
    },
    included: {
      type: Boolean
    },
    maximumTrackStyle: {},
    minimumTrackStyle: {},
    handleStyle: {},
    trackStyle: {},
    railStyle: {},
    tipFormatter: {},
    min: {
      type: Number
    },
    max: {
      type: Number
    },
    step: {
      type: Number
    },
    handle: {},
    title: {
      type: [String, Object]
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var _useFormComponent = form_component_useFormComponent(props, {
      emit: emit
    }),
        isDisabled = _useFormComponent.isDisabled,
        currentValue = _useFormComponent.currentValue;

    return {
      isDisabled: isDisabled,
      currentValue: currentValue
    };
  },
  render: function render() {
    var _this = this;

    return Object(external_Vue_["createVNode"])(packages_list.Item, {
      "multipleLine": true,
      "disabled": this.isDisabled
    }, {
      default: function _default() {
        return [_this.title, Object(external_Vue_["createVNode"])(packages_list.Item.Brief, {
          "style": {
            padding: '15px'
          }
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])(slider_src, Object(external_Vue_["mergeProps"])(_this.$props, {
              "disabled": _this.isDisabled,
              "style": {
                marginLeft: '8px'
              },
              "value": _this.currentValue,
              "onChange": function onChange(v) {
                _this.currentValue = v;
              }
            }), null)];
          }
        })];
      }
    });
  }
}));
// EXTERNAL MODULE: ./src/packages/slider/style/index.less
var slider_style = __webpack_require__("e82a");

// CONCATENATED MODULE: ./src/packages/slider/style/index.ts

// CONCATENATED MODULE: ./src/packages/slider/index.ts



slider_src.Item = slider_item;

slider_src.install = function (Vue) {
  Vue.component('MSlider', slider_src);
  Vue.component('MSliderItem', slider_src.Item);
};

/* harmony default export */ var slider = (slider_src);
// CONCATENATED MODULE: ./src/packages/vmc-input-number/base.tsx


function defaultParser(input) {
  if (typeof input === 'number') {
    return input;
  }

  return input.replace(/[^\w.-]+/g, '');
}
/**
 * When click and hold on a button - the speed of auto changin the value.
 */


var SPEED = 200;
/**
 * When click and hold on a button - the delay before auto changin the value.
 */

var DELAY = 600;
/**
 * Max Safe Integer -- on IE this is not available, so manually set the number in that case.
 * The reason this is used, instead of Infinity is because numbers above the MSI are unstable
 */

var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
var baseComponentProps = {
  step: {
    type: [String, Number]
  },
  parser: {
    type: Function,
    default: defaultParser
  },
  value: {
    type: Number
  },
  defaultValue: {
    type: Number
  },
  min: {
    type: Number
  },
  max: {
    type: Number
  },
  autoFocus: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  readOnly: {
    type: Boolean,
    default: false
  },
  precision: {
    type: Number
  }
};
var base_useBaseComponent = function useBaseComponent(props, _ref) {
  var emit = _ref.emit;
  var autoStepTimer = Object(external_Vue_["ref"])(null);
  var state = Object(external_Vue_["reactive"])({
    inputValue: null,
    focused: props.autoFocus
  });
  Object(external_Vue_["watch"])(function () {
    return props.value;
  }, function (value) {
    var v = value !== undefined ? toNumber(value) : props.defaultValue;
    state.inputValue = toPrecisionAsStep(v);
  });
  Object(external_Vue_["watch"])(function () {
    return state.inputValue;
  }, function (v) {
    emit('update:value', v);
  });

  var onChange = function onChange(e) {
    var parser = props.parser;
    var input = typeof e === 'number' ? e : parser && parser(e.target.value);
    state.inputValue = parseFloat(input);
    emit('change', toNumberWhenUserInput(input));
  };

  var onFocus = function onFocus() {
    state.focused = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    emit.apply(void 0, ['focus'].concat(args));
  };

  var onBlur = function onBlur(e) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    state.focused = false;
    var value = getCurrentValidValue(state.inputValue);

    if (e.persist) {
      e.persist(); // fix https://github.com/react-component/input-number/issues/51
    }

    setValue(value, function () {
      emit.apply(void 0, ['blur', e].concat(args));
    });
  };

  var getCurrentValidValue = function getCurrentValidValue(value) {
    var val = value;

    if (val === '') {
      val = '';
    } else if (!isNotCompleteNumber(val)) {
      val = getValidValue(val);
    } else {
      val = state.inputValue;
    }

    return toNumber(val);
  };

  var getValidValue = function getValidValue(value) {
    var val = parseFloat(value.toString());

    if (isNaN(val)) {
      return value;
    }

    if (val < props.min) {
      val = props.min;
    }

    if (val > props.max) {
      val = props.max;
    }

    return val;
  };

  var setValue = function setValue(v, callback) {
    // trigger onChange
    var newValue = isNotCompleteNumber(parseFloat(v)) ? undefined : parseFloat(v);
    var changed = newValue !== state.inputValue || "".concat(newValue) !== "".concat(state.inputValue); // https://github.com/ant-design/ant-design/issues/7363

    if (props.value === undefined) {
      state.inputValue = toPrecisionAsStep(v);
      callback && callback();
    } else {
      // always set input value same as value
      state.inputValue = toPrecisionAsStep(v);
      callback && callback();
    }

    if (changed) {
      emit('change', newValue);
    }
  };

  var getPrecision = function getPrecision(value) {
    if (props.precision) {
      return props.precision;
    }

    var valueString = value.toString();

    if (valueString.indexOf('e-') >= 0) {
      return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);
    }

    var precision = 0;

    if (valueString.indexOf('.') >= 0) {
      precision = valueString.length - valueString.indexOf('.') - 1;
    }

    return precision;
  };

  var getMaxPrecision = function getMaxPrecision(currentValue) {
    var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

    if (props.precision) {
      return props.precision;
    }

    var step = props.step;
    var ratioPrecision = getPrecision(ratio);
    var stepPrecision = getPrecision(step);
    var currentValuePrecision = getPrecision(currentValue);

    if (!currentValue) {
      return ratioPrecision + stepPrecision;
    }

    return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);
  };

  var getPrecisionFactor = function getPrecisionFactor(currentValue) {
    var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var precision = getMaxPrecision(currentValue, ratio);
    return Math.pow(10, precision);
  };

  var toPrecisionAsStep = function toPrecisionAsStep(num) {
    if (isNotCompleteNumber(num)) {
      return num;
    }

    var precision = Math.abs(getMaxPrecision(num));

    if (!isNaN(precision)) {
      return parseFloat(Number(num).toFixed(precision));
    }

    return num;
  };

  var isNotCompleteNumber = function isNotCompleteNumber(num) {
    return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;
  };

  var toNumber = function toNumber(num) {
    if (isNotCompleteNumber(num)) {
      return num;
    }

    if (props.precision) {
      return Number(Number(num).toFixed(props.precision));
    }

    return Number(num);
  };

  var toNumberWhenUserInput = function toNumberWhenUserInput(num) {
    // num.length > 16 => prevent input large number will became Infinity
    if ((/\.\d*0$/.test(num) || num.length > 16) && state.focused) {
      return num;
    }

    return toNumber(num);
  };

  var stepCompute = function stepCompute(type, val, rat) {
    var step = props.step,
        min = props.min;
    var precisionFactor = getPrecisionFactor(val, rat);
    var precision = Math.abs(getMaxPrecision(val, rat));
    var result;
    var direct = type === 'up' ? 1 : -1;

    if (typeof val === 'number') {
      result = ((precisionFactor * val + direct * precisionFactor * +step * rat) / precisionFactor).toFixed(precision);
    } else {
      result = min === -Infinity ? direct * +step : min;
    }

    return toNumber(result);
  };

  var stepTo = function stepTo(type, e) {
    var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

    if (e) {
      e.preventDefault();
    }

    if (props.disabled) {
      return false;
    }

    var value = getCurrentValidValue(state.inputValue) || 0;

    if (isNotCompleteNumber(value)) {
      return false;
    }

    var val = stepCompute(type, value, ratio);
    var outOfRange = val > props.max || val < props.min;

    if (val > props.max) {
      val = props.max;
    } else if (val < props.min) {
      val = props.min;
    }

    setValue(val);
    state.focused = true;
    return !outOfRange;
  };

  var stop = function stop() {
    if (autoStepTimer.value) {
      clearTimeout(autoStepTimer.value);
    }
  };

  var action = function action(type, e, ratio, recursive) {
    if (e.persist) {
      e.persist();
    }

    stop();

    if (stepTo(type, e, ratio)) {
      autoStepTimer.value = setTimeout(function () {
        action(type, e, ratio, true);
      }, recursive ? SPEED : DELAY);
    }
  };

  var down = function down(e, ratio, recursive) {
    action('down', e, ratio, recursive);
  };

  var up = function up(e, ratio, recursive) {
    action('up', e, ratio, recursive);
  };

  {
    var value = props.value !== undefined ? toNumber(props.value) : props.defaultValue;
    state.inputValue = toPrecisionAsStep(value);
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function () {
      state.inputValue = state.focused ? props.value : getValidValue(props.value);
    });
  }
  Object(external_Vue_["onBeforeUnmount"])(function () {
    stop();
  });
  return {
    state: state,
    stop: stop,
    up: up,
    down: down,
    toPrecisionAsStep: toPrecisionAsStep,
    onFocus: onFocus,
    onBlur: onBlur,
    onChange: onChange
  };
};
// CONCATENATED MODULE: ./src/packages/vmc-input-number/input-handler.tsx


function input_handler_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var InputHandler = Object(external_Vue_["defineComponent"])({
  name: 'InputHandler',
  props: {
    prefixCls: {
      type: String
    },
    disabled: {
      type: Boolean
    },
    role: {
      type: String
    },
    unselectable: {
      type: Boolean
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var active = Object(external_Vue_["ref"])(false);
    Object(external_Vue_["watch"])(function () {
      return props.disabled;
    }, function (disabled) {
      if (!disabled) {
        active.value = false;
      }
    });
    return {
      active: active
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var _c = this.$props,
        prefixCls = _c.prefixCls,
        disabled = _c.disabled,
        unselectable = _c.unselectable,
        otherProps = tslib_es6_rest(_c, ["prefixCls", "disabled", "unselectable"]);

    return Object(external_Vue_["createVNode"])(feedback, Object(external_Vue_["mergeProps"])({
      "disabled": disabled
    }, {
      onTouchstart: function onTouchstart() {
        _this.active = true;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.$emit.apply(_this, ['touchstart'].concat(args));
      },
      onTouchend: function onTouchend() {
        _this.active = false;

        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        _this.$emit.apply(_this, ['touchend'].concat(args));
      }
    }), {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("span", Object(external_Vue_["mergeProps"])({
          "class": input_handler_defineProperty({}, "".concat(prefixCls, "-handler-active"), _this.active && !_this.disabled)
        }, otherProps, {
          "unselectable": unselectable ? 'on' : 'off',
          "onClick": function onClick() {
            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            _this.$emit.apply(_this, ['click'].concat(args));
          }
        }), [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)])];
      }
    });
  }
});
/* harmony default export */ var input_handler = (InputHandler);
// CONCATENATED MODULE: ./src/packages/vmc-input-number/index.tsx


function vmc_input_number_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function vmc_input_number_noop() {}

function preventDefault(e) {
  e.preventDefault();
}

var InputNumber = Object(external_Vue_["defineComponent"])({
  name: 'InputNumber',
  props: Object.assign(Object.assign({}, baseComponentProps), {
    valueEditable: {
      type: Boolean,
      default: false
    },
    focusOnUpDown: {
      type: Boolean,
      default: false
    },
    prefixCls: {
      type: String,
      default: 'rmc-input-number'
    },
    tabIndex: {
      type: Number
    },
    upHandler: {
      type: Object
    },
    downHandler: {
      type: Object
    },
    formatter: {
      type: Function
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;

    var _useBaseComponent = base_useBaseComponent(props, {
      emit: emit
    }),
        state = _useBaseComponent.state,
        stop = _useBaseComponent.stop,
        up = _useBaseComponent.up,
        onFocus = _useBaseComponent.onFocus,
        onBlur = _useBaseComponent.onBlur,
        onChange = _useBaseComponent.onChange,
        down = _useBaseComponent.down,
        toPrecisionAsStep = _useBaseComponent.toPrecisionAsStep;

    var start = Object(external_Vue_["ref"])(null);
    var end = Object(external_Vue_["ref"])(null);
    var inputRef = Object(external_Vue_["ref"])(null);

    var update = function update() {
      if (props.focusOnUpDown && state.focused) {
        var selectionRange = inputRef.value.setSelectionRange;

        if (selectionRange && typeof selectionRange === 'function' && start.value !== undefined && end.value !== undefined && start.value !== end.value) {
          inputRef.value.setSelectionRange(start.value, end.value);
        } else {
          focus();
        }
      }
    };

    var focus = function focus() {
      inputRef.value.focus();
    };

    var formatWrapper = function formatWrapper(num) {
      if (props.formatter) {
        return props.formatter(num);
      }

      return num;
    };

    Object(external_Vue_["onMounted"])(function () {
      update();
    });
    Object(external_Vue_["onBeforeUpdate"])(function () {
      try {
        start.value = inputRef.value.selectionStart;
        end.value = inputRef.value.selectionEnd;
      } catch (e) {// Fix error in Chrome:
        // Failed to read the 'selectionStart' property from 'HTMLInputElement'
        // http://stackoverflow.com/q/21177489/3040605
      }
    });
    return {
      state: state,
      toPrecisionAsStep: toPrecisionAsStep,
      stop: stop,
      up: up,
      down: down,
      formatWrapper: formatWrapper,
      onFocus: onFocus,
      onBlur: onBlur,
      onChange: onChange,
      setInputRef: function setInputRef(el) {
        inputRef.value = el;
      }
    };
  },
  render: function render() {
    var _classNames,
        _this = this;

    var _this$prefixCls = this.prefixCls,
        prefixCls = _this$prefixCls === void 0 ? '' : _this$prefixCls,
        disabled = this.disabled,
        readOnly = this.readOnly,
        max = this.max,
        step = this.step,
        valueEditable = this.valueEditable,
        autoFocus = this.autoFocus,
        tabIndex = this.tabIndex,
        min = this.min;
    var classes = classnames_default()((_classNames = {}, vmc_input_number_defineProperty(_classNames, prefixCls, true), vmc_input_number_defineProperty(_classNames, "".concat(prefixCls, "-disabled"), disabled), vmc_input_number_defineProperty(_classNames, "".concat(prefixCls, "-focused"), this.state.focused), _classNames));
    var upDisabledClass = '';
    var downDisabledClass = '';
    var inputValue = this.state.inputValue;

    if (inputValue || inputValue === 0) {
      if (!isNaN(inputValue)) {
        var val = Number(inputValue);

        if (val >= max) {
          upDisabledClass = "".concat(prefixCls, "-handler-up-disabled");
        }

        if (val <= min) {
          downDisabledClass = "".concat(prefixCls, "-handler-down-disabled");
        }
      } else {
        upDisabledClass = "".concat(prefixCls, "-handler-up-disabled");
        downDisabledClass = "".concat(prefixCls, "-handler-down-disabled");
      }
    }

    var editable = !readOnly && !disabled; // focus state, show input value
    // unfocus state, show valid value

    var inputDisplayValue;

    if (this.state.focused) {
      inputDisplayValue = this.state.inputValue;
    } else {
      inputDisplayValue = this.toPrecisionAsStep(this.state.inputValue);
    }

    if (inputDisplayValue === undefined || inputDisplayValue === null) {
      inputDisplayValue = '';
    }

    var upEvents;
    var downEvents;
    upEvents = {
      onTouchstart: editable && !upDisabledClass ? this.up : vmc_input_number_noop,
      onTouchend: this.stop,
      onClick: function onClick() {
        if (editable && !upDisabledClass) {
          // @ts-ignore
          _this.up.apply(_this, arguments);

          _this.stop();
        }
      }
    };
    downEvents = {
      onTouchstart: editable && !downDisabledClass ? this.down : vmc_input_number_noop,
      onTouchend: this.stop,
      onClick: function onClick() {
        if (editable && !upDisabledClass) {
          // @ts-ignore
          _this.down.apply(_this, arguments);

          _this.stop();
        }
      }
    };
    var inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);
    var isUpDisabled = !!upDisabledClass || disabled || readOnly;
    var isDownDisabled = !!downDisabledClass || disabled || readOnly;
    return Object(external_Vue_["createVNode"])("div", {
      "class": classes
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-handler-wrap")
    }, [Object(external_Vue_["createVNode"])(input_handler, Object(external_Vue_["mergeProps"])({
      "disabled": isUpDisabled,
      "prefixCls": prefixCls,
      "unselectable": "unselectable"
    }, upEvents, {
      "role": "button",
      "aria-label": "Increase Value",
      "aria-disabled": isUpDisabled,
      "class": "".concat(prefixCls, "-handler ").concat(prefixCls, "-handler-up ").concat(upDisabledClass)
    }), {
      default: function _default() {
        return [_this.upHandler || Object(external_Vue_["createVNode"])("span", {
          "unselectable": "off",
          "class": "".concat(prefixCls, "-handler-up-inner"),
          "onClick": preventDefault
        }, null)];
      }
    }), Object(external_Vue_["createVNode"])(input_handler, Object(external_Vue_["mergeProps"])({
      "disabled": isDownDisabled,
      "prefixCls": prefixCls,
      "unselectable": "unselectable"
    }, downEvents, {
      "role": "button",
      "aria-label": "Decrease Value",
      "aria-disabled": isDownDisabled,
      "class": "".concat(prefixCls, "-handler ").concat(prefixCls, "-handler-down ").concat(downDisabledClass)
    }), {
      default: function _default() {
        return [_this.downHandler || Object(external_Vue_["createVNode"])("span", {
          "unselectable": "off",
          "class": "".concat(prefixCls, "-handler-down-inner"),
          "onClick": preventDefault
        }, null)];
      }
    })]), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-input-wrap"),
      "role": "spinbutton",
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": inputValue
    }, [Object(external_Vue_["createVNode"])("input", {
      "class": "".concat(prefixCls, "-input"),
      "tabindex": tabIndex,
      "autocomplete": "off",
      "onFocus": this.onFocus,
      "onBlur": this.onBlur,
      "autofocus": autoFocus,
      "readonly": readOnly || !valueEditable,
      "disabled": disabled,
      "max": max,
      "min": min,
      "step": step,
      "onChange": this.onChange,
      "ref": this.setInputRef,
      "value": inputDisplayValueFormat
    }, null)])]);
  }
});
/* harmony default export */ var vmc_input_number = (InputNumber);
// CONCATENATED MODULE: ./src/packages/stepper/src/index.tsx






var MStepper = Object(external_Vue_["defineComponent"])({
  install: null,
  name: 'MStepper',
  props: {
    prefixCls: {
      type: String,
      default: 'am-stepper'
    },
    showNumber: {
      type: Boolean,
      default: true
    },
    min: {
      type: Number
    },
    max: {
      type: Number
    },
    step: {
      default: 1
    },
    readOnly: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean
    },
    autoFocus: {
      type: Boolean
    },
    value: {
      type: [Number, String]
    },
    defaultValue: {
      type: Number
    },
    valueEditable: {
      type: Boolean,
      default: true
    },
    upStyle: {},
    downStyle: {},
    inputStyle: {},
    name: {
      type: String
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;

    var getCurrentValue = function getCurrentValue() {
      var value = props.value;
      var currentValue = null;

      if (typeof value === 'string') {
        if (value === '') {
          currentValue = null;
        } else {
          currentValue = parseInt(value);
        }
      } else {
        currentValue = value;
      }

      return currentValue;
    };

    return {
      getCurrentValue: getCurrentValue
    };
  },
  render: function render() {
    var _a = this.$props,
        showNumber = _a.showNumber,
        value = _a.value,
        restProps = tslib_es6_rest(_a, ["showNumber", "value"]);

    var stepperClass = classnames_default()({
      showNumber: !!showNumber
    });
    var props = Object.assign({}, restProps);
    props.upHandler = Object(external_Vue_["createVNode"])(packages_icon, {
      "type": "plus",
      "size": "xxs"
    }, null);
    props.downHandler = Object(external_Vue_["createVNode"])(packages_icon, {
      "type": "minus",
      "size": "xxs"
    }, null);
    return Object(external_Vue_["createVNode"])(vmc_input_number, Object(external_Vue_["mergeProps"])(Object.assign(Object.assign(Object.assign({}, this.$attrs), props), {
      value: this.getCurrentValue()
    }), {
      "class": stepperClass
    }), null);
  }
});
/* harmony default export */ var stepper_src = (MStepper);
// EXTERNAL MODULE: ./src/packages/stepper/style/index.less
var stepper_style = __webpack_require__("44e6");

// CONCATENATED MODULE: ./src/packages/stepper/style/index.tsx



// CONCATENATED MODULE: ./src/packages/stepper/index.ts



stepper_src.install = function (Vue) {
  Vue.component('MStepper', stepper_src);
};

/* harmony default export */ var stepper = (stepper_src);
// CONCATENATED MODULE: ./src/packages/steps/src/index.tsx


function steps_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/* harmony default export */ var steps_src = (Object(external_Vue_["defineComponent"])({
  name: 'Step',
  props: {
    icon: {
      type: String
    },
    prefixCls: {
      type: String,
      default: 'am-steps'
    },
    iconPrefix: {
      type: String,
      default: 'ant'
    },
    direction: {
      type: String,
      default: 'vertical'
    },
    labelPlacement: {
      type: String,
      default: 'vertical'
    },
    status: {
      type: String,
      default: 'process'
    },
    size: {
      type: String,
      default: ''
    },
    progressDot: {
      type: Boolean,
      default: false
    },
    current: {
      type: Number,
      default: 0
    }
  },
  setup: function setup() {
    var instance = Object(external_Vue_["getCurrentInstance"])();
    Object(external_Vue_["provide"])('steps', instance);
    return {};
  },
  render: function render() {
    var _classNames;

    var _a = this,
        prefixCls = _a.prefixCls,
        direction = _a.direction,
        labelPlacement = _a.labelPlacement,
        iconPrefix = _a.iconPrefix,
        status = _a.status,
        size = _a.size,
        current = _a.current,
        progressDot = _a.progressDot,
        restProps = tslib_es6_rest(_a, ["prefixCls", "direction", "labelPlacement", "iconPrefix", "status", "size", "current", "progressDot"]);

    var adjustedlabelPlacement = !!progressDot ? 'vertical' : labelPlacement;
    var classString = classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(direction), (_classNames = {}, steps_src_defineProperty(_classNames, "".concat(prefixCls, "-").concat(size), size), steps_src_defineProperty(_classNames, "".concat(prefixCls, "-label-").concat(adjustedlabelPlacement), direction === 'horizontal'), steps_src_defineProperty(_classNames, "".concat(prefixCls, "-dot"), !!progressDot), _classNames));
    var content = unwrapFragment(this.$slots.default()).map(function (child, index) {
      if (!child) {
        return null;
      }

      var childProps = {
        stepNumber: index + 1,
        prefixCls: prefixCls,
        iconPrefix: iconPrefix,
        icon: child.props.icon || '',
        wrapperStyle: {},
        progressDot: progressDot,
        status: child.props.status || '',
        class: ''
      };
      var icon = childProps.icon;

      if (!icon) {
        if (index < current) {
          // 对应 state: finish
          icon = 'check-circle-o';
        } else if (index > current) {
          // 对应 state: wait
          icon = 'ellipsis';
          childProps.class = 'ellipsis-item';
        }

        if (status === 'error' && index === current || child.props.status === 'error') {
          icon = 'cross-circle-o';
        }
      }

      if (icon) {
        childProps.icon = icon;
      } // fix tail color


      if (status === 'error' && index === current - 1) {
        childProps.class = "".concat(prefixCls, "-next-error");
      }

      if (!child.props.status) {
        if (index === current) {
          childProps.status = status;
        } else if (index < current) {
          childProps.status = 'finish';
        } else {
          childProps.status = 'wait';
        }
      }

      Object.keys(childProps).forEach(function (key) {
        child.props[key] = childProps[key];
      });
      return child;
    });
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": classString
    }, filterHTMLAttrs(restProps)), [content]);
  }
}));
// CONCATENATED MODULE: ./src/packages/steps/src/step.tsx


function step_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function step_isString(str) {
  return typeof str === 'string';
}

var statusIcon = {
  finish: 'check-circle',
  error: 'cross-circle-o',
  wait: 'ellipsis'
};
/* harmony default export */ var src_step = (Object(external_Vue_["defineComponent"])({
  name: 'Step',
  props: {
    prefixCls: {
      type: String,
      default: 'am-step'
    },
    wrapperStyle: {},
    itemWidth: {
      type: [Number, String]
    },
    status: {
      type: String
    },
    iconPrefix: {
      type: String,
      default: 'ant'
    },

    /**
     * 图标类型，仅支持的图标名称
     */
    icon: {
      type: String
    },
    adjustMarginRight: {
      type: [Number, String]
    },
    stepNumber: {
      type: Number
    },
    description: {
      type: String
    },
    title: {
      type: String
    },
    progressDot: {}
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var steps = Object(external_Vue_["inject"])('steps');
    var iconSize = Object(external_Vue_["computed"])(function () {
      if (steps.size === 'small') {
        return 18;
      } else {
        return 22;
      }
    });

    var renderIconNode = function renderIconNode() {
      var _classNames;

      var _a;

      var prefixCls = props.prefixCls,
          progressDot = props.progressDot,
          stepNumber = props.stepNumber,
          status = props.status,
          title = props.title,
          description = props.description,
          icon = props.icon,
          iconPrefix = props.iconPrefix;

      if (slots.icon) {
        return Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-icon")
        }, [(_a = slots.icon) === null || _a === void 0 ? void 0 : _a.call(slots)]);
      }

      var iconNode;
      var iconClassName = classnames_default()("".concat(prefixCls, "-icon"), "".concat(iconPrefix, "icon"), (_classNames = {}, step_defineProperty(_classNames, "".concat(iconPrefix, "icon-").concat(icon), icon && step_isString(icon)), step_defineProperty(_classNames, "".concat(iconPrefix, "icon-check"), !icon && status === 'finish'), step_defineProperty(_classNames, "".concat(iconPrefix, "icon-cross"), !icon && status === 'error'), _classNames));
      var iconStyle = {
        position: 'relative',
        left: '-1px'
      };

      var iconDot = Object(external_Vue_["createVNode"])("span", {
        "class": "".concat(prefixCls, "-icon-dot")
      }, null); // `progressDot` enjoy the highest priority


      if (progressDot) {
        if (typeof progressDot === 'function') {
          iconNode = Object(external_Vue_["createVNode"])("span", {
            "class": "".concat(prefixCls, "-icon")
          }, [progressDot(iconDot, {
            index: stepNumber - 1,
            status: status,
            title: title,
            description: description
          })]);
        } else {
          iconNode = Object(external_Vue_["createVNode"])("span", {
            "class": "".concat(prefixCls, "-icon")
          }, [iconDot]);
        }
      } else if (icon && step_isString(icon)) {
        iconNode = Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-icon")
        }, [Object(external_Vue_["createVNode"])(packages_icon, {
          "style": iconStyle,
          "size": iconSize.value,
          "type": icon
        }, null)]);
      } else if (Object(external_Vue_["isVNode"])(icon)) {
        iconNode = Object(external_Vue_["createVNode"])("span", {
          "class": iconClassName
        }, [icon]);
      } else if (status === 'finish' || status === 'error') {
        iconNode = Object(external_Vue_["createVNode"])("span", {
          "class": iconClassName
        }, null);
      } else {
        iconNode = Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-icon")
        }, [stepNumber]);
      }

      return iconNode;
    };

    return {
      renderIconNode: renderIconNode
    };
  },
  render: function render() {
    var _a, _b, _c, _d, _e, _f;

    var _g = this,
        prefixCls = _g.prefixCls,
        itemWidth = _g.itemWidth,
        _g$status = _g.status,
        status = _g$status === void 0 ? 'wait' : _g$status,
        iconPrefix = _g.iconPrefix,
        icon = _g.icon,
        wrapperStyle = _g.wrapperStyle,
        adjustMarginRight = _g.adjustMarginRight,
        stepNumber = _g.stepNumber,
        description = _g.description,
        title = _g.title,
        progressDot = _g.progressDot,
        restProps = tslib_es6_rest(_g, ["prefixCls", "itemWidth", "status", "iconPrefix", "icon", "wrapperStyle", "adjustMarginRight", "stepNumber", "description", "title", "progressDot"]);

    var classString = classnames_default()("".concat(prefixCls, "-item"), "".concat(prefixCls, "-item-").concat(status), step_defineProperty({}, "".concat(prefixCls, "-item-custom"), icon));
    var stepItemStyle = {};

    if (itemWidth) {
      stepItemStyle.width = itemWidth;
    }

    if (adjustMarginRight) {
      stepItemStyle.marginRight = adjustMarginRight;
    }

    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])(restProps, {
      "class": classString,
      "style": stepItemStyle
    }), [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-item-tail")
    }, null), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-item-icon")
    }, [this.renderIconNode()]), Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-item-content")
    }, [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-item-title")
    }, [(_c = (_b = (_a = this.$slots) === null || _a === void 0 ? void 0 : _a.title) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : title]), (description || this.$slots.description) && Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-item-description")
    }, [(_f = (_e = (_d = this.$slots) === null || _d === void 0 ? void 0 : _d.description) === null || _e === void 0 ? void 0 : _e.call(_d)) !== null && _f !== void 0 ? _f : description])])]);
  }
}));
// EXTERNAL MODULE: ./src/packages/steps/style/index.less
var steps_style = __webpack_require__("d0ed");

// CONCATENATED MODULE: ./src/packages/steps/style/index.tsx


// CONCATENATED MODULE: ./src/packages/steps/index.ts



var steps_Plugin = steps_src;
steps_src.Step = src_step;

steps_Plugin.install = function (Vue) {
  Vue.component('MSteps', steps_src);
  Vue.component('MStep', src_step);
};

/* harmony default export */ var packages_steps = (steps_Plugin);
// CONCATENATED MODULE: ./src/packages/switch/src/switch.tsx


function switch_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var Switch = Object(external_Vue_["defineComponent"])({
  name: 'MSwitch',
  props: Object.assign(Object.assign({}, formComponentProps), {
    color: {
      type: String
    },
    name: {
      type: String
    },
    prefixCls: {
      type: String,
      default: 'am-switch'
    },
    platform: {
      type: String,
      default: 'ios'
    }
  }),
  setup: function setup(props, ctx) {
    var _useFormComponent = form_component_useFormComponent(props, ctx),
        currentValue = _useFormComponent.currentValue;

    var onChange = function onChange(e) {
      currentValue.value = e.target.checked;
    };

    var onClick = function onClick(e) {
      var val; // tslint:disable-next-line:prefer-conditional-expression

      if (e && e.target && e.target.checked !== undefined) {
        val = e.target.checked;
      } else {
        val = props.value;
      }

      currentValue.value = val;
    };

    return {
      currentValue: currentValue,
      onChange: onChange,
      onClick: onClick
    };
  },
  render: function render() {
    var _a = this,
        prefixCls = _a.prefixCls,
        name = _a.name,
        disabled = _a.disabled,
        platform = _a.platform,
        color = _a.color,
        restProps = tslib_es6_rest(_a, ["prefixCls", "name", "disabled", "platform", "color"]);

    var wrapCls = classnames_default()(prefixCls, switch_defineProperty({}, "".concat(prefixCls, "-android"), platform === 'android'));
    var fackInputCls = classnames_default()('checkbox', switch_defineProperty({}, "checkbox-disabled", disabled));
    var globalProps = Object.keys(restProps).reduce(function (prev, key) {
      if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
        prev[key] = restProps[key];
      }

      return prev;
    }, {});
    var style = {};

    if (color && this.currentValue) {
      style.backgroundColor = color;
    }

    return Object(external_Vue_["createVNode"])("label", {
      "class": wrapCls
    }, [Object(external_Vue_["createVNode"])("input", Object(external_Vue_["mergeProps"])({
      "type": "checkbox",
      "name": name,
      "class": "".concat(prefixCls, "-checkbox"),
      "disabled": disabled,
      "checked": this.currentValue,
      "onChange": this.onChange,
      "value": this.currentValue ? 'on' : 'off'
    }, !disabled ? {
      onClick: this.onClick
    } : {}, globalProps), null), Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])({
      "class": fackInputCls,
      "style": style
    }, disabled ? {
      onClick: this.onClick
    } : {}), null)]);
  }
});
/* harmony default export */ var src_switch = (Switch);
// CONCATENATED MODULE: ./src/packages/switch/src/switch-item.tsx


function switch_item_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







var ListItem = packages_list.Item;
var switchItem = Object(external_Vue_["defineComponent"])({
  name: 'SwitchItem',
  props: Object.assign(Object.assign({}, formComponentProps), {
    prefixCls: {
      default: 'am-switch'
    },
    listPrefixCls: {
      default: 'am-list'
    },
    switchProps: {
      default: function _default() {
        return {};
      }
    },
    title: {
      type: [String, Object]
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit;

    var _useFormComponent = form_component_useFormComponent(props, {
      emit: emit
    }),
        isDisabled = _useFormComponent.isDisabled;

    var state = Object(external_Vue_["reactive"])({
      value: props.value
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.value = value;
    });
    Object(external_Vue_["watch"])(function () {
      return state.value;
    }, function (value, oldValue) {
      emit('update:value', value);

      if (value !== oldValue) {
        emit('change', value);
      }
    });

    var onClick = function onClick() {
      if (!props.disabled) {
        emit('click');
      }
    };

    return {
      state: state,
      onClick: onClick,
      isDisabled: isDisabled
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var _c = this.$props,
        listPrefixCls = _c.listPrefixCls,
        disabled = _c.disabled,
        switchProps = _c.switchProps,
        otherProps = tslib_es6_rest(_c, ["listPrefixCls", "disabled", "switchProps"]);

    var prefixCls = otherProps.prefixCls;
    var wrapCls = classnames_default()("".concat(prefixCls, "-item"), switch_item_defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled === true));
    var extraProps = Object.assign(Object.assign(Object.assign({}, this.$attrs), switchProps), {
      disabled: this.isDisabled,
      value: this.state.value,
      'onUpdate:value': function onUpdateValue(value) {
        _this.state.value = value;
      },
      onClick: this.onClick
    }); // @ts-ignore

    var extra = Object(external_Vue_["createVNode"])(src_switch, extraProps, null);

    var listItemProps = Object.assign(Object.assign({}, otherProps), {
      disabled: this.isDisabled,
      prefixCls: listPrefixCls,
      class: wrapCls,
      extra: extra
    });
    return Object(external_Vue_["createVNode"])(ListItem, listItemProps, {
      default: function _default() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    });
  }
});
/* harmony default export */ var switch_item = (switchItem);
// EXTERNAL MODULE: ./src/packages/switch/style/index.less
var switch_style = __webpack_require__("b084");

// CONCATENATED MODULE: ./src/packages/switch/style/index.tsx


// CONCATENATED MODULE: ./src/packages/switch/index.ts



var switch_Plugin = src_switch;

switch_Plugin.install = function (Vue) {
  Vue.component('MSwitch', src_switch);
  Vue.component('MSwitchItem', switch_item);
};

/* harmony default export */ var packages_switch = (switch_Plugin);
// EXTERNAL MODULE: ./src/packages/tabs/style/index.less
var tabs_style = __webpack_require__("cd3f4");

// CONCATENATED MODULE: ./src/packages/tabs/style/index.tsx


// CONCATENATED MODULE: ./src/packages/tabs/index.ts


var tabs_Plugin = tabs_src;

tabs_Plugin.install = function (app) {
  app.component('MTabs', tabs_src);
};

/* harmony default export */ var packages_tabs = (tabs_Plugin);
// CONCATENATED MODULE: ./src/packages/tab-bar/src/tab.tsx





function tab_isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Object(external_Vue_["isVNode"])(s);
}

var Tab = Object(external_Vue_["defineComponent"])({
  name: 'Tab',
  props: {
    dot: {
      type: Boolean
    },
    badge: {
      type: [String, Number]
    },
    selected: {
      type: Boolean
    },
    selectedIcon: {
      type: Object
    },
    icon: {
      type: Object
    },
    title: {
      type: String
    },
    prefixCls: {
      type: String,
      default: 'am-tab-item'
    },
    unselectedTintColor: {
      type: String
    },
    tintColor: {
      type: String
    },
    dataAttrs: {}
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;

    var renderIcon = function renderIcon() {
      var dot = props.dot,
          badge = props.badge,
          selected = props.selected,
          selectedIcon = props.selectedIcon,
          icon = props.icon,
          title = props.title,
          prefixCls = props.prefixCls;
      var realIcon = selected ? selectedIcon : icon;
      var iconDom = realIcon ? Object(external_Vue_["isVNode"])(realIcon) ? realIcon : Object(external_Vue_["createVNode"])(icon_res, {
        "class": "".concat(prefixCls, "-image"),
        "type": realIcon
      }, null) : null;

      if (badge) {
        return Object(external_Vue_["createVNode"])(packages_badge, {
          "text": badge,
          "class": "".concat(prefixCls, "-badge tab-badge")
        }, {
          default: function _default() {
            return [' ', iconDom, ' '];
          }
        });
      }

      if (dot) {
        return Object(external_Vue_["createVNode"])(packages_badge, {
          "dot": true,
          "class": "".concat(prefixCls, "-badge tab-dot")
        }, tab_isSlot(iconDom) ? iconDom : {
          default: function _default() {
            return [iconDom];
          }
        });
      }

      return iconDom;
    };

    var onClick = function onClick() {
      emit('click');
    };

    return {
      onClick: onClick,
      renderIcon: renderIcon
    };
  },
  render: function render() {
    var title = this.title,
        prefixCls = this.prefixCls,
        selected = this.selected,
        unselectedTintColor = this.unselectedTintColor,
        tintColor = this.tintColor;
    var iconColor = selected ? tintColor : unselectedTintColor;
    return Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])(this.dataAttrs, {
      "onClick": this.onClick,
      "class": "".concat(prefixCls)
    }), [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-icon"),
      "style": {
        color: iconColor
      }
    }, [this.renderIcon()]), Object(external_Vue_["createVNode"])("p", {
      "class": "".concat(prefixCls, "-title"),
      "style": {
        color: selected ? tintColor : unselectedTintColor
      }
    }, [title])]);
  }
});
/* harmony default export */ var src_tab = (Tab);
// CONCATENATED MODULE: ./src/packages/tab-bar/src/item.tsx




var _uid = 100;
/* harmony default export */ var tab_bar_src_item = (Object(external_Vue_["defineComponent"])({
  name: 'MTabBarItem',
  props: {
    badge: {
      type: [String, Number]
    },
    selected: {
      type: Boolean,
      default: undefined
    },
    icon: {
      type: [String, Object]
    },
    selectedIcon: {
      type: [String, Object]
    },
    title: {
      type: [String, Object],
      default: ''
    },
    dot: {
      type: Boolean
    },
    prefixCls: {
      type: String,
      default: 'am-tab-bar'
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var store = Object(external_Vue_["inject"])('store');
    var tabBar = Object(external_Vue_["inject"])('tabBar');
    var index = Object(external_Vue_["ref"])(-1);
    var sSelected = Object(external_Vue_["computed"])(function () {
      return props.selected !== undefined ? props.selected : index.value === store.currentTab;
    });
    var instance = Object(external_Vue_["getCurrentInstance"])();
    Object(external_Vue_["onMounted"])(function () {
      var children = tabBar.slots.default();
      var tabs = children.filter(function (it) {
        return it.props.tag === instance.props.tag;
      });
      index.value = tabs.findIndex(function (it) {
        return it.key === instance.vnode.key;
      });
    });
    return {
      tabBar: tabBar,
      sSelected: sSelected,
      index: index,
      _uid: _uid++
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var _this$tabBar$props = this.tabBar.props,
        tintColor = _this$tabBar$props.tintColor,
        unselectedTintColor = _this$tabBar$props.unselectedTintColor;
    var icon = this.$slots.icon ? this.$slots.icon[0] : this.icon;
    var selectedIcon = this.$slots.selectedIcon ? this.$slots.selectedIcon : this.selectedIcon || icon;
    var props = Object.assign(Object.assign({}, this.$props), {
      prefixCls: "".concat(this.prefixCls, "-tab"),
      tintColor: tintColor,
      unselectedTintColor: unselectedTintColor,
      icon: icon,
      selectedIcon: selectedIcon,
      selected: this.sSelected
    });
    return Object(external_Vue_["createVNode"])(src_tab, Object(external_Vue_["mergeProps"])(props, {
      "onClick": function onClick(e) {
        console.log(_this.tabBar);

        _this.tabBar.setCurrentTab(_this.index);

        _this.$emit('click');
      },
      "dataAttrs": get_data_attr(this.$props)
    }), {
      default: function _default() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    });
  }
}));
// CONCATENATED MODULE: ./src/packages/tab-bar/src/index.tsx




var TabBar = Object(external_Vue_["defineComponent"])({
  Item: tab_bar_src_item,
  name: 'MTabBar',
  props: {
    prefixCls: {
      default: 'am-tab-bar'
    },
    className: {},
    hidden: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String,
      default: '正在加载'
    },
    noRenderContent: {},
    prerenderingSiblingsNumber: {
      type: Number,
      default: 1
    },
    barTintColor: {
      type: String,
      default: 'white'
    },
    tintColor: {
      type: String,
      default: '#108ee9'
    },
    unselectedTintColor: {
      type: String,
      default: '#888'
    },
    tabBarPosition: {
      type: String,
      default: 'bottom'
    },
    animated: {
      type: Boolean,
      default: false
    },
    swipeable: {
      type: Boolean,
      default: false
    },
    value: {
      type: [Number, String]
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var store = Object(external_Vue_["reactive"])({
      currentTab: -10000
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      store.currentTab = value;
    }, {
      immediate: true
    });
    Object(external_Vue_["watch"])(function () {
      return store.currentTab;
    }, function (value) {
      emit('update:value', value);
    });

    var setCurrentTab = function setCurrentTab(tab) {
      store.currentTab = tab;
    };

    var renderTabBar = function renderTabBar() {
      var cls = "".concat(props.prefixCls, "-bar");

      if (props.hidden) {
        cls += " ".concat(props.prefixCls, "-bar-hidden-").concat(props.tabBarPosition);
      }

      return Object(external_Vue_["createVNode"])("div", {
        "class": cls,
        "style": {
          backgroundColor: props.barTintColor
        }
      }, [slots.default()]);
    };

    var getTabs = function getTabs() {
      return slots.default().map(function (c, index) {
        var props = Object.assign({}, c.props);

        if (props.icon && !props.selectedIcon) {
          props.selectedIcon = props.icon;
        }

        return {
          props: props,
          onClick: function onClick() {
            store.currentTab = index;
          }
        };
      });
    };

    var instance = Object(external_Vue_["getCurrentInstance"])();
    Object(external_Vue_["provide"])('tabBar', {
      setCurrentTab: setCurrentTab,
      slots: slots,
      props: props
    });
    Object(external_Vue_["provide"])('store', store);
    return {
      getTabs: getTabs,
      store: store,
      renderTabBar: renderTabBar
    };
  },
  render: function render() {
    var _this = this;

    var _a, _b;

    var prefixCls = this.prefixCls,
        animated = this.animated,
        swipeable = this.swipeable,
        noRenderContent = this.noRenderContent,
        prerenderingSiblingsNumber = this.prerenderingSiblingsNumber,
        tabBarPosition = this.tabBarPosition;
    var tabs = this.getTabs();
    return Object(external_Vue_["createVNode"])("div", {
      "class": prefixCls
    }, [Object(external_Vue_["createVNode"])(packages_tabs, {
      "tabs": tabs,
      "renderTabBar": this.renderTabBar,
      "tabBarPosition": tabBarPosition,
      "page": this.store.currentTab < 0 ? undefined : this.store.currentTab,
      "animated": animated,
      "swipeable": swipeable,
      "noRenderContent": noRenderContent,
      "prerenderingSiblingsNumber": prerenderingSiblingsNumber
    }, {
      default: function _default() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    })]);
  }
});
/* harmony default export */ var tab_bar_src = (TabBar);
// EXTERNAL MODULE: ./src/packages/tab-bar/style/index.less
var tab_bar_style = __webpack_require__("267e");

// CONCATENATED MODULE: ./src/packages/tab-bar/style/index.tsx




// CONCATENATED MODULE: ./src/packages/tab-bar/index.ts


var tab_bar_Plugin = tab_bar_src;

tab_bar_Plugin.install = function (Vue) {
  Vue.component('MTabBar', tab_bar_src);
  Vue.component('MTabBarItem', tab_bar_src.Item);
};

/* harmony default export */ var tab_bar = (tab_bar_Plugin);
// CONCATENATED MODULE: ./src/packages/tag/src/index.tsx


function tag_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var Tag = Object(external_Vue_["defineComponent"])({
  name: 'Tag',
  props: {
    prefixCls: {
      type: String,
      default: 'am-tag'
    },
    disabled: {
      type: Boolean,
      default: false
    },
    selected: {
      type: Boolean,
      default: false
    },
    closable: {
      type: Boolean,
      default: false
    },
    small: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots;
    var state = Object(external_Vue_["reactive"])({
      selected: props.selected,
      closed: false
    });
    Object(external_Vue_["watch"])(function () {
      return props.selected;
    }, function (selected) {
      state.selected = selected;
    });

    var onClick = function onClick() {
      var disabled = props.disabled;

      if (disabled) {
        return;
      }

      var isSelect = state.selected;
      state.selected = !isSelect;
      emit('change', !isSelect);
    };

    var onTagClose = function onTagClose() {
      state.closed = true;
      emit('close');
    };

    return {
      onClick: onClick,
      state: state,
      onTagClose: onTagClose
    };
  },
  render: function render() {
    var _classnames,
        _this = this;

    var _a, _b;

    var prefixCls = this.prefixCls,
        disabled = this.disabled,
        closable = this.closable,
        small = this.small;
    var wrapCls = classnames_default()(prefixCls, (_classnames = {}, tag_src_defineProperty(_classnames, "".concat(prefixCls, "-normal"), !disabled && (!this.state.selected || small || closable)), tag_src_defineProperty(_classnames, "".concat(prefixCls, "-small"), small), tag_src_defineProperty(_classnames, "".concat(prefixCls, "-active"), this.state.selected && !disabled && !small && !closable), tag_src_defineProperty(_classnames, "".concat(prefixCls, "-disabled"), disabled), tag_src_defineProperty(_classnames, "".concat(prefixCls, "-closable"), closable), _classnames));
    var closableDom = closable && !disabled && !small ? Object(external_Vue_["createVNode"])(feedback, {
      "activeClassName": "".concat(prefixCls, "-close-active")
    }, {
      default: function _default() {
        return [Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-close"),
          "role": "button",
          "onClick": _this.onTagClose.bind(_this),
          "aria-label": "remove tag"
        }, [Object(external_Vue_["createVNode"])(packages_icon, {
          "type": "cross-circle",
          "size": "xs",
          "aria-hidden": "true"
        }, null)])];
      }
    }) : null;
    return !this.state.closed ? Object(external_Vue_["createVNode"])("div", Object(external_Vue_["mergeProps"])(get_data_attr(this.$props), {
      "class": wrapCls,
      "onClick": this.onClick
    }), [Object(external_Vue_["createVNode"])("div", {
      "class": "".concat(prefixCls, "-text")
    }, [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]), closableDom]) : null;
  }
});
/* harmony default export */ var tag_src = (Tag);
// EXTERNAL MODULE: ./src/packages/tag/style/index.css
var tag_style = __webpack_require__("9bac");

// CONCATENATED MODULE: ./src/packages/tag/style/index.ts

// CONCATENATED MODULE: ./src/packages/tag/index.ts



tag_src.install = function (Vue) {
  Vue.component('MTag', tag_src);
};

/* harmony default export */ var tag = (tag_src);
// CONCATENATED MODULE: ./src/packages/textarea/src/index.tsx


function textarea_src_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function textarea_src_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { textarea_src_ownKeys(Object(source), true).forEach(function (key) { textarea_src_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { textarea_src_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function textarea_src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








function fixControlledValue(value) {
  if (typeof value === 'undefined' || value === null) {
    return '';
  }

  return value;
}

var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]|\n/g;

function countSymbols() {
  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return text.replace(regexAstralSymbols, '_').length;
}

/* harmony default export */ var textarea_src = (Object(external_Vue_["defineComponent"])({
  name: 'MTextarea',
  props: Object.assign(Object.assign({}, formComponentProps), {
    prefixCls: {
      type: String,
      default: 'am-textarea'
    },
    prefixListCls: {
      type: String,
      default: 'am-list'
    },
    title: {
      type: String
    },
    maxLength: {
      type: Number
    },
    name: {
      type: String
    },
    placeholder: {
      default: ''
    },
    clearable: {
      type: Boolean,
      default: false
    },
    rows: {
      type: Number,
      default: 1
    },
    count: {
      type: Number
    },
    autoHeight: {
      type: Boolean,
      default: false
    },
    labelNumber: {
      type: Number,
      default: 5
    }
  }),
  setup: function setup(props, _ref) {
    var emit = _ref.emit,
        slots = _ref.slots,
        attrs = _ref.attrs;

    var _useFormComponent = form_component_useFormComponent(props, {
      emit: emit
    }),
        isReadonly = _useFormComponent.isReadonly,
        isDisabled = _useFormComponent.isDisabled;

    var debounceTimeout = Object(external_Vue_["ref"])(null);
    var state = Object(external_Vue_["reactive"])({
      focus: false,
      value: props.value || ''
    });
    Object(external_Vue_["watch"])(function () {
      return props.value;
    }, function (value) {
      state.value = fixControlledValue(value);
    });
    Object(external_Vue_["watch"])(function () {
      return state.value;
    }, function (value) {
      emit('update:value', value);
    });
    var textareaRef = Object(external_Vue_["ref"])(null);

    var focus = function focus() {
      textareaRef.value.focus();
    };

    var reAlignHeight = function reAlignHeight() {
      var textareaDom = textareaRef.value;
      textareaDom.style.height = ''; // 字数减少时能自动减小高度

      textareaDom.style.height = "".concat(textareaDom.scrollHeight, "px");
    };

    var onChange = function onChange(e) {
      var value = e.target.value;
      state.value = value;
      emit('change', value);
    };

    var onBlur = function onBlur(e) {
      debounceTimeout.value = setTimeout(function () {
        if (document.activeElement !== textareaRef.value) {
          state.focus = false;
        }
      }, 150);
      var value = e.currentTarget.value; // fix autoFocus item blur with flash

      setTimeout(function () {
        // fix ios12 wechat browser click failure after input
        if (document.body) {
          document.body.scrollTop = document.body.scrollTop;
        }
      }, 100);
      emit('blur', value);
    };

    var onFocus = function onFocus(e) {
      if (debounceTimeout.value) {
        clearTimeout(debounceTimeout.value);
        debounceTimeout.value = null;
      }

      state.focus = true;
      var value = e.currentTarget.value;
      emit('focus', value);
    };

    var clearInput = function clearInput() {
      state.value = '';
      emit('change', '');
    };

    var onInput = function onInput(e) {
      state.value = e.target.value;

      if (props.autoHeight && state.focus) {
        reAlignHeight();
      }
    };

    Object(external_Vue_["onMounted"])(function () {
      if (props.autoHeight) {
        reAlignHeight();
      }
    });
    Object(external_Vue_["onUpdated"])(function () {
      if (props.autoHeight && state.focus) {
        reAlignHeight();
      }
    });
    Object(external_Vue_["onBeforeUnmount"])(function () {
      if (debounceTimeout.value) {
        clearTimeout(debounceTimeout.value);
        debounceTimeout.value = null;
      }
    });
    return {
      setTextareaRef: function setTextareaRef(el) {
        textareaRef.value = el;
      },
      state: state,
      isDisabled: isDisabled,
      isReadonly: isReadonly,
      onInput: onInput,
      onChange: onChange,
      onBlur: onBlur,
      onFocus: onFocus,
      clearInput: clearInput,
      focus: focus
    };
  },
  render: function render() {
    var _classnames,
        _this = this;

    var prefixCls = this.prefixCls,
        prefixListCls = this.prefixListCls,
        editable = this.editable,
        clearable = this.clearable,
        count = this.count,
        labelNumber = this.labelNumber,
        title = this.title,
        autoHeight = this.autoHeight,
        disabled = this.disabled;
    var _this$state = this.state,
        value = _this$state.value,
        focus = _this$state.focus;
    var hasCount = count > 0 && this.rows > 1;
    var wrapCls = classnames_default()("".concat(prefixListCls, "-item"), "".concat(prefixCls, "-item"), (_classnames = {}, textarea_src_defineProperty(_classnames, "".concat(prefixCls, "-disabled"), disabled), textarea_src_defineProperty(_classnames, "".concat(prefixCls, "-item-single-line"), this.rows === 1 && !autoHeight), textarea_src_defineProperty(_classnames, "".concat(prefixCls, "-focus"), focus), textarea_src_defineProperty(_classnames, "".concat(prefixCls, "-has-count"), hasCount), _classnames));
    var characterLength = countSymbols(value);
    var lengthCtrlProps = {};

    if (count > 0) {
      // Note: If in the iOS environment of dev-tools, It will fail.
      if (IS_IOS) {
        var entValue = value ? value.replace(regexAstralSymbols, '_') : '';
        var entLen = entValue ? entValue.split('_').length - 1 : 0;
        lengthCtrlProps.maxLength = count + entLen - characterLength + (value ? value.length : 0);
      } else {
        lengthCtrlProps.maxLength = count - characterLength + (value ? value.length : 0);
      }
    }

    var slots = {
      extra: function extra() {
        return Object(external_Vue_["createVNode"])("div", {
          "class": "".concat(prefixCls, "-control"),
          "slot": "extra"
        }, [Object(external_Vue_["createVNode"])("textarea", Object(external_Vue_["mergeProps"])({
          "ref": _this.setTextareaRef
        }, lengthCtrlProps, {
          "rows": _this.rows,
          "disabled": _this.isDisabled,
          "name": _this.name,
          "placeholder": _this.placeholder,
          "value": value,
          "oninput": _this.onInput,
          "onChange": _this.onChange,
          "onBlur": _this.onBlur,
          "onFocus": _this.onFocus,
          "readOnly": !editable
        }), null), clearable && editable && value && characterLength > 0 && // @ts-ignore
        Object(external_Vue_["createVNode"])(feedback, {
          "activeClassName": "".concat(prefixCls, "-clear-active")
        }, {
          default: function _default() {
            return [Object(external_Vue_["createVNode"])("div", {
              "class": "".concat(prefixCls, "-clear"),
              "onClick": _this.clearInput
            }, null)];
          }
        }), hasCount && Object(external_Vue_["createVNode"])("span", {
          "class": "".concat(prefixCls, "-count")
        }, [Object(external_Vue_["createVNode"])("span", null, [value ? characterLength : 0]), Object(external_Vue_["createTextVNode"])("/"), count])]);
      }
    };
    return Object(external_Vue_["createVNode"])(packages_list.Item, {
      "class": wrapCls,
      "required": this.required,
      "disabled": this.isDisabled,
      "title": title
    }, textarea_src_objectSpread({}, slots));
  }
}));
// EXTERNAL MODULE: ./src/packages/textarea/style/index.less
var textarea_style = __webpack_require__("e6ea");

// CONCATENATED MODULE: ./src/packages/textarea/style/index.tsx



// CONCATENATED MODULE: ./src/packages/textarea/index.ts


var textarea_Plugin = textarea_src;

textarea_Plugin.install = function (Vue) {
  Vue.component('MTextarea', textarea_src);
};

/* harmony default export */ var packages_textarea = (textarea_Plugin);
// CONCATENATED MODULE: ./src/packages/time-directive/src/index.ts
var src_createContent = function createContent(el, binding, vnode) {
  var _a;

  var bindValue = binding.value;
  var text = '';
  var format = 'YYYY-MM-DD HH:mm:ss';
  var date;

  if (typeof bindValue === 'string') {
    var reg1 = /\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z/;

    if (reg1.test(bindValue)) {
      date = moment(bindValue, 'YYYY-MM-DDTHH:mm:ss.sZ').toDate();
      date.setHours(date.getHours() + 8);
    } else {
      text = bindValue;
    }
  } else {
    var value = binding.value;
    date = new Date(value);

    if (!value) {
      text = '';
    } else {
      text = moment(value).format(format);

      if ((_a = vnode.props) === null || _a === void 0 ? void 0 : _a.format) {
        text = moment(value).format(vnode.props.format);
      }
    }
  } // @ts-ignore


  if (binding.modifiers.pretty && date) {
    var now = new Date();
    var nowTime = now.getTime();
    var difference = nowTime - date.getTime();

    if (difference > 0) {
      if (difference < 1000) {
        text = '刚刚';
      } else if (difference < 60 * 1000) {
        text = "".concat(Math.floor(difference / 1000), "\u79D2\u524D");
      } else if (difference < 60 * 1000 * 60) {
        text = "".concat(Math.floor(difference / 1000 / 60), "\u5206\u949F\u524D");
      } else if (now.getFullYear() === date.getFullYear()) {
        if (now.getMonth() === date.getMonth() && now.getDay() === date.getDay()) {
          text = moment(date).format('HH:mm:ss');
        } else {
          text = moment(date).format('MM-DD HH:mm:ss');
        }
      }
    } else if (now.getFullYear() === date.getFullYear()) {
      if (now.getMonth() === date.getMonth() && now.getDay() === date.getDay()) {
        text = moment(date).format('HH:mm:ss');
      } else {
        text = moment(date).format('MM-DD HH:mm:ss');
      }
    }
  }

  el.innerHTML = text;
};

/* harmony default export */ var time_directive_src = ({
  created: function created(el, binding, vnode) {
    src_createContent(el, binding, vnode);
  },
  updated: function updated(el, binding, vnode) {
    src_createContent(el, binding, vnode);
  }
});
// CONCATENATED MODULE: ./src/packages/time-directive/index.ts

/* harmony default export */ var time_directive = ({
  install: function install(Vue) {
    Vue.directive('time', time_directive_src);
  }
});
// CONCATENATED MODULE: ./src/packages/white-space/src/index.tsx



/* harmony default export */ var white_space_src = (Object(external_Vue_["defineComponent"])({
  name: 'WhiteSpace',
  props: {
    size: {
      type: String,
      default: 'md'
    },
    prefixCls: {
      type: String,
      default: 'am-whitespace'
    }
  },
  render: function render() {
    var _this = this;

    var wrapCls = classnames_default()(this.prefixCls, "".concat(this.prefixCls, "-").concat(this.size));
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls,
      "onClick": function onClick(e) {
        _this.$emit('click', e);
      }
    }, null);
  }
}));
// EXTERNAL MODULE: ./src/packages/white-space/style/index.less
var white_space_style = __webpack_require__("86e5");

// CONCATENATED MODULE: ./src/packages/white-space/style/index.tsx


// CONCATENATED MODULE: ./src/packages/white-space/index.ts


var white_space_Plugin = white_space_src;

white_space_Plugin.install = function (Vue) {
  Vue.component('MWhiteSpace', white_space_src);
};

/* harmony default export */ var white_space = (white_space_Plugin);
// CONCATENATED MODULE: ./src/packages/wing-blank/src/index.tsx



var WingBlank = Object(external_Vue_["defineComponent"])({
  name: 'WingBlank',
  props: {
    prefixCls: {
      type: String,
      default: 'am-wingblank'
    },
    size: {
      default: 'lg'
    }
  },
  install: null,
  render: function render() {
    var prefixCls = this.prefixCls,
        size = this.size;
    var wrapCls = classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(size));
    return Object(external_Vue_["createVNode"])("div", {
      "class": wrapCls
    }, [this.$slots.default()]);
  }
});
/* harmony default export */ var wing_blank_src = (WingBlank);
// EXTERNAL MODULE: ./src/packages/wing-blank/style/index.less
var wing_blank_style = __webpack_require__("eef0");

// CONCATENATED MODULE: ./src/packages/wing-blank/style/index.tsx


// CONCATENATED MODULE: ./src/packages/wing-blank/index.ts



wing_blank_src.install = function (Vue) {
  Vue.component('MWingBlank', wing_blank_src);
};

/* harmony default export */ var wing_blank = (wing_blank_src);
// CONCATENATED MODULE: ./src/packages/index.ts
// 导入颜色选择器组件
















































 // 注册moment中文国际化文案

if (window.moment) {
  window.moment.updateLocale('zh-cn', moment_zh_CN);
} // 存储组件列表


var components = [accordion, action_sheet, activity_indicator, packages_badge, packages_button, packages_calendar, card, packages_carousel, packages_checkbox, packages_date_picker, date_picker_view, packages_drawer, packages_flex, grid, packages_icon, image_picker, packages_input, packages_list, loading_directive, packages_menu, packages_modal, nav_bar, notice_bar, pagination, packages_picker, picker_view, packages_popover, packages_popup, progress, pull_refresh, packages_radio, packages_range, packages_result, search_bar, segmented_control, slider, stepper, packages_steps, packages_switch, tab_bar, packages_tabs, tag, packages_textarea, time_directive, packages_toast, white_space, wing_blank]; // 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册

var packages_install = function install(Vue) {
  // 判断是否可以安装
  // if (install.installed) return
  // 遍历注册全局组件
  components.map(function (component) {
    return Vue.use(component);
  });
}; // 判断是否是直接引入文件


if (typeof window !== 'undefined' && window.Vue) {
  packages_install(window.Vue);
}


/* harmony default export */ var src_packages = ({
  // 导出的对象必须具有 install，才能被 Vue.use() 方法安装
  install: packages_install,
  HttpMethod: http_method,
  Accordion: accordion,
  ActionSheet: action_sheet,
  ActivityIndicator: activity_indicator,
  Badge: packages_badge,
  Button: packages_button,
  Calendar: packages_calendar,
  Card: card,
  Carousel: packages_carousel,
  Checkbox: packages_checkbox,
  DatePicker: packages_date_picker,
  DatePickerView: date_picker_view,
  Drawer: packages_drawer,
  Flex: packages_flex,
  Grid: grid,
  Icon: packages_icon,
  ImagePicker: image_picker,
  Input: packages_input,
  List: packages_list,
  LoadingDirective: loading_directive,
  Menu: packages_menu,
  Modal: packages_modal,
  NavBar: nav_bar,
  NoticeBar: notice_bar,
  Pagination: pagination,
  Picker: packages_picker,
  PickerView: picker_view,
  Popover: packages_popover,
  Popup: packages_popup,
  Progress: progress,
  PullRefresh: pull_refresh,
  Radio: packages_radio,
  Range: packages_range,
  Result: packages_result,
  SearchBar: search_bar,
  SegmentedControl: segmented_control,
  Slider: slider,
  Stepper: stepper,
  Steps: packages_steps,
  Switch: packages_switch,
  TabBar: tab_bar,
  Tabs: packages_tabs,
  Tag: tag,
  Textarea: packages_textarea,
  TimeDirective: time_directive,
  Toast: packages_toast,
  WhiteSpace: white_space,
  WingBlank: wing_blank
});
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src_packages);



/***/ })

/******/ });
});
//# sourceMappingURL=antdm.umd.js.map