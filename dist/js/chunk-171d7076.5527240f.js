(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-171d7076"],{"25be":function(t,n){t.exports='<h4 id="基本">基本</h4>\n'},"28c7":function(t,n){t.exports="<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>clearable</td>\n<td>是否支持清除内容</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>editable</td>\n<td>是否可编辑</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>error</td>\n<td>错误信息</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>右边注释</td>\n<td>any</td>\n<td></td>\n</tr>\n<tr>\n<td>labelNumber</td>\n<td></td>\n<td>number</td>\n<td>5</td>\n</tr>\n<tr>\n<td>labelPosition</td>\n<td></td>\n<td>&#39;left&#39; | &#39;top&#39;</td>\n<td>5</td>\n</tr>\n<tr>\n<td>locale</td>\n<td></td>\n<td>object</td>\n<td></td>\n</tr>\n<tr>\n<td>maxLength</td>\n<td>最大长度</td>\n<td>number</td>\n<td></td>\n</tr>\n<tr>\n<td>moneyKeyboardAlign</td>\n<td>可选为 <code>'left'</code>, <code>'right'</code></td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>moneyKeyboardHeader</td>\n<td></td>\n<td>any</td>\n<td>null</td>\n</tr>\n<tr>\n<td>moneyKeyboardWrapProps</td>\n<td></td>\n<td>object</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>input元素的name属性</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>占位文字</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>prefixCls</td>\n<td>class 前缀</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>prefixListCls</td>\n<td>list class 前缀</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>required</td>\n<td></td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>textAlign</td>\n<td></td>\n<td>&#39;left&#39; | &#39;center&#39; | &#39;right&#39;</td>\n<td>5</td>\n</tr>\n<tr>\n<td>title</td>\n<td></td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td></td>\n<td>&#39;&#39; | &#39;text&#39; | &#39;bankCard&#39; | &#39;phone&#39; | &#39;password&#39; | &#39;number&#39; | &#39;digit&#39; | &#39;money&#39;</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>文本内容</td>\n<td>string | number</td>\n<td></td>\n</tr>\n</tbody></table>\n"},"48a1":function(t,n){t.exports='<h1 id="输入框--m-input">输入框  m-input</h1>\n'},"675d":function(t,n,e){"use strict";e.r(n);var o=e("8bbf"),d=Object(o["withScopeId"])("data-v-3995343c");Object(o["pushScopeId"])("data-v-3995343c");var r={id:"basic"},a=Object(o["createVNode"])("div",{class:"markdown-body m-b",id:"demo"},[Object(o["createVNode"])("span"),Object(o["createVNode"])("h2",null,"示例代码")],-1),i=Object(o["createVNode"])("div",{class:"markdown-body",id:"props"},[Object(o["createVNode"])("span"),Object(o["createVNode"])("h2",null,"属性说明")],-1);Object(o["popScopeId"])();var l=d((function(t,n,e,d,l,c){var p=Object(o["resolveComponent"])("title-doc"),s=Object(o["resolveComponent"])("demo1"),u=Object(o["resolveComponent"])("demo2"),m=Object(o["resolveComponent"])("demo3"),b=Object(o["resolveComponent"])("props-doc");return Object(o["openBlock"])(),Object(o["createBlock"])("div",null,[Object(o["createVNode"])("div",r,[Object(o["createVNode"])(p)]),a,Object(o["createVNode"])(s,{id:"demo1"}),Object(o["createVNode"])(u,{id:"demo2"}),Object(o["createVNode"])(m,{id:"demo3"}),i,Object(o["createVNode"])(b)])})),c={class:"demo"};function p(t,n,e,d,r,a){var i=Object(o["resolveComponent"])("code-box");return Object(o["openBlock"])(),Object(o["createBlock"])("div",c,[Object(o["createVNode"])(i,{code:t.code,markdown:t.md},null,8,["code","markdown"])])}var s="import {defineComponent, reactive} from 'vue';\nimport List from '../../list';\nimport InputItem from '../index';\n\n// 通过自定义 moneyKeyboardWrapProps 修复虚拟键盘滚动穿透问题\n// https://github.com/ant-design/ant-design-mobile/issues/307\n// https://github.com/ant-design/ant-design-mobile/issues/163\nconst isIPhone = new RegExp('\\\\biPhone\\\\b|\\\\biPod\\\\b', 'i').test(window.navigator.userAgent);\nlet moneyKeyboardWrapProps;\nif (isIPhone) {\n  moneyKeyboardWrapProps = {\n    onTouchStart: e => e.preventDefault()\n  };\n}\n\nexport default defineComponent({\n  name: 'H5NumberInputExample',\n  setup(props, {emit, slots}) {\n    const state = reactive({\n      type: 'money'\n    });\n    return {\n      state\n    };\n  },\n  render() {\n    const {type} = this.state;\n    return (\n        <div>\n          <List>\n            <InputItem\n                type={type}\n                value={100}\n                placeholder=\"start from left\"\n                clear\n                moneyKeyboardAlign=\"left\"\n                moneyKeyboardWrapProps={moneyKeyboardWrapProps}\n            >光标在左</InputItem>\n            <InputItem\n                type={type}\n                placeholder=\"start from right\"\n                clear\n                onChange={(v) => {\n                  console.log('onChange', v);\n                }}\n                onBlur={(v) => {\n                  console.log('onBlur', v);\n                }}\n                moneyKeyboardWrapProps={moneyKeyboardWrapProps}\n            >光标在右</InputItem>\n            <InputItem\n                type={type}\n                placeholder=\"money format\"\n                ref=\"input\"\n                onConfirm={v => console.log('onVirtualKeyboardConfirm:', v)}\n                clear\n                moneyKeyboardWrapProps={moneyKeyboardWrapProps}\n            >数字键盘</InputItem>\n            <List.Item>\n              <div\n                  style={{width: '100%', color: '#108ee9', textAlign: 'center'}}\n                  onClick={() => (this.$refs.input as any).focus()}\n              >\n                click to focus\n              </div>\n            </List.Item>\n          </List>\n        </div>\n    );\n  }\n});\n",u=e("e239"),m=e.n(u),b=e("4f8a"),I=Object(o["defineComponent"])({components:{CodeBox:b["a"]},setup:function(){return{code:s,md:m.a}}});I.render=p;var f=I,h={class:"demo"};function v(t,n,e,d,r,a){var i=Object(o["resolveComponent"])("code-box");return Object(o["openBlock"])(),Object(o["createBlock"])("div",h,[Object(o["createVNode"])(i,{code:t.code,markdown:t.md},null,8,["code","markdown"])])}var y='import {defineComponent, ref} from \'vue\';\nimport List from \'../../list\';\nimport WhiteSpace from \'../../white-space\';\nimport InputItem from \'../index\';\n\nexport default defineComponent({\n  name: \'BasicInputExample\',\n  props: {},\n  setup(props) {\n    const inputRef = ref(null);\n    const labelFocusInst = ref(null);\n    const handleClick = () => {\n      inputRef.value.focus();\n    };\n    const value = ref(\'222\');\n    return {\n      inputRef, labelFocusInst, handleClick, value\n    };\n  },\n  render() {\n    return (\n        <div>\n          <List title="Customize to focus">\n            <InputItem\n                placeholder="auto focus"\n                ref="autoFocusInst"\n            >标题</InputItem>\n            <InputItem\n                placeholder="click the button below to focus"\n                ref={(el) => {\n                  this.inputRef = el;\n                }}\n            >标题</InputItem>\n            <List.Item>\n              <div\n                  style={{width: \'100%\', color: \'#108ee9\', textAlign: \'center\'}}\n                  onClick={this.handleClick}>\n                click to focus\n              </div>\n            </List.Item>\n          </List>\n          <List title="Whether is controlled">\n            <InputItem\n                v-model={[this.value, \'value\']}\n                placeholder="controled input"\n            >受控组件</InputItem>\n            <InputItem\n                defaultValue="Title"\n                placeholder="please input content"\n            >非受控组件</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title="Click label to focus input">\n            <InputItem\n                placeholder="click label to focus input"\n                ref={(el) => {\n                  this.labelFocusInst = el;\n                }}>\n              <div onClick={() => this.labelFocusInst.focus()}>标题</div>\n            </InputItem>\n          </List>\n          <List title={\'Show clear\'}>\n            <InputItem\n                clearable\n                placeholder="displayed clear while typing"\n            >标题</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title="Number of words for title">\n            <InputItem\n                placeholder="limited title length"\n                labelNumber={5}\n            >标题过长超过默认的5个字</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title="Custom title（text / image / empty)">\n            <InputItem\n                placeholder="no label"\n            />\n            <InputItem\n                placeholder="title can be icon，image or text"\n            >\n              <div style={{\n                backgroundImage: \'url(https://zos.alipayobjects.com/rmsportal/DfkJHaJGgMghpXdqNaKF.png)\',\n                backgroundSize: \'cover\',\n                height: \'22px\',\n                width: \'22px\'\n              }}/>\n            </InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title="Customize the extra content in the right">\n            <InputItem\n                placeholder="0.00"\n                extra="¥"\n            >价格</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title="Format">\n            <InputItem\n                value="8888 8888 8888 8888"\n                type="bankCard"\n            >银行卡</InputItem>\n            <InputItem\n                type="password"\n                placeholder="****"\n            >密码</InputItem>\n            <InputItem\n                type="number"\n                placeholder="click to show number keyboard"\n            >数字键盘</InputItem>\n            <InputItem\n                type="digit"\n                placeholder="click to show native number keyboard"\n            >数字键盘</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title="Not editable / Disabled">\n            <InputItem\n                value="not editable"\n                editable={false}\n            >姓名</InputItem>\n            <InputItem\n                value="style of disabled `InputItem`"\n                disabled\n            >姓名</InputItem>\n          </List>\n        </div>\n    );\n  }\n});\n',g=e("25be"),C=e.n(g),j=Object(o["defineComponent"])({components:{CodeBox:b["a"]},setup:function(){return{code:y,md:C.a}}});j.render=v;var k=j,O={class:"demo"};function x(t,n,e,d,r,a){var i=Object(o["resolveComponent"])("code-box");return Object(o["openBlock"])(),Object(o["createBlock"])("div",O,[Object(o["createVNode"])(i,{code:t.code,markdown:t.md},null,8,["code","markdown"])])}var w='import {defineComponent, ref} from \'vue\';\nimport List from \'../../list\';\nimport InputItem from \'../index\';\n\nexport default defineComponent({\n  name: \'BasicInputExample\',\n  props: {},\n  setup(props) {\n    const inputRef = ref(null);\n    const labelFocusInst = ref(null);\n    const handleClick = () => {\n      inputRef.value.focus();\n    };\n    const value = ref(\'222\');\n    return {\n      inputRef, labelFocusInst, handleClick, value\n    };\n  },\n  render() {\n    return (\n      <div>\n        <List title="Confirm when typing">\n          <InputItem\n            error={true}\n            errorMessage={"手机号码格式不正确"}\n            type="phone"\n            placeholder="186 1234 1234"\n          >手机号码</InputItem>\n          <InputItem error errorMessage="出错啦" title="带校验的输入框"/>\n        </List>\n      </div>\n    );\n  }\n});\n',L=e("cc9e"),N=e.n(L),W=Object(o["defineComponent"])({components:{CodeBox:b["a"]},setup:function(){return{code:w,md:N.a}}});W.render=x;var V=W,P=e("cd6e"),B=e("48a1"),K=e.n(B),S=e("28c7"),F=e.n(S),R=Object(o["defineComponent"])({components:{TitleDoc:K.a,PropsDoc:F.a,MInput:P["a"],demo1:f,demo2:k,demo3:V},setup:function(){return{}}});e("6888");R.render=l,R.__scopeId="data-v-3995343c";n["default"]=R},6888:function(t,n,e){"use strict";e("a70a")},a70a:function(t,n,e){},cc9e:function(t,n){t.exports='<h4 id="错误验证">错误验证</h4>\n'},e239:function(t,n){t.exports='<h4 id="金额键盘">金额键盘</h4>\n'}}]);
//# sourceMappingURL=chunk-171d7076.5527240f.js.map