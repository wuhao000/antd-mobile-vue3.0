{"version":3,"sources":["webpack:///./src/generated/picker/demo.vue","webpack:///./src/packages/picker/demo/demo1.vue","webpack:///./src/packages/picker/demo/colors.tsx","webpack:///./src/packages/picker/demo/demo1.vue?3b2d","webpack:///./src/packages/picker/demo/demo1.vue?7ed6","webpack:///./src/generated/picker/demo.vue?685f","webpack:///./src/generated/picker/demo.vue?a9e0"],"names":["title","value","value1","data","district","extra","arrow","cascade","seasons","placeholder","value2","cols","data2","getColors","colorStyle","display","verticalAlign","width","height","marginRight","label","backgroundColor","name","setup","props","emit","slots","children","dist","render","__scopeId","components","demo1","DemoWrapper"],"mappings":"8RACE,yBAIM,YAHJ,yBAEe,GAFDA,MAAM,QAAM,C,8BACxB,iBAAQ,CAAR,yBAAQ,O,qJCGwB,uB,+BAMA,Y,+BAMnB,M,+BAOA,Q,gLAxBjB,yBA0BM,YAzBJ,yBAKW,GALOC,MAAO,EAAAC,O,gDAAA,EAAAA,OAAM,IACpBC,KAAM,EAAAC,SACPC,MAAM,UACNL,MAAM,S,YACd,iBAAiE,CAAjE,yBAAiE,GAApDM,MAAM,cAAY,C,WAAC,iBAAmB,C,yCAErD,yBAKW,GALAC,SAAS,EACTJ,KAAM,EAAAK,QACPH,MAAM,UACNL,MAAM,Q,YACd,iBAAsD,CAAtD,yBAAsD,GAAzCM,MAAM,cAAY,C,WAAC,iBAAQ,C,iCAE1C,yBAKW,GALOL,MAAO,EAAAA,M,gDAAA,EAAAA,MAAK,IACnBE,KAAM,EAAAA,KACPM,YAAY,MACZT,MAAM,M,YACd,iBAA6B,CAA7B,yBAA6B,Q,WAAhB,iBAAE,C,yCAEjB,yBAMW,GANOC,MAAO,EAAAS,O,gDAAA,EAAAA,OAAM,IACpBC,KAAM,EACNR,KAAM,EAAAS,MACPH,YAAY,MACZT,MAAM,M,YACd,iBAA+B,CAA/B,yBAA+B,Q,WAAlB,iBAAI,C,0DCzBT,SAAUa,IACtB,IAAMC,EAAa,CACjBC,QAAS,eACTC,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,YAAa,QAEf,MAAO,CACL,CACEC,MAAK,4EAGW,+BAAKN,GAAU,CAAEO,gBAAiB,aAH7C,mFAOLpB,MAAO,WAET,CACEmB,MAAK,4EAGW,+BAAKN,GAAU,CAAEO,gBAAiB,aAH7C,mFAOLpB,MAAO,WAET,CACEmB,MAAK,4EAGW,+BAAKN,GAAU,CAAEO,gBAAiB,aAH7C,mFAOLpB,MAAO,YC+LI,mCAAgB,CAC7BqB,KAAM,QACNC,MAF6B,SAEvBC,EAFuB,GAEH,EAAZC,KAAY,EAANC,MAAM,IAClBvB,EAAO,iBAAI,CAAC,CAChBiB,MAAO,MACPnB,MAAO,UACP0B,SAAU,CAAC,CACTP,MAAO,MACPnB,MAAO,WACN,CACDmB,MAAO,KACPnB,MAAO,cAGLS,EAAS,iBAAI,MACbE,EAAQ,iBAAIC,KACZZ,EAAQ,iBAAI,MAEZC,EAAS,iBAAI,CAAC,SAAU,SAAU,WACxC,MAAO,CACLA,SACAC,OACAO,SACAE,QACAX,QACAG,SAAAwB,EAAA,YACApB,QAAS,CACP,CACE,CACEY,MAAO,OACPnB,MAAO,QAET,CACEmB,MAAO,OACPnB,MAAO,SAGX,CACE,CACEmB,MAAO,IACPnB,MAAO,KAET,CACEmB,MAAO,IACPnB,MAAO,WC7QrB,EAAO4B,OAAS,EAChB,EAAOC,UAAY,kBAEJ,QCDE,+BAAgB,CAC7BC,WAAY,CAACC,QAAOC,YAAA,QACpBV,MAF6B,WAG3B,MAAO,MCLb,EAAOM,OAASA,EAED","file":"js/chunk-2d0da02f.be562bbe.js","sourcesContent":["<template>\n  <div>\n    <demo-wrapper title=\"基本用法\">\n      <demo1/>\n    </demo-wrapper>\n  </div>\n</template>\n<script lang=\"ts\">\n  import DemoWrapper from '../../components/demo-wrapper';\n  import demo1 from '../../packages/picker/demo/demo1.vue';\n  import {defineComponent} from 'vue';\n\n  export default defineComponent({\n    components: {demo1, DemoWrapper},\n    setup() {\n      return {};\n    }\n  });\n</script>\n\n","<template>\n  <div>\n    <m-picker v-model:value=\"value1\"\n              :data=\"district\"\n              extra=\"请选择(可选)\"\n              title=\"Areas\">\n      <m-list-item arrow=\"horizontal\">Multiple & cascader</m-list-item>\n    </m-picker>\n    <m-picker :cascade=\"false\"\n              :data=\"seasons\"\n              extra=\"请选择(可选)\"\n              title=\"选择季节\">\n      <m-list-item arrow=\"horizontal\">Multiple</m-list-item>\n    </m-picker>\n    <m-picker v-model:value=\"value\"\n              :data=\"data\"\n              placeholder=\"请选择\"\n              title=\"测试\">\n      <m-list-item>测试</m-list-item>\n    </m-picker>\n    <m-picker v-model:value=\"value2\"\n              :cols=\"1\"\n              :data=\"data2\"\n              placeholder=\"请选择\"\n              title=\"测试\">\n      <m-list-item>选择颜色</m-list-item>\n    </m-picker>\n  </div>\n</template>\n<script lang=\"tsx\">\n  import {district} from 'antd-mobile-demo-data';\n  import {defineComponent, ref} from 'vue';\n  /*\nimport { Picker, List, WhiteSpace } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport arrayTreeFilter from 'array-tree-filter';\n\n\n// 如果不是使用 List.Item 作为 children\nconst CustomChildren = props => (\n<div\n  onClick={props.onClick}\n  style={{ backgroundColor: '#fff', paddingLeft: 15 }}\n>\n  <div className=\"test\" style={{ display: 'flex', height: '45px', lineHeight: '45px' }}>\n    <div style={{ flex: 1, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{props.children}</div>\n    <div style={{ textAlign: 'right', color: '#888', marginRight: 15 }}>{props.extra}</div>\n  </div>\n</div>\n);\n\nconst colorStyle = {\ndisplay: 'inline-block',\nverticalAlign: 'middle',\nwidth: '16px',\nheight: '16px',\nmarginRight: '10px',\n};\n\nconst colors = [\n{\n  label:\n  (<div>\n    <span\n      style={{ ...colorStyle, backgroundColor: '#FF0000' }}\n    />\n    <span>红色</span>\n  </div>),\n  value: '#FF0000',\n},\n{\n  label:\n  (<div>\n    <span\n      style={{ ...colorStyle, backgroundColor: '#00FF00' }}\n    />\n    <span>绿色</span>\n  </div>),\n  value: '#00FF00',\n},\n{\n  label:\n  (<div>\n    <span\n      style={{ ...colorStyle, backgroundColor: '#0000FF' }}\n    />\n    <span>蓝色</span>\n  </div>),\n  value: '#0000FF',\n},\n];\n\nclass Test extends React.Component {\nstate = {\n  data: [],\n  cols: 1,\n  pickerValue: [],\n  asyncValue: [],\n  sValue: ['2013', '春'],\n  visible: false,\n  colorValue: ['#00FF00'],\n};\nonClick = () => {\n  setTimeout(() => {\n    this.setState({\n      data: provinceLite,\n    });\n  }, 120);\n};\nonPickerChange = (val) => {\n  console.log(val);\n  let colNum = 1;\n  const d = [...this.state.data];\n  const asyncValue = [...val];\n  if (val[0] === 'zj') {\n    d.forEach((i) => {\n      if (i.value === 'zj') {\n        colNum = 2;\n        if (!i.children) {\n          i.children = [{\n            value: 'zj-nb',\n            label: '宁波',\n          }, {\n            value: 'zj-hz',\n            label: '杭州',\n          }];\n          asyncValue.push('zj-nb');\n        } else if (val[1] === 'zj-hz') {\n          i.children.forEach((j) => {\n            if (j.value === 'zj-hz') {\n              j.children = [{\n                value: 'zj-hz-xh',\n                label: '西湖区',\n              }];\n              asyncValue.push('zj-hz-xh');\n            }\n          });\n          colNum = 3;\n        }\n      }\n    });\n  } else {\n    colNum = 1;\n  }\n  this.setState({\n    data: d,\n    cols: colNum,\n    asyncValue,\n  });\n};\ngetSel() {\n  const value = this.state.pickerValue;\n  if (!value) {\n    return '';\n  }\n  const treeChildren = arrayTreeFilter(district, (c, level) => c.value === value[level]);\n  return treeChildren.map(v => v.label).join(',');\n}\n// setVal() {\n//   this.props.form.setFieldsValue({\n//     district: ['340000', '340800', '340822'],\n//   });\n// },\n\nonChangeColor = (color) => {\n  this.setState({\n    colorValue: color,\n  });\n};\n\nrender() {\n  const { getFieldProps } = this.props.form;\n  return (<div>\n    <WhiteSpace size=\"lg\" />\n    <List style={{ backgroundColor: 'white' }} className=\"picker-list\">\n\n      <Picker data={district} cols={1} {...getFieldProps('district3')} className=\"forss\">\n        <List.Item arrow=\"horizontal\">Single</List.Item>\n      </Picker>\n      <Picker\n        data={this.state.data}\n        cols={this.state.cols}\n        value={this.state.asyncValue}\n        onPickerChange={this.onPickerChange}\n        onOk={v => console.log(v)}\n      >\n        <List.Item arrow=\"horizontal\" onClick={this.onClick}>Multiple & async</List.Item>\n      </Picker>\n      <Picker\n        title=\"选择地区\"\n        extra=\"请选择(可选)\"\n        data={district}\n        value={this.state.pickerValue}\n        onChange={v => this.setState({ pickerValue: v })}\n        onOk={v => this.setState({ pickerValue: v })}\n      >\n        <CustomChildren>Customized children</CustomChildren>\n      </Picker>\n      <Picker\n        visible={this.state.visible}\n        data={district}\n        value={this.state.pickerValue}\n        onChange={v => this.setState({ pickerValue: v })}\n        onOk={() => this.setState({ visible: false })}\n        onDismiss={() => this.setState({ visible: false })}\n      >\n        <List.Item extra={this.getSel()} onClick={() => this.setState({ visible: true })}>\n          Visible state\n        </List.Item>\n      </Picker>\n      <Picker\n        data={colors}\n        value={this.state.colorValue}\n        cols={1}\n        onChange={this.onChangeColor}\n      >\n        <List.Item arrow=\"horizontal\">Complex Labels</List.Item>\n      </Picker>\n    </List>\n  </div>);\n}\n}\n\nconst TestWrapper = createForm()(Test);\n\nReactDOM.render(<TestWrapper />, mountNode);\n.picker-list .am-list-item .am-list-line .am-list-extra {\nflex-basis: initial;\n}\n\n.test {\nposition: relative;\nborder-bottom: 0;\n}\n\n.test:after {\ncontent: '';\nposition: absolute;\nbackground-color: #ddd;\ndisplay: block;\nz-index: 1;\ntop: auto;\nright: auto;\nbottom: 0;\nleft: 0;\nwidth: 100%;\nheight: 1PX;\n-webkit-transform-origin: 50% 100%;\n-ms-transform-origin: 50% 100%;\ntransform-origin: 50% 100%;\n-webkit-transform: scaleY(0.5);\n-ms-transform: scaleY(0.5);\ntransform: scaleY(0.5);\n}\n */\n  import getColors from './colors';\n\n  export default defineComponent({\n    name: 'Demo1',\n    setup(props, {emit, slots}) {\n      const data = ref([{\n        label: '江苏省',\n        value: 'JiangSu',\n        children: [{\n          label: '南京市',\n          value: 'NanJing'\n        }, {\n          label: '苏州',\n          value: 'SuZhou'\n        }]\n      }]);\n      const value2 = ref(null);\n      const data2 = ref(getColors());\n      const value = ref(null);\n\n      const value1 = ref(['340000', '341500', '341502']);\n      return {\n        value1,\n        data,\n        value2,\n        data2,\n        value,\n        district,\n        seasons: [\n          [\n            {\n              label: '2013',\n              value: '2013'\n            },\n            {\n              label: '2014',\n              value: '2014'\n            }\n          ],\n          [\n            {\n              label: '春',\n              value: '春'\n            },\n            {\n              label: '夏',\n              value: '夏'\n            }\n          ]\n        ]\n      };\n    }\n  });\n</script>\n<style lang=\"less\" scoped>\n</style>\n","export default function getColors() {\n  const colorStyle = {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    width: '16px',\n    height: '16px',\n    marginRight: '10px',\n  };\n  return [\n    {\n      label:\n          (<div>\n            <span\n                style={{...colorStyle, backgroundColor: '#FF0000'}}\n            />\n            <span>红色</span>\n          </div>),\n      value: '#FF0000'\n    },\n    {\n      label:\n          (<div>\n            <span\n                style={{...colorStyle, backgroundColor: '#00FF00'}}\n            />\n            <span>绿色</span>\n          </div>),\n      value: '#00FF00'\n    },\n    {\n      label:\n          (<div>\n            <span\n                style={{...colorStyle, backgroundColor: '#0000FF'}}\n            />\n            <span>蓝色</span>\n          </div>),\n      value: '#0000FF'\n    }\n  ];\n}\n","\n  import {district} from 'antd-mobile-demo-data';\n  import {defineComponent, ref} from 'vue';\n  /*\nimport { Picker, List, WhiteSpace } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport arrayTreeFilter from 'array-tree-filter';\n\n\n// 如果不是使用 List.Item 作为 children\nconst CustomChildren = props => (\n<div\n  onClick={props.onClick}\n  style={{ backgroundColor: '#fff', paddingLeft: 15 }}\n>\n  <div className=\"test\" style={{ display: 'flex', height: '45px', lineHeight: '45px' }}>\n    <div style={{ flex: 1, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{props.children}</div>\n    <div style={{ textAlign: 'right', color: '#888', marginRight: 15 }}>{props.extra}</div>\n  </div>\n</div>\n);\n\nconst colorStyle = {\ndisplay: 'inline-block',\nverticalAlign: 'middle',\nwidth: '16px',\nheight: '16px',\nmarginRight: '10px',\n};\n\nconst colors = [\n{\n  label:\n  (<div>\n    <span\n      style={{ ...colorStyle, backgroundColor: '#FF0000' }}\n    />\n    <span>红色</span>\n  </div>),\n  value: '#FF0000',\n},\n{\n  label:\n  (<div>\n    <span\n      style={{ ...colorStyle, backgroundColor: '#00FF00' }}\n    />\n    <span>绿色</span>\n  </div>),\n  value: '#00FF00',\n},\n{\n  label:\n  (<div>\n    <span\n      style={{ ...colorStyle, backgroundColor: '#0000FF' }}\n    />\n    <span>蓝色</span>\n  </div>),\n  value: '#0000FF',\n},\n];\n\nclass Test extends React.Component {\nstate = {\n  data: [],\n  cols: 1,\n  pickerValue: [],\n  asyncValue: [],\n  sValue: ['2013', '春'],\n  visible: false,\n  colorValue: ['#00FF00'],\n};\nonClick = () => {\n  setTimeout(() => {\n    this.setState({\n      data: provinceLite,\n    });\n  }, 120);\n};\nonPickerChange = (val) => {\n  console.log(val);\n  let colNum = 1;\n  const d = [...this.state.data];\n  const asyncValue = [...val];\n  if (val[0] === 'zj') {\n    d.forEach((i) => {\n      if (i.value === 'zj') {\n        colNum = 2;\n        if (!i.children) {\n          i.children = [{\n            value: 'zj-nb',\n            label: '宁波',\n          }, {\n            value: 'zj-hz',\n            label: '杭州',\n          }];\n          asyncValue.push('zj-nb');\n        } else if (val[1] === 'zj-hz') {\n          i.children.forEach((j) => {\n            if (j.value === 'zj-hz') {\n              j.children = [{\n                value: 'zj-hz-xh',\n                label: '西湖区',\n              }];\n              asyncValue.push('zj-hz-xh');\n            }\n          });\n          colNum = 3;\n        }\n      }\n    });\n  } else {\n    colNum = 1;\n  }\n  this.setState({\n    data: d,\n    cols: colNum,\n    asyncValue,\n  });\n};\ngetSel() {\n  const value = this.state.pickerValue;\n  if (!value) {\n    return '';\n  }\n  const treeChildren = arrayTreeFilter(district, (c, level) => c.value === value[level]);\n  return treeChildren.map(v => v.label).join(',');\n}\n// setVal() {\n//   this.props.form.setFieldsValue({\n//     district: ['340000', '340800', '340822'],\n//   });\n// },\n\nonChangeColor = (color) => {\n  this.setState({\n    colorValue: color,\n  });\n};\n\nrender() {\n  const { getFieldProps } = this.props.form;\n  return (<div>\n    <WhiteSpace size=\"lg\" />\n    <List style={{ backgroundColor: 'white' }} className=\"picker-list\">\n\n      <Picker data={district} cols={1} {...getFieldProps('district3')} className=\"forss\">\n        <List.Item arrow=\"horizontal\">Single</List.Item>\n      </Picker>\n      <Picker\n        data={this.state.data}\n        cols={this.state.cols}\n        value={this.state.asyncValue}\n        onPickerChange={this.onPickerChange}\n        onOk={v => console.log(v)}\n      >\n        <List.Item arrow=\"horizontal\" onClick={this.onClick}>Multiple & async</List.Item>\n      </Picker>\n      <Picker\n        title=\"选择地区\"\n        extra=\"请选择(可选)\"\n        data={district}\n        value={this.state.pickerValue}\n        onChange={v => this.setState({ pickerValue: v })}\n        onOk={v => this.setState({ pickerValue: v })}\n      >\n        <CustomChildren>Customized children</CustomChildren>\n      </Picker>\n      <Picker\n        visible={this.state.visible}\n        data={district}\n        value={this.state.pickerValue}\n        onChange={v => this.setState({ pickerValue: v })}\n        onOk={() => this.setState({ visible: false })}\n        onDismiss={() => this.setState({ visible: false })}\n      >\n        <List.Item extra={this.getSel()} onClick={() => this.setState({ visible: true })}>\n          Visible state\n        </List.Item>\n      </Picker>\n      <Picker\n        data={colors}\n        value={this.state.colorValue}\n        cols={1}\n        onChange={this.onChangeColor}\n      >\n        <List.Item arrow=\"horizontal\">Complex Labels</List.Item>\n      </Picker>\n    </List>\n  </div>);\n}\n}\n\nconst TestWrapper = createForm()(Test);\n\nReactDOM.render(<TestWrapper />, mountNode);\n.picker-list .am-list-item .am-list-line .am-list-extra {\nflex-basis: initial;\n}\n\n.test {\nposition: relative;\nborder-bottom: 0;\n}\n\n.test:after {\ncontent: '';\nposition: absolute;\nbackground-color: #ddd;\ndisplay: block;\nz-index: 1;\ntop: auto;\nright: auto;\nbottom: 0;\nleft: 0;\nwidth: 100%;\nheight: 1PX;\n-webkit-transform-origin: 50% 100%;\n-ms-transform-origin: 50% 100%;\ntransform-origin: 50% 100%;\n-webkit-transform: scaleY(0.5);\n-ms-transform: scaleY(0.5);\ntransform: scaleY(0.5);\n}\n */\n  import getColors from './colors';\n\n  export default defineComponent({\n    name: 'Demo1',\n    setup(props, {emit, slots}) {\n      const data = ref([{\n        label: '江苏省',\n        value: 'JiangSu',\n        children: [{\n          label: '南京市',\n          value: 'NanJing'\n        }, {\n          label: '苏州',\n          value: 'SuZhou'\n        }]\n      }]);\n      const value2 = ref(null);\n      const data2 = ref(getColors());\n      const value = ref(null);\n\n      const value1 = ref(['340000', '341500', '341502']);\n      return {\n        value1,\n        data,\n        value2,\n        data2,\n        value,\n        district,\n        seasons: [\n          [\n            {\n              label: '2013',\n              value: '2013'\n            },\n            {\n              label: '2014',\n              value: '2014'\n            }\n          ],\n          [\n            {\n              label: '春',\n              value: '春'\n            },\n            {\n              label: '夏',\n              value: '夏'\n            }\n          ]\n        ]\n      };\n    }\n  });\n","import { render } from \"./demo1.vue?vue&type=template&id=3b3e0278&scoped=true\"\nimport script from \"./demo1.vue?vue&type=script&lang=tsx\"\nexport * from \"./demo1.vue?vue&type=script&lang=tsx\"\nscript.render = render\nscript.__scopeId = \"data-v-3b3e0278\"\n\nexport default script","\n  import DemoWrapper from '../../components/demo-wrapper';\n  import demo1 from '../../packages/picker/demo/demo1.vue';\n  import {defineComponent} from 'vue';\n\n  export default defineComponent({\n    components: {demo1, DemoWrapper},\n    setup() {\n      return {};\n    }\n  });\n","import { render } from \"./demo.vue?vue&type=template&id=760e30da\"\nimport script from \"./demo.vue?vue&type=script&lang=ts\"\nexport * from \"./demo.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}