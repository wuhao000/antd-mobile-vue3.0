(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2698febc"],{"6d66":function(n,e){n.exports='<h1 id="组件开发说明">组件开发说明</h1>\n<h2 id="创建组件目录">创建组件目录</h2>\n<p>在src/packages目录下创建新的文件夹作为组件目录，文件夹的名称为组件名称，命名方式为-连接小写单词，不允许使用大写</p>\n<p>使用命令行创建组件目录 <code> npm run create 组件名 组件中文名 类型</code></p>\n<p>类型: <code> tool | component | directive </code></p>\n<p>示例: <code> npm run create m-button 按钮 component</code></p>\n<p>组件的目录结构如下：</p>\n<p>UI组件命名特别说明：</p>\n<ul>\n<li>UI组件以M开头，例如MInput</li>\n</ul>\n<pre><code class="language-html">component-name（示例）//组件名称 \n│ \n├─src  // 组件代码文件夹  \n│  │   \n│  └─index.ts(x) 或 index.vue\n 必须提供\n│\n├─demo  // 必须提供，示例文件夹，必须包含至少一个示例 \n│  │   \n│  ├─demo1  示例1文件夹\n│  │   │\n│  │   ├─index.vue 必须提供，示例1组件\n│  │   │\n│  │   └─index.md 必须提供，示例1说明\n│  │\n│  ├─demo2   示例2文件夹\n│  │   │\n│  │   ├─index.vue 示例2组件\n│  │   │\n│  │   └─index.md 示例说明\n│  │\n│  ├─index.vue 准备好其他文件之后运行npm run docs即可生成\n│  │\n│  ├─README.md 必须提供，组件的基本介绍\n│  │\n│  ├─props.md UI组件的Props说明（按需要提供）\n│  │\n│  ├─events.md 组件的事件说明（按需要提供）\n│  │\n│  ├─functions.md 组件的对外暴露的方法说明（按需要提供）\n│  │\n│  └─slots.md 组件的插槽说明（按需要提供）\n│\n└─index.ts // 必须提供，对外暴露文件，默认暴露的对象必须具有install方法 </code></pre>\n<blockquote>\n<p>如果添加的是UI组件，命名直接使用组件名称\n如果添加的是vue指令组件，命名使用 xxx-directive</p>\n</blockquote>\n<h3 id="编写组件文件">编写组件文件</h3>\n<ol>\n<li>在组件文件夹下创建src文件夹</li>\n<li>在组件文件夹下创建index.ts</li>\n<li>在第1步中创建的src文件夹下创建index.vue（UI组件）或index.ts（指令或其他类型组件）文件</li>\n<li>编写代码</li>\n</ol>\n<h2 id="编写组件示例">编写组件示例</h2>\n<ol>\n<li>在组件文件夹下创建demo文件夹</li>\n<li>在demo文件夹下创建README.md</li>\n<li>每组示例在demo文件夹下分别创建demo1、demo2等文件夹</li>\n<li>在demo1、demo2等文件夹下创建index.md、index.vue文件</li>\n<li>index.vue为示例组件、index.md为示例说明</li>\n</ol>\n<h2 id="生成组件文档">生成组件文档</h2>\n<p>生成文档需要在组件代码编写完成后运行一次</p>\n<p>运行以下命令</p>\n<pre><code>npm run docs</code></pre><blockquote>\n<p>如果添加了新的示例或修改了示例的代码时需要重新运行生成文档的命令\n修改.md文件不需要重新生成文档\n修改已存在的示例代码在开发时可以实时看到运行效果，只是文档中的示例代码会不同步</p>\n</blockquote>\n'},"8b0b":function(n,e){n.exports='<h1 id="更新日志维护说明">更新日志维护说明</h1>\n<ul>\n<li>每增加一个新的版本，须在map.json中添加版本的信息</li>\n</ul>\n<p>map.json的内容如下：</p>\n<pre><code class="language-json">{\n  &quot;0.1.0&quot;: {\n    &quot;time&quot;: &quot;2019-04-06&quot;\n  },\n  &quot;0.1.1&quot;: {\n    &quot;time&quot;: &quot;2019-04-07&quot;\n  }\n}</code></pre>\n<ul>\n<li>在当前文件加下添加 <code><版本号>.md</code>文件</li>\n</ul>\n'},e757:function(n,e,o){"use strict";o.r(e);var d=o("8bbf"),t={class:"home"};function i(n,e,o,i,c,l){var p=Object(d["resolveComponent"])("develop-doc"),u=Object(d["resolveComponent"])("read-me");return Object(d["openBlock"])(),Object(d["createBlock"])("div",t,[Object(d["createVNode"])(p),Object(d["createVNode"])(u)])}var c=o("8b0b"),l=o.n(c),p=o("6d66"),u=o.n(p),m=(o("5121"),Object(d["defineComponent"])({name:"Home",components:{ReadMe:l.a,DevelopDoc:u.a},setup:function(n,e){e.emit,e.slots;var o=Object(d["reactive"])({value:null});return Object(d["onMounted"])((function(){o.value="2"})),{form:o}}}));m.render=i;e["default"]=m}}]);
//# sourceMappingURL=chunk-2698febc.aa8f280d.js.map