(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-eff340a8"],{"044b":function(e,t,n){"use strict";n("9e49")},"7e06":function(e,t){e.exports="<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>model</td>\n<td></td>\n<td>object</td>\n<td></td>\n</tr>\n<tr>\n<td>prefixCls</td>\n<td></td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>role</td>\n<td></td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>rules</td>\n<td></td>\n<td>ValidateRules</td>\n<td></td>\n</tr>\n<tr>\n<td>section</td>\n<td>是否分区样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>spaceBetweenSection</td>\n<td></td>\n<td>number</td>\n<td>8</td>\n</tr>\n<tr>\n<td>title</td>\n<td></td>\n<td>string | VNode</td>\n<td></td>\n</tr>\n<tr>\n<td>touchFeedback</td>\n<td></td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody></table>\n"},"9e49":function(e,t,n){},d52a:function(e,t){e.exports='<h1 id="列表--m-list">列表  m-list</h1>\n'},e500:function(e,t,n){"use strict";n.r(t);var r=n("8bbf"),o=Object(r["withScopeId"])("data-v-0576767c");Object(r["pushScopeId"])("data-v-0576767c");var s={id:"basic"},i=Object(r["createVNode"])("div",{class:"markdown-body m-b",id:"demo"},[Object(r["createVNode"])("span"),Object(r["createVNode"])("h2",null,"示例代码")],-1),a=Object(r["createVNode"])("div",{class:"markdown-body",id:"props"},[Object(r["createVNode"])("span"),Object(r["createVNode"])("h2",null,"属性说明")],-1);Object(r["popScopeId"])();var l=o((function(e,t,n,o,l,d){var c=Object(r["resolveComponent"])("title-doc"),p=Object(r["resolveComponent"])("demo1"),m=Object(r["resolveComponent"])("demo2"),u=Object(r["resolveComponent"])("demo3"),h=Object(r["resolveComponent"])("props-doc");return Object(r["openBlock"])(),Object(r["createBlock"])("div",null,[Object(r["createVNode"])("div",s,[Object(r["createVNode"])(c)]),i,Object(r["createVNode"])(p,{id:"demo1"}),Object(r["createVNode"])(m,{id:"demo2"}),Object(r["createVNode"])(u,{id:"demo3"}),a,Object(r["createVNode"])(h)])})),d={class:"demo"};function c(e,t,n,o,s,i){var a=Object(r["resolveComponent"])("code-box");return Object(r["openBlock"])(),Object(r["createBlock"])("div",d,[Object(r["createVNode"])(a,{code:e.code,markdown:e.md},null,8,["code","markdown"])])}var p='import {defineComponent, reactive, ref, Ref} from \'vue\';\nimport {List} from \'../../index\';\nimport \'./index1.less\';\n\nconst Item = List.Item;\n\nconst options = [{\n  label: \'选项1\', value: 1\n}, {\n  label: \'选项2\', value: 2\n}, {\n  label: \'选项3\', value: 3\n}];\n\nexport default defineComponent({\n  name: \'ListExample\',\n  setup(props, {emit, slots}) {\n    const state = reactive({\n      disabled: false,\n      slider: 5,\n      switch: false,\n      range: [0, 100],\n      readonly: false,\n      error: false,\n      errorMessage: \'\',\n      errorDisplayType: \'text\'\n    });\n    const disabled: Ref<boolean> = ref(false);\n\n\n    const onClick = () => {\n      console.log(\'item clicked\');\n    };\n\n\n    return {\n      state,\n      disabled,\n      onClick\n    };\n  },\n  render() {\n    return (<div>\n      <List title="状态控制">\n        <m-switch-item title="禁用" v-model={this.state.disabled}/>\n        <m-switch-item title="只读" v-model={this.state.readonly}/>\n        <m-switch-item title="错误状态" v-model={this.state.error}/>\n      </List>\n      <List title="表单" disabled={this.state.disabled}\n            editable={!this.state.readonly}>\n        <m-input required title="输入框" error={this.state.error} errorDisplayType={this.state.errorDisplayType}\n                 errorMessage={this.state.errorMessage}/>\n        <m-input title="数字"\n                 type="number" error={this.state.error} errorDisplayType={this.state.errorDisplayType}\n                 errorMessage={this.state.errorMessage}/>\n        <m-date-picker-item required title="日期时间选择" value={new Date()} error={this.state.error}\n                            errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-date-picker-item required title="日期选择" mode="date" value={new Date()} error={this.state.error}\n                            errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-date-picker-item required title="年份选择" mode="year" value={new Date()} error={this.state.error}\n                            errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-date-picker-item required title="月份选择" mode="month" value={new Date()} error={this.state.error}\n                            errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-date-picker-item required title="时间选择" mode="time" value={new Date()} error={this.state.error}\n                            errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-calendar-item required title="日期范围" value={[new Date(), new Date()]}/>\n        <m-range-item title="范围选择" value={this.state.range} error={this.state.error}\n                      errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-radio-popup-list required title="弹出单选"\n                            value={1}\n                            options={options}\n                            error={this.state.error}\n                            errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-checkbox-popup-list required title="弹出多选" options={options} error={this.state.error}\n                               value={[1, 2]}\n                               errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-switch-item title="开关" v-model={this.state.switch} error={this.state.error}\n                       errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-textarea required rows={5} title="长文本"\n                    value="这是一大段文字，这是一大段文字，这是一大段文字，这是一大段文字，这是一大段文字，这是一大段文字，这是一大段文字"\n                    error={this.state.error}\n                    errorDisplayType={this.state.errorDisplayType}\n                    errorMessage={this.state.errorMessage}/>\n        <m-slider-item title="滑动输入条" v-model={this.state.slider} error={this.state.error}\n                       errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-radio-list required title="单选" options={options} error={this.state.error}\n                      errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n        <m-checkbox-list required title="多选" options={options} error={this.state.error}\n                         errorDisplayType={this.state.errorDisplayType} errorMessage={this.state.errorMessage}/>\n      </List>\n    </div>);\n  }\n});\n',m=n("f8c3"),u=n.n(m),h=n("4f8a"),b=Object(r["defineComponent"])({components:{CodeBox:h["a"]},setup:function(){return{code:p,md:u.a}}});b.render=c;var f=b,y={class:"demo"};function v(e,t,n,o,s,i){var a=Object(r["resolveComponent"])("code-box");return Object(r["openBlock"])(),Object(r["createBlock"])("div",y,[Object(r["createVNode"])(a,{code:e.code,markdown:e.md},null,8,["code","markdown"])])}var g='import {defineComponent, reactive, ref, Ref} from \'vue\';\nimport {List} from \'../../index\';\nimport \'./index1.less\';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nexport default defineComponent({\n  name: \'ListExample\',\n  setup(props, {emit, slots}) {\n    const state = reactive({\n      disabled: false\n    });\n    const disabled: Ref<boolean> = ref(false);\n\n\n    const onClick = () => {\n      console.log(\'item clicked\');\n    };\n\n    return {\n      state,\n      disabled,\n      onClick\n    };\n  },\n  render() {\n    return (<div>\n      <List title="Basic Style"\n            class="my-list">\n        <Item onClick={this.onClick} extra="extra content">Title</Item>\n      </List>\n      <List title="Subtitle" class="my-list">\n        <Item arrow="horizontal" multipleLine onClick={() => {\n        }}>\n          Title <Brief>subtitle</Brief>\n        </Item>\n        <Item\n            arrow="horizontal"\n            multipleLine\n            onClick={() => {\n            }}\n            platform="android"\n        >\n          ListItem （Android）<Brief>There may have water ripple effect of <br/> material if you set the click\n          event.</Brief>\n        </Item>\n        <Item\n            arrow="horizontal"\n            thumb="https://zos.alipayobjects.com/rmsportal/dNuvNrtqUztHCwM.png"\n            multipleLine\n            onClick={() => {\n            }}\n        >\n          Title <Brief>subtitle</Brief>\n        </Item>\n      </List>\n      <List title="Customized Right Side（Empty Content / Text / Image）" class="my-list">\n        <Item>Title</Item>\n        <Item arrow="horizontal" onClick={() => {\n        }}>Title</Item>\n        <Item extra="extra content" arrow="horizontal" onClick={() => {\n        }}>Title</Item>\n        <Item extra="10:30" align="top" thumb="https://zos.alipayobjects.com/rmsportal/dNuvNrtqUztHCwM.png"\n              multipleLine>\n          Title <Brief>subtitle</Brief>\n        </Item>\n      </List>\n      <List title="Align Vertical Center" class="my-list">\n        <Item multipleLine extra="extra content">\n          Title <Brief>subtitle</Brief>\n        </Item>\n      </List>\n      <List title="Icon in the left">\n        <Item\n            thumb="https://zos.alipayobjects.com/rmsportal/dNuvNrtqUztHCwM.png"\n            arrow="horizontal"\n            onClick={() => {\n            }}\n        >My wallet</Item>\n        <Item\n            thumb="https://zos.alipayobjects.com/rmsportal/UmbJMbWOejVOpxe.png"\n            onClick={() => {\n            }}\n            arrow="horizontal"\n        >\n          My Cost Ratio\n        </Item>\n      </List>\n      <List title="Text Wrapping" class="my-list">\n        <Item>Single line，long text will be hidden with ellipsis；</Item>\n        <Item wrap>Multiple line，long text will wrap；Long Text Long Text Long Text Long Text Long Text Long Text</Item>\n        <Item extra="extra content" multipleLine align="top" wrap>\n          Multiple line and long text will wrap. Long Text Long Text Long Text\n        </Item>\n        <Item extra="no arrow" arrow="empty" class="spe" wrap>\n          In rare cases, the text of right side will wrap in the single line with long text. long text long text long\n          text\n        </Item>\n      </List>\n      <List title="Other" class="my-list">\n        <Item disabled={this.state.disabled} extra="" onClick={() => {\n          console.log(\'click\', this.state.disabled);\n          this.disabled = true;\n        }}>Click to disable</Item>\n        <Item>\n          <select defaultValue="1">\n            <option value="1">Html select element</option>\n            <option value="2" disabled>Unable to select</option>\n            <option value="3">option 3</option>\n          </select>\n        </Item>\n      </List>\n    </div>);\n  }\n});\n',w=n("ee50"),I=n.n(w),x=Object(r["defineComponent"])({components:{CodeBox:h["a"]},setup:function(){return{code:g,md:I.a}}});x.render=v;var T=x,k={class:"demo"};function C(e,t,n,o,s,i){var a=Object(r["resolveComponent"])("code-box");return Object(r["openBlock"])(),Object(r["createBlock"])("div",k,[Object(r["createVNode"])(a,{code:e.code,markdown:e.md},null,8,["code","markdown"])])}var L="import {computed, defineComponent, reactive, ref} from 'vue';\nimport {Button, Input, List, Range, Switch} from '../../index';\n\nconst Item = List.Item;\n\nexport default defineComponent({\n  name: 'BasicInput',\n  setup(props, {emit, slots}) {\n    const data2 = reactive({\n      account: null,\n      password: null\n    });\n    const state = reactive({\n      value: 1,\n      range: [20, 80]\n    });\n    const formRef = ref(null);\n\n    const onSubmit = () => {\n      formRef.value.validate().then(valid => {\n        if (valid) {\n        } else {\n          alert('Validation failed');\n        }\n      });\n    };\n    const onReset = () => {\n      data2.account = null;\n      data2.password = null;\n    };\n    const validateAccount = (rule, value, callback) => {\n      if (value && value.length > 4) {\n        callback();\n      } else {\n        callback(new Error('At least four characters for account'));\n      }\n    };\n    return {\n      data2,\n      state,\n      setFormRef(el) {\n        formRef.value = el;\n      },\n      onSubmit,\n      onReset,\n      validateAccount\n    };\n  },\n  render() {\n    return (<form>\n      <List ref={this.setFormRef}\n            {...{model: this.data2}}\n            title=\"Form Validation\">\n        <Input clear v-modewl={[this.data2.account, 'value']}\n               placeholder=\"please input account\"\n        >Account</Input>\n        <Input v-model={[this.data2.password, 'value']}\n               placeholder=\"please input password\" type=\"password\">\n          Password\n        </Input>\n        <Item\n            extra={<Switch/>}\n        >Confirm Infomation</Item>\n        <Item>\n          <div style={{padding: '15px'}}><Range v-model={[this.state.range, 'value']}/></div>\n        </Item>\n        <Item>\n          <Button type=\"primary\" size=\"small\" inline onClick={this.onSubmit.bind(this)}>Submit</Button>\n          <Button size=\"small\" inline style={{marginLeft: '2.5px'}} onClick={this.onReset.bind(this)}>Reset</Button>\n        </Item>\n      </List>\n    </form>);\n  }\n});\n",j=n("f109"),O=n.n(j),D=Object(r["defineComponent"])({components:{CodeBox:h["a"]},setup:function(){return{code:L,md:O.a}}});D.render=C;var M=D,B=n("6cf1"),N=n("d52a"),V=n.n(N),R=n("7e06"),z=n.n(R),q=Object(r["defineComponent"])({components:{TitleDoc:V.a,PropsDoc:z.a,MList:B["a"],demo1:f,demo2:T,demo3:M},setup:function(){return{}}});n("044b");q.render=l,q.__scopeId="data-v-0576767c";t["default"]=q},ee50:function(e,t){e.exports='<h4 id="基本">基本</h4>\n'},f109:function(e,t){e.exports='<h4 id="可输入列表">可输入列表</h4>\n'},f8c3:function(e,t){e.exports='<h4 id="基本">基本</h4>\n'}}]);
//# sourceMappingURL=chunk-eff340a8.e0d6ee3f.js.map