{"version":3,"sources":["webpack:///./src/generated/input/demo.vue","webpack:///./src/packages/input/demo/demo1.tsx","webpack:///./src/packages/input/demo/demo2.tsx","webpack:///./src/packages/input/demo/demo3.tsx","webpack:///./src/generated/input/demo.vue?8daa","webpack:///./src/generated/input/demo.vue?ea77","webpack:///./src/components/demo-wrapper.tsx"],"names":["title","moneyKeyboardWrapProps","isIPhone","RegExp","test","window","navigator","userAgent","onTouchStart","e","preventDefault","name","setup","props","emit","slots","state","type","render","this","v","console","log","width","color","textAlign","$refs","input","focus","inputRef","labelFocusInst","handleClick","value","el","backgroundImage","backgroundSize","height","components","demo1","demo2","demo3","DemoWrapper","$slots","default"],"mappings":"uYACE,yBAUM,YATJ,yBAEe,GAFDA,MAAM,QAAM,C,8BACxB,iBAAQ,CAAR,yBAAQ,O,MAEZ,yBAEiB,GAFHA,MAAM,MAAI,C,8BACpB,iBAAQ,CAAR,yBAAQ,O,MAEZ,yBAEiB,GAFHA,MAAM,QAAM,C,8BACtB,iBAAQ,CAAR,yBAAQ,O,YCDVC,E,oCADEC,EAAW,IAAIC,OAAO,0BAA2B,KAAKC,KAAKC,OAAOC,UAAUC,WAE9EL,IACFD,EAAyB,CACvBO,aAAc,SAAAC,GAAC,OAAIA,EAAEC,oBAIV,mCAAgB,CAC7BC,KAAM,uBACNC,MAF6B,SAEvBC,EAFuB,GAEH,EAAZC,KAAY,EAANC,MAAM,IAClBC,EAAQ,sBAAS,CACrBC,KAAM,UAER,MAAO,CACLD,UAGJE,OAV6B,WAUvB,WACGD,EAAQE,KAAKH,MAAbC,KACP,kJAIkBA,EAJlB,MAKmB,IALnB,YAMwB,kBANxB,4BAQ+B,OAR/B,uBASoChB,GATpC,0GAYkBgB,EAZlB,YAawB,mBAbxB,kBAesB,SAACG,GACTC,QAAQC,IAAI,WAAYF,IAhBtC,OAkBoB,SAACA,GACPC,QAAQC,IAAI,SAAUF,IAnBpC,uBAqBoCnB,GArBpC,0GAwBkBgB,EAxBlB,YAyBwB,eAzBxB,IA0BgB,QA1BhB,UA2BuB,SAAAG,GAAC,OAAIC,QAAQC,IAAI,4BAA6BF,IA3BrE,gCA6BoCnB,GA7BpC,+KAiCqB,CAACsB,MAAO,OAAQC,MAAO,UAAWC,UAAW,UAjClE,QAkCuB,kBAAO,EAAKC,MAAMC,MAAcC,UAlCvD,+D,YCtBW,+BAAgB,CAC7BjB,KAAM,oBACNE,MAAO,GACPD,MAH6B,SAGvBC,GACJ,IAAMgB,EAAW,iBAAI,MACfC,EAAiB,iBAAI,MACrBC,EAAc,WAClBF,EAASG,MAAMJ,SAEXI,EAAQ,iBAAI,OAClB,MAAO,CACLH,WAAUC,iBAAgBC,cAAaC,UAG3Cd,OAd6B,WAcvB,WACJ,mFAEkB,sBAFlB,wEAIwB,aAJxB,IAKgB,iBALhB,+GAQwB,kCARxB,IASiB,SAACe,GACJ,EAAKJ,SAAWI,IAV9B,6KAeqB,CAACV,MAAO,OAAQC,MAAO,UAAWC,UAAW,UAflE,QAgBuB,EAAKM,aAhB5B,iGAqBkB,yBArBlB,4DAuBkC,MAAZ,EAAKC,MAvB3B,oCAuBsB,EAAKA,MAvB3B,eAwBwB,mBAxBxB,kHA2ByB,QA3BzB,YA4BwB,wBA5BxB,2JAgCkB,8BAhClB,wEAkCwB,6BAlCxB,IAmCiB,SAACC,GACJ,EAAKH,eAAiBG,IApCpC,mEAsCwB,kBAAM,EAAKH,eAAeF,UAtClD,qFAyCmB,cAzCnB,qFA4CwB,gCA5CxB,wJAgDkB,6BAhDlB,wEAkDwB,uBAlDxB,YAmDyB,GAnDzB,kKAuDkB,sCAvDlB,wEAyDwB,YAzDxB,mDA4DwB,mCA5DxB,iEA8DsB,CACVM,gBAAiB,wEACjBC,eAAgB,QAChBC,OAAQ,OACRb,MAAO,SAlEnB,gGAuEkB,4CAvElB,wEAyEwB,OAzExB,MA0EkB,KA1ElB,wJA8EkB,UA9ElB,kEAgFkB,sBAhFlB,KAiFiB,YAjFjB,yGAoFiB,WApFjB,YAqFwB,QArFxB,wGAwFiB,SAxFjB,YAyFwB,iCAzFxB,0GA4FiB,QA5FjB,YA6FwB,wCA7FxB,0JAiGkB,2BAjGlB,kEAmGkB,eAnGlB,UAoGsB,GApGtB,yGAuGkB,gCAvGlB,wFChBW,+BAAgB,CAC7BZ,KAAM,oBACNE,MAAO,GACPD,MAH6B,SAGvBC,GACJ,IAAMgB,EAAW,iBAAI,MACfC,EAAiB,iBAAI,MACrBC,EAAc,WAClBF,EAASG,MAAMJ,SAEXI,EAAQ,iBAAI,OAClB,MAAO,CACLH,WAAUC,iBAAgBC,cAAaC,UAG3Cd,OAd6B,WAe3B,mFAEgB,uBAFhB,mEAIe,EAJf,aAKsB,YALtB,KAMa,QANb,YAOoB,iBAPpB,2HASoC,MATpC,MASgD,WAThD,eCZa,+BAAgB,CAC7BmB,WAAY,CAACC,QAAOC,QAAOC,QAAOC,YAAA,QAClC7B,MAF6B,WAG3B,MAAO,MCPb,EAAOM,OAAS,EAED,gB,4DCFA,oCAAgB,CAC7BL,MAAO,CACLb,MAAO,IAETkB,OAJ6B,W,QAK3B,6CAAkB,qBAAlB,uCACa,cADb,CAEKC,KAAKnB,QAFV,sCAIa,kBAJb,CAKwB,QAAnB,KAAAmB,KAAKuB,QAAOC,eAAO","file":"js/chunk-26d9fc19.73d6ad08.js","sourcesContent":["<template>\n  <div>\n    <demo-wrapper title=\"金额键盘\">\n      <demo1/>\n    </demo-wrapper>\n\t\t<demo-wrapper title=\"基本\">\n      <demo2/>\n    </demo-wrapper>\n\t\t<demo-wrapper title=\"错误验证\">\n      <demo3/>\n    </demo-wrapper>\n  </div>\n</template>\n<script lang=\"ts\">\n  import DemoWrapper from '../../components/demo-wrapper';\n  import demo1 from '../../packages/input/demo/demo1';\n  import demo2 from '../../packages/input/demo/demo2';\n  import demo3 from '../../packages/input/demo/demo3';\n  import {defineComponent} from 'vue';\n\n  export default defineComponent({\n    components: {demo1, demo2, demo3, DemoWrapper},\n    setup() {\n      return {};\n    }\n  });\n</script>\n\n","import {defineComponent, reactive} from 'vue';\nimport List from '../../list';\nimport InputItem from '../index';\n\n// 通过自定义 moneyKeyboardWrapProps 修复虚拟键盘滚动穿透问题\n// https://github.com/ant-design/ant-design-mobile/issues/307\n// https://github.com/ant-design/ant-design-mobile/issues/163\nconst isIPhone = new RegExp('\\\\biPhone\\\\b|\\\\biPod\\\\b', 'i').test(window.navigator.userAgent);\nlet moneyKeyboardWrapProps;\nif (isIPhone) {\n  moneyKeyboardWrapProps = {\n    onTouchStart: e => e.preventDefault()\n  };\n}\n\nexport default defineComponent({\n  name: 'H5NumberInputExample',\n  setup(props, {emit, slots}) {\n    const state = reactive({\n      type: 'money'\n    });\n    return {\n      state\n    };\n  },\n  render() {\n    const {type} = this.state;\n    return (\n        <div>\n          <List>\n            <InputItem\n                type={type}\n                value={100}\n                placeholder=\"start from left\"\n                clear\n                moneyKeyboardAlign=\"left\"\n                moneyKeyboardWrapProps={moneyKeyboardWrapProps}\n            >光标在左</InputItem>\n            <InputItem\n                type={type}\n                placeholder=\"start from right\"\n                clear\n                onChange={(v) => {\n                  console.log('onChange', v);\n                }}\n                onBlur={(v) => {\n                  console.log('onBlur', v);\n                }}\n                moneyKeyboardWrapProps={moneyKeyboardWrapProps}\n            >光标在右</InputItem>\n            <InputItem\n                type={type}\n                placeholder=\"money format\"\n                ref=\"input\"\n                onConfirm={v => console.log('onVirtualKeyboardConfirm:', v)}\n                clear\n                moneyKeyboardWrapProps={moneyKeyboardWrapProps}\n            >数字键盘</InputItem>\n            <List.Item>\n              <div\n                  style={{width: '100%', color: '#108ee9', textAlign: 'center'}}\n                  onClick={() => (this.$refs.input as any).focus()}\n              >\n                click to focus\n              </div>\n            </List.Item>\n          </List>\n        </div>\n    );\n  }\n});\n","import {defineComponent, ref} from 'vue';\nimport List from '../../list';\nimport WhiteSpace from '../../white-space';\nimport InputItem from '../index';\n\nexport default defineComponent({\n  name: 'BasicInputExample',\n  props: {},\n  setup(props) {\n    const inputRef = ref(null);\n    const labelFocusInst = ref(null);\n    const handleClick = () => {\n      inputRef.value.focus();\n    };\n    const value = ref('222');\n    return {\n      inputRef, labelFocusInst, handleClick, value\n    };\n  },\n  render() {\n    return (\n        <div>\n          <List title=\"Customize to focus\">\n            <InputItem\n                placeholder=\"auto focus\"\n                ref=\"autoFocusInst\"\n            >标题</InputItem>\n            <InputItem\n                placeholder=\"click the button below to focus\"\n                ref={(el) => {\n                  this.inputRef = el;\n                }}\n            >标题</InputItem>\n            <List.Item>\n              <div\n                  style={{width: '100%', color: '#108ee9', textAlign: 'center'}}\n                  onClick={this.handleClick}>\n                click to focus\n              </div>\n            </List.Item>\n          </List>\n          <List title=\"Whether is controlled\">\n            <InputItem\n                v-model={[this.value, 'value']}\n                placeholder=\"controled input\"\n            >受控组件</InputItem>\n            <InputItem\n                defaultValue=\"Title\"\n                placeholder=\"please input content\"\n            >非受控组件</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title=\"Click label to focus input\">\n            <InputItem\n                placeholder=\"click label to focus input\"\n                ref={(el) => {\n                  this.labelFocusInst = el;\n                }}>\n              <div onClick={() => this.labelFocusInst.focus()}>标题</div>\n            </InputItem>\n          </List>\n          <List title={'Show clear'}>\n            <InputItem\n                clearable\n                placeholder=\"displayed clear while typing\"\n            >标题</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title=\"Number of words for title\">\n            <InputItem\n                placeholder=\"limited title length\"\n                labelNumber={5}\n            >标题过长超过默认的5个字</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title=\"Custom title（text / image / empty)\">\n            <InputItem\n                placeholder=\"no label\"\n            />\n            <InputItem\n                placeholder=\"title can be icon，image or text\"\n            >\n              <div style={{\n                backgroundImage: 'url(https://zos.alipayobjects.com/rmsportal/DfkJHaJGgMghpXdqNaKF.png)',\n                backgroundSize: 'cover',\n                height: '22px',\n                width: '22px'\n              }}/>\n            </InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title=\"Customize the extra content in the right\">\n            <InputItem\n                placeholder=\"0.00\"\n                extra=\"¥\"\n            >价格</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title=\"Format\">\n            <InputItem\n                value=\"8888 8888 8888 8888\"\n                type=\"bankCard\"\n            >银行卡</InputItem>\n            <InputItem\n                type=\"password\"\n                placeholder=\"****\"\n            >密码</InputItem>\n            <InputItem\n                type=\"number\"\n                placeholder=\"click to show number keyboard\"\n            >数字键盘</InputItem>\n            <InputItem\n                type=\"digit\"\n                placeholder=\"click to show native number keyboard\"\n            >数字键盘</InputItem>\n          </List>\n          <WhiteSpace/>\n          <List title=\"Not editable / Disabled\">\n            <InputItem\n                value=\"not editable\"\n                editable={false}\n            >姓名</InputItem>\n            <InputItem\n                value=\"style of disabled `InputItem`\"\n                disabled\n            >姓名</InputItem>\n          </List>\n        </div>\n    );\n  }\n});\n","import {defineComponent, ref} from 'vue';\nimport List from '../../list';\nimport InputItem from '../index';\n\nexport default defineComponent({\n  name: 'BasicInputExample',\n  props: {},\n  setup(props) {\n    const inputRef = ref(null);\n    const labelFocusInst = ref(null);\n    const handleClick = () => {\n      inputRef.value.focus();\n    };\n    const value = ref('222');\n    return {\n      inputRef, labelFocusInst, handleClick, value\n    };\n  },\n  render() {\n    return (\n      <div>\n        <List title=\"Confirm when typing\">\n          <InputItem\n            error={true}\n            errorMessage={\"手机号码格式不正确\"}\n            type=\"phone\"\n            placeholder=\"186 1234 1234\"\n          >手机号码</InputItem>\n          <InputItem error errorMessage=\"出错啦\" title=\"带校验的输入框\"/>\n        </List>\n      </div>\n    );\n  }\n});\n","\n  import DemoWrapper from '../../components/demo-wrapper';\n  import demo1 from '../../packages/input/demo/demo1';\n  import demo2 from '../../packages/input/demo/demo2';\n  import demo3 from '../../packages/input/demo/demo3';\n  import {defineComponent} from 'vue';\n\n  export default defineComponent({\n    components: {demo1, demo2, demo3, DemoWrapper},\n    setup() {\n      return {};\n    }\n  });\n","import { render } from \"./demo.vue?vue&type=template&id=74e2b781\"\nimport script from \"./demo.vue?vue&type=script&lang=ts\"\nexport * from \"./demo.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import {defineComponent} from 'vue';\nimport './demo-wrapper.less';\n\nexport default defineComponent({\n  props: {\n    title: {}\n  },\n  render() {\n    return <div class=\"demo-preview-item\">\n      <div class=\"demo-title\">\n        {this.title}\n      </div>\n      <div class=\"demo-container\">\n        {this.$slots.default?.()}\n      </div>\n    </div>;\n  }\n});\n"],"sourceRoot":""}