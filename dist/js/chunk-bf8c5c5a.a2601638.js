(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-bf8c5c5a"],{"0594":function(n,t){n.exports='<h4 id="基本">基本</h4>\n'},"09dc":function(n,t){n.exports='<h1 id="accordion-手风琴">Accordion 手风琴</h1>\n<p>可以折叠/展开的内容区域。</p>\n<h3 id="规则">规则</h3>\n<ul>\n<li>对复杂区域进行分组和隐藏。</li>\n<li>通常，一次只允许单个内容区域展开；特殊情况，多个内容区域可以同时展开。</li>\n</ul>\n'},"0b32":function(n,t,e){"use strict";e("a120")},"111a":function(n,t,e){"use strict";e.r(t);var o=e("8bbf"),d=Object(o["withScopeId"])("data-v-382efc38");Object(o["pushScopeId"])("data-v-382efc38");var c={id:"basic"},i=Object(o["createVNode"])("div",{class:"markdown-body m-b",id:"demo"},[Object(o["createVNode"])("span"),Object(o["createVNode"])("h2",null,"示例代码")],-1),a=Object(o["createVNode"])("div",{class:"markdown-body",id:"props"},[Object(o["createVNode"])("span"),Object(o["createVNode"])("h2",null,"属性说明")],-1);Object(o["popScopeId"])();var r=d((function(n,t,e,d,r,s){var l=Object(o["resolveComponent"])("title-doc"),m=Object(o["resolveComponent"])("demo1"),p=Object(o["resolveComponent"])("demo2"),b=Object(o["resolveComponent"])("props-doc");return Object(o["openBlock"])(),Object(o["createBlock"])("div",null,[Object(o["createVNode"])("div",c,[Object(o["createVNode"])(l)]),i,Object(o["createVNode"])(m,{id:"demo1"}),Object(o["createVNode"])(p,{id:"demo2"}),a,Object(o["createVNode"])(b)])})),s={class:"demo"};function l(n,t,e,d,c,i){var a=Object(o["resolveComponent"])("code-box");return Object(o["openBlock"])(),Object(o["createBlock"])("div",s,[Object(o["createVNode"])(a,{code:n.code,markdown:n.md},null,8,["code","markdown"])])}var m='<template>\n  <div style="margin: 10px 0;">\n    <m-accordion :defaultActiveKey="0"\n                 class="my-accordion"\n                 @change="onChange">\n      <m-accordion-panel header="Title 1">\n        <m-list class="my-list">\n          <m-list-item>content 1</m-list-item>\n          <m-list-item>content 2</m-list-item>\n          <m-list-item>content 3</m-list-item>\n        </m-list>\n      </m-accordion-panel>\n      <m-accordion-panel class="pad"\n                         header="Title 2">this is panel content2 or other\n      </m-accordion-panel>\n      <m-accordion-panel class="pad"\n                         header="Title 3">\n        text text text text text text text text text text text text text text text\n      </m-accordion-panel>\n    </m-accordion>\n  </div>\n</template>\n<script lang="ts">\n  import {defineComponent} from \'vue\';\n  import List from \'../../list\';\n  import Accordion from \'../index\';\n\n  export default defineComponent({\n    name: \'MobileAccordionDemo1\',\n    components: {\n      MAccordion: Accordion,\n      MList: List,\n      MListItem: List.Item\n    },\n    setup(props, {emit, slots}) {\n\n\n      const onChange = (key) => {\n        console.log(key);\n      };\n      return {\n        onChange\n      };\n    }\n  });\n<\/script>\n<style lang="less">\n  .my-accordion .pad .am-accordion-content-box {\n    padding: 10px;\n  }\n</style>\n',p=e("0594"),b=e.n(p),x=e("4f8a"),u=Object(o["defineComponent"])({components:{CodeBox:x["a"]},setup:function(){return{code:m,md:b.a}}});u.render=l;var h=u,f={class:"demo"};function v(n,t,e,d,c,i){var a=Object(o["resolveComponent"])("code-box");return Object(o["openBlock"])(),Object(o["createBlock"])("div",f,[Object(o["createVNode"])(a,{code:n.code,markdown:n.md},null,8,["code","markdown"])])}var j='<template>\n  <div style="margin: 10px 0;">\n    <m-accordion :open-animation="{}" accordion\n                 class="my-accordion"\n                 @change="onChange">\n      <m-accordion-panel header="Title 1">\n        <m-list class="my-list">\n          <m-list-item>content 1</m-list-item>\n          <m-list-item>content 2</m-list-item>\n          <m-list-item>content 3</m-list-item>\n        </m-list>\n      </m-accordion-panel>\n      <m-accordion-panel class="pad"\n                         header="Title 2">this is panel content2 or other\n      </m-accordion-panel>\n      <m-accordion-panel class="pad"\n                         header="Title 3">\n        text text text text text text text text text text text text text text text\n      </m-accordion-panel>\n    </m-accordion>\n  </div>\n</template>\n<script lang="ts">\n  import {defineComponent} from \'vue\';\n\n  export default defineComponent({\n    name: \'MobileAccordionDemo2\',\n    setup(props, {emit, slots}) {\n\n\n      const onChange = (key) => {\n        console.log(key);\n      };\n\n\n      return {\n        onChange\n      };\n    }\n  });\n<\/script>\n<style lang="less">\n  .my-accordion .pad .am-accordion-content-box {\n    padding: 10px;\n  }\n</style>\n',O=e("e4b8"),y=e.n(O),g=Object(o["defineComponent"])({components:{CodeBox:x["a"]},setup:function(){return{code:j,md:y.a}}});g.render=v;var C=g,k=e("bd70"),w=e("09dc"),N=e.n(w),V=e("7184"),A=e.n(V),B=Object(o["defineComponent"])({components:{TitleDoc:N.a,PropsDoc:A.a,MAccordion:k["a"],demo1:h,demo2:C},setup:function(){return{}}});e("0b32");B.render=r,B.__scopeId="data-v-382efc38";t["default"]=B},7184:function(n,t){n.exports="<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>accordion</td>\n<td><code>手风琴</code>模式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>无默认值，accordion模式下默认第一个元素</td>\n<td>string | string[]</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>defaultActiveKey</td>\n<td>初始化选中面板的 key</td>\n<td>String</td>\n</tr>\n<tr>\n<td></td>\n<td>header</td>\n<td>面板头内容</td>\n<td>React.Element or String</td>\n</tr>\n<tr>\n<td></td>\n<td>key</td>\n<td>对应 activeKey</td>\n<td>String</td>\n</tr>\n<tr>\n<td></td>\n<td>onChange</td>\n<td>切换面板的回调</td>\n<td>(key: string): void</td>\n</tr>\n<tr>\n<td>openAnimation</td>\n<td>设置自定义切换动画，禁止动画可设为<code>{}</code></td>\n<td>any</td>\n<td></td>\n</tr>\n<tr>\n<td>prefixCls</td>\n<td></td>\n<td>string</td>\n<td></td>\n</tr>\n</tbody></table>\n"},a120:function(n,t,e){},e4b8:function(n,t){n.exports='<h4 id="手风琴模式">手风琴模式</h4>\n'}}]);
//# sourceMappingURL=chunk-bf8c5c5a.a2601638.js.map